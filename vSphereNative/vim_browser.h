////////////////////////////////////////////////////////////////////////
// Copyright (c) 2011, Bingfeng Zhao . All rights reserved.
// 

#ifndef VIM_BROWSER_H
#define VIM_BROWSER_H

#include <iostream>
#include <cassert>
#include "vim_wrapper.h"

namespace vim_browser
{
using namespace vim;
//
// == The simple browsing protocol ==
// Browse will send following message to receiver in order:
// 1. pair("Begin", class_name). indicate start the browsing
// 2. pair("Name", member_name), pair("Type", member_type) and
//    pair("Value", member_value)
//    if the value is an array, it's seperated by '|', started with '@'
// 3. optional pair("Base", base_class_name), report the base member to be browsed,
//    followed by a list of base members, just as item 2 format
// 4. pair("End", ""), indicate end the browsing
//
typedef void (*pf_update)(const std::string& key, const std::string& value, void* context);

// Interface for browser. All specific browsable types should derive from it
struct closure
{
	virtual ~closure() {}
	virtual closure* get_sub_closure(size_t index) const = 0;
	virtual void browse(pf_update update, void* context) const = 0;
	virtual const char* type() const = 0;
};

class AboutInfo_closure : public closure
{
protected:
	vw1__AboutInfo _obj;
public:
	AboutInfo_closure(const vw1__AboutInfo& obj) : _obj(obj) {}
	virtual ~AboutInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AboutInfo"; }
};

class AccountCreatedEvent_closure : public closure
{
protected:
	vw1__AccountCreatedEvent _obj;
public:
	AccountCreatedEvent_closure(const vw1__AccountCreatedEvent& obj) : _obj(obj) {}
	virtual ~AccountCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AccountCreatedEvent"; }
};

class AccountRemovedEvent_closure : public closure
{
protected:
	vw1__AccountRemovedEvent _obj;
public:
	AccountRemovedEvent_closure(const vw1__AccountRemovedEvent& obj) : _obj(obj) {}
	virtual ~AccountRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AccountRemovedEvent"; }
};

class AccountUpdatedEvent_closure : public closure
{
protected:
	vw1__AccountUpdatedEvent _obj;
public:
	AccountUpdatedEvent_closure(const vw1__AccountUpdatedEvent& obj) : _obj(obj) {}
	virtual ~AccountUpdatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AccountUpdatedEvent"; }
};

class Action_closure : public closure
{
protected:
	vw1__Action _obj;
public:
	Action_closure(const vw1__Action& obj) : _obj(obj) {}
	virtual ~Action_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Action"; }
};

class ActiveDirectoryProfile_closure : public closure
{
protected:
	vw1__ActiveDirectoryProfile _obj;
public:
	ActiveDirectoryProfile_closure(const vw1__ActiveDirectoryProfile& obj) : _obj(obj) {}
	virtual ~ActiveDirectoryProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ActiveDirectoryProfile"; }
};

class AdminPasswordNotChangedEvent_closure : public closure
{
protected:
	vw1__AdminPasswordNotChangedEvent _obj;
public:
	AdminPasswordNotChangedEvent_closure(const vw1__AdminPasswordNotChangedEvent& obj) : _obj(obj) {}
	virtual ~AdminPasswordNotChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AdminPasswordNotChangedEvent"; }
};

class AfterStartupTaskScheduler_closure : public closure
{
protected:
	vw1__AfterStartupTaskScheduler _obj;
public:
	AfterStartupTaskScheduler_closure(const vw1__AfterStartupTaskScheduler& obj) : _obj(obj) {}
	virtual ~AfterStartupTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AfterStartupTaskScheduler"; }
};

class AlarmAcknowledgedEvent_closure : public closure
{
protected:
	vw1__AlarmAcknowledgedEvent _obj;
public:
	AlarmAcknowledgedEvent_closure(const vw1__AlarmAcknowledgedEvent& obj) : _obj(obj) {}
	virtual ~AlarmAcknowledgedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmAcknowledgedEvent"; }
};

class AlarmAction_closure : public closure
{
protected:
	vw1__AlarmAction _obj;
public:
	AlarmAction_closure(const vw1__AlarmAction& obj) : _obj(obj) {}
	virtual ~AlarmAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmAction"; }
};

class AlarmActionTriggeredEvent_closure : public closure
{
protected:
	vw1__AlarmActionTriggeredEvent _obj;
public:
	AlarmActionTriggeredEvent_closure(const vw1__AlarmActionTriggeredEvent& obj) : _obj(obj) {}
	virtual ~AlarmActionTriggeredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmActionTriggeredEvent"; }
};

class AlarmClearedEvent_closure : public closure
{
protected:
	vw1__AlarmClearedEvent _obj;
public:
	AlarmClearedEvent_closure(const vw1__AlarmClearedEvent& obj) : _obj(obj) {}
	virtual ~AlarmClearedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmClearedEvent"; }
};

class AlarmCreatedEvent_closure : public closure
{
protected:
	vw1__AlarmCreatedEvent _obj;
public:
	AlarmCreatedEvent_closure(const vw1__AlarmCreatedEvent& obj) : _obj(obj) {}
	virtual ~AlarmCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmCreatedEvent"; }
};

class AlarmDescription_closure : public closure
{
protected:
	vw1__AlarmDescription _obj;
public:
	AlarmDescription_closure(const vw1__AlarmDescription& obj) : _obj(obj) {}
	virtual ~AlarmDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmDescription"; }
};

class AlarmEmailCompletedEvent_closure : public closure
{
protected:
	vw1__AlarmEmailCompletedEvent _obj;
public:
	AlarmEmailCompletedEvent_closure(const vw1__AlarmEmailCompletedEvent& obj) : _obj(obj) {}
	virtual ~AlarmEmailCompletedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmEmailCompletedEvent"; }
};

class AlarmEmailFailedEvent_closure : public closure
{
protected:
	vw1__AlarmEmailFailedEvent _obj;
public:
	AlarmEmailFailedEvent_closure(const vw1__AlarmEmailFailedEvent& obj) : _obj(obj) {}
	virtual ~AlarmEmailFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmEmailFailedEvent"; }
};

class AlarmEvent_closure : public closure
{
protected:
	vw1__AlarmEvent _obj;
public:
	AlarmEvent_closure(const vw1__AlarmEvent& obj) : _obj(obj) {}
	virtual ~AlarmEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmEvent"; }
};

class AlarmEventArgument_closure : public closure
{
protected:
	vw1__AlarmEventArgument _obj;
public:
	AlarmEventArgument_closure(const vw1__AlarmEventArgument& obj) : _obj(obj) {}
	virtual ~AlarmEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmEventArgument"; }
};

class AlarmExpression_closure : public closure
{
protected:
	vw1__AlarmExpression _obj;
public:
	AlarmExpression_closure(const vw1__AlarmExpression& obj) : _obj(obj) {}
	virtual ~AlarmExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmExpression"; }
};

class AlarmInfo_closure : public closure
{
protected:
	vw1__AlarmInfo _obj;
public:
	AlarmInfo_closure(const vw1__AlarmInfo& obj) : _obj(obj) {}
	virtual ~AlarmInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmInfo"; }
};

class AlarmReconfiguredEvent_closure : public closure
{
protected:
	vw1__AlarmReconfiguredEvent _obj;
public:
	AlarmReconfiguredEvent_closure(const vw1__AlarmReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~AlarmReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmReconfiguredEvent"; }
};

class AlarmRemovedEvent_closure : public closure
{
protected:
	vw1__AlarmRemovedEvent _obj;
public:
	AlarmRemovedEvent_closure(const vw1__AlarmRemovedEvent& obj) : _obj(obj) {}
	virtual ~AlarmRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmRemovedEvent"; }
};

class AlarmScriptCompleteEvent_closure : public closure
{
protected:
	vw1__AlarmScriptCompleteEvent _obj;
public:
	AlarmScriptCompleteEvent_closure(const vw1__AlarmScriptCompleteEvent& obj) : _obj(obj) {}
	virtual ~AlarmScriptCompleteEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmScriptCompleteEvent"; }
};

class AlarmScriptFailedEvent_closure : public closure
{
protected:
	vw1__AlarmScriptFailedEvent _obj;
public:
	AlarmScriptFailedEvent_closure(const vw1__AlarmScriptFailedEvent& obj) : _obj(obj) {}
	virtual ~AlarmScriptFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmScriptFailedEvent"; }
};

class AlarmSetting_closure : public closure
{
protected:
	vw1__AlarmSetting _obj;
public:
	AlarmSetting_closure(const vw1__AlarmSetting& obj) : _obj(obj) {}
	virtual ~AlarmSetting_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmSetting"; }
};

class AlarmSnmpCompletedEvent_closure : public closure
{
protected:
	vw1__AlarmSnmpCompletedEvent _obj;
public:
	AlarmSnmpCompletedEvent_closure(const vw1__AlarmSnmpCompletedEvent& obj) : _obj(obj) {}
	virtual ~AlarmSnmpCompletedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmSnmpCompletedEvent"; }
};

class AlarmSnmpFailedEvent_closure : public closure
{
protected:
	vw1__AlarmSnmpFailedEvent _obj;
public:
	AlarmSnmpFailedEvent_closure(const vw1__AlarmSnmpFailedEvent& obj) : _obj(obj) {}
	virtual ~AlarmSnmpFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmSnmpFailedEvent"; }
};

class AlarmSpec_closure : public closure
{
protected:
	vw1__AlarmSpec _obj;
public:
	AlarmSpec_closure(const vw1__AlarmSpec& obj) : _obj(obj) {}
	virtual ~AlarmSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmSpec"; }
};

class AlarmState_closure : public closure
{
protected:
	vw1__AlarmState _obj;
public:
	AlarmState_closure(const vw1__AlarmState& obj) : _obj(obj) {}
	virtual ~AlarmState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmState"; }
};

class AlarmStatusChangedEvent_closure : public closure
{
protected:
	vw1__AlarmStatusChangedEvent _obj;
public:
	AlarmStatusChangedEvent_closure(const vw1__AlarmStatusChangedEvent& obj) : _obj(obj) {}
	virtual ~AlarmStatusChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmStatusChangedEvent"; }
};

class AlarmTriggeringAction_closure : public closure
{
protected:
	vw1__AlarmTriggeringAction _obj;
public:
	AlarmTriggeringAction_closure(const vw1__AlarmTriggeringAction& obj) : _obj(obj) {}
	virtual ~AlarmTriggeringAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmTriggeringAction"; }
};

class AlarmTriggeringActionTransitionSpec_closure : public closure
{
protected:
	vw1__AlarmTriggeringActionTransitionSpec _obj;
public:
	AlarmTriggeringActionTransitionSpec_closure(const vw1__AlarmTriggeringActionTransitionSpec& obj) : _obj(obj) {}
	virtual ~AlarmTriggeringActionTransitionSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmTriggeringActionTransitionSpec"; }
};

class AllVirtualMachinesLicensedEvent_closure : public closure
{
protected:
	vw1__AllVirtualMachinesLicensedEvent _obj;
public:
	AllVirtualMachinesLicensedEvent_closure(const vw1__AllVirtualMachinesLicensedEvent& obj) : _obj(obj) {}
	virtual ~AllVirtualMachinesLicensedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AllVirtualMachinesLicensedEvent"; }
};

class AlreadyAuthenticatedSessionEvent_closure : public closure
{
protected:
	vw1__AlreadyAuthenticatedSessionEvent _obj;
public:
	AlreadyAuthenticatedSessionEvent_closure(const vw1__AlreadyAuthenticatedSessionEvent& obj) : _obj(obj) {}
	virtual ~AlreadyAuthenticatedSessionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlreadyAuthenticatedSessionEvent"; }
};

class AndAlarmExpression_closure : public closure
{
protected:
	vw1__AndAlarmExpression _obj;
public:
	AndAlarmExpression_closure(const vw1__AndAlarmExpression& obj) : _obj(obj) {}
	virtual ~AndAlarmExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AndAlarmExpression"; }
};

class AnswerFile_closure : public closure
{
protected:
	vw1__AnswerFile _obj;
public:
	AnswerFile_closure(const vw1__AnswerFile& obj) : _obj(obj) {}
	virtual ~AnswerFile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AnswerFile"; }
};

class AnswerFileCreateSpec_closure : public closure
{
protected:
	vw1__AnswerFileCreateSpec _obj;
public:
	AnswerFileCreateSpec_closure(const vw1__AnswerFileCreateSpec& obj) : _obj(obj) {}
	virtual ~AnswerFileCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AnswerFileCreateSpec"; }
};

class AnswerFileOptionsCreateSpec_closure : public closure
{
protected:
	vw1__AnswerFileOptionsCreateSpec _obj;
public:
	AnswerFileOptionsCreateSpec_closure(const vw1__AnswerFileOptionsCreateSpec& obj) : _obj(obj) {}
	virtual ~AnswerFileOptionsCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AnswerFileOptionsCreateSpec"; }
};

class AnswerFileSerializedCreateSpec_closure : public closure
{
protected:
	vw1__AnswerFileSerializedCreateSpec _obj;
public:
	AnswerFileSerializedCreateSpec_closure(const vw1__AnswerFileSerializedCreateSpec& obj) : _obj(obj) {}
	virtual ~AnswerFileSerializedCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AnswerFileSerializedCreateSpec"; }
};

class AnswerFileStatusError_closure : public closure
{
protected:
	vw1__AnswerFileStatusError _obj;
public:
	AnswerFileStatusError_closure(const vw1__AnswerFileStatusError& obj) : _obj(obj) {}
	virtual ~AnswerFileStatusError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AnswerFileStatusError"; }
};

class AnswerFileStatusResult_closure : public closure
{
protected:
	vw1__AnswerFileStatusResult _obj;
public:
	AnswerFileStatusResult_closure(const vw1__AnswerFileStatusResult& obj) : _obj(obj) {}
	virtual ~AnswerFileStatusResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AnswerFileStatusResult"; }
};

class AnswerFileUpdateFailure_closure : public closure
{
protected:
	vw1__AnswerFileUpdateFailure _obj;
public:
	AnswerFileUpdateFailure_closure(const vw1__AnswerFileUpdateFailure& obj) : _obj(obj) {}
	virtual ~AnswerFileUpdateFailure_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AnswerFileUpdateFailure"; }
};

class ApplyProfile_closure : public closure
{
protected:
	vw1__ApplyProfile _obj;
public:
	ApplyProfile_closure(const vw1__ApplyProfile& obj) : _obj(obj) {}
	virtual ~ApplyProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ApplyProfile"; }
};

class ApplyStorageRecommendationResult_closure : public closure
{
protected:
	vw1__ApplyStorageRecommendationResult _obj;
public:
	ApplyStorageRecommendationResult_closure(const vw1__ApplyStorageRecommendationResult& obj) : _obj(obj) {}
	virtual ~ApplyStorageRecommendationResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ApplyStorageRecommendationResult"; }
};

class ArrayUpdateSpec_closure : public closure
{
protected:
	vw1__ArrayUpdateSpec _obj;
public:
	ArrayUpdateSpec_closure(const vw1__ArrayUpdateSpec& obj) : _obj(obj) {}
	virtual ~ArrayUpdateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ArrayUpdateSpec"; }
};

class AuthenticationProfile_closure : public closure
{
protected:
	vw1__AuthenticationProfile _obj;
public:
	AuthenticationProfile_closure(const vw1__AuthenticationProfile& obj) : _obj(obj) {}
	virtual ~AuthenticationProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AuthenticationProfile"; }
};

class AuthorizationDescription_closure : public closure
{
protected:
	vw1__AuthorizationDescription _obj;
public:
	AuthorizationDescription_closure(const vw1__AuthorizationDescription& obj) : _obj(obj) {}
	virtual ~AuthorizationDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AuthorizationDescription"; }
};

class AuthorizationEvent_closure : public closure
{
protected:
	vw1__AuthorizationEvent _obj;
public:
	AuthorizationEvent_closure(const vw1__AuthorizationEvent& obj) : _obj(obj) {}
	virtual ~AuthorizationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AuthorizationEvent"; }
};

class AuthorizationPrivilege_closure : public closure
{
protected:
	vw1__AuthorizationPrivilege _obj;
public:
	AuthorizationPrivilege_closure(const vw1__AuthorizationPrivilege& obj) : _obj(obj) {}
	virtual ~AuthorizationPrivilege_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AuthorizationPrivilege"; }
};

class AuthorizationRole_closure : public closure
{
protected:
	vw1__AuthorizationRole _obj;
public:
	AuthorizationRole_closure(const vw1__AuthorizationRole& obj) : _obj(obj) {}
	virtual ~AuthorizationRole_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AuthorizationRole"; }
};

class AutoStartDefaults_closure : public closure
{
protected:
	vw1__AutoStartDefaults _obj;
public:
	AutoStartDefaults_closure(const vw1__AutoStartDefaults& obj) : _obj(obj) {}
	virtual ~AutoStartDefaults_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AutoStartDefaults"; }
};

class AutoStartPowerInfo_closure : public closure
{
protected:
	vw1__AutoStartPowerInfo _obj;
public:
	AutoStartPowerInfo_closure(const vw1__AutoStartPowerInfo& obj) : _obj(obj) {}
	virtual ~AutoStartPowerInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AutoStartPowerInfo"; }
};

class BadUsernameSessionEvent_closure : public closure
{
protected:
	vw1__BadUsernameSessionEvent _obj;
public:
	BadUsernameSessionEvent_closure(const vw1__BadUsernameSessionEvent& obj) : _obj(obj) {}
	virtual ~BadUsernameSessionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "BadUsernameSessionEvent"; }
};

class BoolOption_closure : public closure
{
protected:
	vw1__BoolOption _obj;
public:
	BoolOption_closure(const vw1__BoolOption& obj) : _obj(obj) {}
	virtual ~BoolOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "BoolOption"; }
};

class BoolPolicy_closure : public closure
{
protected:
	vw1__BoolPolicy _obj;
public:
	BoolPolicy_closure(const vw1__BoolPolicy& obj) : _obj(obj) {}
	virtual ~BoolPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "BoolPolicy"; }
};

class CanceledHostOperationEvent_closure : public closure
{
protected:
	vw1__CanceledHostOperationEvent _obj;
public:
	CanceledHostOperationEvent_closure(const vw1__CanceledHostOperationEvent& obj) : _obj(obj) {}
	virtual ~CanceledHostOperationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CanceledHostOperationEvent"; }
};

class Capability_closure : public closure
{
protected:
	vw1__Capability _obj;
public:
	Capability_closure(const vw1__Capability& obj) : _obj(obj) {}
	virtual ~Capability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Capability"; }
};

class CheckResult_closure : public closure
{
protected:
	vw1__CheckResult _obj;
public:
	CheckResult_closure(const vw1__CheckResult& obj) : _obj(obj) {}
	virtual ~CheckResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CheckResult"; }
};

class ChoiceOption_closure : public closure
{
protected:
	vw1__ChoiceOption _obj;
public:
	ChoiceOption_closure(const vw1__ChoiceOption& obj) : _obj(obj) {}
	virtual ~ChoiceOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ChoiceOption"; }
};

class ClusterAction_closure : public closure
{
protected:
	vw1__ClusterAction _obj;
public:
	ClusterAction_closure(const vw1__ClusterAction& obj) : _obj(obj) {}
	virtual ~ClusterAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterAction"; }
};

class ClusterActionHistory_closure : public closure
{
protected:
	vw1__ClusterActionHistory _obj;
public:
	ClusterActionHistory_closure(const vw1__ClusterActionHistory& obj) : _obj(obj) {}
	virtual ~ClusterActionHistory_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterActionHistory"; }
};

class ClusterAffinityRuleSpec_closure : public closure
{
protected:
	vw1__ClusterAffinityRuleSpec _obj;
public:
	ClusterAffinityRuleSpec_closure(const vw1__ClusterAffinityRuleSpec& obj) : _obj(obj) {}
	virtual ~ClusterAffinityRuleSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterAffinityRuleSpec"; }
};

class ClusterAntiAffinityRuleSpec_closure : public closure
{
protected:
	vw1__ClusterAntiAffinityRuleSpec _obj;
public:
	ClusterAntiAffinityRuleSpec_closure(const vw1__ClusterAntiAffinityRuleSpec& obj) : _obj(obj) {}
	virtual ~ClusterAntiAffinityRuleSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterAntiAffinityRuleSpec"; }
};

class ClusterAttemptedVmInfo_closure : public closure
{
protected:
	vw1__ClusterAttemptedVmInfo _obj;
public:
	ClusterAttemptedVmInfo_closure(const vw1__ClusterAttemptedVmInfo& obj) : _obj(obj) {}
	virtual ~ClusterAttemptedVmInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterAttemptedVmInfo"; }
};

class ClusterComplianceCheckedEvent_closure : public closure
{
protected:
	vw1__ClusterComplianceCheckedEvent _obj;
public:
	ClusterComplianceCheckedEvent_closure(const vw1__ClusterComplianceCheckedEvent& obj) : _obj(obj) {}
	virtual ~ClusterComplianceCheckedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterComplianceCheckedEvent"; }
};

class ClusterComputeResourceSummary_closure : public closure
{
protected:
	vw1__ClusterComputeResourceSummary _obj;
public:
	ClusterComputeResourceSummary_closure(const vw1__ClusterComputeResourceSummary& obj) : _obj(obj) {}
	virtual ~ClusterComputeResourceSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterComputeResourceSummary"; }
};

class ClusterConfigInfo_closure : public closure
{
protected:
	vw1__ClusterConfigInfo _obj;
public:
	ClusterConfigInfo_closure(const vw1__ClusterConfigInfo& obj) : _obj(obj) {}
	virtual ~ClusterConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterConfigInfo"; }
};

class ClusterConfigInfoEx_closure : public closure
{
protected:
	vw1__ClusterConfigInfoEx _obj;
public:
	ClusterConfigInfoEx_closure(const vw1__ClusterConfigInfoEx& obj) : _obj(obj) {}
	virtual ~ClusterConfigInfoEx_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterConfigInfoEx"; }
};

class ClusterConfigSpec_closure : public closure
{
protected:
	vw1__ClusterConfigSpec _obj;
public:
	ClusterConfigSpec_closure(const vw1__ClusterConfigSpec& obj) : _obj(obj) {}
	virtual ~ClusterConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterConfigSpec"; }
};

class ClusterConfigSpecEx_closure : public closure
{
protected:
	vw1__ClusterConfigSpecEx _obj;
public:
	ClusterConfigSpecEx_closure(const vw1__ClusterConfigSpecEx& obj) : _obj(obj) {}
	virtual ~ClusterConfigSpecEx_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterConfigSpecEx"; }
};

class ClusterCreatedEvent_closure : public closure
{
protected:
	vw1__ClusterCreatedEvent _obj;
public:
	ClusterCreatedEvent_closure(const vw1__ClusterCreatedEvent& obj) : _obj(obj) {}
	virtual ~ClusterCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterCreatedEvent"; }
};

class ClusterDasAamHostInfo_closure : public closure
{
protected:
	vw1__ClusterDasAamHostInfo _obj;
public:
	ClusterDasAamHostInfo_closure(const vw1__ClusterDasAamHostInfo& obj) : _obj(obj) {}
	virtual ~ClusterDasAamHostInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasAamHostInfo"; }
};

class ClusterDasAamNodeState_closure : public closure
{
protected:
	vw1__ClusterDasAamNodeState _obj;
public:
	ClusterDasAamNodeState_closure(const vw1__ClusterDasAamNodeState& obj) : _obj(obj) {}
	virtual ~ClusterDasAamNodeState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasAamNodeState"; }
};

class ClusterDasAdmissionControlInfo_closure : public closure
{
protected:
	vw1__ClusterDasAdmissionControlInfo _obj;
public:
	ClusterDasAdmissionControlInfo_closure(const vw1__ClusterDasAdmissionControlInfo& obj) : _obj(obj) {}
	virtual ~ClusterDasAdmissionControlInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasAdmissionControlInfo"; }
};

class ClusterDasAdmissionControlPolicy_closure : public closure
{
protected:
	vw1__ClusterDasAdmissionControlPolicy _obj;
public:
	ClusterDasAdmissionControlPolicy_closure(const vw1__ClusterDasAdmissionControlPolicy& obj) : _obj(obj) {}
	virtual ~ClusterDasAdmissionControlPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasAdmissionControlPolicy"; }
};

class ClusterDasAdvancedRuntimeInfo_closure : public closure
{
protected:
	vw1__ClusterDasAdvancedRuntimeInfo _obj;
public:
	ClusterDasAdvancedRuntimeInfo_closure(const vw1__ClusterDasAdvancedRuntimeInfo& obj) : _obj(obj) {}
	virtual ~ClusterDasAdvancedRuntimeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasAdvancedRuntimeInfo"; }
};

class ClusterDasConfigInfo_closure : public closure
{
protected:
	vw1__ClusterDasConfigInfo _obj;
public:
	ClusterDasConfigInfo_closure(const vw1__ClusterDasConfigInfo& obj) : _obj(obj) {}
	virtual ~ClusterDasConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasConfigInfo"; }
};

class ClusterDasData_closure : public closure
{
protected:
	vw1__ClusterDasData _obj;
public:
	ClusterDasData_closure(const vw1__ClusterDasData& obj) : _obj(obj) {}
	virtual ~ClusterDasData_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasData"; }
};

class ClusterDasDataSummary_closure : public closure
{
protected:
	vw1__ClusterDasDataSummary _obj;
public:
	ClusterDasDataSummary_closure(const vw1__ClusterDasDataSummary& obj) : _obj(obj) {}
	virtual ~ClusterDasDataSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasDataSummary"; }
};

class ClusterDasFailoverLevelAdvancedRuntimeInfo_closure : public closure
{
protected:
	vw1__ClusterDasFailoverLevelAdvancedRuntimeInfo _obj;
public:
	ClusterDasFailoverLevelAdvancedRuntimeInfo_closure(const vw1__ClusterDasFailoverLevelAdvancedRuntimeInfo& obj) : _obj(obj) {}
	virtual ~ClusterDasFailoverLevelAdvancedRuntimeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasFailoverLevelAdvancedRuntimeInfo"; }
};

class ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots_closure : public closure
{
protected:
	vw1__ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots _obj;
public:
	ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots_closure(const vw1__ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots& obj) : _obj(obj) {}
	virtual ~ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots"; }
};

class ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo_closure : public closure
{
protected:
	vw1__ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo _obj;
public:
	ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo_closure(const vw1__ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo& obj) : _obj(obj) {}
	virtual ~ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo"; }
};

class ClusterDasFdmHostState_closure : public closure
{
protected:
	vw1__ClusterDasFdmHostState _obj;
public:
	ClusterDasFdmHostState_closure(const vw1__ClusterDasFdmHostState& obj) : _obj(obj) {}
	virtual ~ClusterDasFdmHostState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasFdmHostState"; }
};

class ClusterDasHostInfo_closure : public closure
{
protected:
	vw1__ClusterDasHostInfo _obj;
public:
	ClusterDasHostInfo_closure(const vw1__ClusterDasHostInfo& obj) : _obj(obj) {}
	virtual ~ClusterDasHostInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasHostInfo"; }
};

class ClusterDasHostRecommendation_closure : public closure
{
protected:
	vw1__ClusterDasHostRecommendation _obj;
public:
	ClusterDasHostRecommendation_closure(const vw1__ClusterDasHostRecommendation& obj) : _obj(obj) {}
	virtual ~ClusterDasHostRecommendation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasHostRecommendation"; }
};

class ClusterDasVmConfigInfo_closure : public closure
{
protected:
	vw1__ClusterDasVmConfigInfo _obj;
public:
	ClusterDasVmConfigInfo_closure(const vw1__ClusterDasVmConfigInfo& obj) : _obj(obj) {}
	virtual ~ClusterDasVmConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasVmConfigInfo"; }
};

class ClusterDasVmConfigSpec_closure : public closure
{
protected:
	vw1__ClusterDasVmConfigSpec _obj;
public:
	ClusterDasVmConfigSpec_closure(const vw1__ClusterDasVmConfigSpec& obj) : _obj(obj) {}
	virtual ~ClusterDasVmConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasVmConfigSpec"; }
};

class ClusterDasVmSettings_closure : public closure
{
protected:
	vw1__ClusterDasVmSettings _obj;
public:
	ClusterDasVmSettings_closure(const vw1__ClusterDasVmSettings& obj) : _obj(obj) {}
	virtual ~ClusterDasVmSettings_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDasVmSettings"; }
};

class ClusterDestroyedEvent_closure : public closure
{
protected:
	vw1__ClusterDestroyedEvent _obj;
public:
	ClusterDestroyedEvent_closure(const vw1__ClusterDestroyedEvent& obj) : _obj(obj) {}
	virtual ~ClusterDestroyedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDestroyedEvent"; }
};

class ClusterDpmConfigInfo_closure : public closure
{
protected:
	vw1__ClusterDpmConfigInfo _obj;
public:
	ClusterDpmConfigInfo_closure(const vw1__ClusterDpmConfigInfo& obj) : _obj(obj) {}
	virtual ~ClusterDpmConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDpmConfigInfo"; }
};

class ClusterDpmHostConfigInfo_closure : public closure
{
protected:
	vw1__ClusterDpmHostConfigInfo _obj;
public:
	ClusterDpmHostConfigInfo_closure(const vw1__ClusterDpmHostConfigInfo& obj) : _obj(obj) {}
	virtual ~ClusterDpmHostConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDpmHostConfigInfo"; }
};

class ClusterDpmHostConfigSpec_closure : public closure
{
protected:
	vw1__ClusterDpmHostConfigSpec _obj;
public:
	ClusterDpmHostConfigSpec_closure(const vw1__ClusterDpmHostConfigSpec& obj) : _obj(obj) {}
	virtual ~ClusterDpmHostConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDpmHostConfigSpec"; }
};

class ClusterDrsConfigInfo_closure : public closure
{
protected:
	vw1__ClusterDrsConfigInfo _obj;
public:
	ClusterDrsConfigInfo_closure(const vw1__ClusterDrsConfigInfo& obj) : _obj(obj) {}
	virtual ~ClusterDrsConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDrsConfigInfo"; }
};

class ClusterDrsFaults_closure : public closure
{
protected:
	vw1__ClusterDrsFaults _obj;
public:
	ClusterDrsFaults_closure(const vw1__ClusterDrsFaults& obj) : _obj(obj) {}
	virtual ~ClusterDrsFaults_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDrsFaults"; }
};

class ClusterDrsFaultsFaultsByVirtualDisk_closure : public closure
{
protected:
	vw1__ClusterDrsFaultsFaultsByVirtualDisk _obj;
public:
	ClusterDrsFaultsFaultsByVirtualDisk_closure(const vw1__ClusterDrsFaultsFaultsByVirtualDisk& obj) : _obj(obj) {}
	virtual ~ClusterDrsFaultsFaultsByVirtualDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDrsFaultsFaultsByVirtualDisk"; }
};

class ClusterDrsFaultsFaultsByVm_closure : public closure
{
protected:
	vw1__ClusterDrsFaultsFaultsByVm _obj;
public:
	ClusterDrsFaultsFaultsByVm_closure(const vw1__ClusterDrsFaultsFaultsByVm& obj) : _obj(obj) {}
	virtual ~ClusterDrsFaultsFaultsByVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDrsFaultsFaultsByVm"; }
};

class ClusterDrsMigration_closure : public closure
{
protected:
	vw1__ClusterDrsMigration _obj;
public:
	ClusterDrsMigration_closure(const vw1__ClusterDrsMigration& obj) : _obj(obj) {}
	virtual ~ClusterDrsMigration_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDrsMigration"; }
};

class ClusterDrsRecommendation_closure : public closure
{
protected:
	vw1__ClusterDrsRecommendation _obj;
public:
	ClusterDrsRecommendation_closure(const vw1__ClusterDrsRecommendation& obj) : _obj(obj) {}
	virtual ~ClusterDrsRecommendation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDrsRecommendation"; }
};

class ClusterDrsVmConfigInfo_closure : public closure
{
protected:
	vw1__ClusterDrsVmConfigInfo _obj;
public:
	ClusterDrsVmConfigInfo_closure(const vw1__ClusterDrsVmConfigInfo& obj) : _obj(obj) {}
	virtual ~ClusterDrsVmConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDrsVmConfigInfo"; }
};

class ClusterDrsVmConfigSpec_closure : public closure
{
protected:
	vw1__ClusterDrsVmConfigSpec _obj;
public:
	ClusterDrsVmConfigSpec_closure(const vw1__ClusterDrsVmConfigSpec& obj) : _obj(obj) {}
	virtual ~ClusterDrsVmConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterDrsVmConfigSpec"; }
};

class ClusterEnterMaintenanceResult_closure : public closure
{
protected:
	vw1__ClusterEnterMaintenanceResult _obj;
public:
	ClusterEnterMaintenanceResult_closure(const vw1__ClusterEnterMaintenanceResult& obj) : _obj(obj) {}
	virtual ~ClusterEnterMaintenanceResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterEnterMaintenanceResult"; }
};

class ClusterEvent_closure : public closure
{
protected:
	vw1__ClusterEvent _obj;
public:
	ClusterEvent_closure(const vw1__ClusterEvent& obj) : _obj(obj) {}
	virtual ~ClusterEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterEvent"; }
};

class ClusterFailoverHostAdmissionControlInfo_closure : public closure
{
protected:
	vw1__ClusterFailoverHostAdmissionControlInfo _obj;
public:
	ClusterFailoverHostAdmissionControlInfo_closure(const vw1__ClusterFailoverHostAdmissionControlInfo& obj) : _obj(obj) {}
	virtual ~ClusterFailoverHostAdmissionControlInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterFailoverHostAdmissionControlInfo"; }
};

class ClusterFailoverHostAdmissionControlInfoHostStatus_closure : public closure
{
protected:
	vw1__ClusterFailoverHostAdmissionControlInfoHostStatus _obj;
public:
	ClusterFailoverHostAdmissionControlInfoHostStatus_closure(const vw1__ClusterFailoverHostAdmissionControlInfoHostStatus& obj) : _obj(obj) {}
	virtual ~ClusterFailoverHostAdmissionControlInfoHostStatus_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterFailoverHostAdmissionControlInfoHostStatus"; }
};

class ClusterFailoverHostAdmissionControlPolicy_closure : public closure
{
protected:
	vw1__ClusterFailoverHostAdmissionControlPolicy _obj;
public:
	ClusterFailoverHostAdmissionControlPolicy_closure(const vw1__ClusterFailoverHostAdmissionControlPolicy& obj) : _obj(obj) {}
	virtual ~ClusterFailoverHostAdmissionControlPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterFailoverHostAdmissionControlPolicy"; }
};

class ClusterFailoverLevelAdmissionControlInfo_closure : public closure
{
protected:
	vw1__ClusterFailoverLevelAdmissionControlInfo _obj;
public:
	ClusterFailoverLevelAdmissionControlInfo_closure(const vw1__ClusterFailoverLevelAdmissionControlInfo& obj) : _obj(obj) {}
	virtual ~ClusterFailoverLevelAdmissionControlInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterFailoverLevelAdmissionControlInfo"; }
};

class ClusterFailoverLevelAdmissionControlPolicy_closure : public closure
{
protected:
	vw1__ClusterFailoverLevelAdmissionControlPolicy _obj;
public:
	ClusterFailoverLevelAdmissionControlPolicy_closure(const vw1__ClusterFailoverLevelAdmissionControlPolicy& obj) : _obj(obj) {}
	virtual ~ClusterFailoverLevelAdmissionControlPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterFailoverLevelAdmissionControlPolicy"; }
};

class ClusterFailoverResourcesAdmissionControlInfo_closure : public closure
{
protected:
	vw1__ClusterFailoverResourcesAdmissionControlInfo _obj;
public:
	ClusterFailoverResourcesAdmissionControlInfo_closure(const vw1__ClusterFailoverResourcesAdmissionControlInfo& obj) : _obj(obj) {}
	virtual ~ClusterFailoverResourcesAdmissionControlInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterFailoverResourcesAdmissionControlInfo"; }
};

class ClusterFailoverResourcesAdmissionControlPolicy_closure : public closure
{
protected:
	vw1__ClusterFailoverResourcesAdmissionControlPolicy _obj;
public:
	ClusterFailoverResourcesAdmissionControlPolicy_closure(const vw1__ClusterFailoverResourcesAdmissionControlPolicy& obj) : _obj(obj) {}
	virtual ~ClusterFailoverResourcesAdmissionControlPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterFailoverResourcesAdmissionControlPolicy"; }
};

class ClusterGroupInfo_closure : public closure
{
protected:
	vw1__ClusterGroupInfo _obj;
public:
	ClusterGroupInfo_closure(const vw1__ClusterGroupInfo& obj) : _obj(obj) {}
	virtual ~ClusterGroupInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterGroupInfo"; }
};

class ClusterGroupSpec_closure : public closure
{
protected:
	vw1__ClusterGroupSpec _obj;
public:
	ClusterGroupSpec_closure(const vw1__ClusterGroupSpec& obj) : _obj(obj) {}
	virtual ~ClusterGroupSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterGroupSpec"; }
};

class ClusterHostGroup_closure : public closure
{
protected:
	vw1__ClusterHostGroup _obj;
public:
	ClusterHostGroup_closure(const vw1__ClusterHostGroup& obj) : _obj(obj) {}
	virtual ~ClusterHostGroup_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterHostGroup"; }
};

class ClusterHostPowerAction_closure : public closure
{
protected:
	vw1__ClusterHostPowerAction _obj;
public:
	ClusterHostPowerAction_closure(const vw1__ClusterHostPowerAction& obj) : _obj(obj) {}
	virtual ~ClusterHostPowerAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterHostPowerAction"; }
};

class ClusterHostRecommendation_closure : public closure
{
protected:
	vw1__ClusterHostRecommendation _obj;
public:
	ClusterHostRecommendation_closure(const vw1__ClusterHostRecommendation& obj) : _obj(obj) {}
	virtual ~ClusterHostRecommendation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterHostRecommendation"; }
};

class ClusterInitialPlacementAction_closure : public closure
{
protected:
	vw1__ClusterInitialPlacementAction _obj;
public:
	ClusterInitialPlacementAction_closure(const vw1__ClusterInitialPlacementAction& obj) : _obj(obj) {}
	virtual ~ClusterInitialPlacementAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterInitialPlacementAction"; }
};

class ClusterMigrationAction_closure : public closure
{
protected:
	vw1__ClusterMigrationAction _obj;
public:
	ClusterMigrationAction_closure(const vw1__ClusterMigrationAction& obj) : _obj(obj) {}
	virtual ~ClusterMigrationAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterMigrationAction"; }
};

class ClusterNotAttemptedVmInfo_closure : public closure
{
protected:
	vw1__ClusterNotAttemptedVmInfo _obj;
public:
	ClusterNotAttemptedVmInfo_closure(const vw1__ClusterNotAttemptedVmInfo& obj) : _obj(obj) {}
	virtual ~ClusterNotAttemptedVmInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterNotAttemptedVmInfo"; }
};

class ClusterOvercommittedEvent_closure : public closure
{
protected:
	vw1__ClusterOvercommittedEvent _obj;
public:
	ClusterOvercommittedEvent_closure(const vw1__ClusterOvercommittedEvent& obj) : _obj(obj) {}
	virtual ~ClusterOvercommittedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterOvercommittedEvent"; }
};

class ClusterPowerOnVmResult_closure : public closure
{
protected:
	vw1__ClusterPowerOnVmResult _obj;
public:
	ClusterPowerOnVmResult_closure(const vw1__ClusterPowerOnVmResult& obj) : _obj(obj) {}
	virtual ~ClusterPowerOnVmResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterPowerOnVmResult"; }
};

class ClusterProfileCompleteConfigSpec_closure : public closure
{
protected:
	vw1__ClusterProfileCompleteConfigSpec _obj;
public:
	ClusterProfileCompleteConfigSpec_closure(const vw1__ClusterProfileCompleteConfigSpec& obj) : _obj(obj) {}
	virtual ~ClusterProfileCompleteConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterProfileCompleteConfigSpec"; }
};

class ClusterProfileConfigInfo_closure : public closure
{
protected:
	vw1__ClusterProfileConfigInfo _obj;
public:
	ClusterProfileConfigInfo_closure(const vw1__ClusterProfileConfigInfo& obj) : _obj(obj) {}
	virtual ~ClusterProfileConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterProfileConfigInfo"; }
};

class ClusterProfileConfigServiceCreateSpec_closure : public closure
{
protected:
	vw1__ClusterProfileConfigServiceCreateSpec _obj;
public:
	ClusterProfileConfigServiceCreateSpec_closure(const vw1__ClusterProfileConfigServiceCreateSpec& obj) : _obj(obj) {}
	virtual ~ClusterProfileConfigServiceCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterProfileConfigServiceCreateSpec"; }
};

class ClusterProfileConfigSpec_closure : public closure
{
protected:
	vw1__ClusterProfileConfigSpec _obj;
public:
	ClusterProfileConfigSpec_closure(const vw1__ClusterProfileConfigSpec& obj) : _obj(obj) {}
	virtual ~ClusterProfileConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterProfileConfigSpec"; }
};

class ClusterProfileCreateSpec_closure : public closure
{
protected:
	vw1__ClusterProfileCreateSpec _obj;
public:
	ClusterProfileCreateSpec_closure(const vw1__ClusterProfileCreateSpec& obj) : _obj(obj) {}
	virtual ~ClusterProfileCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterProfileCreateSpec"; }
};

class ClusterRecommendation_closure : public closure
{
protected:
	vw1__ClusterRecommendation _obj;
public:
	ClusterRecommendation_closure(const vw1__ClusterRecommendation& obj) : _obj(obj) {}
	virtual ~ClusterRecommendation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterRecommendation"; }
};

class ClusterReconfiguredEvent_closure : public closure
{
protected:
	vw1__ClusterReconfiguredEvent _obj;
public:
	ClusterReconfiguredEvent_closure(const vw1__ClusterReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~ClusterReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterReconfiguredEvent"; }
};

class ClusterRuleInfo_closure : public closure
{
protected:
	vw1__ClusterRuleInfo _obj;
public:
	ClusterRuleInfo_closure(const vw1__ClusterRuleInfo& obj) : _obj(obj) {}
	virtual ~ClusterRuleInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterRuleInfo"; }
};

class ClusterRuleSpec_closure : public closure
{
protected:
	vw1__ClusterRuleSpec _obj;
public:
	ClusterRuleSpec_closure(const vw1__ClusterRuleSpec& obj) : _obj(obj) {}
	virtual ~ClusterRuleSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterRuleSpec"; }
};

class ClusterStatusChangedEvent_closure : public closure
{
protected:
	vw1__ClusterStatusChangedEvent _obj;
public:
	ClusterStatusChangedEvent_closure(const vw1__ClusterStatusChangedEvent& obj) : _obj(obj) {}
	virtual ~ClusterStatusChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterStatusChangedEvent"; }
};

class ClusterVmGroup_closure : public closure
{
protected:
	vw1__ClusterVmGroup _obj;
public:
	ClusterVmGroup_closure(const vw1__ClusterVmGroup& obj) : _obj(obj) {}
	virtual ~ClusterVmGroup_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterVmGroup"; }
};

class ClusterVmHostRuleInfo_closure : public closure
{
protected:
	vw1__ClusterVmHostRuleInfo _obj;
public:
	ClusterVmHostRuleInfo_closure(const vw1__ClusterVmHostRuleInfo& obj) : _obj(obj) {}
	virtual ~ClusterVmHostRuleInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterVmHostRuleInfo"; }
};

class ClusterVmToolsMonitoringSettings_closure : public closure
{
protected:
	vw1__ClusterVmToolsMonitoringSettings _obj;
public:
	ClusterVmToolsMonitoringSettings_closure(const vw1__ClusterVmToolsMonitoringSettings& obj) : _obj(obj) {}
	virtual ~ClusterVmToolsMonitoringSettings_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterVmToolsMonitoringSettings"; }
};

class ComplianceFailure_closure : public closure
{
protected:
	vw1__ComplianceFailure _obj;
public:
	ComplianceFailure_closure(const vw1__ComplianceFailure& obj) : _obj(obj) {}
	virtual ~ComplianceFailure_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComplianceFailure"; }
};

class ComplianceLocator_closure : public closure
{
protected:
	vw1__ComplianceLocator _obj;
public:
	ComplianceLocator_closure(const vw1__ComplianceLocator& obj) : _obj(obj) {}
	virtual ~ComplianceLocator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComplianceLocator"; }
};

class ComplianceProfile_closure : public closure
{
protected:
	vw1__ComplianceProfile _obj;
public:
	ComplianceProfile_closure(const vw1__ComplianceProfile& obj) : _obj(obj) {}
	virtual ~ComplianceProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComplianceProfile"; }
};

class ComplianceResult_closure : public closure
{
protected:
	vw1__ComplianceResult _obj;
public:
	ComplianceResult_closure(const vw1__ComplianceResult& obj) : _obj(obj) {}
	virtual ~ComplianceResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComplianceResult"; }
};

class CompositePolicyOption_closure : public closure
{
protected:
	vw1__CompositePolicyOption _obj;
public:
	CompositePolicyOption_closure(const vw1__CompositePolicyOption& obj) : _obj(obj) {}
	virtual ~CompositePolicyOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CompositePolicyOption"; }
};

class ComputeResourceConfigInfo_closure : public closure
{
protected:
	vw1__ComputeResourceConfigInfo _obj;
public:
	ComputeResourceConfigInfo_closure(const vw1__ComputeResourceConfigInfo& obj) : _obj(obj) {}
	virtual ~ComputeResourceConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComputeResourceConfigInfo"; }
};

class ComputeResourceConfigSpec_closure : public closure
{
protected:
	vw1__ComputeResourceConfigSpec _obj;
public:
	ComputeResourceConfigSpec_closure(const vw1__ComputeResourceConfigSpec& obj) : _obj(obj) {}
	virtual ~ComputeResourceConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComputeResourceConfigSpec"; }
};

class ComputeResourceEventArgument_closure : public closure
{
protected:
	vw1__ComputeResourceEventArgument _obj;
public:
	ComputeResourceEventArgument_closure(const vw1__ComputeResourceEventArgument& obj) : _obj(obj) {}
	virtual ~ComputeResourceEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComputeResourceEventArgument"; }
};

class ComputeResourceHostSPBMLicenseInfo_closure : public closure
{
protected:
	vw1__ComputeResourceHostSPBMLicenseInfo _obj;
public:
	ComputeResourceHostSPBMLicenseInfo_closure(const vw1__ComputeResourceHostSPBMLicenseInfo& obj) : _obj(obj) {}
	virtual ~ComputeResourceHostSPBMLicenseInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComputeResourceHostSPBMLicenseInfo"; }
};

class ComputeResourceSummary_closure : public closure
{
protected:
	vw1__ComputeResourceSummary _obj;
public:
	ComputeResourceSummary_closure(const vw1__ComputeResourceSummary& obj) : _obj(obj) {}
	virtual ~ComputeResourceSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComputeResourceSummary"; }
};

class ConfigTarget_closure : public closure
{
protected:
	vw1__ConfigTarget _obj;
public:
	ConfigTarget_closure(const vw1__ConfigTarget& obj) : _obj(obj) {}
	virtual ~ConfigTarget_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ConfigTarget"; }
};

class CreateTaskAction_closure : public closure
{
protected:
	vw1__CreateTaskAction _obj;
public:
	CreateTaskAction_closure(const vw1__CreateTaskAction& obj) : _obj(obj) {}
	virtual ~CreateTaskAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CreateTaskAction"; }
};

class CustomFieldDef_closure : public closure
{
protected:
	vw1__CustomFieldDef _obj;
public:
	CustomFieldDef_closure(const vw1__CustomFieldDef& obj) : _obj(obj) {}
	virtual ~CustomFieldDef_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldDef"; }
};

class CustomFieldDefAddedEvent_closure : public closure
{
protected:
	vw1__CustomFieldDefAddedEvent _obj;
public:
	CustomFieldDefAddedEvent_closure(const vw1__CustomFieldDefAddedEvent& obj) : _obj(obj) {}
	virtual ~CustomFieldDefAddedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldDefAddedEvent"; }
};

class CustomFieldDefEvent_closure : public closure
{
protected:
	vw1__CustomFieldDefEvent _obj;
public:
	CustomFieldDefEvent_closure(const vw1__CustomFieldDefEvent& obj) : _obj(obj) {}
	virtual ~CustomFieldDefEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldDefEvent"; }
};

class CustomFieldDefRemovedEvent_closure : public closure
{
protected:
	vw1__CustomFieldDefRemovedEvent _obj;
public:
	CustomFieldDefRemovedEvent_closure(const vw1__CustomFieldDefRemovedEvent& obj) : _obj(obj) {}
	virtual ~CustomFieldDefRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldDefRemovedEvent"; }
};

class CustomFieldDefRenamedEvent_closure : public closure
{
protected:
	vw1__CustomFieldDefRenamedEvent _obj;
public:
	CustomFieldDefRenamedEvent_closure(const vw1__CustomFieldDefRenamedEvent& obj) : _obj(obj) {}
	virtual ~CustomFieldDefRenamedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldDefRenamedEvent"; }
};

class CustomFieldEvent_closure : public closure
{
protected:
	vw1__CustomFieldEvent _obj;
public:
	CustomFieldEvent_closure(const vw1__CustomFieldEvent& obj) : _obj(obj) {}
	virtual ~CustomFieldEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldEvent"; }
};

class CustomFieldStringValue_closure : public closure
{
protected:
	vw1__CustomFieldStringValue _obj;
public:
	CustomFieldStringValue_closure(const vw1__CustomFieldStringValue& obj) : _obj(obj) {}
	virtual ~CustomFieldStringValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldStringValue"; }
};

class CustomFieldValue_closure : public closure
{
protected:
	vw1__CustomFieldValue _obj;
public:
	CustomFieldValue_closure(const vw1__CustomFieldValue& obj) : _obj(obj) {}
	virtual ~CustomFieldValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldValue"; }
};

class CustomFieldValueChangedEvent_closure : public closure
{
protected:
	vw1__CustomFieldValueChangedEvent _obj;
public:
	CustomFieldValueChangedEvent_closure(const vw1__CustomFieldValueChangedEvent& obj) : _obj(obj) {}
	virtual ~CustomFieldValueChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldValueChangedEvent"; }
};

class CustomizationAdapterMapping_closure : public closure
{
protected:
	vw1__CustomizationAdapterMapping _obj;
public:
	CustomizationAdapterMapping_closure(const vw1__CustomizationAdapterMapping& obj) : _obj(obj) {}
	virtual ~CustomizationAdapterMapping_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationAdapterMapping"; }
};

class CustomizationAutoIpV6Generator_closure : public closure
{
protected:
	vw1__CustomizationAutoIpV6Generator _obj;
public:
	CustomizationAutoIpV6Generator_closure(const vw1__CustomizationAutoIpV6Generator& obj) : _obj(obj) {}
	virtual ~CustomizationAutoIpV6Generator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationAutoIpV6Generator"; }
};

class CustomizationCustomIpGenerator_closure : public closure
{
protected:
	vw1__CustomizationCustomIpGenerator _obj;
public:
	CustomizationCustomIpGenerator_closure(const vw1__CustomizationCustomIpGenerator& obj) : _obj(obj) {}
	virtual ~CustomizationCustomIpGenerator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationCustomIpGenerator"; }
};

class CustomizationCustomIpV6Generator_closure : public closure
{
protected:
	vw1__CustomizationCustomIpV6Generator _obj;
public:
	CustomizationCustomIpV6Generator_closure(const vw1__CustomizationCustomIpV6Generator& obj) : _obj(obj) {}
	virtual ~CustomizationCustomIpV6Generator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationCustomIpV6Generator"; }
};

class CustomizationCustomName_closure : public closure
{
protected:
	vw1__CustomizationCustomName _obj;
public:
	CustomizationCustomName_closure(const vw1__CustomizationCustomName& obj) : _obj(obj) {}
	virtual ~CustomizationCustomName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationCustomName"; }
};

class CustomizationDhcpIpGenerator_closure : public closure
{
protected:
	vw1__CustomizationDhcpIpGenerator _obj;
public:
	CustomizationDhcpIpGenerator_closure(const vw1__CustomizationDhcpIpGenerator& obj) : _obj(obj) {}
	virtual ~CustomizationDhcpIpGenerator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationDhcpIpGenerator"; }
};

class CustomizationDhcpIpV6Generator_closure : public closure
{
protected:
	vw1__CustomizationDhcpIpV6Generator _obj;
public:
	CustomizationDhcpIpV6Generator_closure(const vw1__CustomizationDhcpIpV6Generator& obj) : _obj(obj) {}
	virtual ~CustomizationDhcpIpV6Generator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationDhcpIpV6Generator"; }
};

class CustomizationEvent_closure : public closure
{
protected:
	vw1__CustomizationEvent _obj;
public:
	CustomizationEvent_closure(const vw1__CustomizationEvent& obj) : _obj(obj) {}
	virtual ~CustomizationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationEvent"; }
};

class CustomizationFailed_closure : public closure
{
protected:
	vw1__CustomizationFailed _obj;
public:
	CustomizationFailed_closure(const vw1__CustomizationFailed& obj) : _obj(obj) {}
	virtual ~CustomizationFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationFailed"; }
};

class CustomizationFixedIp_closure : public closure
{
protected:
	vw1__CustomizationFixedIp _obj;
public:
	CustomizationFixedIp_closure(const vw1__CustomizationFixedIp& obj) : _obj(obj) {}
	virtual ~CustomizationFixedIp_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationFixedIp"; }
};

class CustomizationFixedIpV6_closure : public closure
{
protected:
	vw1__CustomizationFixedIpV6 _obj;
public:
	CustomizationFixedIpV6_closure(const vw1__CustomizationFixedIpV6& obj) : _obj(obj) {}
	virtual ~CustomizationFixedIpV6_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationFixedIpV6"; }
};

class CustomizationFixedName_closure : public closure
{
protected:
	vw1__CustomizationFixedName _obj;
public:
	CustomizationFixedName_closure(const vw1__CustomizationFixedName& obj) : _obj(obj) {}
	virtual ~CustomizationFixedName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationFixedName"; }
};

class CustomizationGlobalIPSettings_closure : public closure
{
protected:
	vw1__CustomizationGlobalIPSettings _obj;
public:
	CustomizationGlobalIPSettings_closure(const vw1__CustomizationGlobalIPSettings& obj) : _obj(obj) {}
	virtual ~CustomizationGlobalIPSettings_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationGlobalIPSettings"; }
};

class CustomizationGuiRunOnce_closure : public closure
{
protected:
	vw1__CustomizationGuiRunOnce _obj;
public:
	CustomizationGuiRunOnce_closure(const vw1__CustomizationGuiRunOnce& obj) : _obj(obj) {}
	virtual ~CustomizationGuiRunOnce_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationGuiRunOnce"; }
};

class CustomizationGuiUnattended_closure : public closure
{
protected:
	vw1__CustomizationGuiUnattended _obj;
public:
	CustomizationGuiUnattended_closure(const vw1__CustomizationGuiUnattended& obj) : _obj(obj) {}
	virtual ~CustomizationGuiUnattended_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationGuiUnattended"; }
};

class CustomizationIPSettings_closure : public closure
{
protected:
	vw1__CustomizationIPSettings _obj;
public:
	CustomizationIPSettings_closure(const vw1__CustomizationIPSettings& obj) : _obj(obj) {}
	virtual ~CustomizationIPSettings_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationIPSettings"; }
};

class CustomizationIPSettingsIpV6AddressSpec_closure : public closure
{
protected:
	vw1__CustomizationIPSettingsIpV6AddressSpec _obj;
public:
	CustomizationIPSettingsIpV6AddressSpec_closure(const vw1__CustomizationIPSettingsIpV6AddressSpec& obj) : _obj(obj) {}
	virtual ~CustomizationIPSettingsIpV6AddressSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationIPSettingsIpV6AddressSpec"; }
};

class CustomizationIdentification_closure : public closure
{
protected:
	vw1__CustomizationIdentification _obj;
public:
	CustomizationIdentification_closure(const vw1__CustomizationIdentification& obj) : _obj(obj) {}
	virtual ~CustomizationIdentification_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationIdentification"; }
};

class CustomizationIdentitySettings_closure : public closure
{
protected:
	vw1__CustomizationIdentitySettings _obj;
public:
	CustomizationIdentitySettings_closure(const vw1__CustomizationIdentitySettings& obj) : _obj(obj) {}
	virtual ~CustomizationIdentitySettings_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationIdentitySettings"; }
};

class CustomizationIpGenerator_closure : public closure
{
protected:
	vw1__CustomizationIpGenerator _obj;
public:
	CustomizationIpGenerator_closure(const vw1__CustomizationIpGenerator& obj) : _obj(obj) {}
	virtual ~CustomizationIpGenerator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationIpGenerator"; }
};

class CustomizationIpV6Generator_closure : public closure
{
protected:
	vw1__CustomizationIpV6Generator _obj;
public:
	CustomizationIpV6Generator_closure(const vw1__CustomizationIpV6Generator& obj) : _obj(obj) {}
	virtual ~CustomizationIpV6Generator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationIpV6Generator"; }
};

class CustomizationLicenseFilePrintData_closure : public closure
{
protected:
	vw1__CustomizationLicenseFilePrintData _obj;
public:
	CustomizationLicenseFilePrintData_closure(const vw1__CustomizationLicenseFilePrintData& obj) : _obj(obj) {}
	virtual ~CustomizationLicenseFilePrintData_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationLicenseFilePrintData"; }
};

class CustomizationLinuxIdentityFailed_closure : public closure
{
protected:
	vw1__CustomizationLinuxIdentityFailed _obj;
public:
	CustomizationLinuxIdentityFailed_closure(const vw1__CustomizationLinuxIdentityFailed& obj) : _obj(obj) {}
	virtual ~CustomizationLinuxIdentityFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationLinuxIdentityFailed"; }
};

class CustomizationLinuxOptions_closure : public closure
{
protected:
	vw1__CustomizationLinuxOptions _obj;
public:
	CustomizationLinuxOptions_closure(const vw1__CustomizationLinuxOptions& obj) : _obj(obj) {}
	virtual ~CustomizationLinuxOptions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationLinuxOptions"; }
};

class CustomizationLinuxPrep_closure : public closure
{
protected:
	vw1__CustomizationLinuxPrep _obj;
public:
	CustomizationLinuxPrep_closure(const vw1__CustomizationLinuxPrep& obj) : _obj(obj) {}
	virtual ~CustomizationLinuxPrep_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationLinuxPrep"; }
};

class CustomizationName_closure : public closure
{
protected:
	vw1__CustomizationName _obj;
public:
	CustomizationName_closure(const vw1__CustomizationName& obj) : _obj(obj) {}
	virtual ~CustomizationName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationName"; }
};

class CustomizationNetworkSetupFailed_closure : public closure
{
protected:
	vw1__CustomizationNetworkSetupFailed _obj;
public:
	CustomizationNetworkSetupFailed_closure(const vw1__CustomizationNetworkSetupFailed& obj) : _obj(obj) {}
	virtual ~CustomizationNetworkSetupFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationNetworkSetupFailed"; }
};

class CustomizationOptions_closure : public closure
{
protected:
	vw1__CustomizationOptions _obj;
public:
	CustomizationOptions_closure(const vw1__CustomizationOptions& obj) : _obj(obj) {}
	virtual ~CustomizationOptions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationOptions"; }
};

class CustomizationPassword_closure : public closure
{
protected:
	vw1__CustomizationPassword _obj;
public:
	CustomizationPassword_closure(const vw1__CustomizationPassword& obj) : _obj(obj) {}
	virtual ~CustomizationPassword_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationPassword"; }
};

class CustomizationPrefixName_closure : public closure
{
protected:
	vw1__CustomizationPrefixName _obj;
public:
	CustomizationPrefixName_closure(const vw1__CustomizationPrefixName& obj) : _obj(obj) {}
	virtual ~CustomizationPrefixName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationPrefixName"; }
};

class CustomizationSpec_closure : public closure
{
protected:
	vw1__CustomizationSpec _obj;
public:
	CustomizationSpec_closure(const vw1__CustomizationSpec& obj) : _obj(obj) {}
	virtual ~CustomizationSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationSpec"; }
};

class CustomizationSpecInfo_closure : public closure
{
protected:
	vw1__CustomizationSpecInfo _obj;
public:
	CustomizationSpecInfo_closure(const vw1__CustomizationSpecInfo& obj) : _obj(obj) {}
	virtual ~CustomizationSpecInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationSpecInfo"; }
};

class CustomizationSpecItem_closure : public closure
{
protected:
	vw1__CustomizationSpecItem _obj;
public:
	CustomizationSpecItem_closure(const vw1__CustomizationSpecItem& obj) : _obj(obj) {}
	virtual ~CustomizationSpecItem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationSpecItem"; }
};

class CustomizationStartedEvent_closure : public closure
{
protected:
	vw1__CustomizationStartedEvent _obj;
public:
	CustomizationStartedEvent_closure(const vw1__CustomizationStartedEvent& obj) : _obj(obj) {}
	virtual ~CustomizationStartedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationStartedEvent"; }
};

class CustomizationStatelessIpV6Generator_closure : public closure
{
protected:
	vw1__CustomizationStatelessIpV6Generator _obj;
public:
	CustomizationStatelessIpV6Generator_closure(const vw1__CustomizationStatelessIpV6Generator& obj) : _obj(obj) {}
	virtual ~CustomizationStatelessIpV6Generator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationStatelessIpV6Generator"; }
};

class CustomizationSucceeded_closure : public closure
{
protected:
	vw1__CustomizationSucceeded _obj;
public:
	CustomizationSucceeded_closure(const vw1__CustomizationSucceeded& obj) : _obj(obj) {}
	virtual ~CustomizationSucceeded_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationSucceeded"; }
};

class CustomizationSysprep_closure : public closure
{
protected:
	vw1__CustomizationSysprep _obj;
public:
	CustomizationSysprep_closure(const vw1__CustomizationSysprep& obj) : _obj(obj) {}
	virtual ~CustomizationSysprep_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationSysprep"; }
};

class CustomizationSysprepFailed_closure : public closure
{
protected:
	vw1__CustomizationSysprepFailed _obj;
public:
	CustomizationSysprepFailed_closure(const vw1__CustomizationSysprepFailed& obj) : _obj(obj) {}
	virtual ~CustomizationSysprepFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationSysprepFailed"; }
};

class CustomizationSysprepText_closure : public closure
{
protected:
	vw1__CustomizationSysprepText _obj;
public:
	CustomizationSysprepText_closure(const vw1__CustomizationSysprepText& obj) : _obj(obj) {}
	virtual ~CustomizationSysprepText_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationSysprepText"; }
};

class CustomizationUnknownFailure_closure : public closure
{
protected:
	vw1__CustomizationUnknownFailure _obj;
public:
	CustomizationUnknownFailure_closure(const vw1__CustomizationUnknownFailure& obj) : _obj(obj) {}
	virtual ~CustomizationUnknownFailure_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationUnknownFailure"; }
};

class CustomizationUnknownIpGenerator_closure : public closure
{
protected:
	vw1__CustomizationUnknownIpGenerator _obj;
public:
	CustomizationUnknownIpGenerator_closure(const vw1__CustomizationUnknownIpGenerator& obj) : _obj(obj) {}
	virtual ~CustomizationUnknownIpGenerator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationUnknownIpGenerator"; }
};

class CustomizationUnknownIpV6Generator_closure : public closure
{
protected:
	vw1__CustomizationUnknownIpV6Generator _obj;
public:
	CustomizationUnknownIpV6Generator_closure(const vw1__CustomizationUnknownIpV6Generator& obj) : _obj(obj) {}
	virtual ~CustomizationUnknownIpV6Generator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationUnknownIpV6Generator"; }
};

class CustomizationUnknownName_closure : public closure
{
protected:
	vw1__CustomizationUnknownName _obj;
public:
	CustomizationUnknownName_closure(const vw1__CustomizationUnknownName& obj) : _obj(obj) {}
	virtual ~CustomizationUnknownName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationUnknownName"; }
};

class CustomizationUserData_closure : public closure
{
protected:
	vw1__CustomizationUserData _obj;
public:
	CustomizationUserData_closure(const vw1__CustomizationUserData& obj) : _obj(obj) {}
	virtual ~CustomizationUserData_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationUserData"; }
};

class CustomizationVirtualMachineName_closure : public closure
{
protected:
	vw1__CustomizationVirtualMachineName _obj;
public:
	CustomizationVirtualMachineName_closure(const vw1__CustomizationVirtualMachineName& obj) : _obj(obj) {}
	virtual ~CustomizationVirtualMachineName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationVirtualMachineName"; }
};

class CustomizationWinOptions_closure : public closure
{
protected:
	vw1__CustomizationWinOptions _obj;
public:
	CustomizationWinOptions_closure(const vw1__CustomizationWinOptions& obj) : _obj(obj) {}
	virtual ~CustomizationWinOptions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationWinOptions"; }
};

class DVPortConfigInfo_closure : public closure
{
protected:
	vw1__DVPortConfigInfo _obj;
public:
	DVPortConfigInfo_closure(const vw1__DVPortConfigInfo& obj) : _obj(obj) {}
	virtual ~DVPortConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortConfigInfo"; }
};

class DVPortConfigSpec_closure : public closure
{
protected:
	vw1__DVPortConfigSpec _obj;
public:
	DVPortConfigSpec_closure(const vw1__DVPortConfigSpec& obj) : _obj(obj) {}
	virtual ~DVPortConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortConfigSpec"; }
};

class DVPortSetting_closure : public closure
{
protected:
	vw1__DVPortSetting _obj;
public:
	DVPortSetting_closure(const vw1__DVPortSetting& obj) : _obj(obj) {}
	virtual ~DVPortSetting_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortSetting"; }
};

class DVPortState_closure : public closure
{
protected:
	vw1__DVPortState _obj;
public:
	DVPortState_closure(const vw1__DVPortState& obj) : _obj(obj) {}
	virtual ~DVPortState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortState"; }
};

class DVPortStatus_closure : public closure
{
protected:
	vw1__DVPortStatus _obj;
public:
	DVPortStatus_closure(const vw1__DVPortStatus& obj) : _obj(obj) {}
	virtual ~DVPortStatus_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortStatus"; }
};

class DVPortgroupConfigInfo_closure : public closure
{
protected:
	vw1__DVPortgroupConfigInfo _obj;
public:
	DVPortgroupConfigInfo_closure(const vw1__DVPortgroupConfigInfo& obj) : _obj(obj) {}
	virtual ~DVPortgroupConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortgroupConfigInfo"; }
};

class DVPortgroupConfigSpec_closure : public closure
{
protected:
	vw1__DVPortgroupConfigSpec _obj;
public:
	DVPortgroupConfigSpec_closure(const vw1__DVPortgroupConfigSpec& obj) : _obj(obj) {}
	virtual ~DVPortgroupConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortgroupConfigSpec"; }
};

class DVPortgroupCreatedEvent_closure : public closure
{
protected:
	vw1__DVPortgroupCreatedEvent _obj;
public:
	DVPortgroupCreatedEvent_closure(const vw1__DVPortgroupCreatedEvent& obj) : _obj(obj) {}
	virtual ~DVPortgroupCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortgroupCreatedEvent"; }
};

class DVPortgroupDestroyedEvent_closure : public closure
{
protected:
	vw1__DVPortgroupDestroyedEvent _obj;
public:
	DVPortgroupDestroyedEvent_closure(const vw1__DVPortgroupDestroyedEvent& obj) : _obj(obj) {}
	virtual ~DVPortgroupDestroyedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortgroupDestroyedEvent"; }
};

class DVPortgroupEvent_closure : public closure
{
protected:
	vw1__DVPortgroupEvent _obj;
public:
	DVPortgroupEvent_closure(const vw1__DVPortgroupEvent& obj) : _obj(obj) {}
	virtual ~DVPortgroupEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortgroupEvent"; }
};

class DVPortgroupPolicy_closure : public closure
{
protected:
	vw1__DVPortgroupPolicy _obj;
public:
	DVPortgroupPolicy_closure(const vw1__DVPortgroupPolicy& obj) : _obj(obj) {}
	virtual ~DVPortgroupPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortgroupPolicy"; }
};

class DVPortgroupReconfiguredEvent_closure : public closure
{
protected:
	vw1__DVPortgroupReconfiguredEvent _obj;
public:
	DVPortgroupReconfiguredEvent_closure(const vw1__DVPortgroupReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~DVPortgroupReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortgroupReconfiguredEvent"; }
};

class DVPortgroupRenamedEvent_closure : public closure
{
protected:
	vw1__DVPortgroupRenamedEvent _obj;
public:
	DVPortgroupRenamedEvent_closure(const vw1__DVPortgroupRenamedEvent& obj) : _obj(obj) {}
	virtual ~DVPortgroupRenamedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortgroupRenamedEvent"; }
};

class DVSCapability_closure : public closure
{
protected:
	vw1__DVSCapability _obj;
public:
	DVSCapability_closure(const vw1__DVSCapability& obj) : _obj(obj) {}
	virtual ~DVSCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSCapability"; }
};

class DVSConfigInfo_closure : public closure
{
protected:
	vw1__DVSConfigInfo _obj;
public:
	DVSConfigInfo_closure(const vw1__DVSConfigInfo& obj) : _obj(obj) {}
	virtual ~DVSConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSConfigInfo"; }
};

class DVSConfigSpec_closure : public closure
{
protected:
	vw1__DVSConfigSpec _obj;
public:
	DVSConfigSpec_closure(const vw1__DVSConfigSpec& obj) : _obj(obj) {}
	virtual ~DVSConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSConfigSpec"; }
};

class DVSContactInfo_closure : public closure
{
protected:
	vw1__DVSContactInfo _obj;
public:
	DVSContactInfo_closure(const vw1__DVSContactInfo& obj) : _obj(obj) {}
	virtual ~DVSContactInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSContactInfo"; }
};

class DVSCreateSpec_closure : public closure
{
protected:
	vw1__DVSCreateSpec _obj;
public:
	DVSCreateSpec_closure(const vw1__DVSCreateSpec& obj) : _obj(obj) {}
	virtual ~DVSCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSCreateSpec"; }
};

class DVSFailureCriteria_closure : public closure
{
protected:
	vw1__DVSFailureCriteria _obj;
public:
	DVSFailureCriteria_closure(const vw1__DVSFailureCriteria& obj) : _obj(obj) {}
	virtual ~DVSFailureCriteria_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSFailureCriteria"; }
};

class DVSFeatureCapability_closure : public closure
{
protected:
	vw1__DVSFeatureCapability _obj;
public:
	DVSFeatureCapability_closure(const vw1__DVSFeatureCapability& obj) : _obj(obj) {}
	virtual ~DVSFeatureCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSFeatureCapability"; }
};

class DVSManagerDvsConfigTarget_closure : public closure
{
protected:
	vw1__DVSManagerDvsConfigTarget _obj;
public:
	DVSManagerDvsConfigTarget_closure(const vw1__DVSManagerDvsConfigTarget& obj) : _obj(obj) {}
	virtual ~DVSManagerDvsConfigTarget_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSManagerDvsConfigTarget"; }
};

class DVSNameArrayUplinkPortPolicy_closure : public closure
{
protected:
	vw1__DVSNameArrayUplinkPortPolicy _obj;
public:
	DVSNameArrayUplinkPortPolicy_closure(const vw1__DVSNameArrayUplinkPortPolicy& obj) : _obj(obj) {}
	virtual ~DVSNameArrayUplinkPortPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSNameArrayUplinkPortPolicy"; }
};

class DVSNetworkResourceManagementCapability_closure : public closure
{
protected:
	vw1__DVSNetworkResourceManagementCapability _obj;
public:
	DVSNetworkResourceManagementCapability_closure(const vw1__DVSNetworkResourceManagementCapability& obj) : _obj(obj) {}
	virtual ~DVSNetworkResourceManagementCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSNetworkResourceManagementCapability"; }
};

class DVSNetworkResourcePool_closure : public closure
{
protected:
	vw1__DVSNetworkResourcePool _obj;
public:
	DVSNetworkResourcePool_closure(const vw1__DVSNetworkResourcePool& obj) : _obj(obj) {}
	virtual ~DVSNetworkResourcePool_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSNetworkResourcePool"; }
};

class DVSNetworkResourcePoolAllocationInfo_closure : public closure
{
protected:
	vw1__DVSNetworkResourcePoolAllocationInfo _obj;
public:
	DVSNetworkResourcePoolAllocationInfo_closure(const vw1__DVSNetworkResourcePoolAllocationInfo& obj) : _obj(obj) {}
	virtual ~DVSNetworkResourcePoolAllocationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSNetworkResourcePoolAllocationInfo"; }
};

class DVSNetworkResourcePoolConfigSpec_closure : public closure
{
protected:
	vw1__DVSNetworkResourcePoolConfigSpec _obj;
public:
	DVSNetworkResourcePoolConfigSpec_closure(const vw1__DVSNetworkResourcePoolConfigSpec& obj) : _obj(obj) {}
	virtual ~DVSNetworkResourcePoolConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSNetworkResourcePoolConfigSpec"; }
};

class DVSPolicy_closure : public closure
{
protected:
	vw1__DVSPolicy _obj;
public:
	DVSPolicy_closure(const vw1__DVSPolicy& obj) : _obj(obj) {}
	virtual ~DVSPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSPolicy"; }
};

class DVSSecurityPolicy_closure : public closure
{
protected:
	vw1__DVSSecurityPolicy _obj;
public:
	DVSSecurityPolicy_closure(const vw1__DVSSecurityPolicy& obj) : _obj(obj) {}
	virtual ~DVSSecurityPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSSecurityPolicy"; }
};

class DVSSummary_closure : public closure
{
protected:
	vw1__DVSSummary _obj;
public:
	DVSSummary_closure(const vw1__DVSSummary& obj) : _obj(obj) {}
	virtual ~DVSSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSSummary"; }
};

class DVSTrafficShapingPolicy_closure : public closure
{
protected:
	vw1__DVSTrafficShapingPolicy _obj;
public:
	DVSTrafficShapingPolicy_closure(const vw1__DVSTrafficShapingPolicy& obj) : _obj(obj) {}
	virtual ~DVSTrafficShapingPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSTrafficShapingPolicy"; }
};

class DVSUplinkPortPolicy_closure : public closure
{
protected:
	vw1__DVSUplinkPortPolicy _obj;
public:
	DVSUplinkPortPolicy_closure(const vw1__DVSUplinkPortPolicy& obj) : _obj(obj) {}
	virtual ~DVSUplinkPortPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSUplinkPortPolicy"; }
};

class DVSVendorSpecificConfig_closure : public closure
{
protected:
	vw1__DVSVendorSpecificConfig _obj;
public:
	DVSVendorSpecificConfig_closure(const vw1__DVSVendorSpecificConfig& obj) : _obj(obj) {}
	virtual ~DVSVendorSpecificConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVSVendorSpecificConfig"; }
};

class DailyTaskScheduler_closure : public closure
{
protected:
	vw1__DailyTaskScheduler _obj;
public:
	DailyTaskScheduler_closure(const vw1__DailyTaskScheduler& obj) : _obj(obj) {}
	virtual ~DailyTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DailyTaskScheduler"; }
};

class DasAdmissionControlDisabledEvent_closure : public closure
{
protected:
	vw1__DasAdmissionControlDisabledEvent _obj;
public:
	DasAdmissionControlDisabledEvent_closure(const vw1__DasAdmissionControlDisabledEvent& obj) : _obj(obj) {}
	virtual ~DasAdmissionControlDisabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasAdmissionControlDisabledEvent"; }
};

class DasAdmissionControlEnabledEvent_closure : public closure
{
protected:
	vw1__DasAdmissionControlEnabledEvent _obj;
public:
	DasAdmissionControlEnabledEvent_closure(const vw1__DasAdmissionControlEnabledEvent& obj) : _obj(obj) {}
	virtual ~DasAdmissionControlEnabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasAdmissionControlEnabledEvent"; }
};

class DasAgentFoundEvent_closure : public closure
{
protected:
	vw1__DasAgentFoundEvent _obj;
public:
	DasAgentFoundEvent_closure(const vw1__DasAgentFoundEvent& obj) : _obj(obj) {}
	virtual ~DasAgentFoundEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasAgentFoundEvent"; }
};

class DasAgentUnavailableEvent_closure : public closure
{
protected:
	vw1__DasAgentUnavailableEvent _obj;
public:
	DasAgentUnavailableEvent_closure(const vw1__DasAgentUnavailableEvent& obj) : _obj(obj) {}
	virtual ~DasAgentUnavailableEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasAgentUnavailableEvent"; }
};

class DasClusterIsolatedEvent_closure : public closure
{
protected:
	vw1__DasClusterIsolatedEvent _obj;
public:
	DasClusterIsolatedEvent_closure(const vw1__DasClusterIsolatedEvent& obj) : _obj(obj) {}
	virtual ~DasClusterIsolatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasClusterIsolatedEvent"; }
};

class DasDisabledEvent_closure : public closure
{
protected:
	vw1__DasDisabledEvent _obj;
public:
	DasDisabledEvent_closure(const vw1__DasDisabledEvent& obj) : _obj(obj) {}
	virtual ~DasDisabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasDisabledEvent"; }
};

class DasEnabledEvent_closure : public closure
{
protected:
	vw1__DasEnabledEvent _obj;
public:
	DasEnabledEvent_closure(const vw1__DasEnabledEvent& obj) : _obj(obj) {}
	virtual ~DasEnabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasEnabledEvent"; }
};

class DasHeartbeatDatastoreInfo_closure : public closure
{
protected:
	vw1__DasHeartbeatDatastoreInfo _obj;
public:
	DasHeartbeatDatastoreInfo_closure(const vw1__DasHeartbeatDatastoreInfo& obj) : _obj(obj) {}
	virtual ~DasHeartbeatDatastoreInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasHeartbeatDatastoreInfo"; }
};

class DasHostFailedEvent_closure : public closure
{
protected:
	vw1__DasHostFailedEvent _obj;
public:
	DasHostFailedEvent_closure(const vw1__DasHostFailedEvent& obj) : _obj(obj) {}
	virtual ~DasHostFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasHostFailedEvent"; }
};

class DasHostIsolatedEvent_closure : public closure
{
protected:
	vw1__DasHostIsolatedEvent _obj;
public:
	DasHostIsolatedEvent_closure(const vw1__DasHostIsolatedEvent& obj) : _obj(obj) {}
	virtual ~DasHostIsolatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasHostIsolatedEvent"; }
};

class DatabaseSizeEstimate_closure : public closure
{
protected:
	vw1__DatabaseSizeEstimate _obj;
public:
	DatabaseSizeEstimate_closure(const vw1__DatabaseSizeEstimate& obj) : _obj(obj) {}
	virtual ~DatabaseSizeEstimate_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatabaseSizeEstimate"; }
};

class DatabaseSizeParam_closure : public closure
{
protected:
	vw1__DatabaseSizeParam _obj;
public:
	DatabaseSizeParam_closure(const vw1__DatabaseSizeParam& obj) : _obj(obj) {}
	virtual ~DatabaseSizeParam_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatabaseSizeParam"; }
};

class DatacenterCreatedEvent_closure : public closure
{
protected:
	vw1__DatacenterCreatedEvent _obj;
public:
	DatacenterCreatedEvent_closure(const vw1__DatacenterCreatedEvent& obj) : _obj(obj) {}
	virtual ~DatacenterCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatacenterCreatedEvent"; }
};

class DatacenterEvent_closure : public closure
{
protected:
	vw1__DatacenterEvent _obj;
public:
	DatacenterEvent_closure(const vw1__DatacenterEvent& obj) : _obj(obj) {}
	virtual ~DatacenterEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatacenterEvent"; }
};

class DatacenterEventArgument_closure : public closure
{
protected:
	vw1__DatacenterEventArgument _obj;
public:
	DatacenterEventArgument_closure(const vw1__DatacenterEventArgument& obj) : _obj(obj) {}
	virtual ~DatacenterEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatacenterEventArgument"; }
};

class DatacenterMismatchArgument_closure : public closure
{
protected:
	vw1__DatacenterMismatchArgument _obj;
public:
	DatacenterMismatchArgument_closure(const vw1__DatacenterMismatchArgument& obj) : _obj(obj) {}
	virtual ~DatacenterMismatchArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatacenterMismatchArgument"; }
};

class DatacenterRenamedEvent_closure : public closure
{
protected:
	vw1__DatacenterRenamedEvent _obj;
public:
	DatacenterRenamedEvent_closure(const vw1__DatacenterRenamedEvent& obj) : _obj(obj) {}
	virtual ~DatacenterRenamedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatacenterRenamedEvent"; }
};

class DatastoreCapability_closure : public closure
{
protected:
	vw1__DatastoreCapability _obj;
public:
	DatastoreCapability_closure(const vw1__DatastoreCapability& obj) : _obj(obj) {}
	virtual ~DatastoreCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreCapability"; }
};

class DatastoreCapacityIncreasedEvent_closure : public closure
{
protected:
	vw1__DatastoreCapacityIncreasedEvent _obj;
public:
	DatastoreCapacityIncreasedEvent_closure(const vw1__DatastoreCapacityIncreasedEvent& obj) : _obj(obj) {}
	virtual ~DatastoreCapacityIncreasedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreCapacityIncreasedEvent"; }
};

class DatastoreDestroyedEvent_closure : public closure
{
protected:
	vw1__DatastoreDestroyedEvent _obj;
public:
	DatastoreDestroyedEvent_closure(const vw1__DatastoreDestroyedEvent& obj) : _obj(obj) {}
	virtual ~DatastoreDestroyedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreDestroyedEvent"; }
};

class DatastoreDiscoveredEvent_closure : public closure
{
protected:
	vw1__DatastoreDiscoveredEvent _obj;
public:
	DatastoreDiscoveredEvent_closure(const vw1__DatastoreDiscoveredEvent& obj) : _obj(obj) {}
	virtual ~DatastoreDiscoveredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreDiscoveredEvent"; }
};

class DatastoreDuplicatedEvent_closure : public closure
{
protected:
	vw1__DatastoreDuplicatedEvent _obj;
public:
	DatastoreDuplicatedEvent_closure(const vw1__DatastoreDuplicatedEvent& obj) : _obj(obj) {}
	virtual ~DatastoreDuplicatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreDuplicatedEvent"; }
};

class DatastoreEvent_closure : public closure
{
protected:
	vw1__DatastoreEvent _obj;
public:
	DatastoreEvent_closure(const vw1__DatastoreEvent& obj) : _obj(obj) {}
	virtual ~DatastoreEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreEvent"; }
};

class DatastoreEventArgument_closure : public closure
{
protected:
	vw1__DatastoreEventArgument _obj;
public:
	DatastoreEventArgument_closure(const vw1__DatastoreEventArgument& obj) : _obj(obj) {}
	virtual ~DatastoreEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreEventArgument"; }
};

class DatastoreFileCopiedEvent_closure : public closure
{
protected:
	vw1__DatastoreFileCopiedEvent _obj;
public:
	DatastoreFileCopiedEvent_closure(const vw1__DatastoreFileCopiedEvent& obj) : _obj(obj) {}
	virtual ~DatastoreFileCopiedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreFileCopiedEvent"; }
};

class DatastoreFileDeletedEvent_closure : public closure
{
protected:
	vw1__DatastoreFileDeletedEvent _obj;
public:
	DatastoreFileDeletedEvent_closure(const vw1__DatastoreFileDeletedEvent& obj) : _obj(obj) {}
	virtual ~DatastoreFileDeletedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreFileDeletedEvent"; }
};

class DatastoreFileEvent_closure : public closure
{
protected:
	vw1__DatastoreFileEvent _obj;
public:
	DatastoreFileEvent_closure(const vw1__DatastoreFileEvent& obj) : _obj(obj) {}
	virtual ~DatastoreFileEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreFileEvent"; }
};

class DatastoreFileMovedEvent_closure : public closure
{
protected:
	vw1__DatastoreFileMovedEvent _obj;
public:
	DatastoreFileMovedEvent_closure(const vw1__DatastoreFileMovedEvent& obj) : _obj(obj) {}
	virtual ~DatastoreFileMovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreFileMovedEvent"; }
};

class DatastoreHostMount_closure : public closure
{
protected:
	vw1__DatastoreHostMount _obj;
public:
	DatastoreHostMount_closure(const vw1__DatastoreHostMount& obj) : _obj(obj) {}
	virtual ~DatastoreHostMount_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreHostMount"; }
};

class DatastoreIORMReconfiguredEvent_closure : public closure
{
protected:
	vw1__DatastoreIORMReconfiguredEvent _obj;
public:
	DatastoreIORMReconfiguredEvent_closure(const vw1__DatastoreIORMReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~DatastoreIORMReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreIORMReconfiguredEvent"; }
};

class DatastoreInfo_closure : public closure
{
protected:
	vw1__DatastoreInfo _obj;
public:
	DatastoreInfo_closure(const vw1__DatastoreInfo& obj) : _obj(obj) {}
	virtual ~DatastoreInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreInfo"; }
};

class DatastoreMountPathDatastorePair_closure : public closure
{
protected:
	vw1__DatastoreMountPathDatastorePair _obj;
public:
	DatastoreMountPathDatastorePair_closure(const vw1__DatastoreMountPathDatastorePair& obj) : _obj(obj) {}
	virtual ~DatastoreMountPathDatastorePair_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreMountPathDatastorePair"; }
};

class DatastoreOption_closure : public closure
{
protected:
	vw1__DatastoreOption _obj;
public:
	DatastoreOption_closure(const vw1__DatastoreOption& obj) : _obj(obj) {}
	virtual ~DatastoreOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreOption"; }
};

class DatastorePrincipalConfigured_closure : public closure
{
protected:
	vw1__DatastorePrincipalConfigured _obj;
public:
	DatastorePrincipalConfigured_closure(const vw1__DatastorePrincipalConfigured& obj) : _obj(obj) {}
	virtual ~DatastorePrincipalConfigured_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastorePrincipalConfigured"; }
};

class DatastoreRemovedOnHostEvent_closure : public closure
{
protected:
	vw1__DatastoreRemovedOnHostEvent _obj;
public:
	DatastoreRemovedOnHostEvent_closure(const vw1__DatastoreRemovedOnHostEvent& obj) : _obj(obj) {}
	virtual ~DatastoreRemovedOnHostEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreRemovedOnHostEvent"; }
};

class DatastoreRenamedEvent_closure : public closure
{
protected:
	vw1__DatastoreRenamedEvent _obj;
public:
	DatastoreRenamedEvent_closure(const vw1__DatastoreRenamedEvent& obj) : _obj(obj) {}
	virtual ~DatastoreRenamedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreRenamedEvent"; }
};

class DatastoreRenamedOnHostEvent_closure : public closure
{
protected:
	vw1__DatastoreRenamedOnHostEvent _obj;
public:
	DatastoreRenamedOnHostEvent_closure(const vw1__DatastoreRenamedOnHostEvent& obj) : _obj(obj) {}
	virtual ~DatastoreRenamedOnHostEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreRenamedOnHostEvent"; }
};

class DatastoreSummary_closure : public closure
{
protected:
	vw1__DatastoreSummary _obj;
public:
	DatastoreSummary_closure(const vw1__DatastoreSummary& obj) : _obj(obj) {}
	virtual ~DatastoreSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreSummary"; }
};

class DateTimeProfile_closure : public closure
{
protected:
	vw1__DateTimeProfile _obj;
public:
	DateTimeProfile_closure(const vw1__DateTimeProfile& obj) : _obj(obj) {}
	virtual ~DateTimeProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DateTimeProfile"; }
};

class Description_closure : public closure
{
protected:
	vw1__Description _obj;
public:
	Description_closure(const vw1__Description& obj) : _obj(obj) {}
	virtual ~Description_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Description"; }
};

class DeviceBackedVirtualDiskSpec_closure : public closure
{
protected:
	vw1__DeviceBackedVirtualDiskSpec _obj;
public:
	DeviceBackedVirtualDiskSpec_closure(const vw1__DeviceBackedVirtualDiskSpec& obj) : _obj(obj) {}
	virtual ~DeviceBackedVirtualDiskSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeviceBackedVirtualDiskSpec"; }
};

class DiagnosticManagerBundleInfo_closure : public closure
{
protected:
	vw1__DiagnosticManagerBundleInfo _obj;
public:
	DiagnosticManagerBundleInfo_closure(const vw1__DiagnosticManagerBundleInfo& obj) : _obj(obj) {}
	virtual ~DiagnosticManagerBundleInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DiagnosticManagerBundleInfo"; }
};

class DiagnosticManagerLogDescriptor_closure : public closure
{
protected:
	vw1__DiagnosticManagerLogDescriptor _obj;
public:
	DiagnosticManagerLogDescriptor_closure(const vw1__DiagnosticManagerLogDescriptor& obj) : _obj(obj) {}
	virtual ~DiagnosticManagerLogDescriptor_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DiagnosticManagerLogDescriptor"; }
};

class DiagnosticManagerLogHeader_closure : public closure
{
protected:
	vw1__DiagnosticManagerLogHeader _obj;
public:
	DiagnosticManagerLogHeader_closure(const vw1__DiagnosticManagerLogHeader& obj) : _obj(obj) {}
	virtual ~DiagnosticManagerLogHeader_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DiagnosticManagerLogHeader"; }
};

class DiskChangeExtent_closure : public closure
{
protected:
	vw1__DiskChangeExtent _obj;
public:
	DiskChangeExtent_closure(const vw1__DiskChangeExtent& obj) : _obj(obj) {}
	virtual ~DiskChangeExtent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DiskChangeExtent"; }
};

class DiskChangeInfo_closure : public closure
{
protected:
	vw1__DiskChangeInfo _obj;
public:
	DiskChangeInfo_closure(const vw1__DiskChangeInfo& obj) : _obj(obj) {}
	virtual ~DiskChangeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DiskChangeInfo"; }
};

class DistributedVirtualPort_closure : public closure
{
protected:
	vw1__DistributedVirtualPort _obj;
public:
	DistributedVirtualPort_closure(const vw1__DistributedVirtualPort& obj) : _obj(obj) {}
	virtual ~DistributedVirtualPort_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualPort"; }
};

class DistributedVirtualPortgroupInfo_closure : public closure
{
protected:
	vw1__DistributedVirtualPortgroupInfo _obj;
public:
	DistributedVirtualPortgroupInfo_closure(const vw1__DistributedVirtualPortgroupInfo& obj) : _obj(obj) {}
	virtual ~DistributedVirtualPortgroupInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualPortgroupInfo"; }
};

class DistributedVirtualSwitchHostMember_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchHostMember _obj;
public:
	DistributedVirtualSwitchHostMember_closure(const vw1__DistributedVirtualSwitchHostMember& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchHostMember_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchHostMember"; }
};

class DistributedVirtualSwitchHostMemberBacking_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchHostMemberBacking _obj;
public:
	DistributedVirtualSwitchHostMemberBacking_closure(const vw1__DistributedVirtualSwitchHostMemberBacking& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchHostMemberBacking_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchHostMemberBacking"; }
};

class DistributedVirtualSwitchHostMemberConfigInfo_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchHostMemberConfigInfo _obj;
public:
	DistributedVirtualSwitchHostMemberConfigInfo_closure(const vw1__DistributedVirtualSwitchHostMemberConfigInfo& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchHostMemberConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchHostMemberConfigInfo"; }
};

class DistributedVirtualSwitchHostMemberConfigSpec_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchHostMemberConfigSpec _obj;
public:
	DistributedVirtualSwitchHostMemberConfigSpec_closure(const vw1__DistributedVirtualSwitchHostMemberConfigSpec& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchHostMemberConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchHostMemberConfigSpec"; }
};

class DistributedVirtualSwitchHostMemberPnicBacking_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchHostMemberPnicBacking _obj;
public:
	DistributedVirtualSwitchHostMemberPnicBacking_closure(const vw1__DistributedVirtualSwitchHostMemberPnicBacking& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchHostMemberPnicBacking_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchHostMemberPnicBacking"; }
};

class DistributedVirtualSwitchHostMemberPnicSpec_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchHostMemberPnicSpec _obj;
public:
	DistributedVirtualSwitchHostMemberPnicSpec_closure(const vw1__DistributedVirtualSwitchHostMemberPnicSpec& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchHostMemberPnicSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchHostMemberPnicSpec"; }
};

class DistributedVirtualSwitchHostMemberRuntimeState_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchHostMemberRuntimeState _obj;
public:
	DistributedVirtualSwitchHostMemberRuntimeState_closure(const vw1__DistributedVirtualSwitchHostMemberRuntimeState& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchHostMemberRuntimeState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchHostMemberRuntimeState"; }
};

class DistributedVirtualSwitchHostProductSpec_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchHostProductSpec _obj;
public:
	DistributedVirtualSwitchHostProductSpec_closure(const vw1__DistributedVirtualSwitchHostProductSpec& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchHostProductSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchHostProductSpec"; }
};

class DistributedVirtualSwitchInfo_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchInfo _obj;
public:
	DistributedVirtualSwitchInfo_closure(const vw1__DistributedVirtualSwitchInfo& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchInfo"; }
};

class DistributedVirtualSwitchKeyedOpaqueBlob_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchKeyedOpaqueBlob _obj;
public:
	DistributedVirtualSwitchKeyedOpaqueBlob_closure(const vw1__DistributedVirtualSwitchKeyedOpaqueBlob& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchKeyedOpaqueBlob_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchKeyedOpaqueBlob"; }
};

class DistributedVirtualSwitchManagerCompatibilityResult_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchManagerCompatibilityResult _obj;
public:
	DistributedVirtualSwitchManagerCompatibilityResult_closure(const vw1__DistributedVirtualSwitchManagerCompatibilityResult& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchManagerCompatibilityResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchManagerCompatibilityResult"; }
};

class DistributedVirtualSwitchManagerDvsProductSpec_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchManagerDvsProductSpec _obj;
public:
	DistributedVirtualSwitchManagerDvsProductSpec_closure(const vw1__DistributedVirtualSwitchManagerDvsProductSpec& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchManagerDvsProductSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchManagerDvsProductSpec"; }
};

class DistributedVirtualSwitchManagerHostArrayFilter_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchManagerHostArrayFilter _obj;
public:
	DistributedVirtualSwitchManagerHostArrayFilter_closure(const vw1__DistributedVirtualSwitchManagerHostArrayFilter& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchManagerHostArrayFilter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchManagerHostArrayFilter"; }
};

class DistributedVirtualSwitchManagerHostContainer_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchManagerHostContainer _obj;
public:
	DistributedVirtualSwitchManagerHostContainer_closure(const vw1__DistributedVirtualSwitchManagerHostContainer& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchManagerHostContainer_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchManagerHostContainer"; }
};

class DistributedVirtualSwitchManagerHostContainerFilter_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchManagerHostContainerFilter _obj;
public:
	DistributedVirtualSwitchManagerHostContainerFilter_closure(const vw1__DistributedVirtualSwitchManagerHostContainerFilter& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchManagerHostContainerFilter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchManagerHostContainerFilter"; }
};

class DistributedVirtualSwitchManagerHostDvsFilterSpec_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchManagerHostDvsFilterSpec _obj;
public:
	DistributedVirtualSwitchManagerHostDvsFilterSpec_closure(const vw1__DistributedVirtualSwitchManagerHostDvsFilterSpec& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchManagerHostDvsFilterSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchManagerHostDvsFilterSpec"; }
};

class DistributedVirtualSwitchManagerHostDvsMembershipFilter_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchManagerHostDvsMembershipFilter _obj;
public:
	DistributedVirtualSwitchManagerHostDvsMembershipFilter_closure(const vw1__DistributedVirtualSwitchManagerHostDvsMembershipFilter& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchManagerHostDvsMembershipFilter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchManagerHostDvsMembershipFilter"; }
};

class DistributedVirtualSwitchPortConnectee_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchPortConnectee _obj;
public:
	DistributedVirtualSwitchPortConnectee_closure(const vw1__DistributedVirtualSwitchPortConnectee& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchPortConnectee_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchPortConnectee"; }
};

class DistributedVirtualSwitchPortConnection_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchPortConnection _obj;
public:
	DistributedVirtualSwitchPortConnection_closure(const vw1__DistributedVirtualSwitchPortConnection& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchPortConnection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchPortConnection"; }
};

class DistributedVirtualSwitchPortCriteria_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchPortCriteria _obj;
public:
	DistributedVirtualSwitchPortCriteria_closure(const vw1__DistributedVirtualSwitchPortCriteria& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchPortCriteria_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchPortCriteria"; }
};

class DistributedVirtualSwitchPortStatistics_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchPortStatistics _obj;
public:
	DistributedVirtualSwitchPortStatistics_closure(const vw1__DistributedVirtualSwitchPortStatistics& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchPortStatistics_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchPortStatistics"; }
};

class DistributedVirtualSwitchProductSpec_closure : public closure
{
protected:
	vw1__DistributedVirtualSwitchProductSpec _obj;
public:
	DistributedVirtualSwitchProductSpec_closure(const vw1__DistributedVirtualSwitchProductSpec& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchProductSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchProductSpec"; }
};

class DrsDisabledEvent_closure : public closure
{
protected:
	vw1__DrsDisabledEvent _obj;
public:
	DrsDisabledEvent_closure(const vw1__DrsDisabledEvent& obj) : _obj(obj) {}
	virtual ~DrsDisabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsDisabledEvent"; }
};

class DrsEnabledEvent_closure : public closure
{
protected:
	vw1__DrsEnabledEvent _obj;
public:
	DrsEnabledEvent_closure(const vw1__DrsEnabledEvent& obj) : _obj(obj) {}
	virtual ~DrsEnabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsEnabledEvent"; }
};

class DrsEnteredStandbyModeEvent_closure : public closure
{
protected:
	vw1__DrsEnteredStandbyModeEvent _obj;
public:
	DrsEnteredStandbyModeEvent_closure(const vw1__DrsEnteredStandbyModeEvent& obj) : _obj(obj) {}
	virtual ~DrsEnteredStandbyModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsEnteredStandbyModeEvent"; }
};

class DrsEnteringStandbyModeEvent_closure : public closure
{
protected:
	vw1__DrsEnteringStandbyModeEvent _obj;
public:
	DrsEnteringStandbyModeEvent_closure(const vw1__DrsEnteringStandbyModeEvent& obj) : _obj(obj) {}
	virtual ~DrsEnteringStandbyModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsEnteringStandbyModeEvent"; }
};

class DrsExitStandbyModeFailedEvent_closure : public closure
{
protected:
	vw1__DrsExitStandbyModeFailedEvent _obj;
public:
	DrsExitStandbyModeFailedEvent_closure(const vw1__DrsExitStandbyModeFailedEvent& obj) : _obj(obj) {}
	virtual ~DrsExitStandbyModeFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsExitStandbyModeFailedEvent"; }
};

class DrsExitedStandbyModeEvent_closure : public closure
{
protected:
	vw1__DrsExitedStandbyModeEvent _obj;
public:
	DrsExitedStandbyModeEvent_closure(const vw1__DrsExitedStandbyModeEvent& obj) : _obj(obj) {}
	virtual ~DrsExitedStandbyModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsExitedStandbyModeEvent"; }
};

class DrsExitingStandbyModeEvent_closure : public closure
{
protected:
	vw1__DrsExitingStandbyModeEvent _obj;
public:
	DrsExitingStandbyModeEvent_closure(const vw1__DrsExitingStandbyModeEvent& obj) : _obj(obj) {}
	virtual ~DrsExitingStandbyModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsExitingStandbyModeEvent"; }
};

class DrsInvocationFailedEvent_closure : public closure
{
protected:
	vw1__DrsInvocationFailedEvent _obj;
public:
	DrsInvocationFailedEvent_closure(const vw1__DrsInvocationFailedEvent& obj) : _obj(obj) {}
	virtual ~DrsInvocationFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsInvocationFailedEvent"; }
};

class DrsRecoveredFromFailureEvent_closure : public closure
{
protected:
	vw1__DrsRecoveredFromFailureEvent _obj;
public:
	DrsRecoveredFromFailureEvent_closure(const vw1__DrsRecoveredFromFailureEvent& obj) : _obj(obj) {}
	virtual ~DrsRecoveredFromFailureEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsRecoveredFromFailureEvent"; }
};

class DrsResourceConfigureFailedEvent_closure : public closure
{
protected:
	vw1__DrsResourceConfigureFailedEvent _obj;
public:
	DrsResourceConfigureFailedEvent_closure(const vw1__DrsResourceConfigureFailedEvent& obj) : _obj(obj) {}
	virtual ~DrsResourceConfigureFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsResourceConfigureFailedEvent"; }
};

class DrsResourceConfigureSyncedEvent_closure : public closure
{
protected:
	vw1__DrsResourceConfigureSyncedEvent _obj;
public:
	DrsResourceConfigureSyncedEvent_closure(const vw1__DrsResourceConfigureSyncedEvent& obj) : _obj(obj) {}
	virtual ~DrsResourceConfigureSyncedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsResourceConfigureSyncedEvent"; }
};

class DrsRuleComplianceEvent_closure : public closure
{
protected:
	vw1__DrsRuleComplianceEvent _obj;
public:
	DrsRuleComplianceEvent_closure(const vw1__DrsRuleComplianceEvent& obj) : _obj(obj) {}
	virtual ~DrsRuleComplianceEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsRuleComplianceEvent"; }
};

class DrsRuleViolationEvent_closure : public closure
{
protected:
	vw1__DrsRuleViolationEvent _obj;
public:
	DrsRuleViolationEvent_closure(const vw1__DrsRuleViolationEvent& obj) : _obj(obj) {}
	virtual ~DrsRuleViolationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsRuleViolationEvent"; }
};

class DrsVmMigratedEvent_closure : public closure
{
protected:
	vw1__DrsVmMigratedEvent _obj;
public:
	DrsVmMigratedEvent_closure(const vw1__DrsVmMigratedEvent& obj) : _obj(obj) {}
	virtual ~DrsVmMigratedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsVmMigratedEvent"; }
};

class DrsVmPoweredOnEvent_closure : public closure
{
protected:
	vw1__DrsVmPoweredOnEvent _obj;
public:
	DrsVmPoweredOnEvent_closure(const vw1__DrsVmPoweredOnEvent& obj) : _obj(obj) {}
	virtual ~DrsVmPoweredOnEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsVmPoweredOnEvent"; }
};

class DuplicateIpDetectedEvent_closure : public closure
{
protected:
	vw1__DuplicateIpDetectedEvent _obj;
public:
	DuplicateIpDetectedEvent_closure(const vw1__DuplicateIpDetectedEvent& obj) : _obj(obj) {}
	virtual ~DuplicateIpDetectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DuplicateIpDetectedEvent"; }
};

class DvsCreatedEvent_closure : public closure
{
protected:
	vw1__DvsCreatedEvent _obj;
public:
	DvsCreatedEvent_closure(const vw1__DvsCreatedEvent& obj) : _obj(obj) {}
	virtual ~DvsCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsCreatedEvent"; }
};

class DvsDestroyedEvent_closure : public closure
{
protected:
	vw1__DvsDestroyedEvent _obj;
public:
	DvsDestroyedEvent_closure(const vw1__DvsDestroyedEvent& obj) : _obj(obj) {}
	virtual ~DvsDestroyedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsDestroyedEvent"; }
};

class DvsEvent_closure : public closure
{
protected:
	vw1__DvsEvent _obj;
public:
	DvsEvent_closure(const vw1__DvsEvent& obj) : _obj(obj) {}
	virtual ~DvsEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsEvent"; }
};

class DvsEventArgument_closure : public closure
{
protected:
	vw1__DvsEventArgument _obj;
public:
	DvsEventArgument_closure(const vw1__DvsEventArgument& obj) : _obj(obj) {}
	virtual ~DvsEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsEventArgument"; }
};

class DvsHostBackInSyncEvent_closure : public closure
{
protected:
	vw1__DvsHostBackInSyncEvent _obj;
public:
	DvsHostBackInSyncEvent_closure(const vw1__DvsHostBackInSyncEvent& obj) : _obj(obj) {}
	virtual ~DvsHostBackInSyncEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsHostBackInSyncEvent"; }
};

class DvsHostJoinedEvent_closure : public closure
{
protected:
	vw1__DvsHostJoinedEvent _obj;
public:
	DvsHostJoinedEvent_closure(const vw1__DvsHostJoinedEvent& obj) : _obj(obj) {}
	virtual ~DvsHostJoinedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsHostJoinedEvent"; }
};

class DvsHostLeftEvent_closure : public closure
{
protected:
	vw1__DvsHostLeftEvent _obj;
public:
	DvsHostLeftEvent_closure(const vw1__DvsHostLeftEvent& obj) : _obj(obj) {}
	virtual ~DvsHostLeftEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsHostLeftEvent"; }
};

class DvsHostStatusUpdated_closure : public closure
{
protected:
	vw1__DvsHostStatusUpdated _obj;
public:
	DvsHostStatusUpdated_closure(const vw1__DvsHostStatusUpdated& obj) : _obj(obj) {}
	virtual ~DvsHostStatusUpdated_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsHostStatusUpdated"; }
};

class DvsHostVNicProfile_closure : public closure
{
protected:
	vw1__DvsHostVNicProfile _obj;
public:
	DvsHostVNicProfile_closure(const vw1__DvsHostVNicProfile& obj) : _obj(obj) {}
	virtual ~DvsHostVNicProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsHostVNicProfile"; }
};

class DvsHostWentOutOfSyncEvent_closure : public closure
{
protected:
	vw1__DvsHostWentOutOfSyncEvent _obj;
public:
	DvsHostWentOutOfSyncEvent_closure(const vw1__DvsHostWentOutOfSyncEvent& obj) : _obj(obj) {}
	virtual ~DvsHostWentOutOfSyncEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsHostWentOutOfSyncEvent"; }
};

class DvsMergedEvent_closure : public closure
{
protected:
	vw1__DvsMergedEvent _obj;
public:
	DvsMergedEvent_closure(const vw1__DvsMergedEvent& obj) : _obj(obj) {}
	virtual ~DvsMergedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsMergedEvent"; }
};

class DvsOperationBulkFaultFaultOnHost_closure : public closure
{
protected:
	vw1__DvsOperationBulkFaultFaultOnHost _obj;
public:
	DvsOperationBulkFaultFaultOnHost_closure(const vw1__DvsOperationBulkFaultFaultOnHost& obj) : _obj(obj) {}
	virtual ~DvsOperationBulkFaultFaultOnHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsOperationBulkFaultFaultOnHost"; }
};

class DvsOutOfSyncHostArgument_closure : public closure
{
protected:
	vw1__DvsOutOfSyncHostArgument _obj;
public:
	DvsOutOfSyncHostArgument_closure(const vw1__DvsOutOfSyncHostArgument& obj) : _obj(obj) {}
	virtual ~DvsOutOfSyncHostArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsOutOfSyncHostArgument"; }
};

class DvsPortBlockedEvent_closure : public closure
{
protected:
	vw1__DvsPortBlockedEvent _obj;
public:
	DvsPortBlockedEvent_closure(const vw1__DvsPortBlockedEvent& obj) : _obj(obj) {}
	virtual ~DvsPortBlockedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortBlockedEvent"; }
};

class DvsPortConnectedEvent_closure : public closure
{
protected:
	vw1__DvsPortConnectedEvent _obj;
public:
	DvsPortConnectedEvent_closure(const vw1__DvsPortConnectedEvent& obj) : _obj(obj) {}
	virtual ~DvsPortConnectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortConnectedEvent"; }
};

class DvsPortCreatedEvent_closure : public closure
{
protected:
	vw1__DvsPortCreatedEvent _obj;
public:
	DvsPortCreatedEvent_closure(const vw1__DvsPortCreatedEvent& obj) : _obj(obj) {}
	virtual ~DvsPortCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortCreatedEvent"; }
};

class DvsPortDeletedEvent_closure : public closure
{
protected:
	vw1__DvsPortDeletedEvent _obj;
public:
	DvsPortDeletedEvent_closure(const vw1__DvsPortDeletedEvent& obj) : _obj(obj) {}
	virtual ~DvsPortDeletedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortDeletedEvent"; }
};

class DvsPortDisconnectedEvent_closure : public closure
{
protected:
	vw1__DvsPortDisconnectedEvent _obj;
public:
	DvsPortDisconnectedEvent_closure(const vw1__DvsPortDisconnectedEvent& obj) : _obj(obj) {}
	virtual ~DvsPortDisconnectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortDisconnectedEvent"; }
};

class DvsPortEnteredPassthruEvent_closure : public closure
{
protected:
	vw1__DvsPortEnteredPassthruEvent _obj;
public:
	DvsPortEnteredPassthruEvent_closure(const vw1__DvsPortEnteredPassthruEvent& obj) : _obj(obj) {}
	virtual ~DvsPortEnteredPassthruEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortEnteredPassthruEvent"; }
};

class DvsPortExitedPassthruEvent_closure : public closure
{
protected:
	vw1__DvsPortExitedPassthruEvent _obj;
public:
	DvsPortExitedPassthruEvent_closure(const vw1__DvsPortExitedPassthruEvent& obj) : _obj(obj) {}
	virtual ~DvsPortExitedPassthruEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortExitedPassthruEvent"; }
};

class DvsPortJoinPortgroupEvent_closure : public closure
{
protected:
	vw1__DvsPortJoinPortgroupEvent _obj;
public:
	DvsPortJoinPortgroupEvent_closure(const vw1__DvsPortJoinPortgroupEvent& obj) : _obj(obj) {}
	virtual ~DvsPortJoinPortgroupEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortJoinPortgroupEvent"; }
};

class DvsPortLeavePortgroupEvent_closure : public closure
{
protected:
	vw1__DvsPortLeavePortgroupEvent _obj;
public:
	DvsPortLeavePortgroupEvent_closure(const vw1__DvsPortLeavePortgroupEvent& obj) : _obj(obj) {}
	virtual ~DvsPortLeavePortgroupEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortLeavePortgroupEvent"; }
};

class DvsPortLinkDownEvent_closure : public closure
{
protected:
	vw1__DvsPortLinkDownEvent _obj;
public:
	DvsPortLinkDownEvent_closure(const vw1__DvsPortLinkDownEvent& obj) : _obj(obj) {}
	virtual ~DvsPortLinkDownEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortLinkDownEvent"; }
};

class DvsPortLinkUpEvent_closure : public closure
{
protected:
	vw1__DvsPortLinkUpEvent _obj;
public:
	DvsPortLinkUpEvent_closure(const vw1__DvsPortLinkUpEvent& obj) : _obj(obj) {}
	virtual ~DvsPortLinkUpEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortLinkUpEvent"; }
};

class DvsPortReconfiguredEvent_closure : public closure
{
protected:
	vw1__DvsPortReconfiguredEvent _obj;
public:
	DvsPortReconfiguredEvent_closure(const vw1__DvsPortReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~DvsPortReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortReconfiguredEvent"; }
};

class DvsPortUnblockedEvent_closure : public closure
{
protected:
	vw1__DvsPortUnblockedEvent _obj;
public:
	DvsPortUnblockedEvent_closure(const vw1__DvsPortUnblockedEvent& obj) : _obj(obj) {}
	virtual ~DvsPortUnblockedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsPortUnblockedEvent"; }
};

class DvsProfile_closure : public closure
{
protected:
	vw1__DvsProfile _obj;
public:
	DvsProfile_closure(const vw1__DvsProfile& obj) : _obj(obj) {}
	virtual ~DvsProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsProfile"; }
};

class DvsReconfiguredEvent_closure : public closure
{
protected:
	vw1__DvsReconfiguredEvent _obj;
public:
	DvsReconfiguredEvent_closure(const vw1__DvsReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~DvsReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsReconfiguredEvent"; }
};

class DvsRenamedEvent_closure : public closure
{
protected:
	vw1__DvsRenamedEvent _obj;
public:
	DvsRenamedEvent_closure(const vw1__DvsRenamedEvent& obj) : _obj(obj) {}
	virtual ~DvsRenamedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsRenamedEvent"; }
};

class DvsServiceConsoleVNicProfile_closure : public closure
{
protected:
	vw1__DvsServiceConsoleVNicProfile _obj;
public:
	DvsServiceConsoleVNicProfile_closure(const vw1__DvsServiceConsoleVNicProfile& obj) : _obj(obj) {}
	virtual ~DvsServiceConsoleVNicProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsServiceConsoleVNicProfile"; }
};

class DvsUpgradeAvailableEvent_closure : public closure
{
protected:
	vw1__DvsUpgradeAvailableEvent _obj;
public:
	DvsUpgradeAvailableEvent_closure(const vw1__DvsUpgradeAvailableEvent& obj) : _obj(obj) {}
	virtual ~DvsUpgradeAvailableEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsUpgradeAvailableEvent"; }
};

class DvsUpgradeInProgressEvent_closure : public closure
{
protected:
	vw1__DvsUpgradeInProgressEvent _obj;
public:
	DvsUpgradeInProgressEvent_closure(const vw1__DvsUpgradeInProgressEvent& obj) : _obj(obj) {}
	virtual ~DvsUpgradeInProgressEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsUpgradeInProgressEvent"; }
};

class DvsUpgradeRejectedEvent_closure : public closure
{
protected:
	vw1__DvsUpgradeRejectedEvent _obj;
public:
	DvsUpgradeRejectedEvent_closure(const vw1__DvsUpgradeRejectedEvent& obj) : _obj(obj) {}
	virtual ~DvsUpgradeRejectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsUpgradeRejectedEvent"; }
};

class DvsUpgradedEvent_closure : public closure
{
protected:
	vw1__DvsUpgradedEvent _obj;
public:
	DvsUpgradedEvent_closure(const vw1__DvsUpgradedEvent& obj) : _obj(obj) {}
	virtual ~DvsUpgradedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsUpgradedEvent"; }
};

class DvsVNicProfile_closure : public closure
{
protected:
	vw1__DvsVNicProfile _obj;
public:
	DvsVNicProfile_closure(const vw1__DvsVNicProfile& obj) : _obj(obj) {}
	virtual ~DvsVNicProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsVNicProfile"; }
};

class DynamicArray_closure : public closure
{
protected:
	vw1__DynamicArray _obj;
public:
	DynamicArray_closure(const vw1__DynamicArray& obj) : _obj(obj) {}
	virtual ~DynamicArray_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DynamicArray"; }
};

class DynamicData_closure : public closure
{
protected:
	vw1__DynamicData _obj;
public:
	DynamicData_closure(const vw1__DynamicData& obj) : _obj(obj) {}
	virtual ~DynamicData_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DynamicData"; }
};

class DynamicProperty_closure : public closure
{
protected:
	vw1__DynamicProperty _obj;
public:
	DynamicProperty_closure(const vw1__DynamicProperty& obj) : _obj(obj) {}
	virtual ~DynamicProperty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DynamicProperty"; }
};

class EVCMode_closure : public closure
{
protected:
	vw1__EVCMode _obj;
public:
	EVCMode_closure(const vw1__EVCMode& obj) : _obj(obj) {}
	virtual ~EVCMode_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCMode"; }
};

class ElementDescription_closure : public closure
{
protected:
	vw1__ElementDescription _obj;
public:
	ElementDescription_closure(const vw1__ElementDescription& obj) : _obj(obj) {}
	virtual ~ElementDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ElementDescription"; }
};

class EnteredMaintenanceModeEvent_closure : public closure
{
protected:
	vw1__EnteredMaintenanceModeEvent _obj;
public:
	EnteredMaintenanceModeEvent_closure(const vw1__EnteredMaintenanceModeEvent& obj) : _obj(obj) {}
	virtual ~EnteredMaintenanceModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EnteredMaintenanceModeEvent"; }
};

class EnteredStandbyModeEvent_closure : public closure
{
protected:
	vw1__EnteredStandbyModeEvent _obj;
public:
	EnteredStandbyModeEvent_closure(const vw1__EnteredStandbyModeEvent& obj) : _obj(obj) {}
	virtual ~EnteredStandbyModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EnteredStandbyModeEvent"; }
};

class EnteringMaintenanceModeEvent_closure : public closure
{
protected:
	vw1__EnteringMaintenanceModeEvent _obj;
public:
	EnteringMaintenanceModeEvent_closure(const vw1__EnteringMaintenanceModeEvent& obj) : _obj(obj) {}
	virtual ~EnteringMaintenanceModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EnteringMaintenanceModeEvent"; }
};

class EnteringStandbyModeEvent_closure : public closure
{
protected:
	vw1__EnteringStandbyModeEvent _obj;
public:
	EnteringStandbyModeEvent_closure(const vw1__EnteringStandbyModeEvent& obj) : _obj(obj) {}
	virtual ~EnteringStandbyModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EnteringStandbyModeEvent"; }
};

class EntityEventArgument_closure : public closure
{
protected:
	vw1__EntityEventArgument _obj;
public:
	EntityEventArgument_closure(const vw1__EntityEventArgument& obj) : _obj(obj) {}
	virtual ~EntityEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EntityEventArgument"; }
};

class EnumDescription_closure : public closure
{
protected:
	vw1__EnumDescription _obj;
public:
	EnumDescription_closure(const vw1__EnumDescription& obj) : _obj(obj) {}
	virtual ~EnumDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EnumDescription"; }
};

class ErrorUpgradeEvent_closure : public closure
{
protected:
	vw1__ErrorUpgradeEvent _obj;
public:
	ErrorUpgradeEvent_closure(const vw1__ErrorUpgradeEvent& obj) : _obj(obj) {}
	virtual ~ErrorUpgradeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ErrorUpgradeEvent"; }
};

class EvaluationLicenseSource_closure : public closure
{
protected:
	vw1__EvaluationLicenseSource _obj;
public:
	EvaluationLicenseSource_closure(const vw1__EvaluationLicenseSource& obj) : _obj(obj) {}
	virtual ~EvaluationLicenseSource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EvaluationLicenseSource"; }
};

class Event_closure : public closure
{
protected:
	vw1__Event _obj;
public:
	Event_closure(const vw1__Event& obj) : _obj(obj) {}
	virtual ~Event_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Event"; }
};

class EventAlarmExpression_closure : public closure
{
protected:
	vw1__EventAlarmExpression _obj;
public:
	EventAlarmExpression_closure(const vw1__EventAlarmExpression& obj) : _obj(obj) {}
	virtual ~EventAlarmExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventAlarmExpression"; }
};

class EventAlarmExpressionComparison_closure : public closure
{
protected:
	vw1__EventAlarmExpressionComparison _obj;
public:
	EventAlarmExpressionComparison_closure(const vw1__EventAlarmExpressionComparison& obj) : _obj(obj) {}
	virtual ~EventAlarmExpressionComparison_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventAlarmExpressionComparison"; }
};

class EventArgDesc_closure : public closure
{
protected:
	vw1__EventArgDesc _obj;
public:
	EventArgDesc_closure(const vw1__EventArgDesc& obj) : _obj(obj) {}
	virtual ~EventArgDesc_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventArgDesc"; }
};

class EventArgument_closure : public closure
{
protected:
	vw1__EventArgument _obj;
public:
	EventArgument_closure(const vw1__EventArgument& obj) : _obj(obj) {}
	virtual ~EventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventArgument"; }
};

class EventDescription_closure : public closure
{
protected:
	vw1__EventDescription _obj;
public:
	EventDescription_closure(const vw1__EventDescription& obj) : _obj(obj) {}
	virtual ~EventDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventDescription"; }
};

class EventDescriptionEventDetail_closure : public closure
{
protected:
	vw1__EventDescriptionEventDetail _obj;
public:
	EventDescriptionEventDetail_closure(const vw1__EventDescriptionEventDetail& obj) : _obj(obj) {}
	virtual ~EventDescriptionEventDetail_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventDescriptionEventDetail"; }
};

class EventEx_closure : public closure
{
protected:
	vw1__EventEx _obj;
public:
	EventEx_closure(const vw1__EventEx& obj) : _obj(obj) {}
	virtual ~EventEx_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventEx"; }
};

class EventFilterSpec_closure : public closure
{
protected:
	vw1__EventFilterSpec _obj;
public:
	EventFilterSpec_closure(const vw1__EventFilterSpec& obj) : _obj(obj) {}
	virtual ~EventFilterSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventFilterSpec"; }
};

class EventFilterSpecByEntity_closure : public closure
{
protected:
	vw1__EventFilterSpecByEntity _obj;
public:
	EventFilterSpecByEntity_closure(const vw1__EventFilterSpecByEntity& obj) : _obj(obj) {}
	virtual ~EventFilterSpecByEntity_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventFilterSpecByEntity"; }
};

class EventFilterSpecByTime_closure : public closure
{
protected:
	vw1__EventFilterSpecByTime _obj;
public:
	EventFilterSpecByTime_closure(const vw1__EventFilterSpecByTime& obj) : _obj(obj) {}
	virtual ~EventFilterSpecByTime_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventFilterSpecByTime"; }
};

class EventFilterSpecByUsername_closure : public closure
{
protected:
	vw1__EventFilterSpecByUsername _obj;
public:
	EventFilterSpecByUsername_closure(const vw1__EventFilterSpecByUsername& obj) : _obj(obj) {}
	virtual ~EventFilterSpecByUsername_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventFilterSpecByUsername"; }
};

class ExitMaintenanceModeEvent_closure : public closure
{
protected:
	vw1__ExitMaintenanceModeEvent _obj;
public:
	ExitMaintenanceModeEvent_closure(const vw1__ExitMaintenanceModeEvent& obj) : _obj(obj) {}
	virtual ~ExitMaintenanceModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExitMaintenanceModeEvent"; }
};

class ExitStandbyModeFailedEvent_closure : public closure
{
protected:
	vw1__ExitStandbyModeFailedEvent _obj;
public:
	ExitStandbyModeFailedEvent_closure(const vw1__ExitStandbyModeFailedEvent& obj) : _obj(obj) {}
	virtual ~ExitStandbyModeFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExitStandbyModeFailedEvent"; }
};

class ExitedStandbyModeEvent_closure : public closure
{
protected:
	vw1__ExitedStandbyModeEvent _obj;
public:
	ExitedStandbyModeEvent_closure(const vw1__ExitedStandbyModeEvent& obj) : _obj(obj) {}
	virtual ~ExitedStandbyModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExitedStandbyModeEvent"; }
};

class ExitingStandbyModeEvent_closure : public closure
{
protected:
	vw1__ExitingStandbyModeEvent _obj;
public:
	ExitingStandbyModeEvent_closure(const vw1__ExitingStandbyModeEvent& obj) : _obj(obj) {}
	virtual ~ExitingStandbyModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExitingStandbyModeEvent"; }
};

class ExtExtendedProductInfo_closure : public closure
{
protected:
	vw1__ExtExtendedProductInfo _obj;
public:
	ExtExtendedProductInfo_closure(const vw1__ExtExtendedProductInfo& obj) : _obj(obj) {}
	virtual ~ExtExtendedProductInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtExtendedProductInfo"; }
};

class ExtManagedEntityInfo_closure : public closure
{
protected:
	vw1__ExtManagedEntityInfo _obj;
public:
	ExtManagedEntityInfo_closure(const vw1__ExtManagedEntityInfo& obj) : _obj(obj) {}
	virtual ~ExtManagedEntityInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtManagedEntityInfo"; }
};

class ExtSolutionManagerInfo_closure : public closure
{
protected:
	vw1__ExtSolutionManagerInfo _obj;
public:
	ExtSolutionManagerInfo_closure(const vw1__ExtSolutionManagerInfo& obj) : _obj(obj) {}
	virtual ~ExtSolutionManagerInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtSolutionManagerInfo"; }
};

class ExtSolutionManagerInfoTabInfo_closure : public closure
{
protected:
	vw1__ExtSolutionManagerInfoTabInfo _obj;
public:
	ExtSolutionManagerInfoTabInfo_closure(const vw1__ExtSolutionManagerInfoTabInfo& obj) : _obj(obj) {}
	virtual ~ExtSolutionManagerInfoTabInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtSolutionManagerInfoTabInfo"; }
};

class ExtendedDescription_closure : public closure
{
protected:
	vw1__ExtendedDescription _obj;
public:
	ExtendedDescription_closure(const vw1__ExtendedDescription& obj) : _obj(obj) {}
	virtual ~ExtendedDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtendedDescription"; }
};

class ExtendedElementDescription_closure : public closure
{
protected:
	vw1__ExtendedElementDescription _obj;
public:
	ExtendedElementDescription_closure(const vw1__ExtendedElementDescription& obj) : _obj(obj) {}
	virtual ~ExtendedElementDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtendedElementDescription"; }
};

class ExtendedEvent_closure : public closure
{
protected:
	vw1__ExtendedEvent _obj;
public:
	ExtendedEvent_closure(const vw1__ExtendedEvent& obj) : _obj(obj) {}
	virtual ~ExtendedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtendedEvent"; }
};

class ExtendedEventPair_closure : public closure
{
protected:
	vw1__ExtendedEventPair _obj;
public:
	ExtendedEventPair_closure(const vw1__ExtendedEventPair& obj) : _obj(obj) {}
	virtual ~ExtendedEventPair_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtendedEventPair"; }
};

class Extension_closure : public closure
{
protected:
	vw1__Extension _obj;
public:
	Extension_closure(const vw1__Extension& obj) : _obj(obj) {}
	virtual ~Extension_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Extension"; }
};

class ExtensionClientInfo_closure : public closure
{
protected:
	vw1__ExtensionClientInfo _obj;
public:
	ExtensionClientInfo_closure(const vw1__ExtensionClientInfo& obj) : _obj(obj) {}
	virtual ~ExtensionClientInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionClientInfo"; }
};

class ExtensionEventTypeInfo_closure : public closure
{
protected:
	vw1__ExtensionEventTypeInfo _obj;
public:
	ExtensionEventTypeInfo_closure(const vw1__ExtensionEventTypeInfo& obj) : _obj(obj) {}
	virtual ~ExtensionEventTypeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionEventTypeInfo"; }
};

class ExtensionFaultTypeInfo_closure : public closure
{
protected:
	vw1__ExtensionFaultTypeInfo _obj;
public:
	ExtensionFaultTypeInfo_closure(const vw1__ExtensionFaultTypeInfo& obj) : _obj(obj) {}
	virtual ~ExtensionFaultTypeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionFaultTypeInfo"; }
};

class ExtensionHealthInfo_closure : public closure
{
protected:
	vw1__ExtensionHealthInfo _obj;
public:
	ExtensionHealthInfo_closure(const vw1__ExtensionHealthInfo& obj) : _obj(obj) {}
	virtual ~ExtensionHealthInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionHealthInfo"; }
};

class ExtensionOvfConsumerInfo_closure : public closure
{
protected:
	vw1__ExtensionOvfConsumerInfo _obj;
public:
	ExtensionOvfConsumerInfo_closure(const vw1__ExtensionOvfConsumerInfo& obj) : _obj(obj) {}
	virtual ~ExtensionOvfConsumerInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionOvfConsumerInfo"; }
};

class ExtensionPrivilegeInfo_closure : public closure
{
protected:
	vw1__ExtensionPrivilegeInfo _obj;
public:
	ExtensionPrivilegeInfo_closure(const vw1__ExtensionPrivilegeInfo& obj) : _obj(obj) {}
	virtual ~ExtensionPrivilegeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionPrivilegeInfo"; }
};

class ExtensionResourceInfo_closure : public closure
{
protected:
	vw1__ExtensionResourceInfo _obj;
public:
	ExtensionResourceInfo_closure(const vw1__ExtensionResourceInfo& obj) : _obj(obj) {}
	virtual ~ExtensionResourceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionResourceInfo"; }
};

class ExtensionServerInfo_closure : public closure
{
protected:
	vw1__ExtensionServerInfo _obj;
public:
	ExtensionServerInfo_closure(const vw1__ExtensionServerInfo& obj) : _obj(obj) {}
	virtual ~ExtensionServerInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionServerInfo"; }
};

class ExtensionTaskTypeInfo_closure : public closure
{
protected:
	vw1__ExtensionTaskTypeInfo _obj;
public:
	ExtensionTaskTypeInfo_closure(const vw1__ExtensionTaskTypeInfo& obj) : _obj(obj) {}
	virtual ~ExtensionTaskTypeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionTaskTypeInfo"; }
};

class FailoverLevelRestored_closure : public closure
{
protected:
	vw1__FailoverLevelRestored _obj;
public:
	FailoverLevelRestored_closure(const vw1__FailoverLevelRestored& obj) : _obj(obj) {}
	virtual ~FailoverLevelRestored_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FailoverLevelRestored"; }
};

class FaultToleranceConfigInfo_closure : public closure
{
protected:
	vw1__FaultToleranceConfigInfo _obj;
public:
	FaultToleranceConfigInfo_closure(const vw1__FaultToleranceConfigInfo& obj) : _obj(obj) {}
	virtual ~FaultToleranceConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceConfigInfo"; }
};

class FaultTolerancePrimaryConfigInfo_closure : public closure
{
protected:
	vw1__FaultTolerancePrimaryConfigInfo _obj;
public:
	FaultTolerancePrimaryConfigInfo_closure(const vw1__FaultTolerancePrimaryConfigInfo& obj) : _obj(obj) {}
	virtual ~FaultTolerancePrimaryConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultTolerancePrimaryConfigInfo"; }
};

class FaultToleranceSecondaryConfigInfo_closure : public closure
{
protected:
	vw1__FaultToleranceSecondaryConfigInfo _obj;
public:
	FaultToleranceSecondaryConfigInfo_closure(const vw1__FaultToleranceSecondaryConfigInfo& obj) : _obj(obj) {}
	virtual ~FaultToleranceSecondaryConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceSecondaryConfigInfo"; }
};

class FaultToleranceSecondaryOpResult_closure : public closure
{
protected:
	vw1__FaultToleranceSecondaryOpResult _obj;
public:
	FaultToleranceSecondaryOpResult_closure(const vw1__FaultToleranceSecondaryOpResult& obj) : _obj(obj) {}
	virtual ~FaultToleranceSecondaryOpResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceSecondaryOpResult"; }
};

class FcoeConfig_closure : public closure
{
protected:
	vw1__FcoeConfig _obj;
public:
	FcoeConfig_closure(const vw1__FcoeConfig& obj) : _obj(obj) {}
	virtual ~FcoeConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FcoeConfig"; }
};

class FcoeConfigFcoeCapabilities_closure : public closure
{
protected:
	vw1__FcoeConfigFcoeCapabilities _obj;
public:
	FcoeConfigFcoeCapabilities_closure(const vw1__FcoeConfigFcoeCapabilities& obj) : _obj(obj) {}
	virtual ~FcoeConfigFcoeCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FcoeConfigFcoeCapabilities"; }
};

class FcoeConfigFcoeSpecification_closure : public closure
{
protected:
	vw1__FcoeConfigFcoeSpecification _obj;
public:
	FcoeConfigFcoeSpecification_closure(const vw1__FcoeConfigFcoeSpecification& obj) : _obj(obj) {}
	virtual ~FcoeConfigFcoeSpecification_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FcoeConfigFcoeSpecification"; }
};

class FcoeConfigVlanRange_closure : public closure
{
protected:
	vw1__FcoeConfigVlanRange _obj;
public:
	FcoeConfigVlanRange_closure(const vw1__FcoeConfigVlanRange& obj) : _obj(obj) {}
	virtual ~FcoeConfigVlanRange_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FcoeConfigVlanRange"; }
};

class FileBackedVirtualDiskSpec_closure : public closure
{
protected:
	vw1__FileBackedVirtualDiskSpec _obj;
public:
	FileBackedVirtualDiskSpec_closure(const vw1__FileBackedVirtualDiskSpec& obj) : _obj(obj) {}
	virtual ~FileBackedVirtualDiskSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileBackedVirtualDiskSpec"; }
};

class FileInfo_closure : public closure
{
protected:
	vw1__FileInfo _obj;
public:
	FileInfo_closure(const vw1__FileInfo& obj) : _obj(obj) {}
	virtual ~FileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileInfo"; }
};

class FileQuery_closure : public closure
{
protected:
	vw1__FileQuery _obj;
public:
	FileQuery_closure(const vw1__FileQuery& obj) : _obj(obj) {}
	virtual ~FileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileQuery"; }
};

class FileQueryFlags_closure : public closure
{
protected:
	vw1__FileQueryFlags _obj;
public:
	FileQueryFlags_closure(const vw1__FileQueryFlags& obj) : _obj(obj) {}
	virtual ~FileQueryFlags_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileQueryFlags"; }
};

class FileTransferInformation_closure : public closure
{
protected:
	vw1__FileTransferInformation _obj;
public:
	FileTransferInformation_closure(const vw1__FileTransferInformation& obj) : _obj(obj) {}
	virtual ~FileTransferInformation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileTransferInformation"; }
};

class FirewallProfile_closure : public closure
{
protected:
	vw1__FirewallProfile _obj;
public:
	FirewallProfile_closure(const vw1__FirewallProfile& obj) : _obj(obj) {}
	virtual ~FirewallProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FirewallProfile"; }
};

class FirewallProfileRulesetProfile_closure : public closure
{
protected:
	vw1__FirewallProfileRulesetProfile _obj;
public:
	FirewallProfileRulesetProfile_closure(const vw1__FirewallProfileRulesetProfile& obj) : _obj(obj) {}
	virtual ~FirewallProfileRulesetProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FirewallProfileRulesetProfile"; }
};

class FloatOption_closure : public closure
{
protected:
	vw1__FloatOption _obj;
public:
	FloatOption_closure(const vw1__FloatOption& obj) : _obj(obj) {}
	virtual ~FloatOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FloatOption"; }
};

class FloppyImageFileInfo_closure : public closure
{
protected:
	vw1__FloppyImageFileInfo _obj;
public:
	FloppyImageFileInfo_closure(const vw1__FloppyImageFileInfo& obj) : _obj(obj) {}
	virtual ~FloppyImageFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FloppyImageFileInfo"; }
};

class FloppyImageFileQuery_closure : public closure
{
protected:
	vw1__FloppyImageFileQuery _obj;
public:
	FloppyImageFileQuery_closure(const vw1__FloppyImageFileQuery& obj) : _obj(obj) {}
	virtual ~FloppyImageFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FloppyImageFileQuery"; }
};

class FolderEventArgument_closure : public closure
{
protected:
	vw1__FolderEventArgument _obj;
public:
	FolderEventArgument_closure(const vw1__FolderEventArgument& obj) : _obj(obj) {}
	virtual ~FolderEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FolderEventArgument"; }
};

class FolderFileInfo_closure : public closure
{
protected:
	vw1__FolderFileInfo _obj;
public:
	FolderFileInfo_closure(const vw1__FolderFileInfo& obj) : _obj(obj) {}
	virtual ~FolderFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FolderFileInfo"; }
};

class FolderFileQuery_closure : public closure
{
protected:
	vw1__FolderFileQuery _obj;
public:
	FolderFileQuery_closure(const vw1__FolderFileQuery& obj) : _obj(obj) {}
	virtual ~FolderFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FolderFileQuery"; }
};

class GeneralEvent_closure : public closure
{
protected:
	vw1__GeneralEvent _obj;
public:
	GeneralEvent_closure(const vw1__GeneralEvent& obj) : _obj(obj) {}
	virtual ~GeneralEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GeneralEvent"; }
};

class GeneralHostErrorEvent_closure : public closure
{
protected:
	vw1__GeneralHostErrorEvent _obj;
public:
	GeneralHostErrorEvent_closure(const vw1__GeneralHostErrorEvent& obj) : _obj(obj) {}
	virtual ~GeneralHostErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GeneralHostErrorEvent"; }
};

class GeneralHostInfoEvent_closure : public closure
{
protected:
	vw1__GeneralHostInfoEvent _obj;
public:
	GeneralHostInfoEvent_closure(const vw1__GeneralHostInfoEvent& obj) : _obj(obj) {}
	virtual ~GeneralHostInfoEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GeneralHostInfoEvent"; }
};

class GeneralHostWarningEvent_closure : public closure
{
protected:
	vw1__GeneralHostWarningEvent _obj;
public:
	GeneralHostWarningEvent_closure(const vw1__GeneralHostWarningEvent& obj) : _obj(obj) {}
	virtual ~GeneralHostWarningEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GeneralHostWarningEvent"; }
};

class GeneralUserEvent_closure : public closure
{
protected:
	vw1__GeneralUserEvent _obj;
public:
	GeneralUserEvent_closure(const vw1__GeneralUserEvent& obj) : _obj(obj) {}
	virtual ~GeneralUserEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GeneralUserEvent"; }
};

class GeneralVmErrorEvent_closure : public closure
{
protected:
	vw1__GeneralVmErrorEvent _obj;
public:
	GeneralVmErrorEvent_closure(const vw1__GeneralVmErrorEvent& obj) : _obj(obj) {}
	virtual ~GeneralVmErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GeneralVmErrorEvent"; }
};

class GeneralVmInfoEvent_closure : public closure
{
protected:
	vw1__GeneralVmInfoEvent _obj;
public:
	GeneralVmInfoEvent_closure(const vw1__GeneralVmInfoEvent& obj) : _obj(obj) {}
	virtual ~GeneralVmInfoEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GeneralVmInfoEvent"; }
};

class GeneralVmWarningEvent_closure : public closure
{
protected:
	vw1__GeneralVmWarningEvent _obj;
public:
	GeneralVmWarningEvent_closure(const vw1__GeneralVmWarningEvent& obj) : _obj(obj) {}
	virtual ~GeneralVmWarningEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GeneralVmWarningEvent"; }
};

class GhostDvsProxySwitchDetectedEvent_closure : public closure
{
protected:
	vw1__GhostDvsProxySwitchDetectedEvent _obj;
public:
	GhostDvsProxySwitchDetectedEvent_closure(const vw1__GhostDvsProxySwitchDetectedEvent& obj) : _obj(obj) {}
	virtual ~GhostDvsProxySwitchDetectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GhostDvsProxySwitchDetectedEvent"; }
};

class GhostDvsProxySwitchRemovedEvent_closure : public closure
{
protected:
	vw1__GhostDvsProxySwitchRemovedEvent _obj;
public:
	GhostDvsProxySwitchRemovedEvent_closure(const vw1__GhostDvsProxySwitchRemovedEvent& obj) : _obj(obj) {}
	virtual ~GhostDvsProxySwitchRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GhostDvsProxySwitchRemovedEvent"; }
};

class GlobalMessageChangedEvent_closure : public closure
{
protected:
	vw1__GlobalMessageChangedEvent _obj;
public:
	GlobalMessageChangedEvent_closure(const vw1__GlobalMessageChangedEvent& obj) : _obj(obj) {}
	virtual ~GlobalMessageChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GlobalMessageChangedEvent"; }
};

class GroupAlarmAction_closure : public closure
{
protected:
	vw1__GroupAlarmAction _obj;
public:
	GroupAlarmAction_closure(const vw1__GroupAlarmAction& obj) : _obj(obj) {}
	virtual ~GroupAlarmAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GroupAlarmAction"; }
};

class GuestAuthentication_closure : public closure
{
protected:
	vw1__GuestAuthentication _obj;
public:
	GuestAuthentication_closure(const vw1__GuestAuthentication& obj) : _obj(obj) {}
	virtual ~GuestAuthentication_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestAuthentication"; }
};

class GuestDiskInfo_closure : public closure
{
protected:
	vw1__GuestDiskInfo _obj;
public:
	GuestDiskInfo_closure(const vw1__GuestDiskInfo& obj) : _obj(obj) {}
	virtual ~GuestDiskInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestDiskInfo"; }
};

class GuestFileAttributes_closure : public closure
{
protected:
	vw1__GuestFileAttributes _obj;
public:
	GuestFileAttributes_closure(const vw1__GuestFileAttributes& obj) : _obj(obj) {}
	virtual ~GuestFileAttributes_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestFileAttributes"; }
};

class GuestFileInfo_closure : public closure
{
protected:
	vw1__GuestFileInfo _obj;
public:
	GuestFileInfo_closure(const vw1__GuestFileInfo& obj) : _obj(obj) {}
	virtual ~GuestFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestFileInfo"; }
};

class GuestInfo_closure : public closure
{
protected:
	vw1__GuestInfo _obj;
public:
	GuestInfo_closure(const vw1__GuestInfo& obj) : _obj(obj) {}
	virtual ~GuestInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestInfo"; }
};

class GuestListFileInfo_closure : public closure
{
protected:
	vw1__GuestListFileInfo _obj;
public:
	GuestListFileInfo_closure(const vw1__GuestListFileInfo& obj) : _obj(obj) {}
	virtual ~GuestListFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestListFileInfo"; }
};

class GuestNicInfo_closure : public closure
{
protected:
	vw1__GuestNicInfo _obj;
public:
	GuestNicInfo_closure(const vw1__GuestNicInfo& obj) : _obj(obj) {}
	virtual ~GuestNicInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestNicInfo"; }
};

class GuestOsDescriptor_closure : public closure
{
protected:
	vw1__GuestOsDescriptor _obj;
public:
	GuestOsDescriptor_closure(const vw1__GuestOsDescriptor& obj) : _obj(obj) {}
	virtual ~GuestOsDescriptor_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestOsDescriptor"; }
};

class GuestPosixFileAttributes_closure : public closure
{
protected:
	vw1__GuestPosixFileAttributes _obj;
public:
	GuestPosixFileAttributes_closure(const vw1__GuestPosixFileAttributes& obj) : _obj(obj) {}
	virtual ~GuestPosixFileAttributes_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestPosixFileAttributes"; }
};

class GuestProcessInfo_closure : public closure
{
protected:
	vw1__GuestProcessInfo _obj;
public:
	GuestProcessInfo_closure(const vw1__GuestProcessInfo& obj) : _obj(obj) {}
	virtual ~GuestProcessInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestProcessInfo"; }
};

class GuestProgramSpec_closure : public closure
{
protected:
	vw1__GuestProgramSpec _obj;
public:
	GuestProgramSpec_closure(const vw1__GuestProgramSpec& obj) : _obj(obj) {}
	virtual ~GuestProgramSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestProgramSpec"; }
};

class GuestScreenInfo_closure : public closure
{
protected:
	vw1__GuestScreenInfo _obj;
public:
	GuestScreenInfo_closure(const vw1__GuestScreenInfo& obj) : _obj(obj) {}
	virtual ~GuestScreenInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestScreenInfo"; }
};

class GuestStackInfo_closure : public closure
{
protected:
	vw1__GuestStackInfo _obj;
public:
	GuestStackInfo_closure(const vw1__GuestStackInfo& obj) : _obj(obj) {}
	virtual ~GuestStackInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestStackInfo"; }
};

class GuestWindowsFileAttributes_closure : public closure
{
protected:
	vw1__GuestWindowsFileAttributes _obj;
public:
	GuestWindowsFileAttributes_closure(const vw1__GuestWindowsFileAttributes& obj) : _obj(obj) {}
	virtual ~GuestWindowsFileAttributes_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestWindowsFileAttributes"; }
};

class GuestWindowsProgramSpec_closure : public closure
{
protected:
	vw1__GuestWindowsProgramSpec _obj;
public:
	GuestWindowsProgramSpec_closure(const vw1__GuestWindowsProgramSpec& obj) : _obj(obj) {}
	virtual ~GuestWindowsProgramSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestWindowsProgramSpec"; }
};

class HbrManagerReplicationVmInfo_closure : public closure
{
protected:
	vw1__HbrManagerReplicationVmInfo _obj;
public:
	HbrManagerReplicationVmInfo_closure(const vw1__HbrManagerReplicationVmInfo& obj) : _obj(obj) {}
	virtual ~HbrManagerReplicationVmInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HbrManagerReplicationVmInfo"; }
};

class HealthStatusChangedEvent_closure : public closure
{
protected:
	vw1__HealthStatusChangedEvent _obj;
public:
	HealthStatusChangedEvent_closure(const vw1__HealthStatusChangedEvent& obj) : _obj(obj) {}
	virtual ~HealthStatusChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HealthStatusChangedEvent"; }
};

class HealthSystemRuntime_closure : public closure
{
protected:
	vw1__HealthSystemRuntime _obj;
public:
	HealthSystemRuntime_closure(const vw1__HealthSystemRuntime& obj) : _obj(obj) {}
	virtual ~HealthSystemRuntime_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HealthSystemRuntime"; }
};

class HostAccountSpec_closure : public closure
{
protected:
	vw1__HostAccountSpec _obj;
public:
	HostAccountSpec_closure(const vw1__HostAccountSpec& obj) : _obj(obj) {}
	virtual ~HostAccountSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAccountSpec"; }
};

class HostActiveDirectory_closure : public closure
{
protected:
	vw1__HostActiveDirectory _obj;
public:
	HostActiveDirectory_closure(const vw1__HostActiveDirectory& obj) : _obj(obj) {}
	virtual ~HostActiveDirectory_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostActiveDirectory"; }
};

class HostActiveDirectoryInfo_closure : public closure
{
protected:
	vw1__HostActiveDirectoryInfo _obj;
public:
	HostActiveDirectoryInfo_closure(const vw1__HostActiveDirectoryInfo& obj) : _obj(obj) {}
	virtual ~HostActiveDirectoryInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostActiveDirectoryInfo"; }
};

class HostActiveDirectorySpec_closure : public closure
{
protected:
	vw1__HostActiveDirectorySpec _obj;
public:
	HostActiveDirectorySpec_closure(const vw1__HostActiveDirectorySpec& obj) : _obj(obj) {}
	virtual ~HostActiveDirectorySpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostActiveDirectorySpec"; }
};

class HostAddFailedEvent_closure : public closure
{
protected:
	vw1__HostAddFailedEvent _obj;
public:
	HostAddFailedEvent_closure(const vw1__HostAddFailedEvent& obj) : _obj(obj) {}
	virtual ~HostAddFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAddFailedEvent"; }
};

class HostAddedEvent_closure : public closure
{
protected:
	vw1__HostAddedEvent _obj;
public:
	HostAddedEvent_closure(const vw1__HostAddedEvent& obj) : _obj(obj) {}
	virtual ~HostAddedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAddedEvent"; }
};

class HostAdminDisableEvent_closure : public closure
{
protected:
	vw1__HostAdminDisableEvent _obj;
public:
	HostAdminDisableEvent_closure(const vw1__HostAdminDisableEvent& obj) : _obj(obj) {}
	virtual ~HostAdminDisableEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAdminDisableEvent"; }
};

class HostAdminEnableEvent_closure : public closure
{
protected:
	vw1__HostAdminEnableEvent _obj;
public:
	HostAdminEnableEvent_closure(const vw1__HostAdminEnableEvent& obj) : _obj(obj) {}
	virtual ~HostAdminEnableEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAdminEnableEvent"; }
};

class HostApplyProfile_closure : public closure
{
protected:
	vw1__HostApplyProfile _obj;
public:
	HostApplyProfile_closure(const vw1__HostApplyProfile& obj) : _obj(obj) {}
	virtual ~HostApplyProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostApplyProfile"; }
};

class HostAuthenticationManagerInfo_closure : public closure
{
protected:
	vw1__HostAuthenticationManagerInfo _obj;
public:
	HostAuthenticationManagerInfo_closure(const vw1__HostAuthenticationManagerInfo& obj) : _obj(obj) {}
	virtual ~HostAuthenticationManagerInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAuthenticationManagerInfo"; }
};

class HostAuthenticationStoreInfo_closure : public closure
{
protected:
	vw1__HostAuthenticationStoreInfo _obj;
public:
	HostAuthenticationStoreInfo_closure(const vw1__HostAuthenticationStoreInfo& obj) : _obj(obj) {}
	virtual ~HostAuthenticationStoreInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAuthenticationStoreInfo"; }
};

class HostAutoStartManagerConfig_closure : public closure
{
protected:
	vw1__HostAutoStartManagerConfig _obj;
public:
	HostAutoStartManagerConfig_closure(const vw1__HostAutoStartManagerConfig& obj) : _obj(obj) {}
	virtual ~HostAutoStartManagerConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAutoStartManagerConfig"; }
};

class HostBIOSInfo_closure : public closure
{
protected:
	vw1__HostBIOSInfo _obj;
public:
	HostBIOSInfo_closure(const vw1__HostBIOSInfo& obj) : _obj(obj) {}
	virtual ~HostBIOSInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostBIOSInfo"; }
};

class HostBlockAdapterTargetTransport_closure : public closure
{
protected:
	vw1__HostBlockAdapterTargetTransport _obj;
public:
	HostBlockAdapterTargetTransport_closure(const vw1__HostBlockAdapterTargetTransport& obj) : _obj(obj) {}
	virtual ~HostBlockAdapterTargetTransport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostBlockAdapterTargetTransport"; }
};

class HostBlockHba_closure : public closure
{
protected:
	vw1__HostBlockHba _obj;
public:
	HostBlockHba_closure(const vw1__HostBlockHba& obj) : _obj(obj) {}
	virtual ~HostBlockHba_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostBlockHba"; }
};

class HostBootDevice_closure : public closure
{
protected:
	vw1__HostBootDevice _obj;
public:
	HostBootDevice_closure(const vw1__HostBootDevice& obj) : _obj(obj) {}
	virtual ~HostBootDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostBootDevice"; }
};

class HostBootDeviceInfo_closure : public closure
{
protected:
	vw1__HostBootDeviceInfo _obj;
public:
	HostBootDeviceInfo_closure(const vw1__HostBootDeviceInfo& obj) : _obj(obj) {}
	virtual ~HostBootDeviceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostBootDeviceInfo"; }
};

class HostCacheConfigurationInfo_closure : public closure
{
protected:
	vw1__HostCacheConfigurationInfo _obj;
public:
	HostCacheConfigurationInfo_closure(const vw1__HostCacheConfigurationInfo& obj) : _obj(obj) {}
	virtual ~HostCacheConfigurationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCacheConfigurationInfo"; }
};

class HostCacheConfigurationSpec_closure : public closure
{
protected:
	vw1__HostCacheConfigurationSpec _obj;
public:
	HostCacheConfigurationSpec_closure(const vw1__HostCacheConfigurationSpec& obj) : _obj(obj) {}
	virtual ~HostCacheConfigurationSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCacheConfigurationSpec"; }
};

class HostCapability_closure : public closure
{
protected:
	vw1__HostCapability _obj;
public:
	HostCapability_closure(const vw1__HostCapability& obj) : _obj(obj) {}
	virtual ~HostCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCapability"; }
};

class HostCnxFailedAccountFailedEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedAccountFailedEvent _obj;
public:
	HostCnxFailedAccountFailedEvent_closure(const vw1__HostCnxFailedAccountFailedEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedAccountFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedAccountFailedEvent"; }
};

class HostCnxFailedAlreadyManagedEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedAlreadyManagedEvent _obj;
public:
	HostCnxFailedAlreadyManagedEvent_closure(const vw1__HostCnxFailedAlreadyManagedEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedAlreadyManagedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedAlreadyManagedEvent"; }
};

class HostCnxFailedBadCcagentEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedBadCcagentEvent _obj;
public:
	HostCnxFailedBadCcagentEvent_closure(const vw1__HostCnxFailedBadCcagentEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedBadCcagentEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedBadCcagentEvent"; }
};

class HostCnxFailedBadUsernameEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedBadUsernameEvent _obj;
public:
	HostCnxFailedBadUsernameEvent_closure(const vw1__HostCnxFailedBadUsernameEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedBadUsernameEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedBadUsernameEvent"; }
};

class HostCnxFailedBadVersionEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedBadVersionEvent _obj;
public:
	HostCnxFailedBadVersionEvent_closure(const vw1__HostCnxFailedBadVersionEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedBadVersionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedBadVersionEvent"; }
};

class HostCnxFailedCcagentUpgradeEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedCcagentUpgradeEvent _obj;
public:
	HostCnxFailedCcagentUpgradeEvent_closure(const vw1__HostCnxFailedCcagentUpgradeEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedCcagentUpgradeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedCcagentUpgradeEvent"; }
};

class HostCnxFailedEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedEvent _obj;
public:
	HostCnxFailedEvent_closure(const vw1__HostCnxFailedEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedEvent"; }
};

class HostCnxFailedNetworkErrorEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedNetworkErrorEvent _obj;
public:
	HostCnxFailedNetworkErrorEvent_closure(const vw1__HostCnxFailedNetworkErrorEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedNetworkErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedNetworkErrorEvent"; }
};

class HostCnxFailedNoAccessEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedNoAccessEvent _obj;
public:
	HostCnxFailedNoAccessEvent_closure(const vw1__HostCnxFailedNoAccessEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedNoAccessEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedNoAccessEvent"; }
};

class HostCnxFailedNoConnectionEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedNoConnectionEvent _obj;
public:
	HostCnxFailedNoConnectionEvent_closure(const vw1__HostCnxFailedNoConnectionEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedNoConnectionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedNoConnectionEvent"; }
};

class HostCnxFailedNoLicenseEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedNoLicenseEvent _obj;
public:
	HostCnxFailedNoLicenseEvent_closure(const vw1__HostCnxFailedNoLicenseEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedNoLicenseEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedNoLicenseEvent"; }
};

class HostCnxFailedNotFoundEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedNotFoundEvent _obj;
public:
	HostCnxFailedNotFoundEvent_closure(const vw1__HostCnxFailedNotFoundEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedNotFoundEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedNotFoundEvent"; }
};

class HostCnxFailedTimeoutEvent_closure : public closure
{
protected:
	vw1__HostCnxFailedTimeoutEvent _obj;
public:
	HostCnxFailedTimeoutEvent_closure(const vw1__HostCnxFailedTimeoutEvent& obj) : _obj(obj) {}
	virtual ~HostCnxFailedTimeoutEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCnxFailedTimeoutEvent"; }
};

class HostComplianceCheckedEvent_closure : public closure
{
protected:
	vw1__HostComplianceCheckedEvent _obj;
public:
	HostComplianceCheckedEvent_closure(const vw1__HostComplianceCheckedEvent& obj) : _obj(obj) {}
	virtual ~HostComplianceCheckedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostComplianceCheckedEvent"; }
};

class HostCompliantEvent_closure : public closure
{
protected:
	vw1__HostCompliantEvent _obj;
public:
	HostCompliantEvent_closure(const vw1__HostCompliantEvent& obj) : _obj(obj) {}
	virtual ~HostCompliantEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCompliantEvent"; }
};

class HostConfigAppliedEvent_closure : public closure
{
protected:
	vw1__HostConfigAppliedEvent _obj;
public:
	HostConfigAppliedEvent_closure(const vw1__HostConfigAppliedEvent& obj) : _obj(obj) {}
	virtual ~HostConfigAppliedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConfigAppliedEvent"; }
};

class HostConfigChange_closure : public closure
{
protected:
	vw1__HostConfigChange _obj;
public:
	HostConfigChange_closure(const vw1__HostConfigChange& obj) : _obj(obj) {}
	virtual ~HostConfigChange_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConfigChange"; }
};

class HostConfigInfo_closure : public closure
{
protected:
	vw1__HostConfigInfo _obj;
public:
	HostConfigInfo_closure(const vw1__HostConfigInfo& obj) : _obj(obj) {}
	virtual ~HostConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConfigInfo"; }
};

class HostConfigManager_closure : public closure
{
protected:
	vw1__HostConfigManager _obj;
public:
	HostConfigManager_closure(const vw1__HostConfigManager& obj) : _obj(obj) {}
	virtual ~HostConfigManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConfigManager"; }
};

class HostConfigSpec_closure : public closure
{
protected:
	vw1__HostConfigSpec _obj;
public:
	HostConfigSpec_closure(const vw1__HostConfigSpec& obj) : _obj(obj) {}
	virtual ~HostConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConfigSpec"; }
};

class HostConfigSummary_closure : public closure
{
protected:
	vw1__HostConfigSummary _obj;
public:
	HostConfigSummary_closure(const vw1__HostConfigSummary& obj) : _obj(obj) {}
	virtual ~HostConfigSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConfigSummary"; }
};

class HostConnectInfo_closure : public closure
{
protected:
	vw1__HostConnectInfo _obj;
public:
	HostConnectInfo_closure(const vw1__HostConnectInfo& obj) : _obj(obj) {}
	virtual ~HostConnectInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConnectInfo"; }
};

class HostConnectInfoNetworkInfo_closure : public closure
{
protected:
	vw1__HostConnectInfoNetworkInfo _obj;
public:
	HostConnectInfoNetworkInfo_closure(const vw1__HostConnectInfoNetworkInfo& obj) : _obj(obj) {}
	virtual ~HostConnectInfoNetworkInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConnectInfoNetworkInfo"; }
};

class HostConnectSpec_closure : public closure
{
protected:
	vw1__HostConnectSpec _obj;
public:
	HostConnectSpec_closure(const vw1__HostConnectSpec& obj) : _obj(obj) {}
	virtual ~HostConnectSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConnectSpec"; }
};

class HostConnectedEvent_closure : public closure
{
protected:
	vw1__HostConnectedEvent _obj;
public:
	HostConnectedEvent_closure(const vw1__HostConnectedEvent& obj) : _obj(obj) {}
	virtual ~HostConnectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConnectedEvent"; }
};

class HostConnectionLostEvent_closure : public closure
{
protected:
	vw1__HostConnectionLostEvent _obj;
public:
	HostConnectionLostEvent_closure(const vw1__HostConnectionLostEvent& obj) : _obj(obj) {}
	virtual ~HostConnectionLostEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConnectionLostEvent"; }
};

class HostCpuIdInfo_closure : public closure
{
protected:
	vw1__HostCpuIdInfo _obj;
public:
	HostCpuIdInfo_closure(const vw1__HostCpuIdInfo& obj) : _obj(obj) {}
	virtual ~HostCpuIdInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCpuIdInfo"; }
};

class HostCpuInfo_closure : public closure
{
protected:
	vw1__HostCpuInfo _obj;
public:
	HostCpuInfo_closure(const vw1__HostCpuInfo& obj) : _obj(obj) {}
	virtual ~HostCpuInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCpuInfo"; }
};

class HostCpuPackage_closure : public closure
{
protected:
	vw1__HostCpuPackage _obj;
public:
	HostCpuPackage_closure(const vw1__HostCpuPackage& obj) : _obj(obj) {}
	virtual ~HostCpuPackage_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCpuPackage"; }
};

class HostCpuPowerManagementInfo_closure : public closure
{
protected:
	vw1__HostCpuPowerManagementInfo _obj;
public:
	HostCpuPowerManagementInfo_closure(const vw1__HostCpuPowerManagementInfo& obj) : _obj(obj) {}
	virtual ~HostCpuPowerManagementInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCpuPowerManagementInfo"; }
};

class HostDasDisabledEvent_closure : public closure
{
protected:
	vw1__HostDasDisabledEvent _obj;
public:
	HostDasDisabledEvent_closure(const vw1__HostDasDisabledEvent& obj) : _obj(obj) {}
	virtual ~HostDasDisabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDasDisabledEvent"; }
};

class HostDasDisablingEvent_closure : public closure
{
protected:
	vw1__HostDasDisablingEvent _obj;
public:
	HostDasDisablingEvent_closure(const vw1__HostDasDisablingEvent& obj) : _obj(obj) {}
	virtual ~HostDasDisablingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDasDisablingEvent"; }
};

class HostDasEnabledEvent_closure : public closure
{
protected:
	vw1__HostDasEnabledEvent _obj;
public:
	HostDasEnabledEvent_closure(const vw1__HostDasEnabledEvent& obj) : _obj(obj) {}
	virtual ~HostDasEnabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDasEnabledEvent"; }
};

class HostDasEnablingEvent_closure : public closure
{
protected:
	vw1__HostDasEnablingEvent _obj;
public:
	HostDasEnablingEvent_closure(const vw1__HostDasEnablingEvent& obj) : _obj(obj) {}
	virtual ~HostDasEnablingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDasEnablingEvent"; }
};

class HostDasErrorEvent_closure : public closure
{
protected:
	vw1__HostDasErrorEvent _obj;
public:
	HostDasErrorEvent_closure(const vw1__HostDasErrorEvent& obj) : _obj(obj) {}
	virtual ~HostDasErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDasErrorEvent"; }
};

class HostDasEvent_closure : public closure
{
protected:
	vw1__HostDasEvent _obj;
public:
	HostDasEvent_closure(const vw1__HostDasEvent& obj) : _obj(obj) {}
	virtual ~HostDasEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDasEvent"; }
};

class HostDasOkEvent_closure : public closure
{
protected:
	vw1__HostDasOkEvent _obj;
public:
	HostDasOkEvent_closure(const vw1__HostDasOkEvent& obj) : _obj(obj) {}
	virtual ~HostDasOkEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDasOkEvent"; }
};

class HostDatastoreBrowserSearchResults_closure : public closure
{
protected:
	vw1__HostDatastoreBrowserSearchResults _obj;
public:
	HostDatastoreBrowserSearchResults_closure(const vw1__HostDatastoreBrowserSearchResults& obj) : _obj(obj) {}
	virtual ~HostDatastoreBrowserSearchResults_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDatastoreBrowserSearchResults"; }
};

class HostDatastoreBrowserSearchSpec_closure : public closure
{
protected:
	vw1__HostDatastoreBrowserSearchSpec _obj;
public:
	HostDatastoreBrowserSearchSpec_closure(const vw1__HostDatastoreBrowserSearchSpec& obj) : _obj(obj) {}
	virtual ~HostDatastoreBrowserSearchSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDatastoreBrowserSearchSpec"; }
};

class HostDatastoreConnectInfo_closure : public closure
{
protected:
	vw1__HostDatastoreConnectInfo _obj;
public:
	HostDatastoreConnectInfo_closure(const vw1__HostDatastoreConnectInfo& obj) : _obj(obj) {}
	virtual ~HostDatastoreConnectInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDatastoreConnectInfo"; }
};

class HostDatastoreExistsConnectInfo_closure : public closure
{
protected:
	vw1__HostDatastoreExistsConnectInfo _obj;
public:
	HostDatastoreExistsConnectInfo_closure(const vw1__HostDatastoreExistsConnectInfo& obj) : _obj(obj) {}
	virtual ~HostDatastoreExistsConnectInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDatastoreExistsConnectInfo"; }
};

class HostDatastoreNameConflictConnectInfo_closure : public closure
{
protected:
	vw1__HostDatastoreNameConflictConnectInfo _obj;
public:
	HostDatastoreNameConflictConnectInfo_closure(const vw1__HostDatastoreNameConflictConnectInfo& obj) : _obj(obj) {}
	virtual ~HostDatastoreNameConflictConnectInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDatastoreNameConflictConnectInfo"; }
};

class HostDatastoreSystemCapabilities_closure : public closure
{
protected:
	vw1__HostDatastoreSystemCapabilities _obj;
public:
	HostDatastoreSystemCapabilities_closure(const vw1__HostDatastoreSystemCapabilities& obj) : _obj(obj) {}
	virtual ~HostDatastoreSystemCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDatastoreSystemCapabilities"; }
};

class HostDateTimeConfig_closure : public closure
{
protected:
	vw1__HostDateTimeConfig _obj;
public:
	HostDateTimeConfig_closure(const vw1__HostDateTimeConfig& obj) : _obj(obj) {}
	virtual ~HostDateTimeConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDateTimeConfig"; }
};

class HostDateTimeInfo_closure : public closure
{
protected:
	vw1__HostDateTimeInfo _obj;
public:
	HostDateTimeInfo_closure(const vw1__HostDateTimeInfo& obj) : _obj(obj) {}
	virtual ~HostDateTimeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDateTimeInfo"; }
};

class HostDateTimeSystemTimeZone_closure : public closure
{
protected:
	vw1__HostDateTimeSystemTimeZone _obj;
public:
	HostDateTimeSystemTimeZone_closure(const vw1__HostDateTimeSystemTimeZone& obj) : _obj(obj) {}
	virtual ~HostDateTimeSystemTimeZone_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDateTimeSystemTimeZone"; }
};

class HostDevice_closure : public closure
{
protected:
	vw1__HostDevice _obj;
public:
	HostDevice_closure(const vw1__HostDevice& obj) : _obj(obj) {}
	virtual ~HostDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDevice"; }
};

class HostDhcpService_closure : public closure
{
protected:
	vw1__HostDhcpService _obj;
public:
	HostDhcpService_closure(const vw1__HostDhcpService& obj) : _obj(obj) {}
	virtual ~HostDhcpService_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDhcpService"; }
};

class HostDhcpServiceConfig_closure : public closure
{
protected:
	vw1__HostDhcpServiceConfig _obj;
public:
	HostDhcpServiceConfig_closure(const vw1__HostDhcpServiceConfig& obj) : _obj(obj) {}
	virtual ~HostDhcpServiceConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDhcpServiceConfig"; }
};

class HostDhcpServiceSpec_closure : public closure
{
protected:
	vw1__HostDhcpServiceSpec _obj;
public:
	HostDhcpServiceSpec_closure(const vw1__HostDhcpServiceSpec& obj) : _obj(obj) {}
	virtual ~HostDhcpServiceSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDhcpServiceSpec"; }
};

class HostDiagnosticPartition_closure : public closure
{
protected:
	vw1__HostDiagnosticPartition _obj;
public:
	HostDiagnosticPartition_closure(const vw1__HostDiagnosticPartition& obj) : _obj(obj) {}
	virtual ~HostDiagnosticPartition_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiagnosticPartition"; }
};

class HostDiagnosticPartitionCreateDescription_closure : public closure
{
protected:
	vw1__HostDiagnosticPartitionCreateDescription _obj;
public:
	HostDiagnosticPartitionCreateDescription_closure(const vw1__HostDiagnosticPartitionCreateDescription& obj) : _obj(obj) {}
	virtual ~HostDiagnosticPartitionCreateDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiagnosticPartitionCreateDescription"; }
};

class HostDiagnosticPartitionCreateOption_closure : public closure
{
protected:
	vw1__HostDiagnosticPartitionCreateOption _obj;
public:
	HostDiagnosticPartitionCreateOption_closure(const vw1__HostDiagnosticPartitionCreateOption& obj) : _obj(obj) {}
	virtual ~HostDiagnosticPartitionCreateOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiagnosticPartitionCreateOption"; }
};

class HostDiagnosticPartitionCreateSpec_closure : public closure
{
protected:
	vw1__HostDiagnosticPartitionCreateSpec _obj;
public:
	HostDiagnosticPartitionCreateSpec_closure(const vw1__HostDiagnosticPartitionCreateSpec& obj) : _obj(obj) {}
	virtual ~HostDiagnosticPartitionCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiagnosticPartitionCreateSpec"; }
};

class HostDigestInfo_closure : public closure
{
protected:
	vw1__HostDigestInfo _obj;
public:
	HostDigestInfo_closure(const vw1__HostDigestInfo& obj) : _obj(obj) {}
	virtual ~HostDigestInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDigestInfo"; }
};

class HostDirectoryStoreInfo_closure : public closure
{
protected:
	vw1__HostDirectoryStoreInfo _obj;
public:
	HostDirectoryStoreInfo_closure(const vw1__HostDirectoryStoreInfo& obj) : _obj(obj) {}
	virtual ~HostDirectoryStoreInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDirectoryStoreInfo"; }
};

class HostDisconnectedEvent_closure : public closure
{
protected:
	vw1__HostDisconnectedEvent _obj;
public:
	HostDisconnectedEvent_closure(const vw1__HostDisconnectedEvent& obj) : _obj(obj) {}
	virtual ~HostDisconnectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDisconnectedEvent"; }
};

class HostDiskDimensions_closure : public closure
{
protected:
	vw1__HostDiskDimensions _obj;
public:
	HostDiskDimensions_closure(const vw1__HostDiskDimensions& obj) : _obj(obj) {}
	virtual ~HostDiskDimensions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskDimensions"; }
};

class HostDiskDimensionsChs_closure : public closure
{
protected:
	vw1__HostDiskDimensionsChs _obj;
public:
	HostDiskDimensionsChs_closure(const vw1__HostDiskDimensionsChs& obj) : _obj(obj) {}
	virtual ~HostDiskDimensionsChs_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskDimensionsChs"; }
};

class HostDiskDimensionsLba_closure : public closure
{
protected:
	vw1__HostDiskDimensionsLba _obj;
public:
	HostDiskDimensionsLba_closure(const vw1__HostDiskDimensionsLba& obj) : _obj(obj) {}
	virtual ~HostDiskDimensionsLba_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskDimensionsLba"; }
};

class HostDiskMappingInfo_closure : public closure
{
protected:
	vw1__HostDiskMappingInfo _obj;
public:
	HostDiskMappingInfo_closure(const vw1__HostDiskMappingInfo& obj) : _obj(obj) {}
	virtual ~HostDiskMappingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskMappingInfo"; }
};

class HostDiskMappingOption_closure : public closure
{
protected:
	vw1__HostDiskMappingOption _obj;
public:
	HostDiskMappingOption_closure(const vw1__HostDiskMappingOption& obj) : _obj(obj) {}
	virtual ~HostDiskMappingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskMappingOption"; }
};

class HostDiskMappingPartitionInfo_closure : public closure
{
protected:
	vw1__HostDiskMappingPartitionInfo _obj;
public:
	HostDiskMappingPartitionInfo_closure(const vw1__HostDiskMappingPartitionInfo& obj) : _obj(obj) {}
	virtual ~HostDiskMappingPartitionInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskMappingPartitionInfo"; }
};

class HostDiskMappingPartitionOption_closure : public closure
{
protected:
	vw1__HostDiskMappingPartitionOption _obj;
public:
	HostDiskMappingPartitionOption_closure(const vw1__HostDiskMappingPartitionOption& obj) : _obj(obj) {}
	virtual ~HostDiskMappingPartitionOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskMappingPartitionOption"; }
};

class HostDiskPartitionAttributes_closure : public closure
{
protected:
	vw1__HostDiskPartitionAttributes _obj;
public:
	HostDiskPartitionAttributes_closure(const vw1__HostDiskPartitionAttributes& obj) : _obj(obj) {}
	virtual ~HostDiskPartitionAttributes_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskPartitionAttributes"; }
};

class HostDiskPartitionBlockRange_closure : public closure
{
protected:
	vw1__HostDiskPartitionBlockRange _obj;
public:
	HostDiskPartitionBlockRange_closure(const vw1__HostDiskPartitionBlockRange& obj) : _obj(obj) {}
	virtual ~HostDiskPartitionBlockRange_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskPartitionBlockRange"; }
};

class HostDiskPartitionInfo_closure : public closure
{
protected:
	vw1__HostDiskPartitionInfo _obj;
public:
	HostDiskPartitionInfo_closure(const vw1__HostDiskPartitionInfo& obj) : _obj(obj) {}
	virtual ~HostDiskPartitionInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskPartitionInfo"; }
};

class HostDiskPartitionLayout_closure : public closure
{
protected:
	vw1__HostDiskPartitionLayout _obj;
public:
	HostDiskPartitionLayout_closure(const vw1__HostDiskPartitionLayout& obj) : _obj(obj) {}
	virtual ~HostDiskPartitionLayout_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskPartitionLayout"; }
};

class HostDiskPartitionSpec_closure : public closure
{
protected:
	vw1__HostDiskPartitionSpec _obj;
public:
	HostDiskPartitionSpec_closure(const vw1__HostDiskPartitionSpec& obj) : _obj(obj) {}
	virtual ~HostDiskPartitionSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiskPartitionSpec"; }
};

class HostDnsConfig_closure : public closure
{
protected:
	vw1__HostDnsConfig _obj;
public:
	HostDnsConfig_closure(const vw1__HostDnsConfig& obj) : _obj(obj) {}
	virtual ~HostDnsConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDnsConfig"; }
};

class HostDnsConfigSpec_closure : public closure
{
protected:
	vw1__HostDnsConfigSpec _obj;
public:
	HostDnsConfigSpec_closure(const vw1__HostDnsConfigSpec& obj) : _obj(obj) {}
	virtual ~HostDnsConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDnsConfigSpec"; }
};

class HostEnableAdminFailedEvent_closure : public closure
{
protected:
	vw1__HostEnableAdminFailedEvent _obj;
public:
	HostEnableAdminFailedEvent_closure(const vw1__HostEnableAdminFailedEvent& obj) : _obj(obj) {}
	virtual ~HostEnableAdminFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostEnableAdminFailedEvent"; }
};

class HostEsxAgentHostManagerConfigInfo_closure : public closure
{
protected:
	vw1__HostEsxAgentHostManagerConfigInfo _obj;
public:
	HostEsxAgentHostManagerConfigInfo_closure(const vw1__HostEsxAgentHostManagerConfigInfo& obj) : _obj(obj) {}
	virtual ~HostEsxAgentHostManagerConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostEsxAgentHostManagerConfigInfo"; }
};

class HostEvent_closure : public closure
{
protected:
	vw1__HostEvent _obj;
public:
	HostEvent_closure(const vw1__HostEvent& obj) : _obj(obj) {}
	virtual ~HostEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostEvent"; }
};

class HostEventArgument_closure : public closure
{
protected:
	vw1__HostEventArgument _obj;
public:
	HostEventArgument_closure(const vw1__HostEventArgument& obj) : _obj(obj) {}
	virtual ~HostEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostEventArgument"; }
};

class HostExtraNetworksEvent_closure : public closure
{
protected:
	vw1__HostExtraNetworksEvent _obj;
public:
	HostExtraNetworksEvent_closure(const vw1__HostExtraNetworksEvent& obj) : _obj(obj) {}
	virtual ~HostExtraNetworksEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostExtraNetworksEvent"; }
};

class HostFeatureVersionInfo_closure : public closure
{
protected:
	vw1__HostFeatureVersionInfo _obj;
public:
	HostFeatureVersionInfo_closure(const vw1__HostFeatureVersionInfo& obj) : _obj(obj) {}
	virtual ~HostFeatureVersionInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFeatureVersionInfo"; }
};

class HostFibreChannelHba_closure : public closure
{
protected:
	vw1__HostFibreChannelHba _obj;
public:
	HostFibreChannelHba_closure(const vw1__HostFibreChannelHba& obj) : _obj(obj) {}
	virtual ~HostFibreChannelHba_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFibreChannelHba"; }
};

class HostFibreChannelOverEthernetHba_closure : public closure
{
protected:
	vw1__HostFibreChannelOverEthernetHba _obj;
public:
	HostFibreChannelOverEthernetHba_closure(const vw1__HostFibreChannelOverEthernetHba& obj) : _obj(obj) {}
	virtual ~HostFibreChannelOverEthernetHba_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFibreChannelOverEthernetHba"; }
};

class HostFibreChannelOverEthernetHbaLinkInfo_closure : public closure
{
protected:
	vw1__HostFibreChannelOverEthernetHbaLinkInfo _obj;
public:
	HostFibreChannelOverEthernetHbaLinkInfo_closure(const vw1__HostFibreChannelOverEthernetHbaLinkInfo& obj) : _obj(obj) {}
	virtual ~HostFibreChannelOverEthernetHbaLinkInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFibreChannelOverEthernetHbaLinkInfo"; }
};

class HostFibreChannelOverEthernetTargetTransport_closure : public closure
{
protected:
	vw1__HostFibreChannelOverEthernetTargetTransport _obj;
public:
	HostFibreChannelOverEthernetTargetTransport_closure(const vw1__HostFibreChannelOverEthernetTargetTransport& obj) : _obj(obj) {}
	virtual ~HostFibreChannelOverEthernetTargetTransport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFibreChannelOverEthernetTargetTransport"; }
};

class HostFibreChannelTargetTransport_closure : public closure
{
protected:
	vw1__HostFibreChannelTargetTransport _obj;
public:
	HostFibreChannelTargetTransport_closure(const vw1__HostFibreChannelTargetTransport& obj) : _obj(obj) {}
	virtual ~HostFibreChannelTargetTransport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFibreChannelTargetTransport"; }
};

class HostFileAccess_closure : public closure
{
protected:
	vw1__HostFileAccess _obj;
public:
	HostFileAccess_closure(const vw1__HostFileAccess& obj) : _obj(obj) {}
	virtual ~HostFileAccess_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFileAccess"; }
};

class HostFileSystemMountInfo_closure : public closure
{
protected:
	vw1__HostFileSystemMountInfo _obj;
public:
	HostFileSystemMountInfo_closure(const vw1__HostFileSystemMountInfo& obj) : _obj(obj) {}
	virtual ~HostFileSystemMountInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFileSystemMountInfo"; }
};

class HostFileSystemVolume_closure : public closure
{
protected:
	vw1__HostFileSystemVolume _obj;
public:
	HostFileSystemVolume_closure(const vw1__HostFileSystemVolume& obj) : _obj(obj) {}
	virtual ~HostFileSystemVolume_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFileSystemVolume"; }
};

class HostFileSystemVolumeInfo_closure : public closure
{
protected:
	vw1__HostFileSystemVolumeInfo _obj;
public:
	HostFileSystemVolumeInfo_closure(const vw1__HostFileSystemVolumeInfo& obj) : _obj(obj) {}
	virtual ~HostFileSystemVolumeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFileSystemVolumeInfo"; }
};

class HostFirewallConfig_closure : public closure
{
protected:
	vw1__HostFirewallConfig _obj;
public:
	HostFirewallConfig_closure(const vw1__HostFirewallConfig& obj) : _obj(obj) {}
	virtual ~HostFirewallConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallConfig"; }
};

class HostFirewallConfigRuleSetConfig_closure : public closure
{
protected:
	vw1__HostFirewallConfigRuleSetConfig _obj;
public:
	HostFirewallConfigRuleSetConfig_closure(const vw1__HostFirewallConfigRuleSetConfig& obj) : _obj(obj) {}
	virtual ~HostFirewallConfigRuleSetConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallConfigRuleSetConfig"; }
};

class HostFirewallDefaultPolicy_closure : public closure
{
protected:
	vw1__HostFirewallDefaultPolicy _obj;
public:
	HostFirewallDefaultPolicy_closure(const vw1__HostFirewallDefaultPolicy& obj) : _obj(obj) {}
	virtual ~HostFirewallDefaultPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallDefaultPolicy"; }
};

class HostFirewallInfo_closure : public closure
{
protected:
	vw1__HostFirewallInfo _obj;
public:
	HostFirewallInfo_closure(const vw1__HostFirewallInfo& obj) : _obj(obj) {}
	virtual ~HostFirewallInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallInfo"; }
};

class HostFirewallRule_closure : public closure
{
protected:
	vw1__HostFirewallRule _obj;
public:
	HostFirewallRule_closure(const vw1__HostFirewallRule& obj) : _obj(obj) {}
	virtual ~HostFirewallRule_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallRule"; }
};

class HostFirewallRuleset_closure : public closure
{
protected:
	vw1__HostFirewallRuleset _obj;
public:
	HostFirewallRuleset_closure(const vw1__HostFirewallRuleset& obj) : _obj(obj) {}
	virtual ~HostFirewallRuleset_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallRuleset"; }
};

class HostFirewallRulesetIpList_closure : public closure
{
protected:
	vw1__HostFirewallRulesetIpList _obj;
public:
	HostFirewallRulesetIpList_closure(const vw1__HostFirewallRulesetIpList& obj) : _obj(obj) {}
	virtual ~HostFirewallRulesetIpList_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallRulesetIpList"; }
};

class HostFirewallRulesetIpNetwork_closure : public closure
{
protected:
	vw1__HostFirewallRulesetIpNetwork _obj;
public:
	HostFirewallRulesetIpNetwork_closure(const vw1__HostFirewallRulesetIpNetwork& obj) : _obj(obj) {}
	virtual ~HostFirewallRulesetIpNetwork_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallRulesetIpNetwork"; }
};

class HostFirewallRulesetRulesetSpec_closure : public closure
{
protected:
	vw1__HostFirewallRulesetRulesetSpec _obj;
public:
	HostFirewallRulesetRulesetSpec_closure(const vw1__HostFirewallRulesetRulesetSpec& obj) : _obj(obj) {}
	virtual ~HostFirewallRulesetRulesetSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallRulesetRulesetSpec"; }
};

class HostFlagInfo_closure : public closure
{
protected:
	vw1__HostFlagInfo _obj;
public:
	HostFlagInfo_closure(const vw1__HostFlagInfo& obj) : _obj(obj) {}
	virtual ~HostFlagInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFlagInfo"; }
};

class HostForceMountedInfo_closure : public closure
{
protected:
	vw1__HostForceMountedInfo _obj;
public:
	HostForceMountedInfo_closure(const vw1__HostForceMountedInfo& obj) : _obj(obj) {}
	virtual ~HostForceMountedInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostForceMountedInfo"; }
};

class HostGetShortNameFailedEvent_closure : public closure
{
protected:
	vw1__HostGetShortNameFailedEvent _obj;
public:
	HostGetShortNameFailedEvent_closure(const vw1__HostGetShortNameFailedEvent& obj) : _obj(obj) {}
	virtual ~HostGetShortNameFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostGetShortNameFailedEvent"; }
};

class HostHardwareElementInfo_closure : public closure
{
protected:
	vw1__HostHardwareElementInfo _obj;
public:
	HostHardwareElementInfo_closure(const vw1__HostHardwareElementInfo& obj) : _obj(obj) {}
	virtual ~HostHardwareElementInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostHardwareElementInfo"; }
};

class HostHardwareInfo_closure : public closure
{
protected:
	vw1__HostHardwareInfo _obj;
public:
	HostHardwareInfo_closure(const vw1__HostHardwareInfo& obj) : _obj(obj) {}
	virtual ~HostHardwareInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostHardwareInfo"; }
};

class HostHardwareStatusInfo_closure : public closure
{
protected:
	vw1__HostHardwareStatusInfo _obj;
public:
	HostHardwareStatusInfo_closure(const vw1__HostHardwareStatusInfo& obj) : _obj(obj) {}
	virtual ~HostHardwareStatusInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostHardwareStatusInfo"; }
};

class HostHardwareSummary_closure : public closure
{
protected:
	vw1__HostHardwareSummary _obj;
public:
	HostHardwareSummary_closure(const vw1__HostHardwareSummary& obj) : _obj(obj) {}
	virtual ~HostHardwareSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostHardwareSummary"; }
};

class HostHostBusAdapter_closure : public closure
{
protected:
	vw1__HostHostBusAdapter _obj;
public:
	HostHostBusAdapter_closure(const vw1__HostHostBusAdapter& obj) : _obj(obj) {}
	virtual ~HostHostBusAdapter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostHostBusAdapter"; }
};

class HostHyperThreadScheduleInfo_closure : public closure
{
protected:
	vw1__HostHyperThreadScheduleInfo _obj;
public:
	HostHyperThreadScheduleInfo_closure(const vw1__HostHyperThreadScheduleInfo& obj) : _obj(obj) {}
	virtual ~HostHyperThreadScheduleInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostHyperThreadScheduleInfo"; }
};

class HostImageProfileSummary_closure : public closure
{
protected:
	vw1__HostImageProfileSummary _obj;
public:
	HostImageProfileSummary_closure(const vw1__HostImageProfileSummary& obj) : _obj(obj) {}
	virtual ~HostImageProfileSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostImageProfileSummary"; }
};

class HostInAuditModeEvent_closure : public closure
{
protected:
	vw1__HostInAuditModeEvent _obj;
public:
	HostInAuditModeEvent_closure(const vw1__HostInAuditModeEvent& obj) : _obj(obj) {}
	virtual ~HostInAuditModeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInAuditModeEvent"; }
};

class HostInternetScsiHba_closure : public closure
{
protected:
	vw1__HostInternetScsiHba _obj;
public:
	HostInternetScsiHba_closure(const vw1__HostInternetScsiHba& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHba_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHba"; }
};

class HostInternetScsiHbaAuthenticationCapabilities_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaAuthenticationCapabilities _obj;
public:
	HostInternetScsiHbaAuthenticationCapabilities_closure(const vw1__HostInternetScsiHbaAuthenticationCapabilities& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaAuthenticationCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaAuthenticationCapabilities"; }
};

class HostInternetScsiHbaAuthenticationProperties_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaAuthenticationProperties _obj;
public:
	HostInternetScsiHbaAuthenticationProperties_closure(const vw1__HostInternetScsiHbaAuthenticationProperties& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaAuthenticationProperties_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaAuthenticationProperties"; }
};

class HostInternetScsiHbaDigestCapabilities_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaDigestCapabilities _obj;
public:
	HostInternetScsiHbaDigestCapabilities_closure(const vw1__HostInternetScsiHbaDigestCapabilities& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaDigestCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaDigestCapabilities"; }
};

class HostInternetScsiHbaDigestProperties_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaDigestProperties _obj;
public:
	HostInternetScsiHbaDigestProperties_closure(const vw1__HostInternetScsiHbaDigestProperties& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaDigestProperties_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaDigestProperties"; }
};

class HostInternetScsiHbaDiscoveryCapabilities_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaDiscoveryCapabilities _obj;
public:
	HostInternetScsiHbaDiscoveryCapabilities_closure(const vw1__HostInternetScsiHbaDiscoveryCapabilities& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaDiscoveryCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaDiscoveryCapabilities"; }
};

class HostInternetScsiHbaDiscoveryProperties_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaDiscoveryProperties _obj;
public:
	HostInternetScsiHbaDiscoveryProperties_closure(const vw1__HostInternetScsiHbaDiscoveryProperties& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaDiscoveryProperties_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaDiscoveryProperties"; }
};

class HostInternetScsiHbaIPCapabilities_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaIPCapabilities _obj;
public:
	HostInternetScsiHbaIPCapabilities_closure(const vw1__HostInternetScsiHbaIPCapabilities& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaIPCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaIPCapabilities"; }
};

class HostInternetScsiHbaIPProperties_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaIPProperties _obj;
public:
	HostInternetScsiHbaIPProperties_closure(const vw1__HostInternetScsiHbaIPProperties& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaIPProperties_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaIPProperties"; }
};

class HostInternetScsiHbaParamValue_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaParamValue _obj;
public:
	HostInternetScsiHbaParamValue_closure(const vw1__HostInternetScsiHbaParamValue& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaParamValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaParamValue"; }
};

class HostInternetScsiHbaSendTarget_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaSendTarget _obj;
public:
	HostInternetScsiHbaSendTarget_closure(const vw1__HostInternetScsiHbaSendTarget& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaSendTarget_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaSendTarget"; }
};

class HostInternetScsiHbaStaticTarget_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaStaticTarget _obj;
public:
	HostInternetScsiHbaStaticTarget_closure(const vw1__HostInternetScsiHbaStaticTarget& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaStaticTarget_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaStaticTarget"; }
};

class HostInternetScsiHbaTargetSet_closure : public closure
{
protected:
	vw1__HostInternetScsiHbaTargetSet _obj;
public:
	HostInternetScsiHbaTargetSet_closure(const vw1__HostInternetScsiHbaTargetSet& obj) : _obj(obj) {}
	virtual ~HostInternetScsiHbaTargetSet_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiHbaTargetSet"; }
};

class HostInternetScsiTargetTransport_closure : public closure
{
protected:
	vw1__HostInternetScsiTargetTransport _obj;
public:
	HostInternetScsiTargetTransport_closure(const vw1__HostInternetScsiTargetTransport& obj) : _obj(obj) {}
	virtual ~HostInternetScsiTargetTransport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInternetScsiTargetTransport"; }
};

class HostInventoryFullEvent_closure : public closure
{
protected:
	vw1__HostInventoryFullEvent _obj;
public:
	HostInventoryFullEvent_closure(const vw1__HostInventoryFullEvent& obj) : _obj(obj) {}
	virtual ~HostInventoryFullEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInventoryFullEvent"; }
};

class HostInventoryUnreadableEvent_closure : public closure
{
protected:
	vw1__HostInventoryUnreadableEvent _obj;
public:
	HostInventoryUnreadableEvent_closure(const vw1__HostInventoryUnreadableEvent& obj) : _obj(obj) {}
	virtual ~HostInventoryUnreadableEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInventoryUnreadableEvent"; }
};

class HostIpChangedEvent_closure : public closure
{
protected:
	vw1__HostIpChangedEvent _obj;
public:
	HostIpChangedEvent_closure(const vw1__HostIpChangedEvent& obj) : _obj(obj) {}
	virtual ~HostIpChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpChangedEvent"; }
};

class HostIpConfig_closure : public closure
{
protected:
	vw1__HostIpConfig _obj;
public:
	HostIpConfig_closure(const vw1__HostIpConfig& obj) : _obj(obj) {}
	virtual ~HostIpConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpConfig"; }
};

class HostIpConfigIpV6Address_closure : public closure
{
protected:
	vw1__HostIpConfigIpV6Address _obj;
public:
	HostIpConfigIpV6Address_closure(const vw1__HostIpConfigIpV6Address& obj) : _obj(obj) {}
	virtual ~HostIpConfigIpV6Address_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpConfigIpV6Address"; }
};

class HostIpConfigIpV6AddressConfiguration_closure : public closure
{
protected:
	vw1__HostIpConfigIpV6AddressConfiguration _obj;
public:
	HostIpConfigIpV6AddressConfiguration_closure(const vw1__HostIpConfigIpV6AddressConfiguration& obj) : _obj(obj) {}
	virtual ~HostIpConfigIpV6AddressConfiguration_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpConfigIpV6AddressConfiguration"; }
};

class HostIpInconsistentEvent_closure : public closure
{
protected:
	vw1__HostIpInconsistentEvent _obj;
public:
	HostIpInconsistentEvent_closure(const vw1__HostIpInconsistentEvent& obj) : _obj(obj) {}
	virtual ~HostIpInconsistentEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpInconsistentEvent"; }
};

class HostIpRouteConfig_closure : public closure
{
protected:
	vw1__HostIpRouteConfig _obj;
public:
	HostIpRouteConfig_closure(const vw1__HostIpRouteConfig& obj) : _obj(obj) {}
	virtual ~HostIpRouteConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpRouteConfig"; }
};

class HostIpRouteConfigSpec_closure : public closure
{
protected:
	vw1__HostIpRouteConfigSpec _obj;
public:
	HostIpRouteConfigSpec_closure(const vw1__HostIpRouteConfigSpec& obj) : _obj(obj) {}
	virtual ~HostIpRouteConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpRouteConfigSpec"; }
};

class HostIpRouteEntry_closure : public closure
{
protected:
	vw1__HostIpRouteEntry _obj;
public:
	HostIpRouteEntry_closure(const vw1__HostIpRouteEntry& obj) : _obj(obj) {}
	virtual ~HostIpRouteEntry_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpRouteEntry"; }
};

class HostIpRouteOp_closure : public closure
{
protected:
	vw1__HostIpRouteOp _obj;
public:
	HostIpRouteOp_closure(const vw1__HostIpRouteOp& obj) : _obj(obj) {}
	virtual ~HostIpRouteOp_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpRouteOp"; }
};

class HostIpRouteTableConfig_closure : public closure
{
protected:
	vw1__HostIpRouteTableConfig _obj;
public:
	HostIpRouteTableConfig_closure(const vw1__HostIpRouteTableConfig& obj) : _obj(obj) {}
	virtual ~HostIpRouteTableConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpRouteTableConfig"; }
};

class HostIpRouteTableInfo_closure : public closure
{
protected:
	vw1__HostIpRouteTableInfo _obj;
public:
	HostIpRouteTableInfo_closure(const vw1__HostIpRouteTableInfo& obj) : _obj(obj) {}
	virtual ~HostIpRouteTableInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpRouteTableInfo"; }
};

class HostIpToShortNameFailedEvent_closure : public closure
{
protected:
	vw1__HostIpToShortNameFailedEvent _obj;
public:
	HostIpToShortNameFailedEvent_closure(const vw1__HostIpToShortNameFailedEvent& obj) : _obj(obj) {}
	virtual ~HostIpToShortNameFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpToShortNameFailedEvent"; }
};

class HostIpmiInfo_closure : public closure
{
protected:
	vw1__HostIpmiInfo _obj;
public:
	HostIpmiInfo_closure(const vw1__HostIpmiInfo& obj) : _obj(obj) {}
	virtual ~HostIpmiInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIpmiInfo"; }
};

class HostIsolationIpPingFailedEvent_closure : public closure
{
protected:
	vw1__HostIsolationIpPingFailedEvent _obj;
public:
	HostIsolationIpPingFailedEvent_closure(const vw1__HostIsolationIpPingFailedEvent& obj) : _obj(obj) {}
	virtual ~HostIsolationIpPingFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIsolationIpPingFailedEvent"; }
};

class HostLicensableResourceInfo_closure : public closure
{
protected:
	vw1__HostLicensableResourceInfo _obj;
public:
	HostLicensableResourceInfo_closure(const vw1__HostLicensableResourceInfo& obj) : _obj(obj) {}
	virtual ~HostLicensableResourceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLicensableResourceInfo"; }
};

class HostLicenseConnectInfo_closure : public closure
{
protected:
	vw1__HostLicenseConnectInfo _obj;
public:
	HostLicenseConnectInfo_closure(const vw1__HostLicenseConnectInfo& obj) : _obj(obj) {}
	virtual ~HostLicenseConnectInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLicenseConnectInfo"; }
};

class HostLicenseExpiredEvent_closure : public closure
{
protected:
	vw1__HostLicenseExpiredEvent _obj;
public:
	HostLicenseExpiredEvent_closure(const vw1__HostLicenseExpiredEvent& obj) : _obj(obj) {}
	virtual ~HostLicenseExpiredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLicenseExpiredEvent"; }
};

class HostLicenseSpec_closure : public closure
{
protected:
	vw1__HostLicenseSpec _obj;
public:
	HostLicenseSpec_closure(const vw1__HostLicenseSpec& obj) : _obj(obj) {}
	virtual ~HostLicenseSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLicenseSpec"; }
};

class HostListSummary_closure : public closure
{
protected:
	vw1__HostListSummary _obj;
public:
	HostListSummary_closure(const vw1__HostListSummary& obj) : _obj(obj) {}
	virtual ~HostListSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostListSummary"; }
};

class HostListSummaryQuickStats_closure : public closure
{
protected:
	vw1__HostListSummaryQuickStats _obj;
public:
	HostListSummaryQuickStats_closure(const vw1__HostListSummaryQuickStats& obj) : _obj(obj) {}
	virtual ~HostListSummaryQuickStats_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostListSummaryQuickStats"; }
};

class HostLocalAuthenticationInfo_closure : public closure
{
protected:
	vw1__HostLocalAuthenticationInfo _obj;
public:
	HostLocalAuthenticationInfo_closure(const vw1__HostLocalAuthenticationInfo& obj) : _obj(obj) {}
	virtual ~HostLocalAuthenticationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLocalAuthenticationInfo"; }
};

class HostLocalFileSystemVolume_closure : public closure
{
protected:
	vw1__HostLocalFileSystemVolume _obj;
public:
	HostLocalFileSystemVolume_closure(const vw1__HostLocalFileSystemVolume& obj) : _obj(obj) {}
	virtual ~HostLocalFileSystemVolume_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLocalFileSystemVolume"; }
};

class HostLocalFileSystemVolumeSpec_closure : public closure
{
protected:
	vw1__HostLocalFileSystemVolumeSpec _obj;
public:
	HostLocalFileSystemVolumeSpec_closure(const vw1__HostLocalFileSystemVolumeSpec& obj) : _obj(obj) {}
	virtual ~HostLocalFileSystemVolumeSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLocalFileSystemVolumeSpec"; }
};

class HostLowLevelProvisioningManagerDiskLayoutSpec_closure : public closure
{
protected:
	vw1__HostLowLevelProvisioningManagerDiskLayoutSpec _obj;
public:
	HostLowLevelProvisioningManagerDiskLayoutSpec_closure(const vw1__HostLowLevelProvisioningManagerDiskLayoutSpec& obj) : _obj(obj) {}
	virtual ~HostLowLevelProvisioningManagerDiskLayoutSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLowLevelProvisioningManagerDiskLayoutSpec"; }
};

class HostLowLevelProvisioningManagerSnapshotLayoutSpec_closure : public closure
{
protected:
	vw1__HostLowLevelProvisioningManagerSnapshotLayoutSpec _obj;
public:
	HostLowLevelProvisioningManagerSnapshotLayoutSpec_closure(const vw1__HostLowLevelProvisioningManagerSnapshotLayoutSpec& obj) : _obj(obj) {}
	virtual ~HostLowLevelProvisioningManagerSnapshotLayoutSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLowLevelProvisioningManagerSnapshotLayoutSpec"; }
};

class HostMemoryProfile_closure : public closure
{
protected:
	vw1__HostMemoryProfile _obj;
public:
	HostMemoryProfile_closure(const vw1__HostMemoryProfile& obj) : _obj(obj) {}
	virtual ~HostMemoryProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMemoryProfile"; }
};

class HostMemorySpec_closure : public closure
{
protected:
	vw1__HostMemorySpec _obj;
public:
	HostMemorySpec_closure(const vw1__HostMemorySpec& obj) : _obj(obj) {}
	virtual ~HostMemorySpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMemorySpec"; }
};

class HostMissingNetworksEvent_closure : public closure
{
protected:
	vw1__HostMissingNetworksEvent _obj;
public:
	HostMissingNetworksEvent_closure(const vw1__HostMissingNetworksEvent& obj) : _obj(obj) {}
	virtual ~HostMissingNetworksEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMissingNetworksEvent"; }
};

class HostMonitoringStateChangedEvent_closure : public closure
{
protected:
	vw1__HostMonitoringStateChangedEvent _obj;
public:
	HostMonitoringStateChangedEvent_closure(const vw1__HostMonitoringStateChangedEvent& obj) : _obj(obj) {}
	virtual ~HostMonitoringStateChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMonitoringStateChangedEvent"; }
};

class HostMountInfo_closure : public closure
{
protected:
	vw1__HostMountInfo _obj;
public:
	HostMountInfo_closure(const vw1__HostMountInfo& obj) : _obj(obj) {}
	virtual ~HostMountInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMountInfo"; }
};

class HostMultipathInfo_closure : public closure
{
protected:
	vw1__HostMultipathInfo _obj;
public:
	HostMultipathInfo_closure(const vw1__HostMultipathInfo& obj) : _obj(obj) {}
	virtual ~HostMultipathInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMultipathInfo"; }
};

class HostMultipathInfoFixedLogicalUnitPolicy_closure : public closure
{
protected:
	vw1__HostMultipathInfoFixedLogicalUnitPolicy _obj;
public:
	HostMultipathInfoFixedLogicalUnitPolicy_closure(const vw1__HostMultipathInfoFixedLogicalUnitPolicy& obj) : _obj(obj) {}
	virtual ~HostMultipathInfoFixedLogicalUnitPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMultipathInfoFixedLogicalUnitPolicy"; }
};

class HostMultipathInfoLogicalUnit_closure : public closure
{
protected:
	vw1__HostMultipathInfoLogicalUnit _obj;
public:
	HostMultipathInfoLogicalUnit_closure(const vw1__HostMultipathInfoLogicalUnit& obj) : _obj(obj) {}
	virtual ~HostMultipathInfoLogicalUnit_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMultipathInfoLogicalUnit"; }
};

class HostMultipathInfoLogicalUnitPolicy_closure : public closure
{
protected:
	vw1__HostMultipathInfoLogicalUnitPolicy _obj;
public:
	HostMultipathInfoLogicalUnitPolicy_closure(const vw1__HostMultipathInfoLogicalUnitPolicy& obj) : _obj(obj) {}
	virtual ~HostMultipathInfoLogicalUnitPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMultipathInfoLogicalUnitPolicy"; }
};

class HostMultipathInfoLogicalUnitStorageArrayTypePolicy_closure : public closure
{
protected:
	vw1__HostMultipathInfoLogicalUnitStorageArrayTypePolicy _obj;
public:
	HostMultipathInfoLogicalUnitStorageArrayTypePolicy_closure(const vw1__HostMultipathInfoLogicalUnitStorageArrayTypePolicy& obj) : _obj(obj) {}
	virtual ~HostMultipathInfoLogicalUnitStorageArrayTypePolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMultipathInfoLogicalUnitStorageArrayTypePolicy"; }
};

class HostMultipathInfoPath_closure : public closure
{
protected:
	vw1__HostMultipathInfoPath _obj;
public:
	HostMultipathInfoPath_closure(const vw1__HostMultipathInfoPath& obj) : _obj(obj) {}
	virtual ~HostMultipathInfoPath_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMultipathInfoPath"; }
};

class HostMultipathStateInfo_closure : public closure
{
protected:
	vw1__HostMultipathStateInfo _obj;
public:
	HostMultipathStateInfo_closure(const vw1__HostMultipathStateInfo& obj) : _obj(obj) {}
	virtual ~HostMultipathStateInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMultipathStateInfo"; }
};

class HostMultipathStateInfoPath_closure : public closure
{
protected:
	vw1__HostMultipathStateInfoPath _obj;
public:
	HostMultipathStateInfoPath_closure(const vw1__HostMultipathStateInfoPath& obj) : _obj(obj) {}
	virtual ~HostMultipathStateInfoPath_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMultipathStateInfoPath"; }
};

class HostNasVolume_closure : public closure
{
protected:
	vw1__HostNasVolume _obj;
public:
	HostNasVolume_closure(const vw1__HostNasVolume& obj) : _obj(obj) {}
	virtual ~HostNasVolume_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNasVolume"; }
};

class HostNasVolumeConfig_closure : public closure
{
protected:
	vw1__HostNasVolumeConfig _obj;
public:
	HostNasVolumeConfig_closure(const vw1__HostNasVolumeConfig& obj) : _obj(obj) {}
	virtual ~HostNasVolumeConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNasVolumeConfig"; }
};

class HostNasVolumeSpec_closure : public closure
{
protected:
	vw1__HostNasVolumeSpec _obj;
public:
	HostNasVolumeSpec_closure(const vw1__HostNasVolumeSpec& obj) : _obj(obj) {}
	virtual ~HostNasVolumeSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNasVolumeSpec"; }
};

class HostNatService_closure : public closure
{
protected:
	vw1__HostNatService _obj;
public:
	HostNatService_closure(const vw1__HostNatService& obj) : _obj(obj) {}
	virtual ~HostNatService_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNatService"; }
};

class HostNatServiceConfig_closure : public closure
{
protected:
	vw1__HostNatServiceConfig _obj;
public:
	HostNatServiceConfig_closure(const vw1__HostNatServiceConfig& obj) : _obj(obj) {}
	virtual ~HostNatServiceConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNatServiceConfig"; }
};

class HostNatServiceNameServiceSpec_closure : public closure
{
protected:
	vw1__HostNatServiceNameServiceSpec _obj;
public:
	HostNatServiceNameServiceSpec_closure(const vw1__HostNatServiceNameServiceSpec& obj) : _obj(obj) {}
	virtual ~HostNatServiceNameServiceSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNatServiceNameServiceSpec"; }
};

class HostNatServicePortForwardSpec_closure : public closure
{
protected:
	vw1__HostNatServicePortForwardSpec _obj;
public:
	HostNatServicePortForwardSpec_closure(const vw1__HostNatServicePortForwardSpec& obj) : _obj(obj) {}
	virtual ~HostNatServicePortForwardSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNatServicePortForwardSpec"; }
};

class HostNatServiceSpec_closure : public closure
{
protected:
	vw1__HostNatServiceSpec _obj;
public:
	HostNatServiceSpec_closure(const vw1__HostNatServiceSpec& obj) : _obj(obj) {}
	virtual ~HostNatServiceSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNatServiceSpec"; }
};

class HostNetCapabilities_closure : public closure
{
protected:
	vw1__HostNetCapabilities _obj;
public:
	HostNetCapabilities_closure(const vw1__HostNetCapabilities& obj) : _obj(obj) {}
	virtual ~HostNetCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetCapabilities"; }
};

class HostNetOffloadCapabilities_closure : public closure
{
protected:
	vw1__HostNetOffloadCapabilities _obj;
public:
	HostNetOffloadCapabilities_closure(const vw1__HostNetOffloadCapabilities& obj) : _obj(obj) {}
	virtual ~HostNetOffloadCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetOffloadCapabilities"; }
};

class HostNetworkConfig_closure : public closure
{
protected:
	vw1__HostNetworkConfig _obj;
public:
	HostNetworkConfig_closure(const vw1__HostNetworkConfig& obj) : _obj(obj) {}
	virtual ~HostNetworkConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetworkConfig"; }
};

class HostNetworkConfigResult_closure : public closure
{
protected:
	vw1__HostNetworkConfigResult _obj;
public:
	HostNetworkConfigResult_closure(const vw1__HostNetworkConfigResult& obj) : _obj(obj) {}
	virtual ~HostNetworkConfigResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetworkConfigResult"; }
};

class HostNetworkInfo_closure : public closure
{
protected:
	vw1__HostNetworkInfo _obj;
public:
	HostNetworkInfo_closure(const vw1__HostNetworkInfo& obj) : _obj(obj) {}
	virtual ~HostNetworkInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetworkInfo"; }
};

class HostNetworkPolicy_closure : public closure
{
protected:
	vw1__HostNetworkPolicy _obj;
public:
	HostNetworkPolicy_closure(const vw1__HostNetworkPolicy& obj) : _obj(obj) {}
	virtual ~HostNetworkPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetworkPolicy"; }
};

class HostNetworkSecurityPolicy_closure : public closure
{
protected:
	vw1__HostNetworkSecurityPolicy _obj;
public:
	HostNetworkSecurityPolicy_closure(const vw1__HostNetworkSecurityPolicy& obj) : _obj(obj) {}
	virtual ~HostNetworkSecurityPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetworkSecurityPolicy"; }
};

class HostNetworkTrafficShapingPolicy_closure : public closure
{
protected:
	vw1__HostNetworkTrafficShapingPolicy _obj;
public:
	HostNetworkTrafficShapingPolicy_closure(const vw1__HostNetworkTrafficShapingPolicy& obj) : _obj(obj) {}
	virtual ~HostNetworkTrafficShapingPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetworkTrafficShapingPolicy"; }
};

class HostNewNetworkConnectInfo_closure : public closure
{
protected:
	vw1__HostNewNetworkConnectInfo _obj;
public:
	HostNewNetworkConnectInfo_closure(const vw1__HostNewNetworkConnectInfo& obj) : _obj(obj) {}
	virtual ~HostNewNetworkConnectInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNewNetworkConnectInfo"; }
};

class HostNicFailureCriteria_closure : public closure
{
protected:
	vw1__HostNicFailureCriteria _obj;
public:
	HostNicFailureCriteria_closure(const vw1__HostNicFailureCriteria& obj) : _obj(obj) {}
	virtual ~HostNicFailureCriteria_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNicFailureCriteria"; }
};

class HostNicOrderPolicy_closure : public closure
{
protected:
	vw1__HostNicOrderPolicy _obj;
public:
	HostNicOrderPolicy_closure(const vw1__HostNicOrderPolicy& obj) : _obj(obj) {}
	virtual ~HostNicOrderPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNicOrderPolicy"; }
};

class HostNicTeamingPolicy_closure : public closure
{
protected:
	vw1__HostNicTeamingPolicy _obj;
public:
	HostNicTeamingPolicy_closure(const vw1__HostNicTeamingPolicy& obj) : _obj(obj) {}
	virtual ~HostNicTeamingPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNicTeamingPolicy"; }
};

class HostNoAvailableNetworksEvent_closure : public closure
{
protected:
	vw1__HostNoAvailableNetworksEvent _obj;
public:
	HostNoAvailableNetworksEvent_closure(const vw1__HostNoAvailableNetworksEvent& obj) : _obj(obj) {}
	virtual ~HostNoAvailableNetworksEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNoAvailableNetworksEvent"; }
};

class HostNoHAEnabledPortGroupsEvent_closure : public closure
{
protected:
	vw1__HostNoHAEnabledPortGroupsEvent _obj;
public:
	HostNoHAEnabledPortGroupsEvent_closure(const vw1__HostNoHAEnabledPortGroupsEvent& obj) : _obj(obj) {}
	virtual ~HostNoHAEnabledPortGroupsEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNoHAEnabledPortGroupsEvent"; }
};

class HostNoRedundantManagementNetworkEvent_closure : public closure
{
protected:
	vw1__HostNoRedundantManagementNetworkEvent _obj;
public:
	HostNoRedundantManagementNetworkEvent_closure(const vw1__HostNoRedundantManagementNetworkEvent& obj) : _obj(obj) {}
	virtual ~HostNoRedundantManagementNetworkEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNoRedundantManagementNetworkEvent"; }
};

class HostNonCompliantEvent_closure : public closure
{
protected:
	vw1__HostNonCompliantEvent _obj;
public:
	HostNonCompliantEvent_closure(const vw1__HostNonCompliantEvent& obj) : _obj(obj) {}
	virtual ~HostNonCompliantEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNonCompliantEvent"; }
};

class HostNotInClusterEvent_closure : public closure
{
protected:
	vw1__HostNotInClusterEvent _obj;
public:
	HostNotInClusterEvent_closure(const vw1__HostNotInClusterEvent& obj) : _obj(obj) {}
	virtual ~HostNotInClusterEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNotInClusterEvent"; }
};

class HostNtpConfig_closure : public closure
{
protected:
	vw1__HostNtpConfig _obj;
public:
	HostNtpConfig_closure(const vw1__HostNtpConfig& obj) : _obj(obj) {}
	virtual ~HostNtpConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNtpConfig"; }
};

class HostNumaInfo_closure : public closure
{
protected:
	vw1__HostNumaInfo _obj;
public:
	HostNumaInfo_closure(const vw1__HostNumaInfo& obj) : _obj(obj) {}
	virtual ~HostNumaInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNumaInfo"; }
};

class HostNumaNode_closure : public closure
{
protected:
	vw1__HostNumaNode _obj;
public:
	HostNumaNode_closure(const vw1__HostNumaNode& obj) : _obj(obj) {}
	virtual ~HostNumaNode_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNumaNode"; }
};

class HostNumericSensorInfo_closure : public closure
{
protected:
	vw1__HostNumericSensorInfo _obj;
public:
	HostNumericSensorInfo_closure(const vw1__HostNumericSensorInfo& obj) : _obj(obj) {}
	virtual ~HostNumericSensorInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNumericSensorInfo"; }
};

class HostOvercommittedEvent_closure : public closure
{
protected:
	vw1__HostOvercommittedEvent _obj;
public:
	HostOvercommittedEvent_closure(const vw1__HostOvercommittedEvent& obj) : _obj(obj) {}
	virtual ~HostOvercommittedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostOvercommittedEvent"; }
};

class HostParallelScsiHba_closure : public closure
{
protected:
	vw1__HostParallelScsiHba _obj;
public:
	HostParallelScsiHba_closure(const vw1__HostParallelScsiHba& obj) : _obj(obj) {}
	virtual ~HostParallelScsiHba_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostParallelScsiHba"; }
};

class HostParallelScsiTargetTransport_closure : public closure
{
protected:
	vw1__HostParallelScsiTargetTransport _obj;
public:
	HostParallelScsiTargetTransport_closure(const vw1__HostParallelScsiTargetTransport& obj) : _obj(obj) {}
	virtual ~HostParallelScsiTargetTransport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostParallelScsiTargetTransport"; }
};

class HostPatchManagerLocator_closure : public closure
{
protected:
	vw1__HostPatchManagerLocator _obj;
public:
	HostPatchManagerLocator_closure(const vw1__HostPatchManagerLocator& obj) : _obj(obj) {}
	virtual ~HostPatchManagerLocator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPatchManagerLocator"; }
};

class HostPatchManagerPatchManagerOperationSpec_closure : public closure
{
protected:
	vw1__HostPatchManagerPatchManagerOperationSpec _obj;
public:
	HostPatchManagerPatchManagerOperationSpec_closure(const vw1__HostPatchManagerPatchManagerOperationSpec& obj) : _obj(obj) {}
	virtual ~HostPatchManagerPatchManagerOperationSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPatchManagerPatchManagerOperationSpec"; }
};

class HostPatchManagerResult_closure : public closure
{
protected:
	vw1__HostPatchManagerResult _obj;
public:
	HostPatchManagerResult_closure(const vw1__HostPatchManagerResult& obj) : _obj(obj) {}
	virtual ~HostPatchManagerResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPatchManagerResult"; }
};

class HostPatchManagerStatus_closure : public closure
{
protected:
	vw1__HostPatchManagerStatus _obj;
public:
	HostPatchManagerStatus_closure(const vw1__HostPatchManagerStatus& obj) : _obj(obj) {}
	virtual ~HostPatchManagerStatus_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPatchManagerStatus"; }
};

class HostPatchManagerStatusPrerequisitePatch_closure : public closure
{
protected:
	vw1__HostPatchManagerStatusPrerequisitePatch _obj;
public:
	HostPatchManagerStatusPrerequisitePatch_closure(const vw1__HostPatchManagerStatusPrerequisitePatch& obj) : _obj(obj) {}
	virtual ~HostPatchManagerStatusPrerequisitePatch_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPatchManagerStatusPrerequisitePatch"; }
};

class HostPathSelectionPolicyOption_closure : public closure
{
protected:
	vw1__HostPathSelectionPolicyOption _obj;
public:
	HostPathSelectionPolicyOption_closure(const vw1__HostPathSelectionPolicyOption& obj) : _obj(obj) {}
	virtual ~HostPathSelectionPolicyOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPathSelectionPolicyOption"; }
};

class HostPciDevice_closure : public closure
{
protected:
	vw1__HostPciDevice _obj;
public:
	HostPciDevice_closure(const vw1__HostPciDevice& obj) : _obj(obj) {}
	virtual ~HostPciDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPciDevice"; }
};

class HostPciPassthruConfig_closure : public closure
{
protected:
	vw1__HostPciPassthruConfig _obj;
public:
	HostPciPassthruConfig_closure(const vw1__HostPciPassthruConfig& obj) : _obj(obj) {}
	virtual ~HostPciPassthruConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPciPassthruConfig"; }
};

class HostPciPassthruInfo_closure : public closure
{
protected:
	vw1__HostPciPassthruInfo _obj;
public:
	HostPciPassthruInfo_closure(const vw1__HostPciPassthruInfo& obj) : _obj(obj) {}
	virtual ~HostPciPassthruInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPciPassthruInfo"; }
};

class HostPlugStoreTopology_closure : public closure
{
protected:
	vw1__HostPlugStoreTopology _obj;
public:
	HostPlugStoreTopology_closure(const vw1__HostPlugStoreTopology& obj) : _obj(obj) {}
	virtual ~HostPlugStoreTopology_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPlugStoreTopology"; }
};

class HostPlugStoreTopologyAdapter_closure : public closure
{
protected:
	vw1__HostPlugStoreTopologyAdapter _obj;
public:
	HostPlugStoreTopologyAdapter_closure(const vw1__HostPlugStoreTopologyAdapter& obj) : _obj(obj) {}
	virtual ~HostPlugStoreTopologyAdapter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPlugStoreTopologyAdapter"; }
};

class HostPlugStoreTopologyDevice_closure : public closure
{
protected:
	vw1__HostPlugStoreTopologyDevice _obj;
public:
	HostPlugStoreTopologyDevice_closure(const vw1__HostPlugStoreTopologyDevice& obj) : _obj(obj) {}
	virtual ~HostPlugStoreTopologyDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPlugStoreTopologyDevice"; }
};

class HostPlugStoreTopologyPath_closure : public closure
{
protected:
	vw1__HostPlugStoreTopologyPath _obj;
public:
	HostPlugStoreTopologyPath_closure(const vw1__HostPlugStoreTopologyPath& obj) : _obj(obj) {}
	virtual ~HostPlugStoreTopologyPath_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPlugStoreTopologyPath"; }
};

class HostPlugStoreTopologyPlugin_closure : public closure
{
protected:
	vw1__HostPlugStoreTopologyPlugin _obj;
public:
	HostPlugStoreTopologyPlugin_closure(const vw1__HostPlugStoreTopologyPlugin& obj) : _obj(obj) {}
	virtual ~HostPlugStoreTopologyPlugin_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPlugStoreTopologyPlugin"; }
};

class HostPlugStoreTopologyTarget_closure : public closure
{
protected:
	vw1__HostPlugStoreTopologyTarget _obj;
public:
	HostPlugStoreTopologyTarget_closure(const vw1__HostPlugStoreTopologyTarget& obj) : _obj(obj) {}
	virtual ~HostPlugStoreTopologyTarget_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPlugStoreTopologyTarget"; }
};

class HostPortGroup_closure : public closure
{
protected:
	vw1__HostPortGroup _obj;
public:
	HostPortGroup_closure(const vw1__HostPortGroup& obj) : _obj(obj) {}
	virtual ~HostPortGroup_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPortGroup"; }
};

class HostPortGroupConfig_closure : public closure
{
protected:
	vw1__HostPortGroupConfig _obj;
public:
	HostPortGroupConfig_closure(const vw1__HostPortGroupConfig& obj) : _obj(obj) {}
	virtual ~HostPortGroupConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPortGroupConfig"; }
};

class HostPortGroupPort_closure : public closure
{
protected:
	vw1__HostPortGroupPort _obj;
public:
	HostPortGroupPort_closure(const vw1__HostPortGroupPort& obj) : _obj(obj) {}
	virtual ~HostPortGroupPort_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPortGroupPort"; }
};

class HostPortGroupProfile_closure : public closure
{
protected:
	vw1__HostPortGroupProfile _obj;
public:
	HostPortGroupProfile_closure(const vw1__HostPortGroupProfile& obj) : _obj(obj) {}
	virtual ~HostPortGroupProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPortGroupProfile"; }
};

class HostPortGroupSpec_closure : public closure
{
protected:
	vw1__HostPortGroupSpec _obj;
public:
	HostPortGroupSpec_closure(const vw1__HostPortGroupSpec& obj) : _obj(obj) {}
	virtual ~HostPortGroupSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPortGroupSpec"; }
};

class HostPosixAccountSpec_closure : public closure
{
protected:
	vw1__HostPosixAccountSpec _obj;
public:
	HostPosixAccountSpec_closure(const vw1__HostPosixAccountSpec& obj) : _obj(obj) {}
	virtual ~HostPosixAccountSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPosixAccountSpec"; }
};

class HostPowerPolicy_closure : public closure
{
protected:
	vw1__HostPowerPolicy _obj;
public:
	HostPowerPolicy_closure(const vw1__HostPowerPolicy& obj) : _obj(obj) {}
	virtual ~HostPowerPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPowerPolicy"; }
};

class HostPrimaryAgentNotShortNameEvent_closure : public closure
{
protected:
	vw1__HostPrimaryAgentNotShortNameEvent _obj;
public:
	HostPrimaryAgentNotShortNameEvent_closure(const vw1__HostPrimaryAgentNotShortNameEvent& obj) : _obj(obj) {}
	virtual ~HostPrimaryAgentNotShortNameEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPrimaryAgentNotShortNameEvent"; }
};

class HostProfileAppliedEvent_closure : public closure
{
protected:
	vw1__HostProfileAppliedEvent _obj;
public:
	HostProfileAppliedEvent_closure(const vw1__HostProfileAppliedEvent& obj) : _obj(obj) {}
	virtual ~HostProfileAppliedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfileAppliedEvent"; }
};

class HostProfileCompleteConfigSpec_closure : public closure
{
protected:
	vw1__HostProfileCompleteConfigSpec _obj;
public:
	HostProfileCompleteConfigSpec_closure(const vw1__HostProfileCompleteConfigSpec& obj) : _obj(obj) {}
	virtual ~HostProfileCompleteConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfileCompleteConfigSpec"; }
};

class HostProfileConfigInfo_closure : public closure
{
protected:
	vw1__HostProfileConfigInfo _obj;
public:
	HostProfileConfigInfo_closure(const vw1__HostProfileConfigInfo& obj) : _obj(obj) {}
	virtual ~HostProfileConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfileConfigInfo"; }
};

class HostProfileConfigSpec_closure : public closure
{
protected:
	vw1__HostProfileConfigSpec _obj;
public:
	HostProfileConfigSpec_closure(const vw1__HostProfileConfigSpec& obj) : _obj(obj) {}
	virtual ~HostProfileConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfileConfigSpec"; }
};

class HostProfileHostBasedConfigSpec_closure : public closure
{
protected:
	vw1__HostProfileHostBasedConfigSpec _obj;
public:
	HostProfileHostBasedConfigSpec_closure(const vw1__HostProfileHostBasedConfigSpec& obj) : _obj(obj) {}
	virtual ~HostProfileHostBasedConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfileHostBasedConfigSpec"; }
};

class HostProfileManagerConfigTaskList_closure : public closure
{
protected:
	vw1__HostProfileManagerConfigTaskList _obj;
public:
	HostProfileManagerConfigTaskList_closure(const vw1__HostProfileManagerConfigTaskList& obj) : _obj(obj) {}
	virtual ~HostProfileManagerConfigTaskList_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfileManagerConfigTaskList"; }
};

class HostProfileSerializedHostProfileSpec_closure : public closure
{
protected:
	vw1__HostProfileSerializedHostProfileSpec _obj;
public:
	HostProfileSerializedHostProfileSpec_closure(const vw1__HostProfileSerializedHostProfileSpec& obj) : _obj(obj) {}
	virtual ~HostProfileSerializedHostProfileSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfileSerializedHostProfileSpec"; }
};

class HostProxySwitch_closure : public closure
{
protected:
	vw1__HostProxySwitch _obj;
public:
	HostProxySwitch_closure(const vw1__HostProxySwitch& obj) : _obj(obj) {}
	virtual ~HostProxySwitch_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProxySwitch"; }
};

class HostProxySwitchConfig_closure : public closure
{
protected:
	vw1__HostProxySwitchConfig _obj;
public:
	HostProxySwitchConfig_closure(const vw1__HostProxySwitchConfig& obj) : _obj(obj) {}
	virtual ~HostProxySwitchConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProxySwitchConfig"; }
};

class HostProxySwitchSpec_closure : public closure
{
protected:
	vw1__HostProxySwitchSpec _obj;
public:
	HostProxySwitchSpec_closure(const vw1__HostProxySwitchSpec& obj) : _obj(obj) {}
	virtual ~HostProxySwitchSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProxySwitchSpec"; }
};

class HostReconnectionFailedEvent_closure : public closure
{
protected:
	vw1__HostReconnectionFailedEvent _obj;
public:
	HostReconnectionFailedEvent_closure(const vw1__HostReconnectionFailedEvent& obj) : _obj(obj) {}
	virtual ~HostReconnectionFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostReconnectionFailedEvent"; }
};

class HostRemovedEvent_closure : public closure
{
protected:
	vw1__HostRemovedEvent _obj;
public:
	HostRemovedEvent_closure(const vw1__HostRemovedEvent& obj) : _obj(obj) {}
	virtual ~HostRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostRemovedEvent"; }
};

class HostResignatureRescanResult_closure : public closure
{
protected:
	vw1__HostResignatureRescanResult _obj;
public:
	HostResignatureRescanResult_closure(const vw1__HostResignatureRescanResult& obj) : _obj(obj) {}
	virtual ~HostResignatureRescanResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostResignatureRescanResult"; }
};

class HostRuntimeInfo_closure : public closure
{
protected:
	vw1__HostRuntimeInfo _obj;
public:
	HostRuntimeInfo_closure(const vw1__HostRuntimeInfo& obj) : _obj(obj) {}
	virtual ~HostRuntimeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostRuntimeInfo"; }
};

class HostScsiDisk_closure : public closure
{
protected:
	vw1__HostScsiDisk _obj;
public:
	HostScsiDisk_closure(const vw1__HostScsiDisk& obj) : _obj(obj) {}
	virtual ~HostScsiDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostScsiDisk"; }
};

class HostScsiDiskPartition_closure : public closure
{
protected:
	vw1__HostScsiDiskPartition _obj;
public:
	HostScsiDiskPartition_closure(const vw1__HostScsiDiskPartition& obj) : _obj(obj) {}
	virtual ~HostScsiDiskPartition_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostScsiDiskPartition"; }
};

class HostScsiTopology_closure : public closure
{
protected:
	vw1__HostScsiTopology _obj;
public:
	HostScsiTopology_closure(const vw1__HostScsiTopology& obj) : _obj(obj) {}
	virtual ~HostScsiTopology_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostScsiTopology"; }
};

class HostScsiTopologyInterface_closure : public closure
{
protected:
	vw1__HostScsiTopologyInterface _obj;
public:
	HostScsiTopologyInterface_closure(const vw1__HostScsiTopologyInterface& obj) : _obj(obj) {}
	virtual ~HostScsiTopologyInterface_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostScsiTopologyInterface"; }
};

class HostScsiTopologyLun_closure : public closure
{
protected:
	vw1__HostScsiTopologyLun _obj;
public:
	HostScsiTopologyLun_closure(const vw1__HostScsiTopologyLun& obj) : _obj(obj) {}
	virtual ~HostScsiTopologyLun_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostScsiTopologyLun"; }
};

class HostScsiTopologyTarget_closure : public closure
{
protected:
	vw1__HostScsiTopologyTarget _obj;
public:
	HostScsiTopologyTarget_closure(const vw1__HostScsiTopologyTarget& obj) : _obj(obj) {}
	virtual ~HostScsiTopologyTarget_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostScsiTopologyTarget"; }
};

class HostSecuritySpec_closure : public closure
{
protected:
	vw1__HostSecuritySpec _obj;
public:
	HostSecuritySpec_closure(const vw1__HostSecuritySpec& obj) : _obj(obj) {}
	virtual ~HostSecuritySpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSecuritySpec"; }
};

class HostService_closure : public closure
{
protected:
	vw1__HostService _obj;
public:
	HostService_closure(const vw1__HostService& obj) : _obj(obj) {}
	virtual ~HostService_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostService"; }
};

class HostServiceConfig_closure : public closure
{
protected:
	vw1__HostServiceConfig _obj;
public:
	HostServiceConfig_closure(const vw1__HostServiceConfig& obj) : _obj(obj) {}
	virtual ~HostServiceConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostServiceConfig"; }
};

class HostServiceInfo_closure : public closure
{
protected:
	vw1__HostServiceInfo _obj;
public:
	HostServiceInfo_closure(const vw1__HostServiceInfo& obj) : _obj(obj) {}
	virtual ~HostServiceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostServiceInfo"; }
};

class HostServiceSourcePackage_closure : public closure
{
protected:
	vw1__HostServiceSourcePackage _obj;
public:
	HostServiceSourcePackage_closure(const vw1__HostServiceSourcePackage& obj) : _obj(obj) {}
	virtual ~HostServiceSourcePackage_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostServiceSourcePackage"; }
};

class HostServiceTicket_closure : public closure
{
protected:
	vw1__HostServiceTicket _obj;
public:
	HostServiceTicket_closure(const vw1__HostServiceTicket& obj) : _obj(obj) {}
	virtual ~HostServiceTicket_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostServiceTicket"; }
};

class HostShortNameInconsistentEvent_closure : public closure
{
protected:
	vw1__HostShortNameInconsistentEvent _obj;
public:
	HostShortNameInconsistentEvent_closure(const vw1__HostShortNameInconsistentEvent& obj) : _obj(obj) {}
	virtual ~HostShortNameInconsistentEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostShortNameInconsistentEvent"; }
};

class HostShortNameToIpFailedEvent_closure : public closure
{
protected:
	vw1__HostShortNameToIpFailedEvent _obj;
public:
	HostShortNameToIpFailedEvent_closure(const vw1__HostShortNameToIpFailedEvent& obj) : _obj(obj) {}
	virtual ~HostShortNameToIpFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostShortNameToIpFailedEvent"; }
};

class HostShutdownEvent_closure : public closure
{
protected:
	vw1__HostShutdownEvent _obj;
public:
	HostShutdownEvent_closure(const vw1__HostShutdownEvent& obj) : _obj(obj) {}
	virtual ~HostShutdownEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostShutdownEvent"; }
};

class HostSnmpConfigSpec_closure : public closure
{
protected:
	vw1__HostSnmpConfigSpec _obj;
public:
	HostSnmpConfigSpec_closure(const vw1__HostSnmpConfigSpec& obj) : _obj(obj) {}
	virtual ~HostSnmpConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSnmpConfigSpec"; }
};

class HostSnmpDestination_closure : public closure
{
protected:
	vw1__HostSnmpDestination _obj;
public:
	HostSnmpDestination_closure(const vw1__HostSnmpDestination& obj) : _obj(obj) {}
	virtual ~HostSnmpDestination_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSnmpDestination"; }
};

class HostSnmpSystemAgentLimits_closure : public closure
{
protected:
	vw1__HostSnmpSystemAgentLimits _obj;
public:
	HostSnmpSystemAgentLimits_closure(const vw1__HostSnmpSystemAgentLimits& obj) : _obj(obj) {}
	virtual ~HostSnmpSystemAgentLimits_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSnmpSystemAgentLimits"; }
};

class HostSslThumbprintInfo_closure : public closure
{
protected:
	vw1__HostSslThumbprintInfo _obj;
public:
	HostSslThumbprintInfo_closure(const vw1__HostSslThumbprintInfo& obj) : _obj(obj) {}
	virtual ~HostSslThumbprintInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSslThumbprintInfo"; }
};

class HostStatusChangedEvent_closure : public closure
{
protected:
	vw1__HostStatusChangedEvent _obj;
public:
	HostStatusChangedEvent_closure(const vw1__HostStatusChangedEvent& obj) : _obj(obj) {}
	virtual ~HostStatusChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostStatusChangedEvent"; }
};

class HostStorageArrayTypePolicyOption_closure : public closure
{
protected:
	vw1__HostStorageArrayTypePolicyOption _obj;
public:
	HostStorageArrayTypePolicyOption_closure(const vw1__HostStorageArrayTypePolicyOption& obj) : _obj(obj) {}
	virtual ~HostStorageArrayTypePolicyOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostStorageArrayTypePolicyOption"; }
};

class HostStorageDeviceInfo_closure : public closure
{
protected:
	vw1__HostStorageDeviceInfo _obj;
public:
	HostStorageDeviceInfo_closure(const vw1__HostStorageDeviceInfo& obj) : _obj(obj) {}
	virtual ~HostStorageDeviceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostStorageDeviceInfo"; }
};

class HostStorageElementInfo_closure : public closure
{
protected:
	vw1__HostStorageElementInfo _obj;
public:
	HostStorageElementInfo_closure(const vw1__HostStorageElementInfo& obj) : _obj(obj) {}
	virtual ~HostStorageElementInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostStorageElementInfo"; }
};

class HostStorageOperationalInfo_closure : public closure
{
protected:
	vw1__HostStorageOperationalInfo _obj;
public:
	HostStorageOperationalInfo_closure(const vw1__HostStorageOperationalInfo& obj) : _obj(obj) {}
	virtual ~HostStorageOperationalInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostStorageOperationalInfo"; }
};

class HostSyncFailedEvent_closure : public closure
{
protected:
	vw1__HostSyncFailedEvent _obj;
public:
	HostSyncFailedEvent_closure(const vw1__HostSyncFailedEvent& obj) : _obj(obj) {}
	virtual ~HostSyncFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSyncFailedEvent"; }
};

class HostSystemHealthInfo_closure : public closure
{
protected:
	vw1__HostSystemHealthInfo _obj;
public:
	HostSystemHealthInfo_closure(const vw1__HostSystemHealthInfo& obj) : _obj(obj) {}
	virtual ~HostSystemHealthInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSystemHealthInfo"; }
};

class HostSystemIdentificationInfo_closure : public closure
{
protected:
	vw1__HostSystemIdentificationInfo _obj;
public:
	HostSystemIdentificationInfo_closure(const vw1__HostSystemIdentificationInfo& obj) : _obj(obj) {}
	virtual ~HostSystemIdentificationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSystemIdentificationInfo"; }
};

class HostSystemInfo_closure : public closure
{
protected:
	vw1__HostSystemInfo _obj;
public:
	HostSystemInfo_closure(const vw1__HostSystemInfo& obj) : _obj(obj) {}
	virtual ~HostSystemInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSystemInfo"; }
};

class HostSystemReconnectSpec_closure : public closure
{
protected:
	vw1__HostSystemReconnectSpec _obj;
public:
	HostSystemReconnectSpec_closure(const vw1__HostSystemReconnectSpec& obj) : _obj(obj) {}
	virtual ~HostSystemReconnectSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSystemReconnectSpec"; }
};

class HostSystemResourceInfo_closure : public closure
{
protected:
	vw1__HostSystemResourceInfo _obj;
public:
	HostSystemResourceInfo_closure(const vw1__HostSystemResourceInfo& obj) : _obj(obj) {}
	virtual ~HostSystemResourceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSystemResourceInfo"; }
};

class HostTargetTransport_closure : public closure
{
protected:
	vw1__HostTargetTransport _obj;
public:
	HostTargetTransport_closure(const vw1__HostTargetTransport& obj) : _obj(obj) {}
	virtual ~HostTargetTransport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostTargetTransport"; }
};

class HostTpmDigestInfo_closure : public closure
{
protected:
	vw1__HostTpmDigestInfo _obj;
public:
	HostTpmDigestInfo_closure(const vw1__HostTpmDigestInfo& obj) : _obj(obj) {}
	virtual ~HostTpmDigestInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostTpmDigestInfo"; }
};

class HostUnresolvedVmfsExtent_closure : public closure
{
protected:
	vw1__HostUnresolvedVmfsExtent _obj;
public:
	HostUnresolvedVmfsExtent_closure(const vw1__HostUnresolvedVmfsExtent& obj) : _obj(obj) {}
	virtual ~HostUnresolvedVmfsExtent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostUnresolvedVmfsExtent"; }
};

class HostUnresolvedVmfsResignatureSpec_closure : public closure
{
protected:
	vw1__HostUnresolvedVmfsResignatureSpec _obj;
public:
	HostUnresolvedVmfsResignatureSpec_closure(const vw1__HostUnresolvedVmfsResignatureSpec& obj) : _obj(obj) {}
	virtual ~HostUnresolvedVmfsResignatureSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostUnresolvedVmfsResignatureSpec"; }
};

class HostUnresolvedVmfsResolutionResult_closure : public closure
{
protected:
	vw1__HostUnresolvedVmfsResolutionResult _obj;
public:
	HostUnresolvedVmfsResolutionResult_closure(const vw1__HostUnresolvedVmfsResolutionResult& obj) : _obj(obj) {}
	virtual ~HostUnresolvedVmfsResolutionResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostUnresolvedVmfsResolutionResult"; }
};

class HostUnresolvedVmfsResolutionSpec_closure : public closure
{
protected:
	vw1__HostUnresolvedVmfsResolutionSpec _obj;
public:
	HostUnresolvedVmfsResolutionSpec_closure(const vw1__HostUnresolvedVmfsResolutionSpec& obj) : _obj(obj) {}
	virtual ~HostUnresolvedVmfsResolutionSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostUnresolvedVmfsResolutionSpec"; }
};

class HostUnresolvedVmfsVolume_closure : public closure
{
protected:
	vw1__HostUnresolvedVmfsVolume _obj;
public:
	HostUnresolvedVmfsVolume_closure(const vw1__HostUnresolvedVmfsVolume& obj) : _obj(obj) {}
	virtual ~HostUnresolvedVmfsVolume_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostUnresolvedVmfsVolume"; }
};

class HostUnresolvedVmfsVolumeResolveStatus_closure : public closure
{
protected:
	vw1__HostUnresolvedVmfsVolumeResolveStatus _obj;
public:
	HostUnresolvedVmfsVolumeResolveStatus_closure(const vw1__HostUnresolvedVmfsVolumeResolveStatus& obj) : _obj(obj) {}
	virtual ~HostUnresolvedVmfsVolumeResolveStatus_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostUnresolvedVmfsVolumeResolveStatus"; }
};

class HostUpgradeFailedEvent_closure : public closure
{
protected:
	vw1__HostUpgradeFailedEvent _obj;
public:
	HostUpgradeFailedEvent_closure(const vw1__HostUpgradeFailedEvent& obj) : _obj(obj) {}
	virtual ~HostUpgradeFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostUpgradeFailedEvent"; }
};

class HostUserWorldSwapNotEnabledEvent_closure : public closure
{
protected:
	vw1__HostUserWorldSwapNotEnabledEvent _obj;
public:
	HostUserWorldSwapNotEnabledEvent_closure(const vw1__HostUserWorldSwapNotEnabledEvent& obj) : _obj(obj) {}
	virtual ~HostUserWorldSwapNotEnabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostUserWorldSwapNotEnabledEvent"; }
};

class HostVMotionCompatibility_closure : public closure
{
protected:
	vw1__HostVMotionCompatibility _obj;
public:
	HostVMotionCompatibility_closure(const vw1__HostVMotionCompatibility& obj) : _obj(obj) {}
	virtual ~HostVMotionCompatibility_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVMotionCompatibility"; }
};

class HostVMotionConfig_closure : public closure
{
protected:
	vw1__HostVMotionConfig _obj;
public:
	HostVMotionConfig_closure(const vw1__HostVMotionConfig& obj) : _obj(obj) {}
	virtual ~HostVMotionConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVMotionConfig"; }
};

class HostVMotionInfo_closure : public closure
{
protected:
	vw1__HostVMotionInfo _obj;
public:
	HostVMotionInfo_closure(const vw1__HostVMotionInfo& obj) : _obj(obj) {}
	virtual ~HostVMotionInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVMotionInfo"; }
};

class HostVMotionNetConfig_closure : public closure
{
protected:
	vw1__HostVMotionNetConfig _obj;
public:
	HostVMotionNetConfig_closure(const vw1__HostVMotionNetConfig& obj) : _obj(obj) {}
	virtual ~HostVMotionNetConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVMotionNetConfig"; }
};

class HostVfatVolume_closure : public closure
{
protected:
	vw1__HostVfatVolume _obj;
public:
	HostVfatVolume_closure(const vw1__HostVfatVolume& obj) : _obj(obj) {}
	virtual ~HostVfatVolume_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVfatVolume"; }
};

class HostVirtualNic_closure : public closure
{
protected:
	vw1__HostVirtualNic _obj;
public:
	HostVirtualNic_closure(const vw1__HostVirtualNic& obj) : _obj(obj) {}
	virtual ~HostVirtualNic_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualNic"; }
};

class HostVirtualNicConfig_closure : public closure
{
protected:
	vw1__HostVirtualNicConfig _obj;
public:
	HostVirtualNicConfig_closure(const vw1__HostVirtualNicConfig& obj) : _obj(obj) {}
	virtual ~HostVirtualNicConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualNicConfig"; }
};

class HostVirtualNicConnection_closure : public closure
{
protected:
	vw1__HostVirtualNicConnection _obj;
public:
	HostVirtualNicConnection_closure(const vw1__HostVirtualNicConnection& obj) : _obj(obj) {}
	virtual ~HostVirtualNicConnection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualNicConnection"; }
};

class HostVirtualNicManagerInfo_closure : public closure
{
protected:
	vw1__HostVirtualNicManagerInfo _obj;
public:
	HostVirtualNicManagerInfo_closure(const vw1__HostVirtualNicManagerInfo& obj) : _obj(obj) {}
	virtual ~HostVirtualNicManagerInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualNicManagerInfo"; }
};

class HostVirtualNicManagerNicTypeSelection_closure : public closure
{
protected:
	vw1__HostVirtualNicManagerNicTypeSelection _obj;
public:
	HostVirtualNicManagerNicTypeSelection_closure(const vw1__HostVirtualNicManagerNicTypeSelection& obj) : _obj(obj) {}
	virtual ~HostVirtualNicManagerNicTypeSelection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualNicManagerNicTypeSelection"; }
};

class HostVirtualNicSpec_closure : public closure
{
protected:
	vw1__HostVirtualNicSpec _obj;
public:
	HostVirtualNicSpec_closure(const vw1__HostVirtualNicSpec& obj) : _obj(obj) {}
	virtual ~HostVirtualNicSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualNicSpec"; }
};

class HostVirtualSwitch_closure : public closure
{
protected:
	vw1__HostVirtualSwitch _obj;
public:
	HostVirtualSwitch_closure(const vw1__HostVirtualSwitch& obj) : _obj(obj) {}
	virtual ~HostVirtualSwitch_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualSwitch"; }
};

class HostVirtualSwitchAutoBridge_closure : public closure
{
protected:
	vw1__HostVirtualSwitchAutoBridge _obj;
public:
	HostVirtualSwitchAutoBridge_closure(const vw1__HostVirtualSwitchAutoBridge& obj) : _obj(obj) {}
	virtual ~HostVirtualSwitchAutoBridge_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualSwitchAutoBridge"; }
};

class HostVirtualSwitchBeaconConfig_closure : public closure
{
protected:
	vw1__HostVirtualSwitchBeaconConfig _obj;
public:
	HostVirtualSwitchBeaconConfig_closure(const vw1__HostVirtualSwitchBeaconConfig& obj) : _obj(obj) {}
	virtual ~HostVirtualSwitchBeaconConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualSwitchBeaconConfig"; }
};

class HostVirtualSwitchBondBridge_closure : public closure
{
protected:
	vw1__HostVirtualSwitchBondBridge _obj;
public:
	HostVirtualSwitchBondBridge_closure(const vw1__HostVirtualSwitchBondBridge& obj) : _obj(obj) {}
	virtual ~HostVirtualSwitchBondBridge_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualSwitchBondBridge"; }
};

class HostVirtualSwitchBridge_closure : public closure
{
protected:
	vw1__HostVirtualSwitchBridge _obj;
public:
	HostVirtualSwitchBridge_closure(const vw1__HostVirtualSwitchBridge& obj) : _obj(obj) {}
	virtual ~HostVirtualSwitchBridge_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualSwitchBridge"; }
};

class HostVirtualSwitchConfig_closure : public closure
{
protected:
	vw1__HostVirtualSwitchConfig _obj;
public:
	HostVirtualSwitchConfig_closure(const vw1__HostVirtualSwitchConfig& obj) : _obj(obj) {}
	virtual ~HostVirtualSwitchConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualSwitchConfig"; }
};

class HostVirtualSwitchSimpleBridge_closure : public closure
{
protected:
	vw1__HostVirtualSwitchSimpleBridge _obj;
public:
	HostVirtualSwitchSimpleBridge_closure(const vw1__HostVirtualSwitchSimpleBridge& obj) : _obj(obj) {}
	virtual ~HostVirtualSwitchSimpleBridge_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualSwitchSimpleBridge"; }
};

class HostVirtualSwitchSpec_closure : public closure
{
protected:
	vw1__HostVirtualSwitchSpec _obj;
public:
	HostVirtualSwitchSpec_closure(const vw1__HostVirtualSwitchSpec& obj) : _obj(obj) {}
	virtual ~HostVirtualSwitchSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualSwitchSpec"; }
};

class HostVmciAccessManagerAccessSpec_closure : public closure
{
protected:
	vw1__HostVmciAccessManagerAccessSpec _obj;
public:
	HostVmciAccessManagerAccessSpec_closure(const vw1__HostVmciAccessManagerAccessSpec& obj) : _obj(obj) {}
	virtual ~HostVmciAccessManagerAccessSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVmciAccessManagerAccessSpec"; }
};

class HostVmfsRescanResult_closure : public closure
{
protected:
	vw1__HostVmfsRescanResult _obj;
public:
	HostVmfsRescanResult_closure(const vw1__HostVmfsRescanResult& obj) : _obj(obj) {}
	virtual ~HostVmfsRescanResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVmfsRescanResult"; }
};

class HostVmfsSpec_closure : public closure
{
protected:
	vw1__HostVmfsSpec _obj;
public:
	HostVmfsSpec_closure(const vw1__HostVmfsSpec& obj) : _obj(obj) {}
	virtual ~HostVmfsSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVmfsSpec"; }
};

class HostVmfsVolume_closure : public closure
{
protected:
	vw1__HostVmfsVolume _obj;
public:
	HostVmfsVolume_closure(const vw1__HostVmfsVolume& obj) : _obj(obj) {}
	virtual ~HostVmfsVolume_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVmfsVolume"; }
};

class HostVnicConnectedToCustomizedDVPortEvent_closure : public closure
{
protected:
	vw1__HostVnicConnectedToCustomizedDVPortEvent _obj;
public:
	HostVnicConnectedToCustomizedDVPortEvent_closure(const vw1__HostVnicConnectedToCustomizedDVPortEvent& obj) : _obj(obj) {}
	virtual ~HostVnicConnectedToCustomizedDVPortEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVnicConnectedToCustomizedDVPortEvent"; }
};

class HostWwnChangedEvent_closure : public closure
{
protected:
	vw1__HostWwnChangedEvent _obj;
public:
	HostWwnChangedEvent_closure(const vw1__HostWwnChangedEvent& obj) : _obj(obj) {}
	virtual ~HostWwnChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostWwnChangedEvent"; }
};

class HostWwnConflictEvent_closure : public closure
{
protected:
	vw1__HostWwnConflictEvent _obj;
public:
	HostWwnConflictEvent_closure(const vw1__HostWwnConflictEvent& obj) : _obj(obj) {}
	virtual ~HostWwnConflictEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostWwnConflictEvent"; }
};

class HourlyTaskScheduler_closure : public closure
{
protected:
	vw1__HourlyTaskScheduler _obj;
public:
	HourlyTaskScheduler_closure(const vw1__HourlyTaskScheduler& obj) : _obj(obj) {}
	virtual ~HourlyTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HourlyTaskScheduler"; }
};

class HttpNfcLeaseDatastoreLeaseInfo_closure : public closure
{
protected:
	vw1__HttpNfcLeaseDatastoreLeaseInfo _obj;
public:
	HttpNfcLeaseDatastoreLeaseInfo_closure(const vw1__HttpNfcLeaseDatastoreLeaseInfo& obj) : _obj(obj) {}
	virtual ~HttpNfcLeaseDatastoreLeaseInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HttpNfcLeaseDatastoreLeaseInfo"; }
};

class HttpNfcLeaseDeviceUrl_closure : public closure
{
protected:
	vw1__HttpNfcLeaseDeviceUrl _obj;
public:
	HttpNfcLeaseDeviceUrl_closure(const vw1__HttpNfcLeaseDeviceUrl& obj) : _obj(obj) {}
	virtual ~HttpNfcLeaseDeviceUrl_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HttpNfcLeaseDeviceUrl"; }
};

class HttpNfcLeaseHostInfo_closure : public closure
{
protected:
	vw1__HttpNfcLeaseHostInfo _obj;
public:
	HttpNfcLeaseHostInfo_closure(const vw1__HttpNfcLeaseHostInfo& obj) : _obj(obj) {}
	virtual ~HttpNfcLeaseHostInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HttpNfcLeaseHostInfo"; }
};

class HttpNfcLeaseInfo_closure : public closure
{
protected:
	vw1__HttpNfcLeaseInfo _obj;
public:
	HttpNfcLeaseInfo_closure(const vw1__HttpNfcLeaseInfo& obj) : _obj(obj) {}
	virtual ~HttpNfcLeaseInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HttpNfcLeaseInfo"; }
};

class HttpNfcLeaseManifestEntry_closure : public closure
{
protected:
	vw1__HttpNfcLeaseManifestEntry _obj;
public:
	HttpNfcLeaseManifestEntry_closure(const vw1__HttpNfcLeaseManifestEntry& obj) : _obj(obj) {}
	virtual ~HttpNfcLeaseManifestEntry_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HttpNfcLeaseManifestEntry"; }
};

class IScsiBootFailureEvent_closure : public closure
{
protected:
	vw1__IScsiBootFailureEvent _obj;
public:
	IScsiBootFailureEvent_closure(const vw1__IScsiBootFailureEvent& obj) : _obj(obj) {}
	virtual ~IScsiBootFailureEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IScsiBootFailureEvent"; }
};

class ImportSpec_closure : public closure
{
protected:
	vw1__ImportSpec _obj;
public:
	ImportSpec_closure(const vw1__ImportSpec& obj) : _obj(obj) {}
	virtual ~ImportSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ImportSpec"; }
};

class IncorrectHostInformationEvent_closure : public closure
{
protected:
	vw1__IncorrectHostInformationEvent _obj;
public:
	IncorrectHostInformationEvent_closure(const vw1__IncorrectHostInformationEvent& obj) : _obj(obj) {}
	virtual ~IncorrectHostInformationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IncorrectHostInformationEvent"; }
};

class InfoUpgradeEvent_closure : public closure
{
protected:
	vw1__InfoUpgradeEvent _obj;
public:
	InfoUpgradeEvent_closure(const vw1__InfoUpgradeEvent& obj) : _obj(obj) {}
	virtual ~InfoUpgradeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InfoUpgradeEvent"; }
};

class InheritablePolicy_closure : public closure
{
protected:
	vw1__InheritablePolicy _obj;
public:
	InheritablePolicy_closure(const vw1__InheritablePolicy& obj) : _obj(obj) {}
	virtual ~InheritablePolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InheritablePolicy"; }
};

class InsufficientFailoverResourcesEvent_closure : public closure
{
protected:
	vw1__InsufficientFailoverResourcesEvent _obj;
public:
	InsufficientFailoverResourcesEvent_closure(const vw1__InsufficientFailoverResourcesEvent& obj) : _obj(obj) {}
	virtual ~InsufficientFailoverResourcesEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientFailoverResourcesEvent"; }
};

class IntOption_closure : public closure
{
protected:
	vw1__IntOption _obj;
public:
	IntOption_closure(const vw1__IntOption& obj) : _obj(obj) {}
	virtual ~IntOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IntOption"; }
};

class IntPolicy_closure : public closure
{
protected:
	vw1__IntPolicy _obj;
public:
	IntPolicy_closure(const vw1__IntPolicy& obj) : _obj(obj) {}
	virtual ~IntPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IntPolicy"; }
};

class InvalidEditionEvent_closure : public closure
{
protected:
	vw1__InvalidEditionEvent _obj;
public:
	InvalidEditionEvent_closure(const vw1__InvalidEditionEvent& obj) : _obj(obj) {}
	virtual ~InvalidEditionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidEditionEvent"; }
};

class InventoryDescription_closure : public closure
{
protected:
	vw1__InventoryDescription _obj;
public:
	InventoryDescription_closure(const vw1__InventoryDescription& obj) : _obj(obj) {}
	virtual ~InventoryDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InventoryDescription"; }
};

class IpAddressProfile_closure : public closure
{
protected:
	vw1__IpAddressProfile _obj;
public:
	IpAddressProfile_closure(const vw1__IpAddressProfile& obj) : _obj(obj) {}
	virtual ~IpAddressProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IpAddressProfile"; }
};

class IpPool_closure : public closure
{
protected:
	vw1__IpPool _obj;
public:
	IpPool_closure(const vw1__IpPool& obj) : _obj(obj) {}
	virtual ~IpPool_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IpPool"; }
};

class IpPoolAssociation_closure : public closure
{
protected:
	vw1__IpPoolAssociation _obj;
public:
	IpPoolAssociation_closure(const vw1__IpPoolAssociation& obj) : _obj(obj) {}
	virtual ~IpPoolAssociation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IpPoolAssociation"; }
};

class IpPoolIpPoolConfigInfo_closure : public closure
{
protected:
	vw1__IpPoolIpPoolConfigInfo _obj;
public:
	IpPoolIpPoolConfigInfo_closure(const vw1__IpPoolIpPoolConfigInfo& obj) : _obj(obj) {}
	virtual ~IpPoolIpPoolConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IpPoolIpPoolConfigInfo"; }
};

class IpRouteProfile_closure : public closure
{
protected:
	vw1__IpRouteProfile _obj;
public:
	IpRouteProfile_closure(const vw1__IpRouteProfile& obj) : _obj(obj) {}
	virtual ~IpRouteProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IpRouteProfile"; }
};

class IscsiDependencyEntity_closure : public closure
{
protected:
	vw1__IscsiDependencyEntity _obj;
public:
	IscsiDependencyEntity_closure(const vw1__IscsiDependencyEntity& obj) : _obj(obj) {}
	virtual ~IscsiDependencyEntity_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiDependencyEntity"; }
};

class IscsiMigrationDependency_closure : public closure
{
protected:
	vw1__IscsiMigrationDependency _obj;
public:
	IscsiMigrationDependency_closure(const vw1__IscsiMigrationDependency& obj) : _obj(obj) {}
	virtual ~IscsiMigrationDependency_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiMigrationDependency"; }
};

class IscsiPortInfo_closure : public closure
{
protected:
	vw1__IscsiPortInfo _obj;
public:
	IscsiPortInfo_closure(const vw1__IscsiPortInfo& obj) : _obj(obj) {}
	virtual ~IscsiPortInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiPortInfo"; }
};

class IscsiStatus_closure : public closure
{
protected:
	vw1__IscsiStatus _obj;
public:
	IscsiStatus_closure(const vw1__IscsiStatus& obj) : _obj(obj) {}
	virtual ~IscsiStatus_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiStatus"; }
};

class IsoImageFileInfo_closure : public closure
{
protected:
	vw1__IsoImageFileInfo _obj;
public:
	IsoImageFileInfo_closure(const vw1__IsoImageFileInfo& obj) : _obj(obj) {}
	virtual ~IsoImageFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IsoImageFileInfo"; }
};

class IsoImageFileQuery_closure : public closure
{
protected:
	vw1__IsoImageFileQuery _obj;
public:
	IsoImageFileQuery_closure(const vw1__IsoImageFileQuery& obj) : _obj(obj) {}
	virtual ~IsoImageFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IsoImageFileQuery"; }
};

class KernelModuleInfo_closure : public closure
{
protected:
	vw1__KernelModuleInfo _obj;
public:
	KernelModuleInfo_closure(const vw1__KernelModuleInfo& obj) : _obj(obj) {}
	virtual ~KernelModuleInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "KernelModuleInfo"; }
};

class KernelModuleSectionInfo_closure : public closure
{
protected:
	vw1__KernelModuleSectionInfo _obj;
public:
	KernelModuleSectionInfo_closure(const vw1__KernelModuleSectionInfo& obj) : _obj(obj) {}
	virtual ~KernelModuleSectionInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "KernelModuleSectionInfo"; }
};

class KeyAnyValue_closure : public closure
{
protected:
	vw1__KeyAnyValue _obj;
public:
	KeyAnyValue_closure(const vw1__KeyAnyValue& obj) : _obj(obj) {}
	virtual ~KeyAnyValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "KeyAnyValue"; }
};

class KeyValue_closure : public closure
{
protected:
	vw1__KeyValue _obj;
public:
	KeyValue_closure(const vw1__KeyValue& obj) : _obj(obj) {}
	virtual ~KeyValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "KeyValue"; }
};

class LicenseAssignmentManagerLicenseAssignment_closure : public closure
{
protected:
	vw1__LicenseAssignmentManagerLicenseAssignment _obj;
public:
	LicenseAssignmentManagerLicenseAssignment_closure(const vw1__LicenseAssignmentManagerLicenseAssignment& obj) : _obj(obj) {}
	virtual ~LicenseAssignmentManagerLicenseAssignment_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseAssignmentManagerLicenseAssignment"; }
};

class LicenseAvailabilityInfo_closure : public closure
{
protected:
	vw1__LicenseAvailabilityInfo _obj;
public:
	LicenseAvailabilityInfo_closure(const vw1__LicenseAvailabilityInfo& obj) : _obj(obj) {}
	virtual ~LicenseAvailabilityInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseAvailabilityInfo"; }
};

class LicenseDiagnostics_closure : public closure
{
protected:
	vw1__LicenseDiagnostics _obj;
public:
	LicenseDiagnostics_closure(const vw1__LicenseDiagnostics& obj) : _obj(obj) {}
	virtual ~LicenseDiagnostics_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseDiagnostics"; }
};

class LicenseEvent_closure : public closure
{
protected:
	vw1__LicenseEvent _obj;
public:
	LicenseEvent_closure(const vw1__LicenseEvent& obj) : _obj(obj) {}
	virtual ~LicenseEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseEvent"; }
};

class LicenseExpiredEvent_closure : public closure
{
protected:
	vw1__LicenseExpiredEvent _obj;
public:
	LicenseExpiredEvent_closure(const vw1__LicenseExpiredEvent& obj) : _obj(obj) {}
	virtual ~LicenseExpiredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseExpiredEvent"; }
};

class LicenseFeatureInfo_closure : public closure
{
protected:
	vw1__LicenseFeatureInfo _obj;
public:
	LicenseFeatureInfo_closure(const vw1__LicenseFeatureInfo& obj) : _obj(obj) {}
	virtual ~LicenseFeatureInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseFeatureInfo"; }
};

class LicenseManagerEvaluationInfo_closure : public closure
{
protected:
	vw1__LicenseManagerEvaluationInfo _obj;
public:
	LicenseManagerEvaluationInfo_closure(const vw1__LicenseManagerEvaluationInfo& obj) : _obj(obj) {}
	virtual ~LicenseManagerEvaluationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseManagerEvaluationInfo"; }
};

class LicenseManagerLicenseInfo_closure : public closure
{
protected:
	vw1__LicenseManagerLicenseInfo _obj;
public:
	LicenseManagerLicenseInfo_closure(const vw1__LicenseManagerLicenseInfo& obj) : _obj(obj) {}
	virtual ~LicenseManagerLicenseInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseManagerLicenseInfo"; }
};

class LicenseNonComplianceEvent_closure : public closure
{
protected:
	vw1__LicenseNonComplianceEvent _obj;
public:
	LicenseNonComplianceEvent_closure(const vw1__LicenseNonComplianceEvent& obj) : _obj(obj) {}
	virtual ~LicenseNonComplianceEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseNonComplianceEvent"; }
};

class LicenseReservationInfo_closure : public closure
{
protected:
	vw1__LicenseReservationInfo _obj;
public:
	LicenseReservationInfo_closure(const vw1__LicenseReservationInfo& obj) : _obj(obj) {}
	virtual ~LicenseReservationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseReservationInfo"; }
};

class LicenseRestrictedEvent_closure : public closure
{
protected:
	vw1__LicenseRestrictedEvent _obj;
public:
	LicenseRestrictedEvent_closure(const vw1__LicenseRestrictedEvent& obj) : _obj(obj) {}
	virtual ~LicenseRestrictedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseRestrictedEvent"; }
};

class LicenseServerAvailableEvent_closure : public closure
{
protected:
	vw1__LicenseServerAvailableEvent _obj;
public:
	LicenseServerAvailableEvent_closure(const vw1__LicenseServerAvailableEvent& obj) : _obj(obj) {}
	virtual ~LicenseServerAvailableEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseServerAvailableEvent"; }
};

class LicenseServerSource_closure : public closure
{
protected:
	vw1__LicenseServerSource _obj;
public:
	LicenseServerSource_closure(const vw1__LicenseServerSource& obj) : _obj(obj) {}
	virtual ~LicenseServerSource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseServerSource"; }
};

class LicenseServerUnavailableEvent_closure : public closure
{
protected:
	vw1__LicenseServerUnavailableEvent _obj;
public:
	LicenseServerUnavailableEvent_closure(const vw1__LicenseServerUnavailableEvent& obj) : _obj(obj) {}
	virtual ~LicenseServerUnavailableEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseServerUnavailableEvent"; }
};

class LicenseSource_closure : public closure
{
protected:
	vw1__LicenseSource _obj;
public:
	LicenseSource_closure(const vw1__LicenseSource& obj) : _obj(obj) {}
	virtual ~LicenseSource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseSource"; }
};

class LicenseUsageInfo_closure : public closure
{
protected:
	vw1__LicenseUsageInfo _obj;
public:
	LicenseUsageInfo_closure(const vw1__LicenseUsageInfo& obj) : _obj(obj) {}
	virtual ~LicenseUsageInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseUsageInfo"; }
};

class LinkDiscoveryProtocolConfig_closure : public closure
{
protected:
	vw1__LinkDiscoveryProtocolConfig _obj;
public:
	LinkDiscoveryProtocolConfig_closure(const vw1__LinkDiscoveryProtocolConfig& obj) : _obj(obj) {}
	virtual ~LinkDiscoveryProtocolConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LinkDiscoveryProtocolConfig"; }
};

class LinkLayerDiscoveryProtocolInfo_closure : public closure
{
protected:
	vw1__LinkLayerDiscoveryProtocolInfo _obj;
public:
	LinkLayerDiscoveryProtocolInfo_closure(const vw1__LinkLayerDiscoveryProtocolInfo& obj) : _obj(obj) {}
	virtual ~LinkLayerDiscoveryProtocolInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LinkLayerDiscoveryProtocolInfo"; }
};

class LinkProfile_closure : public closure
{
protected:
	vw1__LinkProfile _obj;
public:
	LinkProfile_closure(const vw1__LinkProfile& obj) : _obj(obj) {}
	virtual ~LinkProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LinkProfile"; }
};

class LocalDatastoreCreatedEvent_closure : public closure
{
protected:
	vw1__LocalDatastoreCreatedEvent _obj;
public:
	LocalDatastoreCreatedEvent_closure(const vw1__LocalDatastoreCreatedEvent& obj) : _obj(obj) {}
	virtual ~LocalDatastoreCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LocalDatastoreCreatedEvent"; }
};

class LocalDatastoreInfo_closure : public closure
{
protected:
	vw1__LocalDatastoreInfo _obj;
public:
	LocalDatastoreInfo_closure(const vw1__LocalDatastoreInfo& obj) : _obj(obj) {}
	virtual ~LocalDatastoreInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LocalDatastoreInfo"; }
};

class LocalLicenseSource_closure : public closure
{
protected:
	vw1__LocalLicenseSource _obj;
public:
	LocalLicenseSource_closure(const vw1__LocalLicenseSource& obj) : _obj(obj) {}
	virtual ~LocalLicenseSource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LocalLicenseSource"; }
};

class LocalTSMEnabledEvent_closure : public closure
{
protected:
	vw1__LocalTSMEnabledEvent _obj;
public:
	LocalTSMEnabledEvent_closure(const vw1__LocalTSMEnabledEvent& obj) : _obj(obj) {}
	virtual ~LocalTSMEnabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LocalTSMEnabledEvent"; }
};

class LocalizableMessage_closure : public closure
{
protected:
	vw1__LocalizableMessage _obj;
public:
	LocalizableMessage_closure(const vw1__LocalizableMessage& obj) : _obj(obj) {}
	virtual ~LocalizableMessage_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LocalizableMessage"; }
};

class LocalizationManagerMessageCatalog_closure : public closure
{
protected:
	vw1__LocalizationManagerMessageCatalog _obj;
public:
	LocalizationManagerMessageCatalog_closure(const vw1__LocalizationManagerMessageCatalog& obj) : _obj(obj) {}
	virtual ~LocalizationManagerMessageCatalog_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LocalizationManagerMessageCatalog"; }
};

class LocalizedMethodFault_closure : public closure
{
protected:
	vw1__LocalizedMethodFault _obj;
public:
	LocalizedMethodFault_closure(const vw1__LocalizedMethodFault& obj) : _obj(obj) {}
	virtual ~LocalizedMethodFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LocalizedMethodFault"; }
};

class LockerMisconfiguredEvent_closure : public closure
{
protected:
	vw1__LockerMisconfiguredEvent _obj;
public:
	LockerMisconfiguredEvent_closure(const vw1__LockerMisconfiguredEvent& obj) : _obj(obj) {}
	virtual ~LockerMisconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LockerMisconfiguredEvent"; }
};

class LockerReconfiguredEvent_closure : public closure
{
protected:
	vw1__LockerReconfiguredEvent _obj;
public:
	LockerReconfiguredEvent_closure(const vw1__LockerReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~LockerReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LockerReconfiguredEvent"; }
};

class LongOption_closure : public closure
{
protected:
	vw1__LongOption _obj;
public:
	LongOption_closure(const vw1__LongOption& obj) : _obj(obj) {}
	virtual ~LongOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LongOption"; }
};

class LongPolicy_closure : public closure
{
protected:
	vw1__LongPolicy _obj;
public:
	LongPolicy_closure(const vw1__LongPolicy& obj) : _obj(obj) {}
	virtual ~LongPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LongPolicy"; }
};

class ManagedByInfo_closure : public closure
{
protected:
	vw1__ManagedByInfo _obj;
public:
	ManagedByInfo_closure(const vw1__ManagedByInfo& obj) : _obj(obj) {}
	virtual ~ManagedByInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ManagedByInfo"; }
};

class ManagedEntityEventArgument_closure : public closure
{
protected:
	vw1__ManagedEntityEventArgument _obj;
public:
	ManagedEntityEventArgument_closure(const vw1__ManagedEntityEventArgument& obj) : _obj(obj) {}
	virtual ~ManagedEntityEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ManagedEntityEventArgument"; }
};

class ManagedObjectReference_closure : public closure
{
protected:
	vw1__ManagedObjectReference _obj;
public:
	ManagedObjectReference_closure(const vw1__ManagedObjectReference& obj) : _obj(obj) {}
	virtual ~ManagedObjectReference_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ManagedObjectReference"; }
};

class MethodAction_closure : public closure
{
protected:
	vw1__MethodAction _obj;
public:
	MethodAction_closure(const vw1__MethodAction& obj) : _obj(obj) {}
	virtual ~MethodAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MethodAction"; }
};

class MethodActionArgument_closure : public closure
{
protected:
	vw1__MethodActionArgument _obj;
public:
	MethodActionArgument_closure(const vw1__MethodActionArgument& obj) : _obj(obj) {}
	virtual ~MethodActionArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MethodActionArgument"; }
};

class MethodDescription_closure : public closure
{
protected:
	vw1__MethodDescription _obj;
public:
	MethodDescription_closure(const vw1__MethodDescription& obj) : _obj(obj) {}
	virtual ~MethodDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MethodDescription"; }
};

class MetricAlarmExpression_closure : public closure
{
protected:
	vw1__MetricAlarmExpression _obj;
public:
	MetricAlarmExpression_closure(const vw1__MetricAlarmExpression& obj) : _obj(obj) {}
	virtual ~MetricAlarmExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MetricAlarmExpression"; }
};

class MigrationErrorEvent_closure : public closure
{
protected:
	vw1__MigrationErrorEvent _obj;
public:
	MigrationErrorEvent_closure(const vw1__MigrationErrorEvent& obj) : _obj(obj) {}
	virtual ~MigrationErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationErrorEvent"; }
};

class MigrationEvent_closure : public closure
{
protected:
	vw1__MigrationEvent _obj;
public:
	MigrationEvent_closure(const vw1__MigrationEvent& obj) : _obj(obj) {}
	virtual ~MigrationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationEvent"; }
};

class MigrationHostErrorEvent_closure : public closure
{
protected:
	vw1__MigrationHostErrorEvent _obj;
public:
	MigrationHostErrorEvent_closure(const vw1__MigrationHostErrorEvent& obj) : _obj(obj) {}
	virtual ~MigrationHostErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationHostErrorEvent"; }
};

class MigrationHostWarningEvent_closure : public closure
{
protected:
	vw1__MigrationHostWarningEvent _obj;
public:
	MigrationHostWarningEvent_closure(const vw1__MigrationHostWarningEvent& obj) : _obj(obj) {}
	virtual ~MigrationHostWarningEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationHostWarningEvent"; }
};

class MigrationResourceErrorEvent_closure : public closure
{
protected:
	vw1__MigrationResourceErrorEvent _obj;
public:
	MigrationResourceErrorEvent_closure(const vw1__MigrationResourceErrorEvent& obj) : _obj(obj) {}
	virtual ~MigrationResourceErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationResourceErrorEvent"; }
};

class MigrationResourceWarningEvent_closure : public closure
{
protected:
	vw1__MigrationResourceWarningEvent _obj;
public:
	MigrationResourceWarningEvent_closure(const vw1__MigrationResourceWarningEvent& obj) : _obj(obj) {}
	virtual ~MigrationResourceWarningEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationResourceWarningEvent"; }
};

class MigrationWarningEvent_closure : public closure
{
protected:
	vw1__MigrationWarningEvent _obj;
public:
	MigrationWarningEvent_closure(const vw1__MigrationWarningEvent& obj) : _obj(obj) {}
	virtual ~MigrationWarningEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationWarningEvent"; }
};

class MissingObject_closure : public closure
{
protected:
	vw1__MissingObject _obj;
public:
	MissingObject_closure(const vw1__MissingObject& obj) : _obj(obj) {}
	virtual ~MissingObject_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingObject"; }
};

class MissingProperty_closure : public closure
{
protected:
	vw1__MissingProperty _obj;
public:
	MissingProperty_closure(const vw1__MissingProperty& obj) : _obj(obj) {}
	virtual ~MissingProperty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingProperty"; }
};

class ModeInfo_closure : public closure
{
protected:
	vw1__ModeInfo _obj;
public:
	ModeInfo_closure(const vw1__ModeInfo& obj) : _obj(obj) {}
	virtual ~ModeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ModeInfo"; }
};

class MonthlyByDayTaskScheduler_closure : public closure
{
protected:
	vw1__MonthlyByDayTaskScheduler _obj;
public:
	MonthlyByDayTaskScheduler_closure(const vw1__MonthlyByDayTaskScheduler& obj) : _obj(obj) {}
	virtual ~MonthlyByDayTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MonthlyByDayTaskScheduler"; }
};

class MonthlyByWeekdayTaskScheduler_closure : public closure
{
protected:
	vw1__MonthlyByWeekdayTaskScheduler _obj;
public:
	MonthlyByWeekdayTaskScheduler_closure(const vw1__MonthlyByWeekdayTaskScheduler& obj) : _obj(obj) {}
	virtual ~MonthlyByWeekdayTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MonthlyByWeekdayTaskScheduler"; }
};

class MonthlyTaskScheduler_closure : public closure
{
protected:
	vw1__MonthlyTaskScheduler _obj;
public:
	MonthlyTaskScheduler_closure(const vw1__MonthlyTaskScheduler& obj) : _obj(obj) {}
	virtual ~MonthlyTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MonthlyTaskScheduler"; }
};

class MultipleCertificatesVerifyFaultThumbprintData_closure : public closure
{
protected:
	vw1__MultipleCertificatesVerifyFaultThumbprintData _obj;
public:
	MultipleCertificatesVerifyFaultThumbprintData_closure(const vw1__MultipleCertificatesVerifyFaultThumbprintData& obj) : _obj(obj) {}
	virtual ~MultipleCertificatesVerifyFaultThumbprintData_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MultipleCertificatesVerifyFaultThumbprintData"; }
};

class NASDatastoreCreatedEvent_closure : public closure
{
protected:
	vw1__NASDatastoreCreatedEvent _obj;
public:
	NASDatastoreCreatedEvent_closure(const vw1__NASDatastoreCreatedEvent& obj) : _obj(obj) {}
	virtual ~NASDatastoreCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NASDatastoreCreatedEvent"; }
};

class NamePasswordAuthentication_closure : public closure
{
protected:
	vw1__NamePasswordAuthentication _obj;
public:
	NamePasswordAuthentication_closure(const vw1__NamePasswordAuthentication& obj) : _obj(obj) {}
	virtual ~NamePasswordAuthentication_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NamePasswordAuthentication"; }
};

class NasDatastoreInfo_closure : public closure
{
protected:
	vw1__NasDatastoreInfo _obj;
public:
	NasDatastoreInfo_closure(const vw1__NasDatastoreInfo& obj) : _obj(obj) {}
	virtual ~NasDatastoreInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NasDatastoreInfo"; }
};

class NasStorageProfile_closure : public closure
{
protected:
	vw1__NasStorageProfile _obj;
public:
	NasStorageProfile_closure(const vw1__NasStorageProfile& obj) : _obj(obj) {}
	virtual ~NasStorageProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NasStorageProfile"; }
};

class NetBIOSConfigInfo_closure : public closure
{
protected:
	vw1__NetBIOSConfigInfo _obj;
public:
	NetBIOSConfigInfo_closure(const vw1__NetBIOSConfigInfo& obj) : _obj(obj) {}
	virtual ~NetBIOSConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetBIOSConfigInfo"; }
};

class NetDhcpConfigInfo_closure : public closure
{
protected:
	vw1__NetDhcpConfigInfo _obj;
public:
	NetDhcpConfigInfo_closure(const vw1__NetDhcpConfigInfo& obj) : _obj(obj) {}
	virtual ~NetDhcpConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetDhcpConfigInfo"; }
};

class NetDhcpConfigInfoDhcpOptions_closure : public closure
{
protected:
	vw1__NetDhcpConfigInfoDhcpOptions _obj;
public:
	NetDhcpConfigInfoDhcpOptions_closure(const vw1__NetDhcpConfigInfoDhcpOptions& obj) : _obj(obj) {}
	virtual ~NetDhcpConfigInfoDhcpOptions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetDhcpConfigInfoDhcpOptions"; }
};

class NetDhcpConfigSpec_closure : public closure
{
protected:
	vw1__NetDhcpConfigSpec _obj;
public:
	NetDhcpConfigSpec_closure(const vw1__NetDhcpConfigSpec& obj) : _obj(obj) {}
	virtual ~NetDhcpConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetDhcpConfigSpec"; }
};

class NetDhcpConfigSpecDhcpOptionsSpec_closure : public closure
{
protected:
	vw1__NetDhcpConfigSpecDhcpOptionsSpec _obj;
public:
	NetDhcpConfigSpecDhcpOptionsSpec_closure(const vw1__NetDhcpConfigSpecDhcpOptionsSpec& obj) : _obj(obj) {}
	virtual ~NetDhcpConfigSpecDhcpOptionsSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetDhcpConfigSpecDhcpOptionsSpec"; }
};

class NetDnsConfigInfo_closure : public closure
{
protected:
	vw1__NetDnsConfigInfo _obj;
public:
	NetDnsConfigInfo_closure(const vw1__NetDnsConfigInfo& obj) : _obj(obj) {}
	virtual ~NetDnsConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetDnsConfigInfo"; }
};

class NetDnsConfigSpec_closure : public closure
{
protected:
	vw1__NetDnsConfigSpec _obj;
public:
	NetDnsConfigSpec_closure(const vw1__NetDnsConfigSpec& obj) : _obj(obj) {}
	virtual ~NetDnsConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetDnsConfigSpec"; }
};

class NetIpConfigInfo_closure : public closure
{
protected:
	vw1__NetIpConfigInfo _obj;
public:
	NetIpConfigInfo_closure(const vw1__NetIpConfigInfo& obj) : _obj(obj) {}
	virtual ~NetIpConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpConfigInfo"; }
};

class NetIpConfigInfoIpAddress_closure : public closure
{
protected:
	vw1__NetIpConfigInfoIpAddress _obj;
public:
	NetIpConfigInfoIpAddress_closure(const vw1__NetIpConfigInfoIpAddress& obj) : _obj(obj) {}
	virtual ~NetIpConfigInfoIpAddress_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpConfigInfoIpAddress"; }
};

class NetIpConfigSpec_closure : public closure
{
protected:
	vw1__NetIpConfigSpec _obj;
public:
	NetIpConfigSpec_closure(const vw1__NetIpConfigSpec& obj) : _obj(obj) {}
	virtual ~NetIpConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpConfigSpec"; }
};

class NetIpConfigSpecIpAddressSpec_closure : public closure
{
protected:
	vw1__NetIpConfigSpecIpAddressSpec _obj;
public:
	NetIpConfigSpecIpAddressSpec_closure(const vw1__NetIpConfigSpecIpAddressSpec& obj) : _obj(obj) {}
	virtual ~NetIpConfigSpecIpAddressSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpConfigSpecIpAddressSpec"; }
};

class NetIpRouteConfigInfo_closure : public closure
{
protected:
	vw1__NetIpRouteConfigInfo _obj;
public:
	NetIpRouteConfigInfo_closure(const vw1__NetIpRouteConfigInfo& obj) : _obj(obj) {}
	virtual ~NetIpRouteConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpRouteConfigInfo"; }
};

class NetIpRouteConfigInfoGateway_closure : public closure
{
protected:
	vw1__NetIpRouteConfigInfoGateway _obj;
public:
	NetIpRouteConfigInfoGateway_closure(const vw1__NetIpRouteConfigInfoGateway& obj) : _obj(obj) {}
	virtual ~NetIpRouteConfigInfoGateway_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpRouteConfigInfoGateway"; }
};

class NetIpRouteConfigInfoIpRoute_closure : public closure
{
protected:
	vw1__NetIpRouteConfigInfoIpRoute _obj;
public:
	NetIpRouteConfigInfoIpRoute_closure(const vw1__NetIpRouteConfigInfoIpRoute& obj) : _obj(obj) {}
	virtual ~NetIpRouteConfigInfoIpRoute_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpRouteConfigInfoIpRoute"; }
};

class NetIpRouteConfigSpec_closure : public closure
{
protected:
	vw1__NetIpRouteConfigSpec _obj;
public:
	NetIpRouteConfigSpec_closure(const vw1__NetIpRouteConfigSpec& obj) : _obj(obj) {}
	virtual ~NetIpRouteConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpRouteConfigSpec"; }
};

class NetIpRouteConfigSpecGatewaySpec_closure : public closure
{
protected:
	vw1__NetIpRouteConfigSpecGatewaySpec _obj;
public:
	NetIpRouteConfigSpecGatewaySpec_closure(const vw1__NetIpRouteConfigSpecGatewaySpec& obj) : _obj(obj) {}
	virtual ~NetIpRouteConfigSpecGatewaySpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpRouteConfigSpecGatewaySpec"; }
};

class NetIpRouteConfigSpecIpRouteSpec_closure : public closure
{
protected:
	vw1__NetIpRouteConfigSpecIpRouteSpec _obj;
public:
	NetIpRouteConfigSpecIpRouteSpec_closure(const vw1__NetIpRouteConfigSpecIpRouteSpec& obj) : _obj(obj) {}
	virtual ~NetIpRouteConfigSpecIpRouteSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpRouteConfigSpecIpRouteSpec"; }
};

class NetIpStackInfo_closure : public closure
{
protected:
	vw1__NetIpStackInfo _obj;
public:
	NetIpStackInfo_closure(const vw1__NetIpStackInfo& obj) : _obj(obj) {}
	virtual ~NetIpStackInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpStackInfo"; }
};

class NetIpStackInfoDefaultRouter_closure : public closure
{
protected:
	vw1__NetIpStackInfoDefaultRouter _obj;
public:
	NetIpStackInfoDefaultRouter_closure(const vw1__NetIpStackInfoDefaultRouter& obj) : _obj(obj) {}
	virtual ~NetIpStackInfoDefaultRouter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpStackInfoDefaultRouter"; }
};

class NetIpStackInfoNetToMedia_closure : public closure
{
protected:
	vw1__NetIpStackInfoNetToMedia _obj;
public:
	NetIpStackInfoNetToMedia_closure(const vw1__NetIpStackInfoNetToMedia& obj) : _obj(obj) {}
	virtual ~NetIpStackInfoNetToMedia_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetIpStackInfoNetToMedia"; }
};

class NetworkEventArgument_closure : public closure
{
protected:
	vw1__NetworkEventArgument _obj;
public:
	NetworkEventArgument_closure(const vw1__NetworkEventArgument& obj) : _obj(obj) {}
	virtual ~NetworkEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetworkEventArgument"; }
};

class NetworkPolicyProfile_closure : public closure
{
protected:
	vw1__NetworkPolicyProfile _obj;
public:
	NetworkPolicyProfile_closure(const vw1__NetworkPolicyProfile& obj) : _obj(obj) {}
	virtual ~NetworkPolicyProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetworkPolicyProfile"; }
};

class NetworkProfile_closure : public closure
{
protected:
	vw1__NetworkProfile _obj;
public:
	NetworkProfile_closure(const vw1__NetworkProfile& obj) : _obj(obj) {}
	virtual ~NetworkProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetworkProfile"; }
};

class NetworkProfileDnsConfigProfile_closure : public closure
{
protected:
	vw1__NetworkProfileDnsConfigProfile _obj;
public:
	NetworkProfileDnsConfigProfile_closure(const vw1__NetworkProfileDnsConfigProfile& obj) : _obj(obj) {}
	virtual ~NetworkProfileDnsConfigProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetworkProfileDnsConfigProfile"; }
};

class NetworkSummary_closure : public closure
{
protected:
	vw1__NetworkSummary _obj;
public:
	NetworkSummary_closure(const vw1__NetworkSummary& obj) : _obj(obj) {}
	virtual ~NetworkSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetworkSummary"; }
};

class NoAccessUserEvent_closure : public closure
{
protected:
	vw1__NoAccessUserEvent _obj;
public:
	NoAccessUserEvent_closure(const vw1__NoAccessUserEvent& obj) : _obj(obj) {}
	virtual ~NoAccessUserEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoAccessUserEvent"; }
};

class NoDatastoresConfiguredEvent_closure : public closure
{
protected:
	vw1__NoDatastoresConfiguredEvent _obj;
public:
	NoDatastoresConfiguredEvent_closure(const vw1__NoDatastoresConfiguredEvent& obj) : _obj(obj) {}
	virtual ~NoDatastoresConfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoDatastoresConfiguredEvent"; }
};

class NoLicenseEvent_closure : public closure
{
protected:
	vw1__NoLicenseEvent _obj;
public:
	NoLicenseEvent_closure(const vw1__NoLicenseEvent& obj) : _obj(obj) {}
	virtual ~NoLicenseEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoLicenseEvent"; }
};

class NoMaintenanceModeDrsRecommendationForVM_closure : public closure
{
protected:
	vw1__NoMaintenanceModeDrsRecommendationForVM _obj;
public:
	NoMaintenanceModeDrsRecommendationForVM_closure(const vw1__NoMaintenanceModeDrsRecommendationForVM& obj) : _obj(obj) {}
	virtual ~NoMaintenanceModeDrsRecommendationForVM_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoMaintenanceModeDrsRecommendationForVM"; }
};

class NonVIWorkloadDetectedOnDatastoreEvent_closure : public closure
{
protected:
	vw1__NonVIWorkloadDetectedOnDatastoreEvent _obj;
public:
	NonVIWorkloadDetectedOnDatastoreEvent_closure(const vw1__NonVIWorkloadDetectedOnDatastoreEvent& obj) : _obj(obj) {}
	virtual ~NonVIWorkloadDetectedOnDatastoreEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NonVIWorkloadDetectedOnDatastoreEvent"; }
};

class NotEnoughResourcesToStartVmEvent_closure : public closure
{
protected:
	vw1__NotEnoughResourcesToStartVmEvent _obj;
public:
	NotEnoughResourcesToStartVmEvent_closure(const vw1__NotEnoughResourcesToStartVmEvent& obj) : _obj(obj) {}
	virtual ~NotEnoughResourcesToStartVmEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotEnoughResourcesToStartVmEvent"; }
};

class NumPortsProfile_closure : public closure
{
protected:
	vw1__NumPortsProfile _obj;
public:
	NumPortsProfile_closure(const vw1__NumPortsProfile& obj) : _obj(obj) {}
	virtual ~NumPortsProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NumPortsProfile"; }
};

class NumericRange_closure : public closure
{
protected:
	vw1__NumericRange _obj;
public:
	NumericRange_closure(const vw1__NumericRange& obj) : _obj(obj) {}
	virtual ~NumericRange_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NumericRange"; }
};

class ObjectContent_closure : public closure
{
protected:
	vw1__ObjectContent _obj;
public:
	ObjectContent_closure(const vw1__ObjectContent& obj) : _obj(obj) {}
	virtual ~ObjectContent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ObjectContent"; }
};

class ObjectSpec_closure : public closure
{
protected:
	vw1__ObjectSpec _obj;
public:
	ObjectSpec_closure(const vw1__ObjectSpec& obj) : _obj(obj) {}
	virtual ~ObjectSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ObjectSpec"; }
};

class ObjectUpdate_closure : public closure
{
protected:
	vw1__ObjectUpdate _obj;
public:
	ObjectUpdate_closure(const vw1__ObjectUpdate& obj) : _obj(obj) {}
	virtual ~ObjectUpdate_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ObjectUpdate"; }
};

class OnceTaskScheduler_closure : public closure
{
protected:
	vw1__OnceTaskScheduler _obj;
public:
	OnceTaskScheduler_closure(const vw1__OnceTaskScheduler& obj) : _obj(obj) {}
	virtual ~OnceTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OnceTaskScheduler"; }
};

class OptionDef_closure : public closure
{
protected:
	vw1__OptionDef _obj;
public:
	OptionDef_closure(const vw1__OptionDef& obj) : _obj(obj) {}
	virtual ~OptionDef_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OptionDef"; }
};

class OptionProfile_closure : public closure
{
protected:
	vw1__OptionProfile _obj;
public:
	OptionProfile_closure(const vw1__OptionProfile& obj) : _obj(obj) {}
	virtual ~OptionProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OptionProfile"; }
};

class OptionType_closure : public closure
{
protected:
	vw1__OptionType _obj;
public:
	OptionType_closure(const vw1__OptionType& obj) : _obj(obj) {}
	virtual ~OptionType_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OptionType"; }
};

class OptionValue_closure : public closure
{
protected:
	vw1__OptionValue _obj;
public:
	OptionValue_closure(const vw1__OptionValue& obj) : _obj(obj) {}
	virtual ~OptionValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OptionValue"; }
};

class OrAlarmExpression_closure : public closure
{
protected:
	vw1__OrAlarmExpression _obj;
public:
	OrAlarmExpression_closure(const vw1__OrAlarmExpression& obj) : _obj(obj) {}
	virtual ~OrAlarmExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OrAlarmExpression"; }
};

class OutOfSyncDvsHost_closure : public closure
{
protected:
	vw1__OutOfSyncDvsHost _obj;
public:
	OutOfSyncDvsHost_closure(const vw1__OutOfSyncDvsHost& obj) : _obj(obj) {}
	virtual ~OutOfSyncDvsHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OutOfSyncDvsHost"; }
};

class OvfConsumerOstNode_closure : public closure
{
protected:
	vw1__OvfConsumerOstNode _obj;
public:
	OvfConsumerOstNode_closure(const vw1__OvfConsumerOstNode& obj) : _obj(obj) {}
	virtual ~OvfConsumerOstNode_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerOstNode"; }
};

class OvfConsumerOvfSection_closure : public closure
{
protected:
	vw1__OvfConsumerOvfSection _obj;
public:
	OvfConsumerOvfSection_closure(const vw1__OvfConsumerOvfSection& obj) : _obj(obj) {}
	virtual ~OvfConsumerOvfSection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerOvfSection"; }
};

class OvfCreateDescriptorParams_closure : public closure
{
protected:
	vw1__OvfCreateDescriptorParams _obj;
public:
	OvfCreateDescriptorParams_closure(const vw1__OvfCreateDescriptorParams& obj) : _obj(obj) {}
	virtual ~OvfCreateDescriptorParams_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfCreateDescriptorParams"; }
};

class OvfCreateDescriptorResult_closure : public closure
{
protected:
	vw1__OvfCreateDescriptorResult _obj;
public:
	OvfCreateDescriptorResult_closure(const vw1__OvfCreateDescriptorResult& obj) : _obj(obj) {}
	virtual ~OvfCreateDescriptorResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfCreateDescriptorResult"; }
};

class OvfCreateImportSpecParams_closure : public closure
{
protected:
	vw1__OvfCreateImportSpecParams _obj;
public:
	OvfCreateImportSpecParams_closure(const vw1__OvfCreateImportSpecParams& obj) : _obj(obj) {}
	virtual ~OvfCreateImportSpecParams_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfCreateImportSpecParams"; }
};

class OvfCreateImportSpecResult_closure : public closure
{
protected:
	vw1__OvfCreateImportSpecResult _obj;
public:
	OvfCreateImportSpecResult_closure(const vw1__OvfCreateImportSpecResult& obj) : _obj(obj) {}
	virtual ~OvfCreateImportSpecResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfCreateImportSpecResult"; }
};

class OvfDeploymentOption_closure : public closure
{
protected:
	vw1__OvfDeploymentOption _obj;
public:
	OvfDeploymentOption_closure(const vw1__OvfDeploymentOption& obj) : _obj(obj) {}
	virtual ~OvfDeploymentOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfDeploymentOption"; }
};

class OvfFile_closure : public closure
{
protected:
	vw1__OvfFile _obj;
public:
	OvfFile_closure(const vw1__OvfFile& obj) : _obj(obj) {}
	virtual ~OvfFile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfFile"; }
};

class OvfFileItem_closure : public closure
{
protected:
	vw1__OvfFileItem _obj;
public:
	OvfFileItem_closure(const vw1__OvfFileItem& obj) : _obj(obj) {}
	virtual ~OvfFileItem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfFileItem"; }
};

class OvfManagerCommonParams_closure : public closure
{
protected:
	vw1__OvfManagerCommonParams _obj;
public:
	OvfManagerCommonParams_closure(const vw1__OvfManagerCommonParams& obj) : _obj(obj) {}
	virtual ~OvfManagerCommonParams_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfManagerCommonParams"; }
};

class OvfNetworkInfo_closure : public closure
{
protected:
	vw1__OvfNetworkInfo _obj;
public:
	OvfNetworkInfo_closure(const vw1__OvfNetworkInfo& obj) : _obj(obj) {}
	virtual ~OvfNetworkInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfNetworkInfo"; }
};

class OvfNetworkMapping_closure : public closure
{
protected:
	vw1__OvfNetworkMapping _obj;
public:
	OvfNetworkMapping_closure(const vw1__OvfNetworkMapping& obj) : _obj(obj) {}
	virtual ~OvfNetworkMapping_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfNetworkMapping"; }
};

class OvfParseDescriptorParams_closure : public closure
{
protected:
	vw1__OvfParseDescriptorParams _obj;
public:
	OvfParseDescriptorParams_closure(const vw1__OvfParseDescriptorParams& obj) : _obj(obj) {}
	virtual ~OvfParseDescriptorParams_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfParseDescriptorParams"; }
};

class OvfParseDescriptorResult_closure : public closure
{
protected:
	vw1__OvfParseDescriptorResult _obj;
public:
	OvfParseDescriptorResult_closure(const vw1__OvfParseDescriptorResult& obj) : _obj(obj) {}
	virtual ~OvfParseDescriptorResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfParseDescriptorResult"; }
};

class OvfResourceMap_closure : public closure
{
protected:
	vw1__OvfResourceMap _obj;
public:
	OvfResourceMap_closure(const vw1__OvfResourceMap& obj) : _obj(obj) {}
	virtual ~OvfResourceMap_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfResourceMap"; }
};

class OvfValidateHostParams_closure : public closure
{
protected:
	vw1__OvfValidateHostParams _obj;
public:
	OvfValidateHostParams_closure(const vw1__OvfValidateHostParams& obj) : _obj(obj) {}
	virtual ~OvfValidateHostParams_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfValidateHostParams"; }
};

class OvfValidateHostResult_closure : public closure
{
protected:
	vw1__OvfValidateHostResult _obj;
public:
	OvfValidateHostResult_closure(const vw1__OvfValidateHostResult& obj) : _obj(obj) {}
	virtual ~OvfValidateHostResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfValidateHostResult"; }
};

class ParaVirtualSCSIController_closure : public closure
{
protected:
	vw1__ParaVirtualSCSIController _obj;
public:
	ParaVirtualSCSIController_closure(const vw1__ParaVirtualSCSIController& obj) : _obj(obj) {}
	virtual ~ParaVirtualSCSIController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ParaVirtualSCSIController"; }
};

class ParaVirtualSCSIControllerOption_closure : public closure
{
protected:
	vw1__ParaVirtualSCSIControllerOption _obj;
public:
	ParaVirtualSCSIControllerOption_closure(const vw1__ParaVirtualSCSIControllerOption& obj) : _obj(obj) {}
	virtual ~ParaVirtualSCSIControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ParaVirtualSCSIControllerOption"; }
};

class PasswordField_closure : public closure
{
protected:
	vw1__PasswordField _obj;
public:
	PasswordField_closure(const vw1__PasswordField& obj) : _obj(obj) {}
	virtual ~PasswordField_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PasswordField"; }
};

class PerfCompositeMetric_closure : public closure
{
protected:
	vw1__PerfCompositeMetric _obj;
public:
	PerfCompositeMetric_closure(const vw1__PerfCompositeMetric& obj) : _obj(obj) {}
	virtual ~PerfCompositeMetric_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfCompositeMetric"; }
};

class PerfCounterInfo_closure : public closure
{
protected:
	vw1__PerfCounterInfo _obj;
public:
	PerfCounterInfo_closure(const vw1__PerfCounterInfo& obj) : _obj(obj) {}
	virtual ~PerfCounterInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfCounterInfo"; }
};

class PerfEntityMetric_closure : public closure
{
protected:
	vw1__PerfEntityMetric _obj;
public:
	PerfEntityMetric_closure(const vw1__PerfEntityMetric& obj) : _obj(obj) {}
	virtual ~PerfEntityMetric_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfEntityMetric"; }
};

class PerfEntityMetricBase_closure : public closure
{
protected:
	vw1__PerfEntityMetricBase _obj;
public:
	PerfEntityMetricBase_closure(const vw1__PerfEntityMetricBase& obj) : _obj(obj) {}
	virtual ~PerfEntityMetricBase_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfEntityMetricBase"; }
};

class PerfEntityMetricCSV_closure : public closure
{
protected:
	vw1__PerfEntityMetricCSV _obj;
public:
	PerfEntityMetricCSV_closure(const vw1__PerfEntityMetricCSV& obj) : _obj(obj) {}
	virtual ~PerfEntityMetricCSV_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfEntityMetricCSV"; }
};

class PerfInterval_closure : public closure
{
protected:
	vw1__PerfInterval _obj;
public:
	PerfInterval_closure(const vw1__PerfInterval& obj) : _obj(obj) {}
	virtual ~PerfInterval_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfInterval"; }
};

class PerfMetricId_closure : public closure
{
protected:
	vw1__PerfMetricId _obj;
public:
	PerfMetricId_closure(const vw1__PerfMetricId& obj) : _obj(obj) {}
	virtual ~PerfMetricId_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfMetricId"; }
};

class PerfMetricIntSeries_closure : public closure
{
protected:
	vw1__PerfMetricIntSeries _obj;
public:
	PerfMetricIntSeries_closure(const vw1__PerfMetricIntSeries& obj) : _obj(obj) {}
	virtual ~PerfMetricIntSeries_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfMetricIntSeries"; }
};

class PerfMetricSeries_closure : public closure
{
protected:
	vw1__PerfMetricSeries _obj;
public:
	PerfMetricSeries_closure(const vw1__PerfMetricSeries& obj) : _obj(obj) {}
	virtual ~PerfMetricSeries_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfMetricSeries"; }
};

class PerfMetricSeriesCSV_closure : public closure
{
protected:
	vw1__PerfMetricSeriesCSV _obj;
public:
	PerfMetricSeriesCSV_closure(const vw1__PerfMetricSeriesCSV& obj) : _obj(obj) {}
	virtual ~PerfMetricSeriesCSV_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfMetricSeriesCSV"; }
};

class PerfProviderSummary_closure : public closure
{
protected:
	vw1__PerfProviderSummary _obj;
public:
	PerfProviderSummary_closure(const vw1__PerfProviderSummary& obj) : _obj(obj) {}
	virtual ~PerfProviderSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfProviderSummary"; }
};

class PerfQuerySpec_closure : public closure
{
protected:
	vw1__PerfQuerySpec _obj;
public:
	PerfQuerySpec_closure(const vw1__PerfQuerySpec& obj) : _obj(obj) {}
	virtual ~PerfQuerySpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfQuerySpec"; }
};

class PerfSampleInfo_closure : public closure
{
protected:
	vw1__PerfSampleInfo _obj;
public:
	PerfSampleInfo_closure(const vw1__PerfSampleInfo& obj) : _obj(obj) {}
	virtual ~PerfSampleInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerfSampleInfo"; }
};

class PerformanceDescription_closure : public closure
{
protected:
	vw1__PerformanceDescription _obj;
public:
	PerformanceDescription_closure(const vw1__PerformanceDescription& obj) : _obj(obj) {}
	virtual ~PerformanceDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerformanceDescription"; }
};

class PerformanceManagerCounterLevelMapping_closure : public closure
{
protected:
	vw1__PerformanceManagerCounterLevelMapping _obj;
public:
	PerformanceManagerCounterLevelMapping_closure(const vw1__PerformanceManagerCounterLevelMapping& obj) : _obj(obj) {}
	virtual ~PerformanceManagerCounterLevelMapping_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerformanceManagerCounterLevelMapping"; }
};

class PerformanceStatisticsDescription_closure : public closure
{
protected:
	vw1__PerformanceStatisticsDescription _obj;
public:
	PerformanceStatisticsDescription_closure(const vw1__PerformanceStatisticsDescription& obj) : _obj(obj) {}
	virtual ~PerformanceStatisticsDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerformanceStatisticsDescription"; }
};

class Permission_closure : public closure
{
protected:
	vw1__Permission _obj;
public:
	Permission_closure(const vw1__Permission& obj) : _obj(obj) {}
	virtual ~Permission_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Permission"; }
};

class PermissionAddedEvent_closure : public closure
{
protected:
	vw1__PermissionAddedEvent _obj;
public:
	PermissionAddedEvent_closure(const vw1__PermissionAddedEvent& obj) : _obj(obj) {}
	virtual ~PermissionAddedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PermissionAddedEvent"; }
};

class PermissionEvent_closure : public closure
{
protected:
	vw1__PermissionEvent _obj;
public:
	PermissionEvent_closure(const vw1__PermissionEvent& obj) : _obj(obj) {}
	virtual ~PermissionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PermissionEvent"; }
};

class PermissionProfile_closure : public closure
{
protected:
	vw1__PermissionProfile _obj;
public:
	PermissionProfile_closure(const vw1__PermissionProfile& obj) : _obj(obj) {}
	virtual ~PermissionProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PermissionProfile"; }
};

class PermissionRemovedEvent_closure : public closure
{
protected:
	vw1__PermissionRemovedEvent _obj;
public:
	PermissionRemovedEvent_closure(const vw1__PermissionRemovedEvent& obj) : _obj(obj) {}
	virtual ~PermissionRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PermissionRemovedEvent"; }
};

class PermissionUpdatedEvent_closure : public closure
{
protected:
	vw1__PermissionUpdatedEvent _obj;
public:
	PermissionUpdatedEvent_closure(const vw1__PermissionUpdatedEvent& obj) : _obj(obj) {}
	virtual ~PermissionUpdatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PermissionUpdatedEvent"; }
};

class PhysicalNic_closure : public closure
{
protected:
	vw1__PhysicalNic _obj;
public:
	PhysicalNic_closure(const vw1__PhysicalNic& obj) : _obj(obj) {}
	virtual ~PhysicalNic_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNic"; }
};

class PhysicalNicCdpDeviceCapability_closure : public closure
{
protected:
	vw1__PhysicalNicCdpDeviceCapability _obj;
public:
	PhysicalNicCdpDeviceCapability_closure(const vw1__PhysicalNicCdpDeviceCapability& obj) : _obj(obj) {}
	virtual ~PhysicalNicCdpDeviceCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicCdpDeviceCapability"; }
};

class PhysicalNicCdpInfo_closure : public closure
{
protected:
	vw1__PhysicalNicCdpInfo _obj;
public:
	PhysicalNicCdpInfo_closure(const vw1__PhysicalNicCdpInfo& obj) : _obj(obj) {}
	virtual ~PhysicalNicCdpInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicCdpInfo"; }
};

class PhysicalNicConfig_closure : public closure
{
protected:
	vw1__PhysicalNicConfig _obj;
public:
	PhysicalNicConfig_closure(const vw1__PhysicalNicConfig& obj) : _obj(obj) {}
	virtual ~PhysicalNicConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicConfig"; }
};

class PhysicalNicHint_closure : public closure
{
protected:
	vw1__PhysicalNicHint _obj;
public:
	PhysicalNicHint_closure(const vw1__PhysicalNicHint& obj) : _obj(obj) {}
	virtual ~PhysicalNicHint_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicHint"; }
};

class PhysicalNicHintInfo_closure : public closure
{
protected:
	vw1__PhysicalNicHintInfo _obj;
public:
	PhysicalNicHintInfo_closure(const vw1__PhysicalNicHintInfo& obj) : _obj(obj) {}
	virtual ~PhysicalNicHintInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicHintInfo"; }
};

class PhysicalNicIpHint_closure : public closure
{
protected:
	vw1__PhysicalNicIpHint _obj;
public:
	PhysicalNicIpHint_closure(const vw1__PhysicalNicIpHint& obj) : _obj(obj) {}
	virtual ~PhysicalNicIpHint_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicIpHint"; }
};

class PhysicalNicLinkInfo_closure : public closure
{
protected:
	vw1__PhysicalNicLinkInfo _obj;
public:
	PhysicalNicLinkInfo_closure(const vw1__PhysicalNicLinkInfo& obj) : _obj(obj) {}
	virtual ~PhysicalNicLinkInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicLinkInfo"; }
};

class PhysicalNicNameHint_closure : public closure
{
protected:
	vw1__PhysicalNicNameHint _obj;
public:
	PhysicalNicNameHint_closure(const vw1__PhysicalNicNameHint& obj) : _obj(obj) {}
	virtual ~PhysicalNicNameHint_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicNameHint"; }
};

class PhysicalNicProfile_closure : public closure
{
protected:
	vw1__PhysicalNicProfile _obj;
public:
	PhysicalNicProfile_closure(const vw1__PhysicalNicProfile& obj) : _obj(obj) {}
	virtual ~PhysicalNicProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicProfile"; }
};

class PhysicalNicSpec_closure : public closure
{
protected:
	vw1__PhysicalNicSpec _obj;
public:
	PhysicalNicSpec_closure(const vw1__PhysicalNicSpec& obj) : _obj(obj) {}
	virtual ~PhysicalNicSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysicalNicSpec"; }
};

class PnicUplinkProfile_closure : public closure
{
protected:
	vw1__PnicUplinkProfile _obj;
public:
	PnicUplinkProfile_closure(const vw1__PnicUplinkProfile& obj) : _obj(obj) {}
	virtual ~PnicUplinkProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PnicUplinkProfile"; }
};

class PodDiskLocator_closure : public closure
{
protected:
	vw1__PodDiskLocator _obj;
public:
	PodDiskLocator_closure(const vw1__PodDiskLocator& obj) : _obj(obj) {}
	virtual ~PodDiskLocator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PodDiskLocator"; }
};

class PodStorageDrsEntry_closure : public closure
{
protected:
	vw1__PodStorageDrsEntry _obj;
public:
	PodStorageDrsEntry_closure(const vw1__PodStorageDrsEntry& obj) : _obj(obj) {}
	virtual ~PodStorageDrsEntry_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PodStorageDrsEntry"; }
};

class PolicyOption_closure : public closure
{
protected:
	vw1__PolicyOption _obj;
public:
	PolicyOption_closure(const vw1__PolicyOption& obj) : _obj(obj) {}
	virtual ~PolicyOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PolicyOption"; }
};

class PortGroupProfile_closure : public closure
{
protected:
	vw1__PortGroupProfile _obj;
public:
	PortGroupProfile_closure(const vw1__PortGroupProfile& obj) : _obj(obj) {}
	virtual ~PortGroupProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PortGroupProfile"; }
};

class PosixUserSearchResult_closure : public closure
{
protected:
	vw1__PosixUserSearchResult _obj;
public:
	PosixUserSearchResult_closure(const vw1__PosixUserSearchResult& obj) : _obj(obj) {}
	virtual ~PosixUserSearchResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PosixUserSearchResult"; }
};

class PowerSystemCapability_closure : public closure
{
protected:
	vw1__PowerSystemCapability _obj;
public:
	PowerSystemCapability_closure(const vw1__PowerSystemCapability& obj) : _obj(obj) {}
	virtual ~PowerSystemCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PowerSystemCapability"; }
};

class PowerSystemInfo_closure : public closure
{
protected:
	vw1__PowerSystemInfo _obj;
public:
	PowerSystemInfo_closure(const vw1__PowerSystemInfo& obj) : _obj(obj) {}
	virtual ~PowerSystemInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PowerSystemInfo"; }
};

class PrivilegePolicyDef_closure : public closure
{
protected:
	vw1__PrivilegePolicyDef _obj;
public:
	PrivilegePolicyDef_closure(const vw1__PrivilegePolicyDef& obj) : _obj(obj) {}
	virtual ~PrivilegePolicyDef_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PrivilegePolicyDef"; }
};

class ProductComponentInfo_closure : public closure
{
protected:
	vw1__ProductComponentInfo _obj;
public:
	ProductComponentInfo_closure(const vw1__ProductComponentInfo& obj) : _obj(obj) {}
	virtual ~ProductComponentInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProductComponentInfo"; }
};

class ProfileApplyProfileElement_closure : public closure
{
protected:
	vw1__ProfileApplyProfileElement _obj;
public:
	ProfileApplyProfileElement_closure(const vw1__ProfileApplyProfileElement& obj) : _obj(obj) {}
	virtual ~ProfileApplyProfileElement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileApplyProfileElement"; }
};

class ProfileApplyProfileProperty_closure : public closure
{
protected:
	vw1__ProfileApplyProfileProperty _obj;
public:
	ProfileApplyProfileProperty_closure(const vw1__ProfileApplyProfileProperty& obj) : _obj(obj) {}
	virtual ~ProfileApplyProfileProperty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileApplyProfileProperty"; }
};

class ProfileAssociatedEvent_closure : public closure
{
protected:
	vw1__ProfileAssociatedEvent _obj;
public:
	ProfileAssociatedEvent_closure(const vw1__ProfileAssociatedEvent& obj) : _obj(obj) {}
	virtual ~ProfileAssociatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileAssociatedEvent"; }
};

class ProfileChangedEvent_closure : public closure
{
protected:
	vw1__ProfileChangedEvent _obj;
public:
	ProfileChangedEvent_closure(const vw1__ProfileChangedEvent& obj) : _obj(obj) {}
	virtual ~ProfileChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileChangedEvent"; }
};

class ProfileCompositeExpression_closure : public closure
{
protected:
	vw1__ProfileCompositeExpression _obj;
public:
	ProfileCompositeExpression_closure(const vw1__ProfileCompositeExpression& obj) : _obj(obj) {}
	virtual ~ProfileCompositeExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileCompositeExpression"; }
};

class ProfileCompositePolicyOptionMetadata_closure : public closure
{
protected:
	vw1__ProfileCompositePolicyOptionMetadata _obj;
public:
	ProfileCompositePolicyOptionMetadata_closure(const vw1__ProfileCompositePolicyOptionMetadata& obj) : _obj(obj) {}
	virtual ~ProfileCompositePolicyOptionMetadata_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileCompositePolicyOptionMetadata"; }
};

class ProfileConfigInfo_closure : public closure
{
protected:
	vw1__ProfileConfigInfo _obj;
public:
	ProfileConfigInfo_closure(const vw1__ProfileConfigInfo& obj) : _obj(obj) {}
	virtual ~ProfileConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileConfigInfo"; }
};

class ProfileCreateSpec_closure : public closure
{
protected:
	vw1__ProfileCreateSpec _obj;
public:
	ProfileCreateSpec_closure(const vw1__ProfileCreateSpec& obj) : _obj(obj) {}
	virtual ~ProfileCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileCreateSpec"; }
};

class ProfileCreatedEvent_closure : public closure
{
protected:
	vw1__ProfileCreatedEvent _obj;
public:
	ProfileCreatedEvent_closure(const vw1__ProfileCreatedEvent& obj) : _obj(obj) {}
	virtual ~ProfileCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileCreatedEvent"; }
};

class ProfileDeferredPolicyOptionParameter_closure : public closure
{
protected:
	vw1__ProfileDeferredPolicyOptionParameter _obj;
public:
	ProfileDeferredPolicyOptionParameter_closure(const vw1__ProfileDeferredPolicyOptionParameter& obj) : _obj(obj) {}
	virtual ~ProfileDeferredPolicyOptionParameter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileDeferredPolicyOptionParameter"; }
};

class ProfileDescription_closure : public closure
{
protected:
	vw1__ProfileDescription _obj;
public:
	ProfileDescription_closure(const vw1__ProfileDescription& obj) : _obj(obj) {}
	virtual ~ProfileDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileDescription"; }
};

class ProfileDescriptionSection_closure : public closure
{
protected:
	vw1__ProfileDescriptionSection _obj;
public:
	ProfileDescriptionSection_closure(const vw1__ProfileDescriptionSection& obj) : _obj(obj) {}
	virtual ~ProfileDescriptionSection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileDescriptionSection"; }
};

class ProfileDissociatedEvent_closure : public closure
{
protected:
	vw1__ProfileDissociatedEvent _obj;
public:
	ProfileDissociatedEvent_closure(const vw1__ProfileDissociatedEvent& obj) : _obj(obj) {}
	virtual ~ProfileDissociatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileDissociatedEvent"; }
};

class ProfileEvent_closure : public closure
{
protected:
	vw1__ProfileEvent _obj;
public:
	ProfileEvent_closure(const vw1__ProfileEvent& obj) : _obj(obj) {}
	virtual ~ProfileEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileEvent"; }
};

class ProfileEventArgument_closure : public closure
{
protected:
	vw1__ProfileEventArgument _obj;
public:
	ProfileEventArgument_closure(const vw1__ProfileEventArgument& obj) : _obj(obj) {}
	virtual ~ProfileEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileEventArgument"; }
};

class ProfileExecuteError_closure : public closure
{
protected:
	vw1__ProfileExecuteError _obj;
public:
	ProfileExecuteError_closure(const vw1__ProfileExecuteError& obj) : _obj(obj) {}
	virtual ~ProfileExecuteError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileExecuteError"; }
};

class ProfileExecuteResult_closure : public closure
{
protected:
	vw1__ProfileExecuteResult _obj;
public:
	ProfileExecuteResult_closure(const vw1__ProfileExecuteResult& obj) : _obj(obj) {}
	virtual ~ProfileExecuteResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileExecuteResult"; }
};

class ProfileExpression_closure : public closure
{
protected:
	vw1__ProfileExpression _obj;
public:
	ProfileExpression_closure(const vw1__ProfileExpression& obj) : _obj(obj) {}
	virtual ~ProfileExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileExpression"; }
};

class ProfileExpressionMetadata_closure : public closure
{
protected:
	vw1__ProfileExpressionMetadata _obj;
public:
	ProfileExpressionMetadata_closure(const vw1__ProfileExpressionMetadata& obj) : _obj(obj) {}
	virtual ~ProfileExpressionMetadata_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileExpressionMetadata"; }
};

class ProfileMetadata_closure : public closure
{
protected:
	vw1__ProfileMetadata _obj;
public:
	ProfileMetadata_closure(const vw1__ProfileMetadata& obj) : _obj(obj) {}
	virtual ~ProfileMetadata_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileMetadata"; }
};

class ProfileMetadataProfileSortSpec_closure : public closure
{
protected:
	vw1__ProfileMetadataProfileSortSpec _obj;
public:
	ProfileMetadataProfileSortSpec_closure(const vw1__ProfileMetadataProfileSortSpec& obj) : _obj(obj) {}
	virtual ~ProfileMetadataProfileSortSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileMetadataProfileSortSpec"; }
};

class ProfileParameterMetadata_closure : public closure
{
protected:
	vw1__ProfileParameterMetadata _obj;
public:
	ProfileParameterMetadata_closure(const vw1__ProfileParameterMetadata& obj) : _obj(obj) {}
	virtual ~ProfileParameterMetadata_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileParameterMetadata"; }
};

class ProfilePolicy_closure : public closure
{
protected:
	vw1__ProfilePolicy _obj;
public:
	ProfilePolicy_closure(const vw1__ProfilePolicy& obj) : _obj(obj) {}
	virtual ~ProfilePolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfilePolicy"; }
};

class ProfilePolicyMetadata_closure : public closure
{
protected:
	vw1__ProfilePolicyMetadata _obj;
public:
	ProfilePolicyMetadata_closure(const vw1__ProfilePolicyMetadata& obj) : _obj(obj) {}
	virtual ~ProfilePolicyMetadata_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfilePolicyMetadata"; }
};

class ProfilePolicyOptionMetadata_closure : public closure
{
protected:
	vw1__ProfilePolicyOptionMetadata _obj;
public:
	ProfilePolicyOptionMetadata_closure(const vw1__ProfilePolicyOptionMetadata& obj) : _obj(obj) {}
	virtual ~ProfilePolicyOptionMetadata_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfilePolicyOptionMetadata"; }
};

class ProfileProfileStructure_closure : public closure
{
protected:
	vw1__ProfileProfileStructure _obj;
public:
	ProfileProfileStructure_closure(const vw1__ProfileProfileStructure& obj) : _obj(obj) {}
	virtual ~ProfileProfileStructure_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileProfileStructure"; }
};

class ProfileProfileStructureProperty_closure : public closure
{
protected:
	vw1__ProfileProfileStructureProperty _obj;
public:
	ProfileProfileStructureProperty_closure(const vw1__ProfileProfileStructureProperty& obj) : _obj(obj) {}
	virtual ~ProfileProfileStructureProperty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileProfileStructureProperty"; }
};

class ProfilePropertyPath_closure : public closure
{
protected:
	vw1__ProfilePropertyPath _obj;
public:
	ProfilePropertyPath_closure(const vw1__ProfilePropertyPath& obj) : _obj(obj) {}
	virtual ~ProfilePropertyPath_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfilePropertyPath"; }
};

class ProfileReferenceHostChangedEvent_closure : public closure
{
protected:
	vw1__ProfileReferenceHostChangedEvent _obj;
public:
	ProfileReferenceHostChangedEvent_closure(const vw1__ProfileReferenceHostChangedEvent& obj) : _obj(obj) {}
	virtual ~ProfileReferenceHostChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileReferenceHostChangedEvent"; }
};

class ProfileRemovedEvent_closure : public closure
{
protected:
	vw1__ProfileRemovedEvent _obj;
public:
	ProfileRemovedEvent_closure(const vw1__ProfileRemovedEvent& obj) : _obj(obj) {}
	virtual ~ProfileRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileRemovedEvent"; }
};

class ProfileSerializedCreateSpec_closure : public closure
{
protected:
	vw1__ProfileSerializedCreateSpec _obj;
public:
	ProfileSerializedCreateSpec_closure(const vw1__ProfileSerializedCreateSpec& obj) : _obj(obj) {}
	virtual ~ProfileSerializedCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileSerializedCreateSpec"; }
};

class ProfileSimpleExpression_closure : public closure
{
protected:
	vw1__ProfileSimpleExpression _obj;
public:
	ProfileSimpleExpression_closure(const vw1__ProfileSimpleExpression& obj) : _obj(obj) {}
	virtual ~ProfileSimpleExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileSimpleExpression"; }
};

class ProfileUpdateFailedUpdateFailure_closure : public closure
{
protected:
	vw1__ProfileUpdateFailedUpdateFailure _obj;
public:
	ProfileUpdateFailedUpdateFailure_closure(const vw1__ProfileUpdateFailedUpdateFailure& obj) : _obj(obj) {}
	virtual ~ProfileUpdateFailedUpdateFailure_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileUpdateFailedUpdateFailure"; }
};

class PropertyChange_closure : public closure
{
protected:
	vw1__PropertyChange _obj;
public:
	PropertyChange_closure(const vw1__PropertyChange& obj) : _obj(obj) {}
	virtual ~PropertyChange_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PropertyChange"; }
};

class PropertyFilterSpec_closure : public closure
{
protected:
	vw1__PropertyFilterSpec _obj;
public:
	PropertyFilterSpec_closure(const vw1__PropertyFilterSpec& obj) : _obj(obj) {}
	virtual ~PropertyFilterSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PropertyFilterSpec"; }
};

class PropertyFilterUpdate_closure : public closure
{
protected:
	vw1__PropertyFilterUpdate _obj;
public:
	PropertyFilterUpdate_closure(const vw1__PropertyFilterUpdate& obj) : _obj(obj) {}
	virtual ~PropertyFilterUpdate_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PropertyFilterUpdate"; }
};

class PropertySpec_closure : public closure
{
protected:
	vw1__PropertySpec _obj;
public:
	PropertySpec_closure(const vw1__PropertySpec& obj) : _obj(obj) {}
	virtual ~PropertySpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PropertySpec"; }
};

class RecurrentTaskScheduler_closure : public closure
{
protected:
	vw1__RecurrentTaskScheduler _obj;
public:
	RecurrentTaskScheduler_closure(const vw1__RecurrentTaskScheduler& obj) : _obj(obj) {}
	virtual ~RecurrentTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RecurrentTaskScheduler"; }
};

class RemoteTSMEnabledEvent_closure : public closure
{
protected:
	vw1__RemoteTSMEnabledEvent _obj;
public:
	RemoteTSMEnabledEvent_closure(const vw1__RemoteTSMEnabledEvent& obj) : _obj(obj) {}
	virtual ~RemoteTSMEnabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RemoteTSMEnabledEvent"; }
};

class ReplicationInfoDiskSettings_closure : public closure
{
protected:
	vw1__ReplicationInfoDiskSettings _obj;
public:
	ReplicationInfoDiskSettings_closure(const vw1__ReplicationInfoDiskSettings& obj) : _obj(obj) {}
	virtual ~ReplicationInfoDiskSettings_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationInfoDiskSettings"; }
};

class ReplicationVmProgressInfo_closure : public closure
{
protected:
	vw1__ReplicationVmProgressInfo _obj;
public:
	ReplicationVmProgressInfo_closure(const vw1__ReplicationVmProgressInfo& obj) : _obj(obj) {}
	virtual ~ReplicationVmProgressInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationVmProgressInfo"; }
};

class ResourceAllocationInfo_closure : public closure
{
protected:
	vw1__ResourceAllocationInfo _obj;
public:
	ResourceAllocationInfo_closure(const vw1__ResourceAllocationInfo& obj) : _obj(obj) {}
	virtual ~ResourceAllocationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourceAllocationInfo"; }
};

class ResourceAllocationOption_closure : public closure
{
protected:
	vw1__ResourceAllocationOption _obj;
public:
	ResourceAllocationOption_closure(const vw1__ResourceAllocationOption& obj) : _obj(obj) {}
	virtual ~ResourceAllocationOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourceAllocationOption"; }
};

class ResourceConfigOption_closure : public closure
{
protected:
	vw1__ResourceConfigOption _obj;
public:
	ResourceConfigOption_closure(const vw1__ResourceConfigOption& obj) : _obj(obj) {}
	virtual ~ResourceConfigOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourceConfigOption"; }
};

class ResourceConfigSpec_closure : public closure
{
protected:
	vw1__ResourceConfigSpec _obj;
public:
	ResourceConfigSpec_closure(const vw1__ResourceConfigSpec& obj) : _obj(obj) {}
	virtual ~ResourceConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourceConfigSpec"; }
};

class ResourcePoolCreatedEvent_closure : public closure
{
protected:
	vw1__ResourcePoolCreatedEvent _obj;
public:
	ResourcePoolCreatedEvent_closure(const vw1__ResourcePoolCreatedEvent& obj) : _obj(obj) {}
	virtual ~ResourcePoolCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolCreatedEvent"; }
};

class ResourcePoolDestroyedEvent_closure : public closure
{
protected:
	vw1__ResourcePoolDestroyedEvent _obj;
public:
	ResourcePoolDestroyedEvent_closure(const vw1__ResourcePoolDestroyedEvent& obj) : _obj(obj) {}
	virtual ~ResourcePoolDestroyedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolDestroyedEvent"; }
};

class ResourcePoolEvent_closure : public closure
{
protected:
	vw1__ResourcePoolEvent _obj;
public:
	ResourcePoolEvent_closure(const vw1__ResourcePoolEvent& obj) : _obj(obj) {}
	virtual ~ResourcePoolEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolEvent"; }
};

class ResourcePoolEventArgument_closure : public closure
{
protected:
	vw1__ResourcePoolEventArgument _obj;
public:
	ResourcePoolEventArgument_closure(const vw1__ResourcePoolEventArgument& obj) : _obj(obj) {}
	virtual ~ResourcePoolEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolEventArgument"; }
};

class ResourcePoolMovedEvent_closure : public closure
{
protected:
	vw1__ResourcePoolMovedEvent _obj;
public:
	ResourcePoolMovedEvent_closure(const vw1__ResourcePoolMovedEvent& obj) : _obj(obj) {}
	virtual ~ResourcePoolMovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolMovedEvent"; }
};

class ResourcePoolQuickStats_closure : public closure
{
protected:
	vw1__ResourcePoolQuickStats _obj;
public:
	ResourcePoolQuickStats_closure(const vw1__ResourcePoolQuickStats& obj) : _obj(obj) {}
	virtual ~ResourcePoolQuickStats_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolQuickStats"; }
};

class ResourcePoolReconfiguredEvent_closure : public closure
{
protected:
	vw1__ResourcePoolReconfiguredEvent _obj;
public:
	ResourcePoolReconfiguredEvent_closure(const vw1__ResourcePoolReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~ResourcePoolReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolReconfiguredEvent"; }
};

class ResourcePoolResourceUsage_closure : public closure
{
protected:
	vw1__ResourcePoolResourceUsage _obj;
public:
	ResourcePoolResourceUsage_closure(const vw1__ResourcePoolResourceUsage& obj) : _obj(obj) {}
	virtual ~ResourcePoolResourceUsage_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolResourceUsage"; }
};

class ResourcePoolRuntimeInfo_closure : public closure
{
protected:
	vw1__ResourcePoolRuntimeInfo _obj;
public:
	ResourcePoolRuntimeInfo_closure(const vw1__ResourcePoolRuntimeInfo& obj) : _obj(obj) {}
	virtual ~ResourcePoolRuntimeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolRuntimeInfo"; }
};

class ResourcePoolSummary_closure : public closure
{
protected:
	vw1__ResourcePoolSummary _obj;
public:
	ResourcePoolSummary_closure(const vw1__ResourcePoolSummary& obj) : _obj(obj) {}
	virtual ~ResourcePoolSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePoolSummary"; }
};

class ResourceViolatedEvent_closure : public closure
{
protected:
	vw1__ResourceViolatedEvent _obj;
public:
	ResourceViolatedEvent_closure(const vw1__ResourceViolatedEvent& obj) : _obj(obj) {}
	virtual ~ResourceViolatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourceViolatedEvent"; }
};

class RetrieveOptions_closure : public closure
{
protected:
	vw1__RetrieveOptions _obj;
public:
	RetrieveOptions_closure(const vw1__RetrieveOptions& obj) : _obj(obj) {}
	virtual ~RetrieveOptions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RetrieveOptions"; }
};

class RetrieveResult_closure : public closure
{
protected:
	vw1__RetrieveResult _obj;
public:
	RetrieveResult_closure(const vw1__RetrieveResult& obj) : _obj(obj) {}
	virtual ~RetrieveResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RetrieveResult"; }
};

class RoleAddedEvent_closure : public closure
{
protected:
	vw1__RoleAddedEvent _obj;
public:
	RoleAddedEvent_closure(const vw1__RoleAddedEvent& obj) : _obj(obj) {}
	virtual ~RoleAddedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RoleAddedEvent"; }
};

class RoleEvent_closure : public closure
{
protected:
	vw1__RoleEvent _obj;
public:
	RoleEvent_closure(const vw1__RoleEvent& obj) : _obj(obj) {}
	virtual ~RoleEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RoleEvent"; }
};

class RoleEventArgument_closure : public closure
{
protected:
	vw1__RoleEventArgument _obj;
public:
	RoleEventArgument_closure(const vw1__RoleEventArgument& obj) : _obj(obj) {}
	virtual ~RoleEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RoleEventArgument"; }
};

class RoleRemovedEvent_closure : public closure
{
protected:
	vw1__RoleRemovedEvent _obj;
public:
	RoleRemovedEvent_closure(const vw1__RoleRemovedEvent& obj) : _obj(obj) {}
	virtual ~RoleRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RoleRemovedEvent"; }
};

class RoleUpdatedEvent_closure : public closure
{
protected:
	vw1__RoleUpdatedEvent _obj;
public:
	RoleUpdatedEvent_closure(const vw1__RoleUpdatedEvent& obj) : _obj(obj) {}
	virtual ~RoleUpdatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RoleUpdatedEvent"; }
};

class RunScriptAction_closure : public closure
{
protected:
	vw1__RunScriptAction _obj;
public:
	RunScriptAction_closure(const vw1__RunScriptAction& obj) : _obj(obj) {}
	virtual ~RunScriptAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RunScriptAction"; }
};

class SSPIAuthentication_closure : public closure
{
protected:
	vw1__SSPIAuthentication _obj;
public:
	SSPIAuthentication_closure(const vw1__SSPIAuthentication& obj) : _obj(obj) {}
	virtual ~SSPIAuthentication_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SSPIAuthentication"; }
};

class ScheduledTaskCompletedEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskCompletedEvent _obj;
public:
	ScheduledTaskCompletedEvent_closure(const vw1__ScheduledTaskCompletedEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskCompletedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskCompletedEvent"; }
};

class ScheduledTaskCreatedEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskCreatedEvent _obj;
public:
	ScheduledTaskCreatedEvent_closure(const vw1__ScheduledTaskCreatedEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskCreatedEvent"; }
};

class ScheduledTaskDescription_closure : public closure
{
protected:
	vw1__ScheduledTaskDescription _obj;
public:
	ScheduledTaskDescription_closure(const vw1__ScheduledTaskDescription& obj) : _obj(obj) {}
	virtual ~ScheduledTaskDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskDescription"; }
};

class ScheduledTaskDetail_closure : public closure
{
protected:
	vw1__ScheduledTaskDetail _obj;
public:
	ScheduledTaskDetail_closure(const vw1__ScheduledTaskDetail& obj) : _obj(obj) {}
	virtual ~ScheduledTaskDetail_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskDetail"; }
};

class ScheduledTaskEmailCompletedEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskEmailCompletedEvent _obj;
public:
	ScheduledTaskEmailCompletedEvent_closure(const vw1__ScheduledTaskEmailCompletedEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskEmailCompletedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskEmailCompletedEvent"; }
};

class ScheduledTaskEmailFailedEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskEmailFailedEvent _obj;
public:
	ScheduledTaskEmailFailedEvent_closure(const vw1__ScheduledTaskEmailFailedEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskEmailFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskEmailFailedEvent"; }
};

class ScheduledTaskEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskEvent _obj;
public:
	ScheduledTaskEvent_closure(const vw1__ScheduledTaskEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskEvent"; }
};

class ScheduledTaskEventArgument_closure : public closure
{
protected:
	vw1__ScheduledTaskEventArgument _obj;
public:
	ScheduledTaskEventArgument_closure(const vw1__ScheduledTaskEventArgument& obj) : _obj(obj) {}
	virtual ~ScheduledTaskEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskEventArgument"; }
};

class ScheduledTaskFailedEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskFailedEvent _obj;
public:
	ScheduledTaskFailedEvent_closure(const vw1__ScheduledTaskFailedEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskFailedEvent"; }
};

class ScheduledTaskInfo_closure : public closure
{
protected:
	vw1__ScheduledTaskInfo _obj;
public:
	ScheduledTaskInfo_closure(const vw1__ScheduledTaskInfo& obj) : _obj(obj) {}
	virtual ~ScheduledTaskInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskInfo"; }
};

class ScheduledTaskReconfiguredEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskReconfiguredEvent _obj;
public:
	ScheduledTaskReconfiguredEvent_closure(const vw1__ScheduledTaskReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskReconfiguredEvent"; }
};

class ScheduledTaskRemovedEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskRemovedEvent _obj;
public:
	ScheduledTaskRemovedEvent_closure(const vw1__ScheduledTaskRemovedEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskRemovedEvent"; }
};

class ScheduledTaskSpec_closure : public closure
{
protected:
	vw1__ScheduledTaskSpec _obj;
public:
	ScheduledTaskSpec_closure(const vw1__ScheduledTaskSpec& obj) : _obj(obj) {}
	virtual ~ScheduledTaskSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskSpec"; }
};

class ScheduledTaskStartedEvent_closure : public closure
{
protected:
	vw1__ScheduledTaskStartedEvent _obj;
public:
	ScheduledTaskStartedEvent_closure(const vw1__ScheduledTaskStartedEvent& obj) : _obj(obj) {}
	virtual ~ScheduledTaskStartedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskStartedEvent"; }
};

class ScsiLun_closure : public closure
{
protected:
	vw1__ScsiLun _obj;
public:
	ScsiLun_closure(const vw1__ScsiLun& obj) : _obj(obj) {}
	virtual ~ScsiLun_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScsiLun"; }
};

class ScsiLunCapabilities_closure : public closure
{
protected:
	vw1__ScsiLunCapabilities _obj;
public:
	ScsiLunCapabilities_closure(const vw1__ScsiLunCapabilities& obj) : _obj(obj) {}
	virtual ~ScsiLunCapabilities_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScsiLunCapabilities"; }
};

class ScsiLunDescriptor_closure : public closure
{
protected:
	vw1__ScsiLunDescriptor _obj;
public:
	ScsiLunDescriptor_closure(const vw1__ScsiLunDescriptor& obj) : _obj(obj) {}
	virtual ~ScsiLunDescriptor_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScsiLunDescriptor"; }
};

class ScsiLunDurableName_closure : public closure
{
protected:
	vw1__ScsiLunDurableName _obj;
public:
	ScsiLunDurableName_closure(const vw1__ScsiLunDurableName& obj) : _obj(obj) {}
	virtual ~ScsiLunDurableName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScsiLunDurableName"; }
};

class SecurityProfile_closure : public closure
{
protected:
	vw1__SecurityProfile _obj;
public:
	SecurityProfile_closure(const vw1__SecurityProfile& obj) : _obj(obj) {}
	virtual ~SecurityProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SecurityProfile"; }
};

class SelectionSpec_closure : public closure
{
protected:
	vw1__SelectionSpec _obj;
public:
	SelectionSpec_closure(const vw1__SelectionSpec& obj) : _obj(obj) {}
	virtual ~SelectionSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SelectionSpec"; }
};

class SendEmailAction_closure : public closure
{
protected:
	vw1__SendEmailAction _obj;
public:
	SendEmailAction_closure(const vw1__SendEmailAction& obj) : _obj(obj) {}
	virtual ~SendEmailAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SendEmailAction"; }
};

class SendSNMPAction_closure : public closure
{
protected:
	vw1__SendSNMPAction _obj;
public:
	SendSNMPAction_closure(const vw1__SendSNMPAction& obj) : _obj(obj) {}
	virtual ~SendSNMPAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SendSNMPAction"; }
};

class ServerLicenseExpiredEvent_closure : public closure
{
protected:
	vw1__ServerLicenseExpiredEvent _obj;
public:
	ServerLicenseExpiredEvent_closure(const vw1__ServerLicenseExpiredEvent& obj) : _obj(obj) {}
	virtual ~ServerLicenseExpiredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ServerLicenseExpiredEvent"; }
};

class ServerStartedSessionEvent_closure : public closure
{
protected:
	vw1__ServerStartedSessionEvent _obj;
public:
	ServerStartedSessionEvent_closure(const vw1__ServerStartedSessionEvent& obj) : _obj(obj) {}
	virtual ~ServerStartedSessionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ServerStartedSessionEvent"; }
};

class ServiceConsolePortGroupProfile_closure : public closure
{
protected:
	vw1__ServiceConsolePortGroupProfile _obj;
public:
	ServiceConsolePortGroupProfile_closure(const vw1__ServiceConsolePortGroupProfile& obj) : _obj(obj) {}
	virtual ~ServiceConsolePortGroupProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ServiceConsolePortGroupProfile"; }
};

class ServiceConsoleReservationInfo_closure : public closure
{
protected:
	vw1__ServiceConsoleReservationInfo _obj;
public:
	ServiceConsoleReservationInfo_closure(const vw1__ServiceConsoleReservationInfo& obj) : _obj(obj) {}
	virtual ~ServiceConsoleReservationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ServiceConsoleReservationInfo"; }
};

class ServiceContent_closure : public closure
{
protected:
	vw1__ServiceContent _obj;
public:
	ServiceContent_closure(const vw1__ServiceContent& obj) : _obj(obj) {}
	virtual ~ServiceContent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ServiceContent"; }
};

class ServiceProfile_closure : public closure
{
protected:
	vw1__ServiceProfile _obj;
public:
	ServiceProfile_closure(const vw1__ServiceProfile& obj) : _obj(obj) {}
	virtual ~ServiceProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ServiceProfile"; }
};

class SessionEvent_closure : public closure
{
protected:
	vw1__SessionEvent _obj;
public:
	SessionEvent_closure(const vw1__SessionEvent& obj) : _obj(obj) {}
	virtual ~SessionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SessionEvent"; }
};

class SessionManagerGenericServiceTicket_closure : public closure
{
protected:
	vw1__SessionManagerGenericServiceTicket _obj;
public:
	SessionManagerGenericServiceTicket_closure(const vw1__SessionManagerGenericServiceTicket& obj) : _obj(obj) {}
	virtual ~SessionManagerGenericServiceTicket_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SessionManagerGenericServiceTicket"; }
};

class SessionManagerHttpServiceRequestSpec_closure : public closure
{
protected:
	vw1__SessionManagerHttpServiceRequestSpec _obj;
public:
	SessionManagerHttpServiceRequestSpec_closure(const vw1__SessionManagerHttpServiceRequestSpec& obj) : _obj(obj) {}
	virtual ~SessionManagerHttpServiceRequestSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SessionManagerHttpServiceRequestSpec"; }
};

class SessionManagerLocalTicket_closure : public closure
{
protected:
	vw1__SessionManagerLocalTicket _obj;
public:
	SessionManagerLocalTicket_closure(const vw1__SessionManagerLocalTicket& obj) : _obj(obj) {}
	virtual ~SessionManagerLocalTicket_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SessionManagerLocalTicket"; }
};

class SessionManagerServiceRequestSpec_closure : public closure
{
protected:
	vw1__SessionManagerServiceRequestSpec _obj;
public:
	SessionManagerServiceRequestSpec_closure(const vw1__SessionManagerServiceRequestSpec& obj) : _obj(obj) {}
	virtual ~SessionManagerServiceRequestSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SessionManagerServiceRequestSpec"; }
};

class SessionTerminatedEvent_closure : public closure
{
protected:
	vw1__SessionTerminatedEvent _obj;
public:
	SessionTerminatedEvent_closure(const vw1__SessionTerminatedEvent& obj) : _obj(obj) {}
	virtual ~SessionTerminatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SessionTerminatedEvent"; }
};

class SharesInfo_closure : public closure
{
protected:
	vw1__SharesInfo _obj;
public:
	SharesInfo_closure(const vw1__SharesInfo& obj) : _obj(obj) {}
	virtual ~SharesInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SharesInfo"; }
};

class SharesOption_closure : public closure
{
protected:
	vw1__SharesOption _obj;
public:
	SharesOption_closure(const vw1__SharesOption& obj) : _obj(obj) {}
	virtual ~SharesOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SharesOption"; }
};

class StateAlarmExpression_closure : public closure
{
protected:
	vw1__StateAlarmExpression _obj;
public:
	StateAlarmExpression_closure(const vw1__StateAlarmExpression& obj) : _obj(obj) {}
	virtual ~StateAlarmExpression_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StateAlarmExpression"; }
};

class StaticRouteProfile_closure : public closure
{
protected:
	vw1__StaticRouteProfile _obj;
public:
	StaticRouteProfile_closure(const vw1__StaticRouteProfile& obj) : _obj(obj) {}
	virtual ~StaticRouteProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StaticRouteProfile"; }
};

class StorageDrsConfigInfo_closure : public closure
{
protected:
	vw1__StorageDrsConfigInfo _obj;
public:
	StorageDrsConfigInfo_closure(const vw1__StorageDrsConfigInfo& obj) : _obj(obj) {}
	virtual ~StorageDrsConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsConfigInfo"; }
};

class StorageDrsConfigSpec_closure : public closure
{
protected:
	vw1__StorageDrsConfigSpec _obj;
public:
	StorageDrsConfigSpec_closure(const vw1__StorageDrsConfigSpec& obj) : _obj(obj) {}
	virtual ~StorageDrsConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsConfigSpec"; }
};

class StorageDrsIoLoadBalanceConfig_closure : public closure
{
protected:
	vw1__StorageDrsIoLoadBalanceConfig _obj;
public:
	StorageDrsIoLoadBalanceConfig_closure(const vw1__StorageDrsIoLoadBalanceConfig& obj) : _obj(obj) {}
	virtual ~StorageDrsIoLoadBalanceConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsIoLoadBalanceConfig"; }
};

class StorageDrsOptionSpec_closure : public closure
{
protected:
	vw1__StorageDrsOptionSpec _obj;
public:
	StorageDrsOptionSpec_closure(const vw1__StorageDrsOptionSpec& obj) : _obj(obj) {}
	virtual ~StorageDrsOptionSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsOptionSpec"; }
};

class StorageDrsPodConfigInfo_closure : public closure
{
protected:
	vw1__StorageDrsPodConfigInfo _obj;
public:
	StorageDrsPodConfigInfo_closure(const vw1__StorageDrsPodConfigInfo& obj) : _obj(obj) {}
	virtual ~StorageDrsPodConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsPodConfigInfo"; }
};

class StorageDrsPodConfigSpec_closure : public closure
{
protected:
	vw1__StorageDrsPodConfigSpec _obj;
public:
	StorageDrsPodConfigSpec_closure(const vw1__StorageDrsPodConfigSpec& obj) : _obj(obj) {}
	virtual ~StorageDrsPodConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsPodConfigSpec"; }
};

class StorageDrsPodSelectionSpec_closure : public closure
{
protected:
	vw1__StorageDrsPodSelectionSpec _obj;
public:
	StorageDrsPodSelectionSpec_closure(const vw1__StorageDrsPodSelectionSpec& obj) : _obj(obj) {}
	virtual ~StorageDrsPodSelectionSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsPodSelectionSpec"; }
};

class StorageDrsSpaceLoadBalanceConfig_closure : public closure
{
protected:
	vw1__StorageDrsSpaceLoadBalanceConfig _obj;
public:
	StorageDrsSpaceLoadBalanceConfig_closure(const vw1__StorageDrsSpaceLoadBalanceConfig& obj) : _obj(obj) {}
	virtual ~StorageDrsSpaceLoadBalanceConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsSpaceLoadBalanceConfig"; }
};

class StorageDrsVmConfigInfo_closure : public closure
{
protected:
	vw1__StorageDrsVmConfigInfo _obj;
public:
	StorageDrsVmConfigInfo_closure(const vw1__StorageDrsVmConfigInfo& obj) : _obj(obj) {}
	virtual ~StorageDrsVmConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsVmConfigInfo"; }
};

class StorageDrsVmConfigSpec_closure : public closure
{
protected:
	vw1__StorageDrsVmConfigSpec _obj;
public:
	StorageDrsVmConfigSpec_closure(const vw1__StorageDrsVmConfigSpec& obj) : _obj(obj) {}
	virtual ~StorageDrsVmConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsVmConfigSpec"; }
};

class StorageIOAllocationInfo_closure : public closure
{
protected:
	vw1__StorageIOAllocationInfo _obj;
public:
	StorageIOAllocationInfo_closure(const vw1__StorageIOAllocationInfo& obj) : _obj(obj) {}
	virtual ~StorageIOAllocationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageIOAllocationInfo"; }
};

class StorageIOAllocationOption_closure : public closure
{
protected:
	vw1__StorageIOAllocationOption _obj;
public:
	StorageIOAllocationOption_closure(const vw1__StorageIOAllocationOption& obj) : _obj(obj) {}
	virtual ~StorageIOAllocationOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageIOAllocationOption"; }
};

class StorageIORMConfigOption_closure : public closure
{
protected:
	vw1__StorageIORMConfigOption _obj;
public:
	StorageIORMConfigOption_closure(const vw1__StorageIORMConfigOption& obj) : _obj(obj) {}
	virtual ~StorageIORMConfigOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageIORMConfigOption"; }
};

class StorageIORMConfigSpec_closure : public closure
{
protected:
	vw1__StorageIORMConfigSpec _obj;
public:
	StorageIORMConfigSpec_closure(const vw1__StorageIORMConfigSpec& obj) : _obj(obj) {}
	virtual ~StorageIORMConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageIORMConfigSpec"; }
};

class StorageIORMInfo_closure : public closure
{
protected:
	vw1__StorageIORMInfo _obj;
public:
	StorageIORMInfo_closure(const vw1__StorageIORMInfo& obj) : _obj(obj) {}
	virtual ~StorageIORMInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageIORMInfo"; }
};

class StorageMigrationAction_closure : public closure
{
protected:
	vw1__StorageMigrationAction _obj;
public:
	StorageMigrationAction_closure(const vw1__StorageMigrationAction& obj) : _obj(obj) {}
	virtual ~StorageMigrationAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageMigrationAction"; }
};

class StoragePlacementAction_closure : public closure
{
protected:
	vw1__StoragePlacementAction _obj;
public:
	StoragePlacementAction_closure(const vw1__StoragePlacementAction& obj) : _obj(obj) {}
	virtual ~StoragePlacementAction_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StoragePlacementAction"; }
};

class StoragePlacementResult_closure : public closure
{
protected:
	vw1__StoragePlacementResult _obj;
public:
	StoragePlacementResult_closure(const vw1__StoragePlacementResult& obj) : _obj(obj) {}
	virtual ~StoragePlacementResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StoragePlacementResult"; }
};

class StoragePlacementSpec_closure : public closure
{
protected:
	vw1__StoragePlacementSpec _obj;
public:
	StoragePlacementSpec_closure(const vw1__StoragePlacementSpec& obj) : _obj(obj) {}
	virtual ~StoragePlacementSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StoragePlacementSpec"; }
};

class StoragePodSummary_closure : public closure
{
protected:
	vw1__StoragePodSummary _obj;
public:
	StoragePodSummary_closure(const vw1__StoragePodSummary& obj) : _obj(obj) {}
	virtual ~StoragePodSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StoragePodSummary"; }
};

class StorageProfile_closure : public closure
{
protected:
	vw1__StorageProfile _obj;
public:
	StorageProfile_closure(const vw1__StorageProfile& obj) : _obj(obj) {}
	virtual ~StorageProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageProfile"; }
};

class StorageRequirement_closure : public closure
{
protected:
	vw1__StorageRequirement _obj;
public:
	StorageRequirement_closure(const vw1__StorageRequirement& obj) : _obj(obj) {}
	virtual ~StorageRequirement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageRequirement"; }
};

class StringOption_closure : public closure
{
protected:
	vw1__StringOption _obj;
public:
	StringOption_closure(const vw1__StringOption& obj) : _obj(obj) {}
	virtual ~StringOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StringOption"; }
};

class StringPolicy_closure : public closure
{
protected:
	vw1__StringPolicy _obj;
public:
	StringPolicy_closure(const vw1__StringPolicy& obj) : _obj(obj) {}
	virtual ~StringPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StringPolicy"; }
};

class Tag_closure : public closure
{
protected:
	vw1__Tag _obj;
public:
	Tag_closure(const vw1__Tag& obj) : _obj(obj) {}
	virtual ~Tag_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Tag"; }
};

class TaskDescription_closure : public closure
{
protected:
	vw1__TaskDescription _obj;
public:
	TaskDescription_closure(const vw1__TaskDescription& obj) : _obj(obj) {}
	virtual ~TaskDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskDescription"; }
};

class TaskEvent_closure : public closure
{
protected:
	vw1__TaskEvent _obj;
public:
	TaskEvent_closure(const vw1__TaskEvent& obj) : _obj(obj) {}
	virtual ~TaskEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskEvent"; }
};

class TaskFilterSpec_closure : public closure
{
protected:
	vw1__TaskFilterSpec _obj;
public:
	TaskFilterSpec_closure(const vw1__TaskFilterSpec& obj) : _obj(obj) {}
	virtual ~TaskFilterSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskFilterSpec"; }
};

class TaskFilterSpecByEntity_closure : public closure
{
protected:
	vw1__TaskFilterSpecByEntity _obj;
public:
	TaskFilterSpecByEntity_closure(const vw1__TaskFilterSpecByEntity& obj) : _obj(obj) {}
	virtual ~TaskFilterSpecByEntity_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskFilterSpecByEntity"; }
};

class TaskFilterSpecByTime_closure : public closure
{
protected:
	vw1__TaskFilterSpecByTime _obj;
public:
	TaskFilterSpecByTime_closure(const vw1__TaskFilterSpecByTime& obj) : _obj(obj) {}
	virtual ~TaskFilterSpecByTime_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskFilterSpecByTime"; }
};

class TaskFilterSpecByUsername_closure : public closure
{
protected:
	vw1__TaskFilterSpecByUsername _obj;
public:
	TaskFilterSpecByUsername_closure(const vw1__TaskFilterSpecByUsername& obj) : _obj(obj) {}
	virtual ~TaskFilterSpecByUsername_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskFilterSpecByUsername"; }
};

class TaskInfo_closure : public closure
{
protected:
	vw1__TaskInfo _obj;
public:
	TaskInfo_closure(const vw1__TaskInfo& obj) : _obj(obj) {}
	virtual ~TaskInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskInfo"; }
};

class TaskReason_closure : public closure
{
protected:
	vw1__TaskReason _obj;
public:
	TaskReason_closure(const vw1__TaskReason& obj) : _obj(obj) {}
	virtual ~TaskReason_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskReason"; }
};

class TaskReasonAlarm_closure : public closure
{
protected:
	vw1__TaskReasonAlarm _obj;
public:
	TaskReasonAlarm_closure(const vw1__TaskReasonAlarm& obj) : _obj(obj) {}
	virtual ~TaskReasonAlarm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskReasonAlarm"; }
};

class TaskReasonSchedule_closure : public closure
{
protected:
	vw1__TaskReasonSchedule _obj;
public:
	TaskReasonSchedule_closure(const vw1__TaskReasonSchedule& obj) : _obj(obj) {}
	virtual ~TaskReasonSchedule_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskReasonSchedule"; }
};

class TaskReasonSystem_closure : public closure
{
protected:
	vw1__TaskReasonSystem _obj;
public:
	TaskReasonSystem_closure(const vw1__TaskReasonSystem& obj) : _obj(obj) {}
	virtual ~TaskReasonSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskReasonSystem"; }
};

class TaskReasonUser_closure : public closure
{
protected:
	vw1__TaskReasonUser _obj;
public:
	TaskReasonUser_closure(const vw1__TaskReasonUser& obj) : _obj(obj) {}
	virtual ~TaskReasonUser_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskReasonUser"; }
};

class TaskScheduler_closure : public closure
{
protected:
	vw1__TaskScheduler _obj;
public:
	TaskScheduler_closure(const vw1__TaskScheduler& obj) : _obj(obj) {}
	virtual ~TaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskScheduler"; }
};

class TaskTimeoutEvent_closure : public closure
{
protected:
	vw1__TaskTimeoutEvent _obj;
public:
	TaskTimeoutEvent_closure(const vw1__TaskTimeoutEvent& obj) : _obj(obj) {}
	virtual ~TaskTimeoutEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskTimeoutEvent"; }
};

class TemplateBeingUpgradedEvent_closure : public closure
{
protected:
	vw1__TemplateBeingUpgradedEvent _obj;
public:
	TemplateBeingUpgradedEvent_closure(const vw1__TemplateBeingUpgradedEvent& obj) : _obj(obj) {}
	virtual ~TemplateBeingUpgradedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TemplateBeingUpgradedEvent"; }
};

class TemplateConfigFileInfo_closure : public closure
{
protected:
	vw1__TemplateConfigFileInfo _obj;
public:
	TemplateConfigFileInfo_closure(const vw1__TemplateConfigFileInfo& obj) : _obj(obj) {}
	virtual ~TemplateConfigFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TemplateConfigFileInfo"; }
};

class TemplateConfigFileQuery_closure : public closure
{
protected:
	vw1__TemplateConfigFileQuery _obj;
public:
	TemplateConfigFileQuery_closure(const vw1__TemplateConfigFileQuery& obj) : _obj(obj) {}
	virtual ~TemplateConfigFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TemplateConfigFileQuery"; }
};

class TemplateUpgradeEvent_closure : public closure
{
protected:
	vw1__TemplateUpgradeEvent _obj;
public:
	TemplateUpgradeEvent_closure(const vw1__TemplateUpgradeEvent& obj) : _obj(obj) {}
	virtual ~TemplateUpgradeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TemplateUpgradeEvent"; }
};

class TemplateUpgradeFailedEvent_closure : public closure
{
protected:
	vw1__TemplateUpgradeFailedEvent _obj;
public:
	TemplateUpgradeFailedEvent_closure(const vw1__TemplateUpgradeFailedEvent& obj) : _obj(obj) {}
	virtual ~TemplateUpgradeFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TemplateUpgradeFailedEvent"; }
};

class TemplateUpgradedEvent_closure : public closure
{
protected:
	vw1__TemplateUpgradedEvent _obj;
public:
	TemplateUpgradedEvent_closure(const vw1__TemplateUpgradedEvent& obj) : _obj(obj) {}
	virtual ~TemplateUpgradedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TemplateUpgradedEvent"; }
};

class TicketedSessionAuthentication_closure : public closure
{
protected:
	vw1__TicketedSessionAuthentication _obj;
public:
	TicketedSessionAuthentication_closure(const vw1__TicketedSessionAuthentication& obj) : _obj(obj) {}
	virtual ~TicketedSessionAuthentication_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TicketedSessionAuthentication"; }
};

class TimedOutHostOperationEvent_closure : public closure
{
protected:
	vw1__TimedOutHostOperationEvent _obj;
public:
	TimedOutHostOperationEvent_closure(const vw1__TimedOutHostOperationEvent& obj) : _obj(obj) {}
	virtual ~TimedOutHostOperationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TimedOutHostOperationEvent"; }
};

class ToolsConfigInfo_closure : public closure
{
protected:
	vw1__ToolsConfigInfo _obj;
public:
	ToolsConfigInfo_closure(const vw1__ToolsConfigInfo& obj) : _obj(obj) {}
	virtual ~ToolsConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsConfigInfo"; }
};

class ToolsConfigInfoToolsLastInstallInfo_closure : public closure
{
protected:
	vw1__ToolsConfigInfoToolsLastInstallInfo _obj;
public:
	ToolsConfigInfoToolsLastInstallInfo_closure(const vw1__ToolsConfigInfoToolsLastInstallInfo& obj) : _obj(obj) {}
	virtual ~ToolsConfigInfoToolsLastInstallInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsConfigInfoToolsLastInstallInfo"; }
};

class TraversalSpec_closure : public closure
{
protected:
	vw1__TraversalSpec _obj;
public:
	TraversalSpec_closure(const vw1__TraversalSpec& obj) : _obj(obj) {}
	virtual ~TraversalSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TraversalSpec"; }
};

class TypeDescription_closure : public closure
{
protected:
	vw1__TypeDescription _obj;
public:
	TypeDescription_closure(const vw1__TypeDescription& obj) : _obj(obj) {}
	virtual ~TypeDescription_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TypeDescription"; }
};

class UnlicensedVirtualMachinesEvent_closure : public closure
{
protected:
	vw1__UnlicensedVirtualMachinesEvent _obj;
public:
	UnlicensedVirtualMachinesEvent_closure(const vw1__UnlicensedVirtualMachinesEvent& obj) : _obj(obj) {}
	virtual ~UnlicensedVirtualMachinesEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnlicensedVirtualMachinesEvent"; }
};

class UnlicensedVirtualMachinesFoundEvent_closure : public closure
{
protected:
	vw1__UnlicensedVirtualMachinesFoundEvent _obj;
public:
	UnlicensedVirtualMachinesFoundEvent_closure(const vw1__UnlicensedVirtualMachinesFoundEvent& obj) : _obj(obj) {}
	virtual ~UnlicensedVirtualMachinesFoundEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnlicensedVirtualMachinesFoundEvent"; }
};

class UpdateSet_closure : public closure
{
protected:
	vw1__UpdateSet _obj;
public:
	UpdateSet_closure(const vw1__UpdateSet& obj) : _obj(obj) {}
	virtual ~UpdateSet_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UpdateSet"; }
};

class UpdateVirtualMachineFilesResult_closure : public closure
{
protected:
	vw1__UpdateVirtualMachineFilesResult _obj;
public:
	UpdateVirtualMachineFilesResult_closure(const vw1__UpdateVirtualMachineFilesResult& obj) : _obj(obj) {}
	virtual ~UpdateVirtualMachineFilesResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UpdateVirtualMachineFilesResult"; }
};

class UpdateVirtualMachineFilesResultFailedVmFileInfo_closure : public closure
{
protected:
	vw1__UpdateVirtualMachineFilesResultFailedVmFileInfo _obj;
public:
	UpdateVirtualMachineFilesResultFailedVmFileInfo_closure(const vw1__UpdateVirtualMachineFilesResultFailedVmFileInfo& obj) : _obj(obj) {}
	virtual ~UpdateVirtualMachineFilesResultFailedVmFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UpdateVirtualMachineFilesResultFailedVmFileInfo"; }
};

class UpdatedAgentBeingRestartedEvent_closure : public closure
{
protected:
	vw1__UpdatedAgentBeingRestartedEvent _obj;
public:
	UpdatedAgentBeingRestartedEvent_closure(const vw1__UpdatedAgentBeingRestartedEvent& obj) : _obj(obj) {}
	virtual ~UpdatedAgentBeingRestartedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UpdatedAgentBeingRestartedEvent"; }
};

class UpgradeEvent_closure : public closure
{
protected:
	vw1__UpgradeEvent _obj;
public:
	UpgradeEvent_closure(const vw1__UpgradeEvent& obj) : _obj(obj) {}
	virtual ~UpgradeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UpgradeEvent"; }
};

class UserAssignedToGroup_closure : public closure
{
protected:
	vw1__UserAssignedToGroup _obj;
public:
	UserAssignedToGroup_closure(const vw1__UserAssignedToGroup& obj) : _obj(obj) {}
	virtual ~UserAssignedToGroup_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserAssignedToGroup"; }
};

class UserGroupProfile_closure : public closure
{
protected:
	vw1__UserGroupProfile _obj;
public:
	UserGroupProfile_closure(const vw1__UserGroupProfile& obj) : _obj(obj) {}
	virtual ~UserGroupProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserGroupProfile"; }
};

class UserInputRequiredParameterMetadata_closure : public closure
{
protected:
	vw1__UserInputRequiredParameterMetadata _obj;
public:
	UserInputRequiredParameterMetadata_closure(const vw1__UserInputRequiredParameterMetadata& obj) : _obj(obj) {}
	virtual ~UserInputRequiredParameterMetadata_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserInputRequiredParameterMetadata"; }
};

class UserLoginSessionEvent_closure : public closure
{
protected:
	vw1__UserLoginSessionEvent _obj;
public:
	UserLoginSessionEvent_closure(const vw1__UserLoginSessionEvent& obj) : _obj(obj) {}
	virtual ~UserLoginSessionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserLoginSessionEvent"; }
};

class UserLogoutSessionEvent_closure : public closure
{
protected:
	vw1__UserLogoutSessionEvent _obj;
public:
	UserLogoutSessionEvent_closure(const vw1__UserLogoutSessionEvent& obj) : _obj(obj) {}
	virtual ~UserLogoutSessionEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserLogoutSessionEvent"; }
};

class UserPasswordChanged_closure : public closure
{
protected:
	vw1__UserPasswordChanged _obj;
public:
	UserPasswordChanged_closure(const vw1__UserPasswordChanged& obj) : _obj(obj) {}
	virtual ~UserPasswordChanged_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserPasswordChanged"; }
};

class UserProfile_closure : public closure
{
protected:
	vw1__UserProfile _obj;
public:
	UserProfile_closure(const vw1__UserProfile& obj) : _obj(obj) {}
	virtual ~UserProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserProfile"; }
};

class UserSearchResult_closure : public closure
{
protected:
	vw1__UserSearchResult _obj;
public:
	UserSearchResult_closure(const vw1__UserSearchResult& obj) : _obj(obj) {}
	virtual ~UserSearchResult_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserSearchResult"; }
};

class UserSession_closure : public closure
{
protected:
	vw1__UserSession _obj;
public:
	UserSession_closure(const vw1__UserSession& obj) : _obj(obj) {}
	virtual ~UserSession_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserSession"; }
};

class UserUnassignedFromGroup_closure : public closure
{
protected:
	vw1__UserUnassignedFromGroup _obj;
public:
	UserUnassignedFromGroup_closure(const vw1__UserUnassignedFromGroup& obj) : _obj(obj) {}
	virtual ~UserUnassignedFromGroup_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserUnassignedFromGroup"; }
};

class UserUpgradeEvent_closure : public closure
{
protected:
	vw1__UserUpgradeEvent _obj;
public:
	UserUpgradeEvent_closure(const vw1__UserUpgradeEvent& obj) : _obj(obj) {}
	virtual ~UserUpgradeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserUpgradeEvent"; }
};

class VAppCloneSpec_closure : public closure
{
protected:
	vw1__VAppCloneSpec _obj;
public:
	VAppCloneSpec_closure(const vw1__VAppCloneSpec& obj) : _obj(obj) {}
	virtual ~VAppCloneSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppCloneSpec"; }
};

class VAppCloneSpecNetworkMappingPair_closure : public closure
{
protected:
	vw1__VAppCloneSpecNetworkMappingPair _obj;
public:
	VAppCloneSpecNetworkMappingPair_closure(const vw1__VAppCloneSpecNetworkMappingPair& obj) : _obj(obj) {}
	virtual ~VAppCloneSpecNetworkMappingPair_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppCloneSpecNetworkMappingPair"; }
};

class VAppCloneSpecResourceMap_closure : public closure
{
protected:
	vw1__VAppCloneSpecResourceMap _obj;
public:
	VAppCloneSpecResourceMap_closure(const vw1__VAppCloneSpecResourceMap& obj) : _obj(obj) {}
	virtual ~VAppCloneSpecResourceMap_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppCloneSpecResourceMap"; }
};

class VAppConfigInfo_closure : public closure
{
protected:
	vw1__VAppConfigInfo _obj;
public:
	VAppConfigInfo_closure(const vw1__VAppConfigInfo& obj) : _obj(obj) {}
	virtual ~VAppConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppConfigInfo"; }
};

class VAppConfigSpec_closure : public closure
{
protected:
	vw1__VAppConfigSpec _obj;
public:
	VAppConfigSpec_closure(const vw1__VAppConfigSpec& obj) : _obj(obj) {}
	virtual ~VAppConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppConfigSpec"; }
};

class VAppEntityConfigInfo_closure : public closure
{
protected:
	vw1__VAppEntityConfigInfo _obj;
public:
	VAppEntityConfigInfo_closure(const vw1__VAppEntityConfigInfo& obj) : _obj(obj) {}
	virtual ~VAppEntityConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppEntityConfigInfo"; }
};

class VAppIPAssignmentInfo_closure : public closure
{
protected:
	vw1__VAppIPAssignmentInfo _obj;
public:
	VAppIPAssignmentInfo_closure(const vw1__VAppIPAssignmentInfo& obj) : _obj(obj) {}
	virtual ~VAppIPAssignmentInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppIPAssignmentInfo"; }
};

class VAppOvfSectionInfo_closure : public closure
{
protected:
	vw1__VAppOvfSectionInfo _obj;
public:
	VAppOvfSectionInfo_closure(const vw1__VAppOvfSectionInfo& obj) : _obj(obj) {}
	virtual ~VAppOvfSectionInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppOvfSectionInfo"; }
};

class VAppOvfSectionSpec_closure : public closure
{
protected:
	vw1__VAppOvfSectionSpec _obj;
public:
	VAppOvfSectionSpec_closure(const vw1__VAppOvfSectionSpec& obj) : _obj(obj) {}
	virtual ~VAppOvfSectionSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppOvfSectionSpec"; }
};

class VAppProductInfo_closure : public closure
{
protected:
	vw1__VAppProductInfo _obj;
public:
	VAppProductInfo_closure(const vw1__VAppProductInfo& obj) : _obj(obj) {}
	virtual ~VAppProductInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppProductInfo"; }
};

class VAppProductSpec_closure : public closure
{
protected:
	vw1__VAppProductSpec _obj;
public:
	VAppProductSpec_closure(const vw1__VAppProductSpec& obj) : _obj(obj) {}
	virtual ~VAppProductSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppProductSpec"; }
};

class VAppPropertyInfo_closure : public closure
{
protected:
	vw1__VAppPropertyInfo _obj;
public:
	VAppPropertyInfo_closure(const vw1__VAppPropertyInfo& obj) : _obj(obj) {}
	virtual ~VAppPropertyInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppPropertyInfo"; }
};

class VAppPropertySpec_closure : public closure
{
protected:
	vw1__VAppPropertySpec _obj;
public:
	VAppPropertySpec_closure(const vw1__VAppPropertySpec& obj) : _obj(obj) {}
	virtual ~VAppPropertySpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppPropertySpec"; }
};

class VMFSDatastoreCreatedEvent_closure : public closure
{
protected:
	vw1__VMFSDatastoreCreatedEvent _obj;
public:
	VMFSDatastoreCreatedEvent_closure(const vw1__VMFSDatastoreCreatedEvent& obj) : _obj(obj) {}
	virtual ~VMFSDatastoreCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMFSDatastoreCreatedEvent"; }
};

class VMFSDatastoreExpandedEvent_closure : public closure
{
protected:
	vw1__VMFSDatastoreExpandedEvent _obj;
public:
	VMFSDatastoreExpandedEvent_closure(const vw1__VMFSDatastoreExpandedEvent& obj) : _obj(obj) {}
	virtual ~VMFSDatastoreExpandedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMFSDatastoreExpandedEvent"; }
};

class VMFSDatastoreExtendedEvent_closure : public closure
{
protected:
	vw1__VMFSDatastoreExtendedEvent _obj;
public:
	VMFSDatastoreExtendedEvent_closure(const vw1__VMFSDatastoreExtendedEvent& obj) : _obj(obj) {}
	virtual ~VMFSDatastoreExtendedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMFSDatastoreExtendedEvent"; }
};

class VMotionLicenseExpiredEvent_closure : public closure
{
protected:
	vw1__VMotionLicenseExpiredEvent _obj;
public:
	VMotionLicenseExpiredEvent_closure(const vw1__VMotionLicenseExpiredEvent& obj) : _obj(obj) {}
	virtual ~VMotionLicenseExpiredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMotionLicenseExpiredEvent"; }
};

class VMwareDVSConfigInfo_closure : public closure
{
protected:
	vw1__VMwareDVSConfigInfo _obj;
public:
	VMwareDVSConfigInfo_closure(const vw1__VMwareDVSConfigInfo& obj) : _obj(obj) {}
	virtual ~VMwareDVSConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareDVSConfigInfo"; }
};

class VMwareDVSConfigSpec_closure : public closure
{
protected:
	vw1__VMwareDVSConfigSpec _obj;
public:
	VMwareDVSConfigSpec_closure(const vw1__VMwareDVSConfigSpec& obj) : _obj(obj) {}
	virtual ~VMwareDVSConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareDVSConfigSpec"; }
};

class VMwareDVSFeatureCapability_closure : public closure
{
protected:
	vw1__VMwareDVSFeatureCapability _obj;
public:
	VMwareDVSFeatureCapability_closure(const vw1__VMwareDVSFeatureCapability& obj) : _obj(obj) {}
	virtual ~VMwareDVSFeatureCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareDVSFeatureCapability"; }
};

class VMwareDVSPortSetting_closure : public closure
{
protected:
	vw1__VMwareDVSPortSetting _obj;
public:
	VMwareDVSPortSetting_closure(const vw1__VMwareDVSPortSetting& obj) : _obj(obj) {}
	virtual ~VMwareDVSPortSetting_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareDVSPortSetting"; }
};

class VMwareDVSPortgroupPolicy_closure : public closure
{
protected:
	vw1__VMwareDVSPortgroupPolicy _obj;
public:
	VMwareDVSPortgroupPolicy_closure(const vw1__VMwareDVSPortgroupPolicy& obj) : _obj(obj) {}
	virtual ~VMwareDVSPortgroupPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareDVSPortgroupPolicy"; }
};

class VMwareDVSPvlanConfigSpec_closure : public closure
{
protected:
	vw1__VMwareDVSPvlanConfigSpec _obj;
public:
	VMwareDVSPvlanConfigSpec_closure(const vw1__VMwareDVSPvlanConfigSpec& obj) : _obj(obj) {}
	virtual ~VMwareDVSPvlanConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareDVSPvlanConfigSpec"; }
};

class VMwareDVSPvlanMapEntry_closure : public closure
{
protected:
	vw1__VMwareDVSPvlanMapEntry _obj;
public:
	VMwareDVSPvlanMapEntry_closure(const vw1__VMwareDVSPvlanMapEntry& obj) : _obj(obj) {}
	virtual ~VMwareDVSPvlanMapEntry_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareDVSPvlanMapEntry"; }
};

class VMwareDVSVspanConfigSpec_closure : public closure
{
protected:
	vw1__VMwareDVSVspanConfigSpec _obj;
public:
	VMwareDVSVspanConfigSpec_closure(const vw1__VMwareDVSVspanConfigSpec& obj) : _obj(obj) {}
	virtual ~VMwareDVSVspanConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareDVSVspanConfigSpec"; }
};

class VMwareIpfixConfig_closure : public closure
{
protected:
	vw1__VMwareIpfixConfig _obj;
public:
	VMwareIpfixConfig_closure(const vw1__VMwareIpfixConfig& obj) : _obj(obj) {}
	virtual ~VMwareIpfixConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareIpfixConfig"; }
};

class VMwareUplinkPortOrderPolicy_closure : public closure
{
protected:
	vw1__VMwareUplinkPortOrderPolicy _obj;
public:
	VMwareUplinkPortOrderPolicy_closure(const vw1__VMwareUplinkPortOrderPolicy& obj) : _obj(obj) {}
	virtual ~VMwareUplinkPortOrderPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareUplinkPortOrderPolicy"; }
};

class VMwareVspanPort_closure : public closure
{
protected:
	vw1__VMwareVspanPort _obj;
public:
	VMwareVspanPort_closure(const vw1__VMwareVspanPort& obj) : _obj(obj) {}
	virtual ~VMwareVspanPort_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareVspanPort"; }
};

class VMwareVspanSession_closure : public closure
{
protected:
	vw1__VMwareVspanSession _obj;
public:
	VMwareVspanSession_closure(const vw1__VMwareVspanSession& obj) : _obj(obj) {}
	virtual ~VMwareVspanSession_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMwareVspanSession"; }
};

class VcAgentUninstallFailedEvent_closure : public closure
{
protected:
	vw1__VcAgentUninstallFailedEvent _obj;
public:
	VcAgentUninstallFailedEvent_closure(const vw1__VcAgentUninstallFailedEvent& obj) : _obj(obj) {}
	virtual ~VcAgentUninstallFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VcAgentUninstallFailedEvent"; }
};

class VcAgentUninstalledEvent_closure : public closure
{
protected:
	vw1__VcAgentUninstalledEvent _obj;
public:
	VcAgentUninstalledEvent_closure(const vw1__VcAgentUninstalledEvent& obj) : _obj(obj) {}
	virtual ~VcAgentUninstalledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VcAgentUninstalledEvent"; }
};

class VcAgentUpgradeFailedEvent_closure : public closure
{
protected:
	vw1__VcAgentUpgradeFailedEvent _obj;
public:
	VcAgentUpgradeFailedEvent_closure(const vw1__VcAgentUpgradeFailedEvent& obj) : _obj(obj) {}
	virtual ~VcAgentUpgradeFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VcAgentUpgradeFailedEvent"; }
};

class VcAgentUpgradedEvent_closure : public closure
{
protected:
	vw1__VcAgentUpgradedEvent _obj;
public:
	VcAgentUpgradedEvent_closure(const vw1__VcAgentUpgradedEvent& obj) : _obj(obj) {}
	virtual ~VcAgentUpgradedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VcAgentUpgradedEvent"; }
};

class VimAccountPasswordChangedEvent_closure : public closure
{
protected:
	vw1__VimAccountPasswordChangedEvent _obj;
public:
	VimAccountPasswordChangedEvent_closure(const vw1__VimAccountPasswordChangedEvent& obj) : _obj(obj) {}
	virtual ~VimAccountPasswordChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VimAccountPasswordChangedEvent"; }
};

class VirtualAppImportSpec_closure : public closure
{
protected:
	vw1__VirtualAppImportSpec _obj;
public:
	VirtualAppImportSpec_closure(const vw1__VirtualAppImportSpec& obj) : _obj(obj) {}
	virtual ~VirtualAppImportSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualAppImportSpec"; }
};

class VirtualAppLinkInfo_closure : public closure
{
protected:
	vw1__VirtualAppLinkInfo _obj;
public:
	VirtualAppLinkInfo_closure(const vw1__VirtualAppLinkInfo& obj) : _obj(obj) {}
	virtual ~VirtualAppLinkInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualAppLinkInfo"; }
};

class VirtualAppSummary_closure : public closure
{
protected:
	vw1__VirtualAppSummary _obj;
public:
	VirtualAppSummary_closure(const vw1__VirtualAppSummary& obj) : _obj(obj) {}
	virtual ~VirtualAppSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualAppSummary"; }
};

class VirtualBusLogicController_closure : public closure
{
protected:
	vw1__VirtualBusLogicController _obj;
public:
	VirtualBusLogicController_closure(const vw1__VirtualBusLogicController& obj) : _obj(obj) {}
	virtual ~VirtualBusLogicController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualBusLogicController"; }
};

class VirtualBusLogicControllerOption_closure : public closure
{
protected:
	vw1__VirtualBusLogicControllerOption _obj;
public:
	VirtualBusLogicControllerOption_closure(const vw1__VirtualBusLogicControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualBusLogicControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualBusLogicControllerOption"; }
};

class VirtualCdrom_closure : public closure
{
protected:
	vw1__VirtualCdrom _obj;
public:
	VirtualCdrom_closure(const vw1__VirtualCdrom& obj) : _obj(obj) {}
	virtual ~VirtualCdrom_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdrom"; }
};

class VirtualCdromAtapiBackingInfo_closure : public closure
{
protected:
	vw1__VirtualCdromAtapiBackingInfo _obj;
public:
	VirtualCdromAtapiBackingInfo_closure(const vw1__VirtualCdromAtapiBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualCdromAtapiBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromAtapiBackingInfo"; }
};

class VirtualCdromAtapiBackingOption_closure : public closure
{
protected:
	vw1__VirtualCdromAtapiBackingOption _obj;
public:
	VirtualCdromAtapiBackingOption_closure(const vw1__VirtualCdromAtapiBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualCdromAtapiBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromAtapiBackingOption"; }
};

class VirtualCdromIsoBackingInfo_closure : public closure
{
protected:
	vw1__VirtualCdromIsoBackingInfo _obj;
public:
	VirtualCdromIsoBackingInfo_closure(const vw1__VirtualCdromIsoBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualCdromIsoBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromIsoBackingInfo"; }
};

class VirtualCdromIsoBackingOption_closure : public closure
{
protected:
	vw1__VirtualCdromIsoBackingOption _obj;
public:
	VirtualCdromIsoBackingOption_closure(const vw1__VirtualCdromIsoBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualCdromIsoBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromIsoBackingOption"; }
};

class VirtualCdromOption_closure : public closure
{
protected:
	vw1__VirtualCdromOption _obj;
public:
	VirtualCdromOption_closure(const vw1__VirtualCdromOption& obj) : _obj(obj) {}
	virtual ~VirtualCdromOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromOption"; }
};

class VirtualCdromPassthroughBackingInfo_closure : public closure
{
protected:
	vw1__VirtualCdromPassthroughBackingInfo _obj;
public:
	VirtualCdromPassthroughBackingInfo_closure(const vw1__VirtualCdromPassthroughBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualCdromPassthroughBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromPassthroughBackingInfo"; }
};

class VirtualCdromPassthroughBackingOption_closure : public closure
{
protected:
	vw1__VirtualCdromPassthroughBackingOption _obj;
public:
	VirtualCdromPassthroughBackingOption_closure(const vw1__VirtualCdromPassthroughBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualCdromPassthroughBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromPassthroughBackingOption"; }
};

class VirtualCdromRemoteAtapiBackingInfo_closure : public closure
{
protected:
	vw1__VirtualCdromRemoteAtapiBackingInfo _obj;
public:
	VirtualCdromRemoteAtapiBackingInfo_closure(const vw1__VirtualCdromRemoteAtapiBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualCdromRemoteAtapiBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromRemoteAtapiBackingInfo"; }
};

class VirtualCdromRemoteAtapiBackingOption_closure : public closure
{
protected:
	vw1__VirtualCdromRemoteAtapiBackingOption _obj;
public:
	VirtualCdromRemoteAtapiBackingOption_closure(const vw1__VirtualCdromRemoteAtapiBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualCdromRemoteAtapiBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromRemoteAtapiBackingOption"; }
};

class VirtualCdromRemotePassthroughBackingInfo_closure : public closure
{
protected:
	vw1__VirtualCdromRemotePassthroughBackingInfo _obj;
public:
	VirtualCdromRemotePassthroughBackingInfo_closure(const vw1__VirtualCdromRemotePassthroughBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualCdromRemotePassthroughBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromRemotePassthroughBackingInfo"; }
};

class VirtualCdromRemotePassthroughBackingOption_closure : public closure
{
protected:
	vw1__VirtualCdromRemotePassthroughBackingOption _obj;
public:
	VirtualCdromRemotePassthroughBackingOption_closure(const vw1__VirtualCdromRemotePassthroughBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualCdromRemotePassthroughBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualCdromRemotePassthroughBackingOption"; }
};

class VirtualController_closure : public closure
{
protected:
	vw1__VirtualController _obj;
public:
	VirtualController_closure(const vw1__VirtualController& obj) : _obj(obj) {}
	virtual ~VirtualController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualController"; }
};

class VirtualControllerOption_closure : public closure
{
protected:
	vw1__VirtualControllerOption _obj;
public:
	VirtualControllerOption_closure(const vw1__VirtualControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualControllerOption"; }
};

class VirtualDevice_closure : public closure
{
protected:
	vw1__VirtualDevice _obj;
public:
	VirtualDevice_closure(const vw1__VirtualDevice& obj) : _obj(obj) {}
	virtual ~VirtualDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDevice"; }
};

class VirtualDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualDeviceBackingInfo _obj;
public:
	VirtualDeviceBackingInfo_closure(const vw1__VirtualDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceBackingInfo"; }
};

class VirtualDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualDeviceBackingOption _obj;
public:
	VirtualDeviceBackingOption_closure(const vw1__VirtualDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceBackingOption"; }
};

class VirtualDeviceConfigSpec_closure : public closure
{
protected:
	vw1__VirtualDeviceConfigSpec _obj;
public:
	VirtualDeviceConfigSpec_closure(const vw1__VirtualDeviceConfigSpec& obj) : _obj(obj) {}
	virtual ~VirtualDeviceConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceConfigSpec"; }
};

class VirtualDeviceConnectInfo_closure : public closure
{
protected:
	vw1__VirtualDeviceConnectInfo _obj;
public:
	VirtualDeviceConnectInfo_closure(const vw1__VirtualDeviceConnectInfo& obj) : _obj(obj) {}
	virtual ~VirtualDeviceConnectInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceConnectInfo"; }
};

class VirtualDeviceConnectOption_closure : public closure
{
protected:
	vw1__VirtualDeviceConnectOption _obj;
public:
	VirtualDeviceConnectOption_closure(const vw1__VirtualDeviceConnectOption& obj) : _obj(obj) {}
	virtual ~VirtualDeviceConnectOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceConnectOption"; }
};

class VirtualDeviceDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualDeviceDeviceBackingInfo _obj;
public:
	VirtualDeviceDeviceBackingInfo_closure(const vw1__VirtualDeviceDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDeviceDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceDeviceBackingInfo"; }
};

class VirtualDeviceDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualDeviceDeviceBackingOption _obj;
public:
	VirtualDeviceDeviceBackingOption_closure(const vw1__VirtualDeviceDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDeviceDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceDeviceBackingOption"; }
};

class VirtualDeviceFileBackingInfo_closure : public closure
{
protected:
	vw1__VirtualDeviceFileBackingInfo _obj;
public:
	VirtualDeviceFileBackingInfo_closure(const vw1__VirtualDeviceFileBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDeviceFileBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceFileBackingInfo"; }
};

class VirtualDeviceFileBackingOption_closure : public closure
{
protected:
	vw1__VirtualDeviceFileBackingOption _obj;
public:
	VirtualDeviceFileBackingOption_closure(const vw1__VirtualDeviceFileBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDeviceFileBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceFileBackingOption"; }
};

class VirtualDeviceOption_closure : public closure
{
protected:
	vw1__VirtualDeviceOption _obj;
public:
	VirtualDeviceOption_closure(const vw1__VirtualDeviceOption& obj) : _obj(obj) {}
	virtual ~VirtualDeviceOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceOption"; }
};

class VirtualDevicePipeBackingInfo_closure : public closure
{
protected:
	vw1__VirtualDevicePipeBackingInfo _obj;
public:
	VirtualDevicePipeBackingInfo_closure(const vw1__VirtualDevicePipeBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDevicePipeBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDevicePipeBackingInfo"; }
};

class VirtualDevicePipeBackingOption_closure : public closure
{
protected:
	vw1__VirtualDevicePipeBackingOption _obj;
public:
	VirtualDevicePipeBackingOption_closure(const vw1__VirtualDevicePipeBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDevicePipeBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDevicePipeBackingOption"; }
};

class VirtualDeviceRemoteDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualDeviceRemoteDeviceBackingInfo _obj;
public:
	VirtualDeviceRemoteDeviceBackingInfo_closure(const vw1__VirtualDeviceRemoteDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDeviceRemoteDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceRemoteDeviceBackingInfo"; }
};

class VirtualDeviceRemoteDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualDeviceRemoteDeviceBackingOption _obj;
public:
	VirtualDeviceRemoteDeviceBackingOption_closure(const vw1__VirtualDeviceRemoteDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDeviceRemoteDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceRemoteDeviceBackingOption"; }
};

class VirtualDeviceURIBackingInfo_closure : public closure
{
protected:
	vw1__VirtualDeviceURIBackingInfo _obj;
public:
	VirtualDeviceURIBackingInfo_closure(const vw1__VirtualDeviceURIBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDeviceURIBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceURIBackingInfo"; }
};

class VirtualDeviceURIBackingOption_closure : public closure
{
protected:
	vw1__VirtualDeviceURIBackingOption _obj;
public:
	VirtualDeviceURIBackingOption_closure(const vw1__VirtualDeviceURIBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDeviceURIBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDeviceURIBackingOption"; }
};

class VirtualDisk_closure : public closure
{
protected:
	vw1__VirtualDisk _obj;
public:
	VirtualDisk_closure(const vw1__VirtualDisk& obj) : _obj(obj) {}
	virtual ~VirtualDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDisk"; }
};

class VirtualDiskAntiAffinityRuleSpec_closure : public closure
{
protected:
	vw1__VirtualDiskAntiAffinityRuleSpec _obj;
public:
	VirtualDiskAntiAffinityRuleSpec_closure(const vw1__VirtualDiskAntiAffinityRuleSpec& obj) : _obj(obj) {}
	virtual ~VirtualDiskAntiAffinityRuleSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskAntiAffinityRuleSpec"; }
};

class VirtualDiskFlatVer1BackingInfo_closure : public closure
{
protected:
	vw1__VirtualDiskFlatVer1BackingInfo _obj;
public:
	VirtualDiskFlatVer1BackingInfo_closure(const vw1__VirtualDiskFlatVer1BackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDiskFlatVer1BackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskFlatVer1BackingInfo"; }
};

class VirtualDiskFlatVer1BackingOption_closure : public closure
{
protected:
	vw1__VirtualDiskFlatVer1BackingOption _obj;
public:
	VirtualDiskFlatVer1BackingOption_closure(const vw1__VirtualDiskFlatVer1BackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDiskFlatVer1BackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskFlatVer1BackingOption"; }
};

class VirtualDiskFlatVer2BackingInfo_closure : public closure
{
protected:
	vw1__VirtualDiskFlatVer2BackingInfo _obj;
public:
	VirtualDiskFlatVer2BackingInfo_closure(const vw1__VirtualDiskFlatVer2BackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDiskFlatVer2BackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskFlatVer2BackingInfo"; }
};

class VirtualDiskFlatVer2BackingOption_closure : public closure
{
protected:
	vw1__VirtualDiskFlatVer2BackingOption _obj;
public:
	VirtualDiskFlatVer2BackingOption_closure(const vw1__VirtualDiskFlatVer2BackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDiskFlatVer2BackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskFlatVer2BackingOption"; }
};

class VirtualDiskId_closure : public closure
{
protected:
	vw1__VirtualDiskId _obj;
public:
	VirtualDiskId_closure(const vw1__VirtualDiskId& obj) : _obj(obj) {}
	virtual ~VirtualDiskId_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskId"; }
};

class VirtualDiskOption_closure : public closure
{
protected:
	vw1__VirtualDiskOption _obj;
public:
	VirtualDiskOption_closure(const vw1__VirtualDiskOption& obj) : _obj(obj) {}
	virtual ~VirtualDiskOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskOption"; }
};

class VirtualDiskPartitionedRawDiskVer2BackingInfo_closure : public closure
{
protected:
	vw1__VirtualDiskPartitionedRawDiskVer2BackingInfo _obj;
public:
	VirtualDiskPartitionedRawDiskVer2BackingInfo_closure(const vw1__VirtualDiskPartitionedRawDiskVer2BackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDiskPartitionedRawDiskVer2BackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskPartitionedRawDiskVer2BackingInfo"; }
};

class VirtualDiskPartitionedRawDiskVer2BackingOption_closure : public closure
{
protected:
	vw1__VirtualDiskPartitionedRawDiskVer2BackingOption _obj;
public:
	VirtualDiskPartitionedRawDiskVer2BackingOption_closure(const vw1__VirtualDiskPartitionedRawDiskVer2BackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDiskPartitionedRawDiskVer2BackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskPartitionedRawDiskVer2BackingOption"; }
};

class VirtualDiskRawDiskMappingVer1BackingInfo_closure : public closure
{
protected:
	vw1__VirtualDiskRawDiskMappingVer1BackingInfo _obj;
public:
	VirtualDiskRawDiskMappingVer1BackingInfo_closure(const vw1__VirtualDiskRawDiskMappingVer1BackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDiskRawDiskMappingVer1BackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskRawDiskMappingVer1BackingInfo"; }
};

class VirtualDiskRawDiskMappingVer1BackingOption_closure : public closure
{
protected:
	vw1__VirtualDiskRawDiskMappingVer1BackingOption _obj;
public:
	VirtualDiskRawDiskMappingVer1BackingOption_closure(const vw1__VirtualDiskRawDiskMappingVer1BackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDiskRawDiskMappingVer1BackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskRawDiskMappingVer1BackingOption"; }
};

class VirtualDiskRawDiskVer2BackingInfo_closure : public closure
{
protected:
	vw1__VirtualDiskRawDiskVer2BackingInfo _obj;
public:
	VirtualDiskRawDiskVer2BackingInfo_closure(const vw1__VirtualDiskRawDiskVer2BackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDiskRawDiskVer2BackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskRawDiskVer2BackingInfo"; }
};

class VirtualDiskRawDiskVer2BackingOption_closure : public closure
{
protected:
	vw1__VirtualDiskRawDiskVer2BackingOption _obj;
public:
	VirtualDiskRawDiskVer2BackingOption_closure(const vw1__VirtualDiskRawDiskVer2BackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDiskRawDiskVer2BackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskRawDiskVer2BackingOption"; }
};

class VirtualDiskSparseVer1BackingInfo_closure : public closure
{
protected:
	vw1__VirtualDiskSparseVer1BackingInfo _obj;
public:
	VirtualDiskSparseVer1BackingInfo_closure(const vw1__VirtualDiskSparseVer1BackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDiskSparseVer1BackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskSparseVer1BackingInfo"; }
};

class VirtualDiskSparseVer1BackingOption_closure : public closure
{
protected:
	vw1__VirtualDiskSparseVer1BackingOption _obj;
public:
	VirtualDiskSparseVer1BackingOption_closure(const vw1__VirtualDiskSparseVer1BackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDiskSparseVer1BackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskSparseVer1BackingOption"; }
};

class VirtualDiskSparseVer2BackingInfo_closure : public closure
{
protected:
	vw1__VirtualDiskSparseVer2BackingInfo _obj;
public:
	VirtualDiskSparseVer2BackingInfo_closure(const vw1__VirtualDiskSparseVer2BackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualDiskSparseVer2BackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskSparseVer2BackingInfo"; }
};

class VirtualDiskSparseVer2BackingOption_closure : public closure
{
protected:
	vw1__VirtualDiskSparseVer2BackingOption _obj;
public:
	VirtualDiskSparseVer2BackingOption_closure(const vw1__VirtualDiskSparseVer2BackingOption& obj) : _obj(obj) {}
	virtual ~VirtualDiskSparseVer2BackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskSparseVer2BackingOption"; }
};

class VirtualDiskSpec_closure : public closure
{
protected:
	vw1__VirtualDiskSpec _obj;
public:
	VirtualDiskSpec_closure(const vw1__VirtualDiskSpec& obj) : _obj(obj) {}
	virtual ~VirtualDiskSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskSpec"; }
};

class VirtualE1000_closure : public closure
{
protected:
	vw1__VirtualE1000 _obj;
public:
	VirtualE1000_closure(const vw1__VirtualE1000& obj) : _obj(obj) {}
	virtual ~VirtualE1000_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualE1000"; }
};

class VirtualE1000Option_closure : public closure
{
protected:
	vw1__VirtualE1000Option _obj;
public:
	VirtualE1000Option_closure(const vw1__VirtualE1000Option& obj) : _obj(obj) {}
	virtual ~VirtualE1000Option_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualE1000Option"; }
};

class VirtualE1000e_closure : public closure
{
protected:
	vw1__VirtualE1000e _obj;
public:
	VirtualE1000e_closure(const vw1__VirtualE1000e& obj) : _obj(obj) {}
	virtual ~VirtualE1000e_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualE1000e"; }
};

class VirtualE1000eOption_closure : public closure
{
protected:
	vw1__VirtualE1000eOption _obj;
public:
	VirtualE1000eOption_closure(const vw1__VirtualE1000eOption& obj) : _obj(obj) {}
	virtual ~VirtualE1000eOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualE1000eOption"; }
};

class VirtualEnsoniq1371_closure : public closure
{
protected:
	vw1__VirtualEnsoniq1371 _obj;
public:
	VirtualEnsoniq1371_closure(const vw1__VirtualEnsoniq1371& obj) : _obj(obj) {}
	virtual ~VirtualEnsoniq1371_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEnsoniq1371"; }
};

class VirtualEnsoniq1371Option_closure : public closure
{
protected:
	vw1__VirtualEnsoniq1371Option _obj;
public:
	VirtualEnsoniq1371Option_closure(const vw1__VirtualEnsoniq1371Option& obj) : _obj(obj) {}
	virtual ~VirtualEnsoniq1371Option_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEnsoniq1371Option"; }
};

class VirtualEthernetCard_closure : public closure
{
protected:
	vw1__VirtualEthernetCard _obj;
public:
	VirtualEthernetCard_closure(const vw1__VirtualEthernetCard& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCard_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCard"; }
};

class VirtualEthernetCardDVPortBackingOption_closure : public closure
{
protected:
	vw1__VirtualEthernetCardDVPortBackingOption _obj;
public:
	VirtualEthernetCardDVPortBackingOption_closure(const vw1__VirtualEthernetCardDVPortBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCardDVPortBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCardDVPortBackingOption"; }
};

class VirtualEthernetCardDistributedVirtualPortBackingInfo_closure : public closure
{
protected:
	vw1__VirtualEthernetCardDistributedVirtualPortBackingInfo _obj;
public:
	VirtualEthernetCardDistributedVirtualPortBackingInfo_closure(const vw1__VirtualEthernetCardDistributedVirtualPortBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCardDistributedVirtualPortBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCardDistributedVirtualPortBackingInfo"; }
};

class VirtualEthernetCardLegacyNetworkBackingInfo_closure : public closure
{
protected:
	vw1__VirtualEthernetCardLegacyNetworkBackingInfo _obj;
public:
	VirtualEthernetCardLegacyNetworkBackingInfo_closure(const vw1__VirtualEthernetCardLegacyNetworkBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCardLegacyNetworkBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCardLegacyNetworkBackingInfo"; }
};

class VirtualEthernetCardLegacyNetworkBackingOption_closure : public closure
{
protected:
	vw1__VirtualEthernetCardLegacyNetworkBackingOption _obj;
public:
	VirtualEthernetCardLegacyNetworkBackingOption_closure(const vw1__VirtualEthernetCardLegacyNetworkBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCardLegacyNetworkBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCardLegacyNetworkBackingOption"; }
};

class VirtualEthernetCardNetworkBackingInfo_closure : public closure
{
protected:
	vw1__VirtualEthernetCardNetworkBackingInfo _obj;
public:
	VirtualEthernetCardNetworkBackingInfo_closure(const vw1__VirtualEthernetCardNetworkBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCardNetworkBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCardNetworkBackingInfo"; }
};

class VirtualEthernetCardNetworkBackingOption_closure : public closure
{
protected:
	vw1__VirtualEthernetCardNetworkBackingOption _obj;
public:
	VirtualEthernetCardNetworkBackingOption_closure(const vw1__VirtualEthernetCardNetworkBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCardNetworkBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCardNetworkBackingOption"; }
};

class VirtualEthernetCardOption_closure : public closure
{
protected:
	vw1__VirtualEthernetCardOption _obj;
public:
	VirtualEthernetCardOption_closure(const vw1__VirtualEthernetCardOption& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCardOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCardOption"; }
};

class VirtualFloppy_closure : public closure
{
protected:
	vw1__VirtualFloppy _obj;
public:
	VirtualFloppy_closure(const vw1__VirtualFloppy& obj) : _obj(obj) {}
	virtual ~VirtualFloppy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualFloppy"; }
};

class VirtualFloppyDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualFloppyDeviceBackingInfo _obj;
public:
	VirtualFloppyDeviceBackingInfo_closure(const vw1__VirtualFloppyDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualFloppyDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualFloppyDeviceBackingInfo"; }
};

class VirtualFloppyDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualFloppyDeviceBackingOption _obj;
public:
	VirtualFloppyDeviceBackingOption_closure(const vw1__VirtualFloppyDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualFloppyDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualFloppyDeviceBackingOption"; }
};

class VirtualFloppyImageBackingInfo_closure : public closure
{
protected:
	vw1__VirtualFloppyImageBackingInfo _obj;
public:
	VirtualFloppyImageBackingInfo_closure(const vw1__VirtualFloppyImageBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualFloppyImageBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualFloppyImageBackingInfo"; }
};

class VirtualFloppyImageBackingOption_closure : public closure
{
protected:
	vw1__VirtualFloppyImageBackingOption _obj;
public:
	VirtualFloppyImageBackingOption_closure(const vw1__VirtualFloppyImageBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualFloppyImageBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualFloppyImageBackingOption"; }
};

class VirtualFloppyOption_closure : public closure
{
protected:
	vw1__VirtualFloppyOption _obj;
public:
	VirtualFloppyOption_closure(const vw1__VirtualFloppyOption& obj) : _obj(obj) {}
	virtual ~VirtualFloppyOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualFloppyOption"; }
};

class VirtualFloppyRemoteDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualFloppyRemoteDeviceBackingInfo _obj;
public:
	VirtualFloppyRemoteDeviceBackingInfo_closure(const vw1__VirtualFloppyRemoteDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualFloppyRemoteDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualFloppyRemoteDeviceBackingInfo"; }
};

class VirtualFloppyRemoteDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualFloppyRemoteDeviceBackingOption _obj;
public:
	VirtualFloppyRemoteDeviceBackingOption_closure(const vw1__VirtualFloppyRemoteDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualFloppyRemoteDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualFloppyRemoteDeviceBackingOption"; }
};

class VirtualHardware_closure : public closure
{
protected:
	vw1__VirtualHardware _obj;
public:
	VirtualHardware_closure(const vw1__VirtualHardware& obj) : _obj(obj) {}
	virtual ~VirtualHardware_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualHardware"; }
};

class VirtualHardwareOption_closure : public closure
{
protected:
	vw1__VirtualHardwareOption _obj;
public:
	VirtualHardwareOption_closure(const vw1__VirtualHardwareOption& obj) : _obj(obj) {}
	virtual ~VirtualHardwareOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualHardwareOption"; }
};

class VirtualHdAudioCard_closure : public closure
{
protected:
	vw1__VirtualHdAudioCard _obj;
public:
	VirtualHdAudioCard_closure(const vw1__VirtualHdAudioCard& obj) : _obj(obj) {}
	virtual ~VirtualHdAudioCard_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualHdAudioCard"; }
};

class VirtualHdAudioCardOption_closure : public closure
{
protected:
	vw1__VirtualHdAudioCardOption _obj;
public:
	VirtualHdAudioCardOption_closure(const vw1__VirtualHdAudioCardOption& obj) : _obj(obj) {}
	virtual ~VirtualHdAudioCardOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualHdAudioCardOption"; }
};

class VirtualIDEController_closure : public closure
{
protected:
	vw1__VirtualIDEController _obj;
public:
	VirtualIDEController_closure(const vw1__VirtualIDEController& obj) : _obj(obj) {}
	virtual ~VirtualIDEController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualIDEController"; }
};

class VirtualIDEControllerOption_closure : public closure
{
protected:
	vw1__VirtualIDEControllerOption _obj;
public:
	VirtualIDEControllerOption_closure(const vw1__VirtualIDEControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualIDEControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualIDEControllerOption"; }
};

class VirtualKeyboard_closure : public closure
{
protected:
	vw1__VirtualKeyboard _obj;
public:
	VirtualKeyboard_closure(const vw1__VirtualKeyboard& obj) : _obj(obj) {}
	virtual ~VirtualKeyboard_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualKeyboard"; }
};

class VirtualKeyboardOption_closure : public closure
{
protected:
	vw1__VirtualKeyboardOption _obj;
public:
	VirtualKeyboardOption_closure(const vw1__VirtualKeyboardOption& obj) : _obj(obj) {}
	virtual ~VirtualKeyboardOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualKeyboardOption"; }
};

class VirtualLsiLogicController_closure : public closure
{
protected:
	vw1__VirtualLsiLogicController _obj;
public:
	VirtualLsiLogicController_closure(const vw1__VirtualLsiLogicController& obj) : _obj(obj) {}
	virtual ~VirtualLsiLogicController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualLsiLogicController"; }
};

class VirtualLsiLogicControllerOption_closure : public closure
{
protected:
	vw1__VirtualLsiLogicControllerOption _obj;
public:
	VirtualLsiLogicControllerOption_closure(const vw1__VirtualLsiLogicControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualLsiLogicControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualLsiLogicControllerOption"; }
};

class VirtualLsiLogicSASController_closure : public closure
{
protected:
	vw1__VirtualLsiLogicSASController _obj;
public:
	VirtualLsiLogicSASController_closure(const vw1__VirtualLsiLogicSASController& obj) : _obj(obj) {}
	virtual ~VirtualLsiLogicSASController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualLsiLogicSASController"; }
};

class VirtualLsiLogicSASControllerOption_closure : public closure
{
protected:
	vw1__VirtualLsiLogicSASControllerOption _obj;
public:
	VirtualLsiLogicSASControllerOption_closure(const vw1__VirtualLsiLogicSASControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualLsiLogicSASControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualLsiLogicSASControllerOption"; }
};

class VirtualMachineAffinityInfo_closure : public closure
{
protected:
	vw1__VirtualMachineAffinityInfo _obj;
public:
	VirtualMachineAffinityInfo_closure(const vw1__VirtualMachineAffinityInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineAffinityInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineAffinityInfo"; }
};

class VirtualMachineBootOptions_closure : public closure
{
protected:
	vw1__VirtualMachineBootOptions _obj;
public:
	VirtualMachineBootOptions_closure(const vw1__VirtualMachineBootOptions& obj) : _obj(obj) {}
	virtual ~VirtualMachineBootOptions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineBootOptions"; }
};

class VirtualMachineBootOptionsBootableCdromDevice_closure : public closure
{
protected:
	vw1__VirtualMachineBootOptionsBootableCdromDevice _obj;
public:
	VirtualMachineBootOptionsBootableCdromDevice_closure(const vw1__VirtualMachineBootOptionsBootableCdromDevice& obj) : _obj(obj) {}
	virtual ~VirtualMachineBootOptionsBootableCdromDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineBootOptionsBootableCdromDevice"; }
};

class VirtualMachineBootOptionsBootableDevice_closure : public closure
{
protected:
	vw1__VirtualMachineBootOptionsBootableDevice _obj;
public:
	VirtualMachineBootOptionsBootableDevice_closure(const vw1__VirtualMachineBootOptionsBootableDevice& obj) : _obj(obj) {}
	virtual ~VirtualMachineBootOptionsBootableDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineBootOptionsBootableDevice"; }
};

class VirtualMachineBootOptionsBootableDiskDevice_closure : public closure
{
protected:
	vw1__VirtualMachineBootOptionsBootableDiskDevice _obj;
public:
	VirtualMachineBootOptionsBootableDiskDevice_closure(const vw1__VirtualMachineBootOptionsBootableDiskDevice& obj) : _obj(obj) {}
	virtual ~VirtualMachineBootOptionsBootableDiskDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineBootOptionsBootableDiskDevice"; }
};

class VirtualMachineBootOptionsBootableEthernetDevice_closure : public closure
{
protected:
	vw1__VirtualMachineBootOptionsBootableEthernetDevice _obj;
public:
	VirtualMachineBootOptionsBootableEthernetDevice_closure(const vw1__VirtualMachineBootOptionsBootableEthernetDevice& obj) : _obj(obj) {}
	virtual ~VirtualMachineBootOptionsBootableEthernetDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineBootOptionsBootableEthernetDevice"; }
};

class VirtualMachineBootOptionsBootableFloppyDevice_closure : public closure
{
protected:
	vw1__VirtualMachineBootOptionsBootableFloppyDevice _obj;
public:
	VirtualMachineBootOptionsBootableFloppyDevice_closure(const vw1__VirtualMachineBootOptionsBootableFloppyDevice& obj) : _obj(obj) {}
	virtual ~VirtualMachineBootOptionsBootableFloppyDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineBootOptionsBootableFloppyDevice"; }
};

class VirtualMachineCapability_closure : public closure
{
protected:
	vw1__VirtualMachineCapability _obj;
public:
	VirtualMachineCapability_closure(const vw1__VirtualMachineCapability& obj) : _obj(obj) {}
	virtual ~VirtualMachineCapability_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineCapability"; }
};

class VirtualMachineCdromInfo_closure : public closure
{
protected:
	vw1__VirtualMachineCdromInfo _obj;
public:
	VirtualMachineCdromInfo_closure(const vw1__VirtualMachineCdromInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineCdromInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineCdromInfo"; }
};

class VirtualMachineCloneSpec_closure : public closure
{
protected:
	vw1__VirtualMachineCloneSpec _obj;
public:
	VirtualMachineCloneSpec_closure(const vw1__VirtualMachineCloneSpec& obj) : _obj(obj) {}
	virtual ~VirtualMachineCloneSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineCloneSpec"; }
};

class VirtualMachineConfigInfo_closure : public closure
{
protected:
	vw1__VirtualMachineConfigInfo _obj;
public:
	VirtualMachineConfigInfo_closure(const vw1__VirtualMachineConfigInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineConfigInfo"; }
};

class VirtualMachineConfigInfoDatastoreUrlPair_closure : public closure
{
protected:
	vw1__VirtualMachineConfigInfoDatastoreUrlPair _obj;
public:
	VirtualMachineConfigInfoDatastoreUrlPair_closure(const vw1__VirtualMachineConfigInfoDatastoreUrlPair& obj) : _obj(obj) {}
	virtual ~VirtualMachineConfigInfoDatastoreUrlPair_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineConfigInfoDatastoreUrlPair"; }
};

class VirtualMachineConfigInfoOverheadInfo_closure : public closure
{
protected:
	vw1__VirtualMachineConfigInfoOverheadInfo _obj;
public:
	VirtualMachineConfigInfoOverheadInfo_closure(const vw1__VirtualMachineConfigInfoOverheadInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineConfigInfoOverheadInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineConfigInfoOverheadInfo"; }
};

class VirtualMachineConfigOption_closure : public closure
{
protected:
	vw1__VirtualMachineConfigOption _obj;
public:
	VirtualMachineConfigOption_closure(const vw1__VirtualMachineConfigOption& obj) : _obj(obj) {}
	virtual ~VirtualMachineConfigOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineConfigOption"; }
};

class VirtualMachineConfigOptionDescriptor_closure : public closure
{
protected:
	vw1__VirtualMachineConfigOptionDescriptor _obj;
public:
	VirtualMachineConfigOptionDescriptor_closure(const vw1__VirtualMachineConfigOptionDescriptor& obj) : _obj(obj) {}
	virtual ~VirtualMachineConfigOptionDescriptor_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineConfigOptionDescriptor"; }
};

class VirtualMachineConfigSpec_closure : public closure
{
protected:
	vw1__VirtualMachineConfigSpec _obj;
public:
	VirtualMachineConfigSpec_closure(const vw1__VirtualMachineConfigSpec& obj) : _obj(obj) {}
	virtual ~VirtualMachineConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineConfigSpec"; }
};

class VirtualMachineConfigSummary_closure : public closure
{
protected:
	vw1__VirtualMachineConfigSummary _obj;
public:
	VirtualMachineConfigSummary_closure(const vw1__VirtualMachineConfigSummary& obj) : _obj(obj) {}
	virtual ~VirtualMachineConfigSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineConfigSummary"; }
};

class VirtualMachineConsolePreferences_closure : public closure
{
protected:
	vw1__VirtualMachineConsolePreferences _obj;
public:
	VirtualMachineConsolePreferences_closure(const vw1__VirtualMachineConsolePreferences& obj) : _obj(obj) {}
	virtual ~VirtualMachineConsolePreferences_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineConsolePreferences"; }
};

class VirtualMachineCpuIdInfoSpec_closure : public closure
{
protected:
	vw1__VirtualMachineCpuIdInfoSpec _obj;
public:
	VirtualMachineCpuIdInfoSpec_closure(const vw1__VirtualMachineCpuIdInfoSpec& obj) : _obj(obj) {}
	virtual ~VirtualMachineCpuIdInfoSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineCpuIdInfoSpec"; }
};

class VirtualMachineDatastoreInfo_closure : public closure
{
protected:
	vw1__VirtualMachineDatastoreInfo _obj;
public:
	VirtualMachineDatastoreInfo_closure(const vw1__VirtualMachineDatastoreInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineDatastoreInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineDatastoreInfo"; }
};

class VirtualMachineDatastoreVolumeOption_closure : public closure
{
protected:
	vw1__VirtualMachineDatastoreVolumeOption _obj;
public:
	VirtualMachineDatastoreVolumeOption_closure(const vw1__VirtualMachineDatastoreVolumeOption& obj) : _obj(obj) {}
	virtual ~VirtualMachineDatastoreVolumeOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineDatastoreVolumeOption"; }
};

class VirtualMachineDefaultPowerOpInfo_closure : public closure
{
protected:
	vw1__VirtualMachineDefaultPowerOpInfo _obj;
public:
	VirtualMachineDefaultPowerOpInfo_closure(const vw1__VirtualMachineDefaultPowerOpInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineDefaultPowerOpInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineDefaultPowerOpInfo"; }
};

class VirtualMachineDeviceRuntimeInfo_closure : public closure
{
protected:
	vw1__VirtualMachineDeviceRuntimeInfo _obj;
public:
	VirtualMachineDeviceRuntimeInfo_closure(const vw1__VirtualMachineDeviceRuntimeInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineDeviceRuntimeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineDeviceRuntimeInfo"; }
};

class VirtualMachineDeviceRuntimeInfoDeviceRuntimeState_closure : public closure
{
protected:
	vw1__VirtualMachineDeviceRuntimeInfoDeviceRuntimeState _obj;
public:
	VirtualMachineDeviceRuntimeInfoDeviceRuntimeState_closure(const vw1__VirtualMachineDeviceRuntimeInfoDeviceRuntimeState& obj) : _obj(obj) {}
	virtual ~VirtualMachineDeviceRuntimeInfoDeviceRuntimeState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineDeviceRuntimeInfoDeviceRuntimeState"; }
};

class VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState_closure : public closure
{
protected:
	vw1__VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState _obj;
public:
	VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState_closure(const vw1__VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState& obj) : _obj(obj) {}
	virtual ~VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState"; }
};

class VirtualMachineDiskDeviceInfo_closure : public closure
{
protected:
	vw1__VirtualMachineDiskDeviceInfo _obj;
public:
	VirtualMachineDiskDeviceInfo_closure(const vw1__VirtualMachineDiskDeviceInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineDiskDeviceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineDiskDeviceInfo"; }
};

class VirtualMachineDisplayTopology_closure : public closure
{
protected:
	vw1__VirtualMachineDisplayTopology _obj;
public:
	VirtualMachineDisplayTopology_closure(const vw1__VirtualMachineDisplayTopology& obj) : _obj(obj) {}
	virtual ~VirtualMachineDisplayTopology_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineDisplayTopology"; }
};

class VirtualMachineFileInfo_closure : public closure
{
protected:
	vw1__VirtualMachineFileInfo _obj;
public:
	VirtualMachineFileInfo_closure(const vw1__VirtualMachineFileInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileInfo"; }
};

class VirtualMachineFileLayout_closure : public closure
{
protected:
	vw1__VirtualMachineFileLayout _obj;
public:
	VirtualMachineFileLayout_closure(const vw1__VirtualMachineFileLayout& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileLayout_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileLayout"; }
};

class VirtualMachineFileLayoutDiskLayout_closure : public closure
{
protected:
	vw1__VirtualMachineFileLayoutDiskLayout _obj;
public:
	VirtualMachineFileLayoutDiskLayout_closure(const vw1__VirtualMachineFileLayoutDiskLayout& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileLayoutDiskLayout_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileLayoutDiskLayout"; }
};

class VirtualMachineFileLayoutEx_closure : public closure
{
protected:
	vw1__VirtualMachineFileLayoutEx _obj;
public:
	VirtualMachineFileLayoutEx_closure(const vw1__VirtualMachineFileLayoutEx& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileLayoutEx_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileLayoutEx"; }
};

class VirtualMachineFileLayoutExDiskLayout_closure : public closure
{
protected:
	vw1__VirtualMachineFileLayoutExDiskLayout _obj;
public:
	VirtualMachineFileLayoutExDiskLayout_closure(const vw1__VirtualMachineFileLayoutExDiskLayout& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileLayoutExDiskLayout_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileLayoutExDiskLayout"; }
};

class VirtualMachineFileLayoutExDiskUnit_closure : public closure
{
protected:
	vw1__VirtualMachineFileLayoutExDiskUnit _obj;
public:
	VirtualMachineFileLayoutExDiskUnit_closure(const vw1__VirtualMachineFileLayoutExDiskUnit& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileLayoutExDiskUnit_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileLayoutExDiskUnit"; }
};

class VirtualMachineFileLayoutExFileInfo_closure : public closure
{
protected:
	vw1__VirtualMachineFileLayoutExFileInfo _obj;
public:
	VirtualMachineFileLayoutExFileInfo_closure(const vw1__VirtualMachineFileLayoutExFileInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileLayoutExFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileLayoutExFileInfo"; }
};

class VirtualMachineFileLayoutExSnapshotLayout_closure : public closure
{
protected:
	vw1__VirtualMachineFileLayoutExSnapshotLayout _obj;
public:
	VirtualMachineFileLayoutExSnapshotLayout_closure(const vw1__VirtualMachineFileLayoutExSnapshotLayout& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileLayoutExSnapshotLayout_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileLayoutExSnapshotLayout"; }
};

class VirtualMachineFileLayoutSnapshotLayout_closure : public closure
{
protected:
	vw1__VirtualMachineFileLayoutSnapshotLayout _obj;
public:
	VirtualMachineFileLayoutSnapshotLayout_closure(const vw1__VirtualMachineFileLayoutSnapshotLayout& obj) : _obj(obj) {}
	virtual ~VirtualMachineFileLayoutSnapshotLayout_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFileLayoutSnapshotLayout"; }
};

class VirtualMachineFlagInfo_closure : public closure
{
protected:
	vw1__VirtualMachineFlagInfo _obj;
public:
	VirtualMachineFlagInfo_closure(const vw1__VirtualMachineFlagInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineFlagInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFlagInfo"; }
};

class VirtualMachineFloppyInfo_closure : public closure
{
protected:
	vw1__VirtualMachineFloppyInfo _obj;
public:
	VirtualMachineFloppyInfo_closure(const vw1__VirtualMachineFloppyInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineFloppyInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineFloppyInfo"; }
};

class VirtualMachineGuestSummary_closure : public closure
{
protected:
	vw1__VirtualMachineGuestSummary _obj;
public:
	VirtualMachineGuestSummary_closure(const vw1__VirtualMachineGuestSummary& obj) : _obj(obj) {}
	virtual ~VirtualMachineGuestSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineGuestSummary"; }
};

class VirtualMachineIdeDiskDeviceInfo_closure : public closure
{
protected:
	vw1__VirtualMachineIdeDiskDeviceInfo _obj;
public:
	VirtualMachineIdeDiskDeviceInfo_closure(const vw1__VirtualMachineIdeDiskDeviceInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineIdeDiskDeviceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineIdeDiskDeviceInfo"; }
};

class VirtualMachineIdeDiskDevicePartitionInfo_closure : public closure
{
protected:
	vw1__VirtualMachineIdeDiskDevicePartitionInfo _obj;
public:
	VirtualMachineIdeDiskDevicePartitionInfo_closure(const vw1__VirtualMachineIdeDiskDevicePartitionInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineIdeDiskDevicePartitionInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineIdeDiskDevicePartitionInfo"; }
};

class VirtualMachineImportSpec_closure : public closure
{
protected:
	vw1__VirtualMachineImportSpec _obj;
public:
	VirtualMachineImportSpec_closure(const vw1__VirtualMachineImportSpec& obj) : _obj(obj) {}
	virtual ~VirtualMachineImportSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineImportSpec"; }
};

class VirtualMachineLegacyNetworkSwitchInfo_closure : public closure
{
protected:
	vw1__VirtualMachineLegacyNetworkSwitchInfo _obj;
public:
	VirtualMachineLegacyNetworkSwitchInfo_closure(const vw1__VirtualMachineLegacyNetworkSwitchInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineLegacyNetworkSwitchInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineLegacyNetworkSwitchInfo"; }
};

class VirtualMachineMemoryReservationInfo_closure : public closure
{
protected:
	vw1__VirtualMachineMemoryReservationInfo _obj;
public:
	VirtualMachineMemoryReservationInfo_closure(const vw1__VirtualMachineMemoryReservationInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineMemoryReservationInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineMemoryReservationInfo"; }
};

class VirtualMachineMemoryReservationSpec_closure : public closure
{
protected:
	vw1__VirtualMachineMemoryReservationSpec _obj;
public:
	VirtualMachineMemoryReservationSpec_closure(const vw1__VirtualMachineMemoryReservationSpec& obj) : _obj(obj) {}
	virtual ~VirtualMachineMemoryReservationSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineMemoryReservationSpec"; }
};

class VirtualMachineMessage_closure : public closure
{
protected:
	vw1__VirtualMachineMessage _obj;
public:
	VirtualMachineMessage_closure(const vw1__VirtualMachineMessage& obj) : _obj(obj) {}
	virtual ~VirtualMachineMessage_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineMessage"; }
};

class VirtualMachineMksTicket_closure : public closure
{
protected:
	vw1__VirtualMachineMksTicket _obj;
public:
	VirtualMachineMksTicket_closure(const vw1__VirtualMachineMksTicket& obj) : _obj(obj) {}
	virtual ~VirtualMachineMksTicket_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineMksTicket"; }
};

class VirtualMachineNetworkInfo_closure : public closure
{
protected:
	vw1__VirtualMachineNetworkInfo _obj;
public:
	VirtualMachineNetworkInfo_closure(const vw1__VirtualMachineNetworkInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineNetworkInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineNetworkInfo"; }
};

class VirtualMachineNetworkShaperInfo_closure : public closure
{
protected:
	vw1__VirtualMachineNetworkShaperInfo _obj;
public:
	VirtualMachineNetworkShaperInfo_closure(const vw1__VirtualMachineNetworkShaperInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineNetworkShaperInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineNetworkShaperInfo"; }
};

class VirtualMachineParallelInfo_closure : public closure
{
protected:
	vw1__VirtualMachineParallelInfo _obj;
public:
	VirtualMachineParallelInfo_closure(const vw1__VirtualMachineParallelInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineParallelInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineParallelInfo"; }
};

class VirtualMachinePciPassthroughInfo_closure : public closure
{
protected:
	vw1__VirtualMachinePciPassthroughInfo _obj;
public:
	VirtualMachinePciPassthroughInfo_closure(const vw1__VirtualMachinePciPassthroughInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachinePciPassthroughInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachinePciPassthroughInfo"; }
};

class VirtualMachineQuestionInfo_closure : public closure
{
protected:
	vw1__VirtualMachineQuestionInfo _obj;
public:
	VirtualMachineQuestionInfo_closure(const vw1__VirtualMachineQuestionInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineQuestionInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineQuestionInfo"; }
};

class VirtualMachineQuickStats_closure : public closure
{
protected:
	vw1__VirtualMachineQuickStats _obj;
public:
	VirtualMachineQuickStats_closure(const vw1__VirtualMachineQuickStats& obj) : _obj(obj) {}
	virtual ~VirtualMachineQuickStats_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineQuickStats"; }
};

class VirtualMachineRelocateSpec_closure : public closure
{
protected:
	vw1__VirtualMachineRelocateSpec _obj;
public:
	VirtualMachineRelocateSpec_closure(const vw1__VirtualMachineRelocateSpec& obj) : _obj(obj) {}
	virtual ~VirtualMachineRelocateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineRelocateSpec"; }
};

class VirtualMachineRelocateSpecDiskLocator_closure : public closure
{
protected:
	vw1__VirtualMachineRelocateSpecDiskLocator _obj;
public:
	VirtualMachineRelocateSpecDiskLocator_closure(const vw1__VirtualMachineRelocateSpecDiskLocator& obj) : _obj(obj) {}
	virtual ~VirtualMachineRelocateSpecDiskLocator_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineRelocateSpecDiskLocator"; }
};

class VirtualMachineRuntimeInfo_closure : public closure
{
protected:
	vw1__VirtualMachineRuntimeInfo _obj;
public:
	VirtualMachineRuntimeInfo_closure(const vw1__VirtualMachineRuntimeInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineRuntimeInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineRuntimeInfo"; }
};

class VirtualMachineRuntimeInfoDasProtectionState_closure : public closure
{
protected:
	vw1__VirtualMachineRuntimeInfoDasProtectionState _obj;
public:
	VirtualMachineRuntimeInfoDasProtectionState_closure(const vw1__VirtualMachineRuntimeInfoDasProtectionState& obj) : _obj(obj) {}
	virtual ~VirtualMachineRuntimeInfoDasProtectionState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineRuntimeInfoDasProtectionState"; }
};

class VirtualMachineScsiDiskDeviceInfo_closure : public closure
{
protected:
	vw1__VirtualMachineScsiDiskDeviceInfo _obj;
public:
	VirtualMachineScsiDiskDeviceInfo_closure(const vw1__VirtualMachineScsiDiskDeviceInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineScsiDiskDeviceInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineScsiDiskDeviceInfo"; }
};

class VirtualMachineScsiPassthroughInfo_closure : public closure
{
protected:
	vw1__VirtualMachineScsiPassthroughInfo _obj;
public:
	VirtualMachineScsiPassthroughInfo_closure(const vw1__VirtualMachineScsiPassthroughInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineScsiPassthroughInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineScsiPassthroughInfo"; }
};

class VirtualMachineSerialInfo_closure : public closure
{
protected:
	vw1__VirtualMachineSerialInfo _obj;
public:
	VirtualMachineSerialInfo_closure(const vw1__VirtualMachineSerialInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineSerialInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineSerialInfo"; }
};

class VirtualMachineSnapshotInfo_closure : public closure
{
protected:
	vw1__VirtualMachineSnapshotInfo _obj;
public:
	VirtualMachineSnapshotInfo_closure(const vw1__VirtualMachineSnapshotInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineSnapshotInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineSnapshotInfo"; }
};

class VirtualMachineSnapshotTree_closure : public closure
{
protected:
	vw1__VirtualMachineSnapshotTree _obj;
public:
	VirtualMachineSnapshotTree_closure(const vw1__VirtualMachineSnapshotTree& obj) : _obj(obj) {}
	virtual ~VirtualMachineSnapshotTree_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineSnapshotTree"; }
};

class VirtualMachineSoundInfo_closure : public closure
{
protected:
	vw1__VirtualMachineSoundInfo _obj;
public:
	VirtualMachineSoundInfo_closure(const vw1__VirtualMachineSoundInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineSoundInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineSoundInfo"; }
};

class VirtualMachineStorageInfo_closure : public closure
{
protected:
	vw1__VirtualMachineStorageInfo _obj;
public:
	VirtualMachineStorageInfo_closure(const vw1__VirtualMachineStorageInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineStorageInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineStorageInfo"; }
};

class VirtualMachineStorageSummary_closure : public closure
{
protected:
	vw1__VirtualMachineStorageSummary _obj;
public:
	VirtualMachineStorageSummary_closure(const vw1__VirtualMachineStorageSummary& obj) : _obj(obj) {}
	virtual ~VirtualMachineStorageSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineStorageSummary"; }
};

class VirtualMachineSummary_closure : public closure
{
protected:
	vw1__VirtualMachineSummary _obj;
public:
	VirtualMachineSummary_closure(const vw1__VirtualMachineSummary& obj) : _obj(obj) {}
	virtual ~VirtualMachineSummary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineSummary"; }
};

class VirtualMachineTargetInfo_closure : public closure
{
protected:
	vw1__VirtualMachineTargetInfo _obj;
public:
	VirtualMachineTargetInfo_closure(const vw1__VirtualMachineTargetInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineTargetInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineTargetInfo"; }
};

class VirtualMachineTicket_closure : public closure
{
protected:
	vw1__VirtualMachineTicket _obj;
public:
	VirtualMachineTicket_closure(const vw1__VirtualMachineTicket& obj) : _obj(obj) {}
	virtual ~VirtualMachineTicket_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineTicket"; }
};

class VirtualMachineUsageOnDatastore_closure : public closure
{
protected:
	vw1__VirtualMachineUsageOnDatastore _obj;
public:
	VirtualMachineUsageOnDatastore_closure(const vw1__VirtualMachineUsageOnDatastore& obj) : _obj(obj) {}
	virtual ~VirtualMachineUsageOnDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineUsageOnDatastore"; }
};

class VirtualMachineUsbInfo_closure : public closure
{
protected:
	vw1__VirtualMachineUsbInfo _obj;
public:
	VirtualMachineUsbInfo_closure(const vw1__VirtualMachineUsbInfo& obj) : _obj(obj) {}
	virtual ~VirtualMachineUsbInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineUsbInfo"; }
};

class VirtualMachineVMCIDevice_closure : public closure
{
protected:
	vw1__VirtualMachineVMCIDevice _obj;
public:
	VirtualMachineVMCIDevice_closure(const vw1__VirtualMachineVMCIDevice& obj) : _obj(obj) {}
	virtual ~VirtualMachineVMCIDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineVMCIDevice"; }
};

class VirtualMachineVMCIDeviceOption_closure : public closure
{
protected:
	vw1__VirtualMachineVMCIDeviceOption _obj;
public:
	VirtualMachineVMCIDeviceOption_closure(const vw1__VirtualMachineVMCIDeviceOption& obj) : _obj(obj) {}
	virtual ~VirtualMachineVMCIDeviceOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineVMCIDeviceOption"; }
};

class VirtualMachineVMIROM_closure : public closure
{
protected:
	vw1__VirtualMachineVMIROM _obj;
public:
	VirtualMachineVMIROM_closure(const vw1__VirtualMachineVMIROM& obj) : _obj(obj) {}
	virtual ~VirtualMachineVMIROM_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineVMIROM"; }
};

class VirtualMachineVideoCard_closure : public closure
{
protected:
	vw1__VirtualMachineVideoCard _obj;
public:
	VirtualMachineVideoCard_closure(const vw1__VirtualMachineVideoCard& obj) : _obj(obj) {}
	virtual ~VirtualMachineVideoCard_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineVideoCard"; }
};

class VirtualNicManagerNetConfig_closure : public closure
{
protected:
	vw1__VirtualNicManagerNetConfig _obj;
public:
	VirtualNicManagerNetConfig_closure(const vw1__VirtualNicManagerNetConfig& obj) : _obj(obj) {}
	virtual ~VirtualNicManagerNetConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualNicManagerNetConfig"; }
};

class VirtualPCIController_closure : public closure
{
protected:
	vw1__VirtualPCIController _obj;
public:
	VirtualPCIController_closure(const vw1__VirtualPCIController& obj) : _obj(obj) {}
	virtual ~VirtualPCIController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPCIController"; }
};

class VirtualPCIControllerOption_closure : public closure
{
protected:
	vw1__VirtualPCIControllerOption _obj;
public:
	VirtualPCIControllerOption_closure(const vw1__VirtualPCIControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualPCIControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPCIControllerOption"; }
};

class VirtualPCIPassthrough_closure : public closure
{
protected:
	vw1__VirtualPCIPassthrough _obj;
public:
	VirtualPCIPassthrough_closure(const vw1__VirtualPCIPassthrough& obj) : _obj(obj) {}
	virtual ~VirtualPCIPassthrough_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPCIPassthrough"; }
};

class VirtualPCIPassthroughDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualPCIPassthroughDeviceBackingInfo _obj;
public:
	VirtualPCIPassthroughDeviceBackingInfo_closure(const vw1__VirtualPCIPassthroughDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualPCIPassthroughDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPCIPassthroughDeviceBackingInfo"; }
};

class VirtualPCIPassthroughDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualPCIPassthroughDeviceBackingOption _obj;
public:
	VirtualPCIPassthroughDeviceBackingOption_closure(const vw1__VirtualPCIPassthroughDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualPCIPassthroughDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPCIPassthroughDeviceBackingOption"; }
};

class VirtualPCIPassthroughOption_closure : public closure
{
protected:
	vw1__VirtualPCIPassthroughOption _obj;
public:
	VirtualPCIPassthroughOption_closure(const vw1__VirtualPCIPassthroughOption& obj) : _obj(obj) {}
	virtual ~VirtualPCIPassthroughOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPCIPassthroughOption"; }
};

class VirtualPCNet32_closure : public closure
{
protected:
	vw1__VirtualPCNet32 _obj;
public:
	VirtualPCNet32_closure(const vw1__VirtualPCNet32& obj) : _obj(obj) {}
	virtual ~VirtualPCNet32_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPCNet32"; }
};

class VirtualPCNet32Option_closure : public closure
{
protected:
	vw1__VirtualPCNet32Option _obj;
public:
	VirtualPCNet32Option_closure(const vw1__VirtualPCNet32Option& obj) : _obj(obj) {}
	virtual ~VirtualPCNet32Option_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPCNet32Option"; }
};

class VirtualPS2Controller_closure : public closure
{
protected:
	vw1__VirtualPS2Controller _obj;
public:
	VirtualPS2Controller_closure(const vw1__VirtualPS2Controller& obj) : _obj(obj) {}
	virtual ~VirtualPS2Controller_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPS2Controller"; }
};

class VirtualPS2ControllerOption_closure : public closure
{
protected:
	vw1__VirtualPS2ControllerOption _obj;
public:
	VirtualPS2ControllerOption_closure(const vw1__VirtualPS2ControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualPS2ControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPS2ControllerOption"; }
};

class VirtualParallelPort_closure : public closure
{
protected:
	vw1__VirtualParallelPort _obj;
public:
	VirtualParallelPort_closure(const vw1__VirtualParallelPort& obj) : _obj(obj) {}
	virtual ~VirtualParallelPort_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualParallelPort"; }
};

class VirtualParallelPortDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualParallelPortDeviceBackingInfo _obj;
public:
	VirtualParallelPortDeviceBackingInfo_closure(const vw1__VirtualParallelPortDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualParallelPortDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualParallelPortDeviceBackingInfo"; }
};

class VirtualParallelPortDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualParallelPortDeviceBackingOption _obj;
public:
	VirtualParallelPortDeviceBackingOption_closure(const vw1__VirtualParallelPortDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualParallelPortDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualParallelPortDeviceBackingOption"; }
};

class VirtualParallelPortFileBackingInfo_closure : public closure
{
protected:
	vw1__VirtualParallelPortFileBackingInfo _obj;
public:
	VirtualParallelPortFileBackingInfo_closure(const vw1__VirtualParallelPortFileBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualParallelPortFileBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualParallelPortFileBackingInfo"; }
};

class VirtualParallelPortFileBackingOption_closure : public closure
{
protected:
	vw1__VirtualParallelPortFileBackingOption _obj;
public:
	VirtualParallelPortFileBackingOption_closure(const vw1__VirtualParallelPortFileBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualParallelPortFileBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualParallelPortFileBackingOption"; }
};

class VirtualParallelPortOption_closure : public closure
{
protected:
	vw1__VirtualParallelPortOption _obj;
public:
	VirtualParallelPortOption_closure(const vw1__VirtualParallelPortOption& obj) : _obj(obj) {}
	virtual ~VirtualParallelPortOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualParallelPortOption"; }
};

class VirtualPointingDevice_closure : public closure
{
protected:
	vw1__VirtualPointingDevice _obj;
public:
	VirtualPointingDevice_closure(const vw1__VirtualPointingDevice& obj) : _obj(obj) {}
	virtual ~VirtualPointingDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPointingDevice"; }
};

class VirtualPointingDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualPointingDeviceBackingOption _obj;
public:
	VirtualPointingDeviceBackingOption_closure(const vw1__VirtualPointingDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualPointingDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPointingDeviceBackingOption"; }
};

class VirtualPointingDeviceDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualPointingDeviceDeviceBackingInfo _obj;
public:
	VirtualPointingDeviceDeviceBackingInfo_closure(const vw1__VirtualPointingDeviceDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualPointingDeviceDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPointingDeviceDeviceBackingInfo"; }
};

class VirtualPointingDeviceOption_closure : public closure
{
protected:
	vw1__VirtualPointingDeviceOption _obj;
public:
	VirtualPointingDeviceOption_closure(const vw1__VirtualPointingDeviceOption& obj) : _obj(obj) {}
	virtual ~VirtualPointingDeviceOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualPointingDeviceOption"; }
};

class VirtualSCSIController_closure : public closure
{
protected:
	vw1__VirtualSCSIController _obj;
public:
	VirtualSCSIController_closure(const vw1__VirtualSCSIController& obj) : _obj(obj) {}
	virtual ~VirtualSCSIController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSCSIController"; }
};

class VirtualSCSIControllerOption_closure : public closure
{
protected:
	vw1__VirtualSCSIControllerOption _obj;
public:
	VirtualSCSIControllerOption_closure(const vw1__VirtualSCSIControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualSCSIControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSCSIControllerOption"; }
};

class VirtualSCSIPassthrough_closure : public closure
{
protected:
	vw1__VirtualSCSIPassthrough _obj;
public:
	VirtualSCSIPassthrough_closure(const vw1__VirtualSCSIPassthrough& obj) : _obj(obj) {}
	virtual ~VirtualSCSIPassthrough_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSCSIPassthrough"; }
};

class VirtualSCSIPassthroughDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualSCSIPassthroughDeviceBackingInfo _obj;
public:
	VirtualSCSIPassthroughDeviceBackingInfo_closure(const vw1__VirtualSCSIPassthroughDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualSCSIPassthroughDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSCSIPassthroughDeviceBackingInfo"; }
};

class VirtualSCSIPassthroughDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualSCSIPassthroughDeviceBackingOption _obj;
public:
	VirtualSCSIPassthroughDeviceBackingOption_closure(const vw1__VirtualSCSIPassthroughDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualSCSIPassthroughDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSCSIPassthroughDeviceBackingOption"; }
};

class VirtualSCSIPassthroughOption_closure : public closure
{
protected:
	vw1__VirtualSCSIPassthroughOption _obj;
public:
	VirtualSCSIPassthroughOption_closure(const vw1__VirtualSCSIPassthroughOption& obj) : _obj(obj) {}
	virtual ~VirtualSCSIPassthroughOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSCSIPassthroughOption"; }
};

class VirtualSIOController_closure : public closure
{
protected:
	vw1__VirtualSIOController _obj;
public:
	VirtualSIOController_closure(const vw1__VirtualSIOController& obj) : _obj(obj) {}
	virtual ~VirtualSIOController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSIOController"; }
};

class VirtualSIOControllerOption_closure : public closure
{
protected:
	vw1__VirtualSIOControllerOption _obj;
public:
	VirtualSIOControllerOption_closure(const vw1__VirtualSIOControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualSIOControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSIOControllerOption"; }
};

class VirtualSerialPort_closure : public closure
{
protected:
	vw1__VirtualSerialPort _obj;
public:
	VirtualSerialPort_closure(const vw1__VirtualSerialPort& obj) : _obj(obj) {}
	virtual ~VirtualSerialPort_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPort"; }
};

class VirtualSerialPortDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualSerialPortDeviceBackingInfo _obj;
public:
	VirtualSerialPortDeviceBackingInfo_closure(const vw1__VirtualSerialPortDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortDeviceBackingInfo"; }
};

class VirtualSerialPortDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualSerialPortDeviceBackingOption _obj;
public:
	VirtualSerialPortDeviceBackingOption_closure(const vw1__VirtualSerialPortDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortDeviceBackingOption"; }
};

class VirtualSerialPortFileBackingInfo_closure : public closure
{
protected:
	vw1__VirtualSerialPortFileBackingInfo _obj;
public:
	VirtualSerialPortFileBackingInfo_closure(const vw1__VirtualSerialPortFileBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortFileBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortFileBackingInfo"; }
};

class VirtualSerialPortFileBackingOption_closure : public closure
{
protected:
	vw1__VirtualSerialPortFileBackingOption _obj;
public:
	VirtualSerialPortFileBackingOption_closure(const vw1__VirtualSerialPortFileBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortFileBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortFileBackingOption"; }
};

class VirtualSerialPortOption_closure : public closure
{
protected:
	vw1__VirtualSerialPortOption _obj;
public:
	VirtualSerialPortOption_closure(const vw1__VirtualSerialPortOption& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortOption"; }
};

class VirtualSerialPortPipeBackingInfo_closure : public closure
{
protected:
	vw1__VirtualSerialPortPipeBackingInfo _obj;
public:
	VirtualSerialPortPipeBackingInfo_closure(const vw1__VirtualSerialPortPipeBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortPipeBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortPipeBackingInfo"; }
};

class VirtualSerialPortPipeBackingOption_closure : public closure
{
protected:
	vw1__VirtualSerialPortPipeBackingOption _obj;
public:
	VirtualSerialPortPipeBackingOption_closure(const vw1__VirtualSerialPortPipeBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortPipeBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortPipeBackingOption"; }
};

class VirtualSerialPortURIBackingInfo_closure : public closure
{
protected:
	vw1__VirtualSerialPortURIBackingInfo _obj;
public:
	VirtualSerialPortURIBackingInfo_closure(const vw1__VirtualSerialPortURIBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortURIBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortURIBackingInfo"; }
};

class VirtualSerialPortURIBackingOption_closure : public closure
{
protected:
	vw1__VirtualSerialPortURIBackingOption _obj;
public:
	VirtualSerialPortURIBackingOption_closure(const vw1__VirtualSerialPortURIBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualSerialPortURIBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSerialPortURIBackingOption"; }
};

class VirtualSoundBlaster16_closure : public closure
{
protected:
	vw1__VirtualSoundBlaster16 _obj;
public:
	VirtualSoundBlaster16_closure(const vw1__VirtualSoundBlaster16& obj) : _obj(obj) {}
	virtual ~VirtualSoundBlaster16_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSoundBlaster16"; }
};

class VirtualSoundBlaster16Option_closure : public closure
{
protected:
	vw1__VirtualSoundBlaster16Option _obj;
public:
	VirtualSoundBlaster16Option_closure(const vw1__VirtualSoundBlaster16Option& obj) : _obj(obj) {}
	virtual ~VirtualSoundBlaster16Option_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSoundBlaster16Option"; }
};

class VirtualSoundCard_closure : public closure
{
protected:
	vw1__VirtualSoundCard _obj;
public:
	VirtualSoundCard_closure(const vw1__VirtualSoundCard& obj) : _obj(obj) {}
	virtual ~VirtualSoundCard_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSoundCard"; }
};

class VirtualSoundCardDeviceBackingInfo_closure : public closure
{
protected:
	vw1__VirtualSoundCardDeviceBackingInfo _obj;
public:
	VirtualSoundCardDeviceBackingInfo_closure(const vw1__VirtualSoundCardDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualSoundCardDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSoundCardDeviceBackingInfo"; }
};

class VirtualSoundCardDeviceBackingOption_closure : public closure
{
protected:
	vw1__VirtualSoundCardDeviceBackingOption _obj;
public:
	VirtualSoundCardDeviceBackingOption_closure(const vw1__VirtualSoundCardDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualSoundCardDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSoundCardDeviceBackingOption"; }
};

class VirtualSoundCardOption_closure : public closure
{
protected:
	vw1__VirtualSoundCardOption _obj;
public:
	VirtualSoundCardOption_closure(const vw1__VirtualSoundCardOption& obj) : _obj(obj) {}
	virtual ~VirtualSoundCardOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSoundCardOption"; }
};

class VirtualSwitchProfile_closure : public closure
{
protected:
	vw1__VirtualSwitchProfile _obj;
public:
	VirtualSwitchProfile_closure(const vw1__VirtualSwitchProfile& obj) : _obj(obj) {}
	virtual ~VirtualSwitchProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSwitchProfile"; }
};

class VirtualSwitchSelectionProfile_closure : public closure
{
protected:
	vw1__VirtualSwitchSelectionProfile _obj;
public:
	VirtualSwitchSelectionProfile_closure(const vw1__VirtualSwitchSelectionProfile& obj) : _obj(obj) {}
	virtual ~VirtualSwitchSelectionProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualSwitchSelectionProfile"; }
};

class VirtualUSB_closure : public closure
{
protected:
	vw1__VirtualUSB _obj;
public:
	VirtualUSB_closure(const vw1__VirtualUSB& obj) : _obj(obj) {}
	virtual ~VirtualUSB_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSB"; }
};

class VirtualUSBController_closure : public closure
{
protected:
	vw1__VirtualUSBController _obj;
public:
	VirtualUSBController_closure(const vw1__VirtualUSBController& obj) : _obj(obj) {}
	virtual ~VirtualUSBController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBController"; }
};

class VirtualUSBControllerOption_closure : public closure
{
protected:
	vw1__VirtualUSBControllerOption _obj;
public:
	VirtualUSBControllerOption_closure(const vw1__VirtualUSBControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualUSBControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBControllerOption"; }
};

class VirtualUSBOption_closure : public closure
{
protected:
	vw1__VirtualUSBOption _obj;
public:
	VirtualUSBOption_closure(const vw1__VirtualUSBOption& obj) : _obj(obj) {}
	virtual ~VirtualUSBOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBOption"; }
};

class VirtualUSBRemoteClientBackingInfo_closure : public closure
{
protected:
	vw1__VirtualUSBRemoteClientBackingInfo _obj;
public:
	VirtualUSBRemoteClientBackingInfo_closure(const vw1__VirtualUSBRemoteClientBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualUSBRemoteClientBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBRemoteClientBackingInfo"; }
};

class VirtualUSBRemoteClientBackingOption_closure : public closure
{
protected:
	vw1__VirtualUSBRemoteClientBackingOption _obj;
public:
	VirtualUSBRemoteClientBackingOption_closure(const vw1__VirtualUSBRemoteClientBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualUSBRemoteClientBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBRemoteClientBackingOption"; }
};

class VirtualUSBRemoteHostBackingInfo_closure : public closure
{
protected:
	vw1__VirtualUSBRemoteHostBackingInfo _obj;
public:
	VirtualUSBRemoteHostBackingInfo_closure(const vw1__VirtualUSBRemoteHostBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualUSBRemoteHostBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBRemoteHostBackingInfo"; }
};

class VirtualUSBRemoteHostBackingOption_closure : public closure
{
protected:
	vw1__VirtualUSBRemoteHostBackingOption _obj;
public:
	VirtualUSBRemoteHostBackingOption_closure(const vw1__VirtualUSBRemoteHostBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualUSBRemoteHostBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBRemoteHostBackingOption"; }
};

class VirtualUSBUSBBackingInfo_closure : public closure
{
protected:
	vw1__VirtualUSBUSBBackingInfo _obj;
public:
	VirtualUSBUSBBackingInfo_closure(const vw1__VirtualUSBUSBBackingInfo& obj) : _obj(obj) {}
	virtual ~VirtualUSBUSBBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBUSBBackingInfo"; }
};

class VirtualUSBUSBBackingOption_closure : public closure
{
protected:
	vw1__VirtualUSBUSBBackingOption _obj;
public:
	VirtualUSBUSBBackingOption_closure(const vw1__VirtualUSBUSBBackingOption& obj) : _obj(obj) {}
	virtual ~VirtualUSBUSBBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBUSBBackingOption"; }
};

class VirtualUSBXHCIController_closure : public closure
{
protected:
	vw1__VirtualUSBXHCIController _obj;
public:
	VirtualUSBXHCIController_closure(const vw1__VirtualUSBXHCIController& obj) : _obj(obj) {}
	virtual ~VirtualUSBXHCIController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBXHCIController"; }
};

class VirtualUSBXHCIControllerOption_closure : public closure
{
protected:
	vw1__VirtualUSBXHCIControllerOption _obj;
public:
	VirtualUSBXHCIControllerOption_closure(const vw1__VirtualUSBXHCIControllerOption& obj) : _obj(obj) {}
	virtual ~VirtualUSBXHCIControllerOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualUSBXHCIControllerOption"; }
};

class VirtualVMIROMOption_closure : public closure
{
protected:
	vw1__VirtualVMIROMOption _obj;
public:
	VirtualVMIROMOption_closure(const vw1__VirtualVMIROMOption& obj) : _obj(obj) {}
	virtual ~VirtualVMIROMOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualVMIROMOption"; }
};

class VirtualVideoCardOption_closure : public closure
{
protected:
	vw1__VirtualVideoCardOption _obj;
public:
	VirtualVideoCardOption_closure(const vw1__VirtualVideoCardOption& obj) : _obj(obj) {}
	virtual ~VirtualVideoCardOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualVideoCardOption"; }
};

class VirtualVmxnet_closure : public closure
{
protected:
	vw1__VirtualVmxnet _obj;
public:
	VirtualVmxnet_closure(const vw1__VirtualVmxnet& obj) : _obj(obj) {}
	virtual ~VirtualVmxnet_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualVmxnet"; }
};

class VirtualVmxnet2_closure : public closure
{
protected:
	vw1__VirtualVmxnet2 _obj;
public:
	VirtualVmxnet2_closure(const vw1__VirtualVmxnet2& obj) : _obj(obj) {}
	virtual ~VirtualVmxnet2_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualVmxnet2"; }
};

class VirtualVmxnet2Option_closure : public closure
{
protected:
	vw1__VirtualVmxnet2Option _obj;
public:
	VirtualVmxnet2Option_closure(const vw1__VirtualVmxnet2Option& obj) : _obj(obj) {}
	virtual ~VirtualVmxnet2Option_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualVmxnet2Option"; }
};

class VirtualVmxnet3_closure : public closure
{
protected:
	vw1__VirtualVmxnet3 _obj;
public:
	VirtualVmxnet3_closure(const vw1__VirtualVmxnet3& obj) : _obj(obj) {}
	virtual ~VirtualVmxnet3_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualVmxnet3"; }
};

class VirtualVmxnet3Option_closure : public closure
{
protected:
	vw1__VirtualVmxnet3Option _obj;
public:
	VirtualVmxnet3Option_closure(const vw1__VirtualVmxnet3Option& obj) : _obj(obj) {}
	virtual ~VirtualVmxnet3Option_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualVmxnet3Option"; }
};

class VirtualVmxnetOption_closure : public closure
{
protected:
	vw1__VirtualVmxnetOption _obj;
public:
	VirtualVmxnetOption_closure(const vw1__VirtualVmxnetOption& obj) : _obj(obj) {}
	virtual ~VirtualVmxnetOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualVmxnetOption"; }
};

class VlanProfile_closure : public closure
{
protected:
	vw1__VlanProfile _obj;
public:
	VlanProfile_closure(const vw1__VlanProfile& obj) : _obj(obj) {}
	virtual ~VlanProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VlanProfile"; }
};

class VmAcquiredMksTicketEvent_closure : public closure
{
protected:
	vw1__VmAcquiredMksTicketEvent _obj;
public:
	VmAcquiredMksTicketEvent_closure(const vw1__VmAcquiredMksTicketEvent& obj) : _obj(obj) {}
	virtual ~VmAcquiredMksTicketEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmAcquiredMksTicketEvent"; }
};

class VmAcquiredTicketEvent_closure : public closure
{
protected:
	vw1__VmAcquiredTicketEvent _obj;
public:
	VmAcquiredTicketEvent_closure(const vw1__VmAcquiredTicketEvent& obj) : _obj(obj) {}
	virtual ~VmAcquiredTicketEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmAcquiredTicketEvent"; }
};

class VmAutoRenameEvent_closure : public closure
{
protected:
	vw1__VmAutoRenameEvent _obj;
public:
	VmAutoRenameEvent_closure(const vw1__VmAutoRenameEvent& obj) : _obj(obj) {}
	virtual ~VmAutoRenameEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmAutoRenameEvent"; }
};

class VmBeingClonedEvent_closure : public closure
{
protected:
	vw1__VmBeingClonedEvent _obj;
public:
	VmBeingClonedEvent_closure(const vw1__VmBeingClonedEvent& obj) : _obj(obj) {}
	virtual ~VmBeingClonedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmBeingClonedEvent"; }
};

class VmBeingClonedNoFolderEvent_closure : public closure
{
protected:
	vw1__VmBeingClonedNoFolderEvent _obj;
public:
	VmBeingClonedNoFolderEvent_closure(const vw1__VmBeingClonedNoFolderEvent& obj) : _obj(obj) {}
	virtual ~VmBeingClonedNoFolderEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmBeingClonedNoFolderEvent"; }
};

class VmBeingCreatedEvent_closure : public closure
{
protected:
	vw1__VmBeingCreatedEvent _obj;
public:
	VmBeingCreatedEvent_closure(const vw1__VmBeingCreatedEvent& obj) : _obj(obj) {}
	virtual ~VmBeingCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmBeingCreatedEvent"; }
};

class VmBeingDeployedEvent_closure : public closure
{
protected:
	vw1__VmBeingDeployedEvent _obj;
public:
	VmBeingDeployedEvent_closure(const vw1__VmBeingDeployedEvent& obj) : _obj(obj) {}
	virtual ~VmBeingDeployedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmBeingDeployedEvent"; }
};

class VmBeingHotMigratedEvent_closure : public closure
{
protected:
	vw1__VmBeingHotMigratedEvent _obj;
public:
	VmBeingHotMigratedEvent_closure(const vw1__VmBeingHotMigratedEvent& obj) : _obj(obj) {}
	virtual ~VmBeingHotMigratedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmBeingHotMigratedEvent"; }
};

class VmBeingMigratedEvent_closure : public closure
{
protected:
	vw1__VmBeingMigratedEvent _obj;
public:
	VmBeingMigratedEvent_closure(const vw1__VmBeingMigratedEvent& obj) : _obj(obj) {}
	virtual ~VmBeingMigratedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmBeingMigratedEvent"; }
};

class VmBeingRelocatedEvent_closure : public closure
{
protected:
	vw1__VmBeingRelocatedEvent _obj;
public:
	VmBeingRelocatedEvent_closure(const vw1__VmBeingRelocatedEvent& obj) : _obj(obj) {}
	virtual ~VmBeingRelocatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmBeingRelocatedEvent"; }
};

class VmCloneEvent_closure : public closure
{
protected:
	vw1__VmCloneEvent _obj;
public:
	VmCloneEvent_closure(const vw1__VmCloneEvent& obj) : _obj(obj) {}
	virtual ~VmCloneEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmCloneEvent"; }
};

class VmCloneFailedEvent_closure : public closure
{
protected:
	vw1__VmCloneFailedEvent _obj;
public:
	VmCloneFailedEvent_closure(const vw1__VmCloneFailedEvent& obj) : _obj(obj) {}
	virtual ~VmCloneFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmCloneFailedEvent"; }
};

class VmClonedEvent_closure : public closure
{
protected:
	vw1__VmClonedEvent _obj;
public:
	VmClonedEvent_closure(const vw1__VmClonedEvent& obj) : _obj(obj) {}
	virtual ~VmClonedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmClonedEvent"; }
};

class VmConfigFileInfo_closure : public closure
{
protected:
	vw1__VmConfigFileInfo _obj;
public:
	VmConfigFileInfo_closure(const vw1__VmConfigFileInfo& obj) : _obj(obj) {}
	virtual ~VmConfigFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigFileInfo"; }
};

class VmConfigFileQuery_closure : public closure
{
protected:
	vw1__VmConfigFileQuery _obj;
public:
	VmConfigFileQuery_closure(const vw1__VmConfigFileQuery& obj) : _obj(obj) {}
	virtual ~VmConfigFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigFileQuery"; }
};

class VmConfigFileQueryFilter_closure : public closure
{
protected:
	vw1__VmConfigFileQueryFilter _obj;
public:
	VmConfigFileQueryFilter_closure(const vw1__VmConfigFileQueryFilter& obj) : _obj(obj) {}
	virtual ~VmConfigFileQueryFilter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigFileQueryFilter"; }
};

class VmConfigFileQueryFlags_closure : public closure
{
protected:
	vw1__VmConfigFileQueryFlags _obj;
public:
	VmConfigFileQueryFlags_closure(const vw1__VmConfigFileQueryFlags& obj) : _obj(obj) {}
	virtual ~VmConfigFileQueryFlags_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigFileQueryFlags"; }
};

class VmConfigInfo_closure : public closure
{
protected:
	vw1__VmConfigInfo _obj;
public:
	VmConfigInfo_closure(const vw1__VmConfigInfo& obj) : _obj(obj) {}
	virtual ~VmConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigInfo"; }
};

class VmConfigMissingEvent_closure : public closure
{
protected:
	vw1__VmConfigMissingEvent _obj;
public:
	VmConfigMissingEvent_closure(const vw1__VmConfigMissingEvent& obj) : _obj(obj) {}
	virtual ~VmConfigMissingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigMissingEvent"; }
};

class VmConfigSpec_closure : public closure
{
protected:
	vw1__VmConfigSpec _obj;
public:
	VmConfigSpec_closure(const vw1__VmConfigSpec& obj) : _obj(obj) {}
	virtual ~VmConfigSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigSpec"; }
};

class VmConnectedEvent_closure : public closure
{
protected:
	vw1__VmConnectedEvent _obj;
public:
	VmConnectedEvent_closure(const vw1__VmConnectedEvent& obj) : _obj(obj) {}
	virtual ~VmConnectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConnectedEvent"; }
};

class VmCreatedEvent_closure : public closure
{
protected:
	vw1__VmCreatedEvent _obj;
public:
	VmCreatedEvent_closure(const vw1__VmCreatedEvent& obj) : _obj(obj) {}
	virtual ~VmCreatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmCreatedEvent"; }
};

class VmDasBeingResetEvent_closure : public closure
{
protected:
	vw1__VmDasBeingResetEvent _obj;
public:
	VmDasBeingResetEvent_closure(const vw1__VmDasBeingResetEvent& obj) : _obj(obj) {}
	virtual ~VmDasBeingResetEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDasBeingResetEvent"; }
};

class VmDasBeingResetWithScreenshotEvent_closure : public closure
{
protected:
	vw1__VmDasBeingResetWithScreenshotEvent _obj;
public:
	VmDasBeingResetWithScreenshotEvent_closure(const vw1__VmDasBeingResetWithScreenshotEvent& obj) : _obj(obj) {}
	virtual ~VmDasBeingResetWithScreenshotEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDasBeingResetWithScreenshotEvent"; }
};

class VmDasResetFailedEvent_closure : public closure
{
protected:
	vw1__VmDasResetFailedEvent _obj;
public:
	VmDasResetFailedEvent_closure(const vw1__VmDasResetFailedEvent& obj) : _obj(obj) {}
	virtual ~VmDasResetFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDasResetFailedEvent"; }
};

class VmDasUpdateErrorEvent_closure : public closure
{
protected:
	vw1__VmDasUpdateErrorEvent _obj;
public:
	VmDasUpdateErrorEvent_closure(const vw1__VmDasUpdateErrorEvent& obj) : _obj(obj) {}
	virtual ~VmDasUpdateErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDasUpdateErrorEvent"; }
};

class VmDasUpdateOkEvent_closure : public closure
{
protected:
	vw1__VmDasUpdateOkEvent _obj;
public:
	VmDasUpdateOkEvent_closure(const vw1__VmDasUpdateOkEvent& obj) : _obj(obj) {}
	virtual ~VmDasUpdateOkEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDasUpdateOkEvent"; }
};

class VmDateRolledBackEvent_closure : public closure
{
protected:
	vw1__VmDateRolledBackEvent _obj;
public:
	VmDateRolledBackEvent_closure(const vw1__VmDateRolledBackEvent& obj) : _obj(obj) {}
	virtual ~VmDateRolledBackEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDateRolledBackEvent"; }
};

class VmDeployFailedEvent_closure : public closure
{
protected:
	vw1__VmDeployFailedEvent _obj;
public:
	VmDeployFailedEvent_closure(const vw1__VmDeployFailedEvent& obj) : _obj(obj) {}
	virtual ~VmDeployFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDeployFailedEvent"; }
};

class VmDeployedEvent_closure : public closure
{
protected:
	vw1__VmDeployedEvent _obj;
public:
	VmDeployedEvent_closure(const vw1__VmDeployedEvent& obj) : _obj(obj) {}
	virtual ~VmDeployedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDeployedEvent"; }
};

class VmDisconnectedEvent_closure : public closure
{
protected:
	vw1__VmDisconnectedEvent _obj;
public:
	VmDisconnectedEvent_closure(const vw1__VmDisconnectedEvent& obj) : _obj(obj) {}
	virtual ~VmDisconnectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDisconnectedEvent"; }
};

class VmDiscoveredEvent_closure : public closure
{
protected:
	vw1__VmDiscoveredEvent _obj;
public:
	VmDiscoveredEvent_closure(const vw1__VmDiscoveredEvent& obj) : _obj(obj) {}
	virtual ~VmDiscoveredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDiscoveredEvent"; }
};

class VmDiskFailedEvent_closure : public closure
{
protected:
	vw1__VmDiskFailedEvent _obj;
public:
	VmDiskFailedEvent_closure(const vw1__VmDiskFailedEvent& obj) : _obj(obj) {}
	virtual ~VmDiskFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDiskFailedEvent"; }
};

class VmDiskFileInfo_closure : public closure
{
protected:
	vw1__VmDiskFileInfo _obj;
public:
	VmDiskFileInfo_closure(const vw1__VmDiskFileInfo& obj) : _obj(obj) {}
	virtual ~VmDiskFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDiskFileInfo"; }
};

class VmDiskFileQuery_closure : public closure
{
protected:
	vw1__VmDiskFileQuery _obj;
public:
	VmDiskFileQuery_closure(const vw1__VmDiskFileQuery& obj) : _obj(obj) {}
	virtual ~VmDiskFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDiskFileQuery"; }
};

class VmDiskFileQueryFilter_closure : public closure
{
protected:
	vw1__VmDiskFileQueryFilter _obj;
public:
	VmDiskFileQueryFilter_closure(const vw1__VmDiskFileQueryFilter& obj) : _obj(obj) {}
	virtual ~VmDiskFileQueryFilter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDiskFileQueryFilter"; }
};

class VmDiskFileQueryFlags_closure : public closure
{
protected:
	vw1__VmDiskFileQueryFlags _obj;
public:
	VmDiskFileQueryFlags_closure(const vw1__VmDiskFileQueryFlags& obj) : _obj(obj) {}
	virtual ~VmDiskFileQueryFlags_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmDiskFileQueryFlags"; }
};

class VmEmigratingEvent_closure : public closure
{
protected:
	vw1__VmEmigratingEvent _obj;
public:
	VmEmigratingEvent_closure(const vw1__VmEmigratingEvent& obj) : _obj(obj) {}
	virtual ~VmEmigratingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmEmigratingEvent"; }
};

class VmEndRecordingEvent_closure : public closure
{
protected:
	vw1__VmEndRecordingEvent _obj;
public:
	VmEndRecordingEvent_closure(const vw1__VmEndRecordingEvent& obj) : _obj(obj) {}
	virtual ~VmEndRecordingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmEndRecordingEvent"; }
};

class VmEndReplayingEvent_closure : public closure
{
protected:
	vw1__VmEndReplayingEvent _obj;
public:
	VmEndReplayingEvent_closure(const vw1__VmEndReplayingEvent& obj) : _obj(obj) {}
	virtual ~VmEndReplayingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmEndReplayingEvent"; }
};

class VmEvent_closure : public closure
{
protected:
	vw1__VmEvent _obj;
public:
	VmEvent_closure(const vw1__VmEvent& obj) : _obj(obj) {}
	virtual ~VmEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmEvent"; }
};

class VmEventArgument_closure : public closure
{
protected:
	vw1__VmEventArgument _obj;
public:
	VmEventArgument_closure(const vw1__VmEventArgument& obj) : _obj(obj) {}
	virtual ~VmEventArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmEventArgument"; }
};

class VmFailedMigrateEvent_closure : public closure
{
protected:
	vw1__VmFailedMigrateEvent _obj;
public:
	VmFailedMigrateEvent_closure(const vw1__VmFailedMigrateEvent& obj) : _obj(obj) {}
	virtual ~VmFailedMigrateEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedMigrateEvent"; }
};

class VmFailedRelayoutEvent_closure : public closure
{
protected:
	vw1__VmFailedRelayoutEvent _obj;
public:
	VmFailedRelayoutEvent_closure(const vw1__VmFailedRelayoutEvent& obj) : _obj(obj) {}
	virtual ~VmFailedRelayoutEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedRelayoutEvent"; }
};

class VmFailedRelayoutOnVmfs2DatastoreEvent_closure : public closure
{
protected:
	vw1__VmFailedRelayoutOnVmfs2DatastoreEvent _obj;
public:
	VmFailedRelayoutOnVmfs2DatastoreEvent_closure(const vw1__VmFailedRelayoutOnVmfs2DatastoreEvent& obj) : _obj(obj) {}
	virtual ~VmFailedRelayoutOnVmfs2DatastoreEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedRelayoutOnVmfs2DatastoreEvent"; }
};

class VmFailedStartingSecondaryEvent_closure : public closure
{
protected:
	vw1__VmFailedStartingSecondaryEvent _obj;
public:
	VmFailedStartingSecondaryEvent_closure(const vw1__VmFailedStartingSecondaryEvent& obj) : _obj(obj) {}
	virtual ~VmFailedStartingSecondaryEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedStartingSecondaryEvent"; }
};

class VmFailedToPowerOffEvent_closure : public closure
{
protected:
	vw1__VmFailedToPowerOffEvent _obj;
public:
	VmFailedToPowerOffEvent_closure(const vw1__VmFailedToPowerOffEvent& obj) : _obj(obj) {}
	virtual ~VmFailedToPowerOffEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedToPowerOffEvent"; }
};

class VmFailedToPowerOnEvent_closure : public closure
{
protected:
	vw1__VmFailedToPowerOnEvent _obj;
public:
	VmFailedToPowerOnEvent_closure(const vw1__VmFailedToPowerOnEvent& obj) : _obj(obj) {}
	virtual ~VmFailedToPowerOnEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedToPowerOnEvent"; }
};

class VmFailedToRebootGuestEvent_closure : public closure
{
protected:
	vw1__VmFailedToRebootGuestEvent _obj;
public:
	VmFailedToRebootGuestEvent_closure(const vw1__VmFailedToRebootGuestEvent& obj) : _obj(obj) {}
	virtual ~VmFailedToRebootGuestEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedToRebootGuestEvent"; }
};

class VmFailedToResetEvent_closure : public closure
{
protected:
	vw1__VmFailedToResetEvent _obj;
public:
	VmFailedToResetEvent_closure(const vw1__VmFailedToResetEvent& obj) : _obj(obj) {}
	virtual ~VmFailedToResetEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedToResetEvent"; }
};

class VmFailedToShutdownGuestEvent_closure : public closure
{
protected:
	vw1__VmFailedToShutdownGuestEvent _obj;
public:
	VmFailedToShutdownGuestEvent_closure(const vw1__VmFailedToShutdownGuestEvent& obj) : _obj(obj) {}
	virtual ~VmFailedToShutdownGuestEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedToShutdownGuestEvent"; }
};

class VmFailedToStandbyGuestEvent_closure : public closure
{
protected:
	vw1__VmFailedToStandbyGuestEvent _obj;
public:
	VmFailedToStandbyGuestEvent_closure(const vw1__VmFailedToStandbyGuestEvent& obj) : _obj(obj) {}
	virtual ~VmFailedToStandbyGuestEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedToStandbyGuestEvent"; }
};

class VmFailedToSuspendEvent_closure : public closure
{
protected:
	vw1__VmFailedToSuspendEvent _obj;
public:
	VmFailedToSuspendEvent_closure(const vw1__VmFailedToSuspendEvent& obj) : _obj(obj) {}
	virtual ~VmFailedToSuspendEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedToSuspendEvent"; }
};

class VmFailedUpdatingSecondaryConfig_closure : public closure
{
protected:
	vw1__VmFailedUpdatingSecondaryConfig _obj;
public:
	VmFailedUpdatingSecondaryConfig_closure(const vw1__VmFailedUpdatingSecondaryConfig& obj) : _obj(obj) {}
	virtual ~VmFailedUpdatingSecondaryConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailedUpdatingSecondaryConfig"; }
};

class VmFailoverFailed_closure : public closure
{
protected:
	vw1__VmFailoverFailed _obj;
public:
	VmFailoverFailed_closure(const vw1__VmFailoverFailed& obj) : _obj(obj) {}
	virtual ~VmFailoverFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFailoverFailed"; }
};

class VmFaultToleranceStateChangedEvent_closure : public closure
{
protected:
	vw1__VmFaultToleranceStateChangedEvent _obj;
public:
	VmFaultToleranceStateChangedEvent_closure(const vw1__VmFaultToleranceStateChangedEvent& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceStateChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceStateChangedEvent"; }
};

class VmFaultToleranceTurnedOffEvent_closure : public closure
{
protected:
	vw1__VmFaultToleranceTurnedOffEvent _obj;
public:
	VmFaultToleranceTurnedOffEvent_closure(const vw1__VmFaultToleranceTurnedOffEvent& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceTurnedOffEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceTurnedOffEvent"; }
};

class VmFaultToleranceVmTerminatedEvent_closure : public closure
{
protected:
	vw1__VmFaultToleranceVmTerminatedEvent _obj;
public:
	VmFaultToleranceVmTerminatedEvent_closure(const vw1__VmFaultToleranceVmTerminatedEvent& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceVmTerminatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceVmTerminatedEvent"; }
};

class VmGuestRebootEvent_closure : public closure
{
protected:
	vw1__VmGuestRebootEvent _obj;
public:
	VmGuestRebootEvent_closure(const vw1__VmGuestRebootEvent& obj) : _obj(obj) {}
	virtual ~VmGuestRebootEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmGuestRebootEvent"; }
};

class VmGuestShutdownEvent_closure : public closure
{
protected:
	vw1__VmGuestShutdownEvent _obj;
public:
	VmGuestShutdownEvent_closure(const vw1__VmGuestShutdownEvent& obj) : _obj(obj) {}
	virtual ~VmGuestShutdownEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmGuestShutdownEvent"; }
};

class VmGuestStandbyEvent_closure : public closure
{
protected:
	vw1__VmGuestStandbyEvent _obj;
public:
	VmGuestStandbyEvent_closure(const vw1__VmGuestStandbyEvent& obj) : _obj(obj) {}
	virtual ~VmGuestStandbyEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmGuestStandbyEvent"; }
};

class VmHealthMonitoringStateChangedEvent_closure : public closure
{
protected:
	vw1__VmHealthMonitoringStateChangedEvent _obj;
public:
	VmHealthMonitoringStateChangedEvent_closure(const vw1__VmHealthMonitoringStateChangedEvent& obj) : _obj(obj) {}
	virtual ~VmHealthMonitoringStateChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmHealthMonitoringStateChangedEvent"; }
};

class VmInstanceUuidAssignedEvent_closure : public closure
{
protected:
	vw1__VmInstanceUuidAssignedEvent _obj;
public:
	VmInstanceUuidAssignedEvent_closure(const vw1__VmInstanceUuidAssignedEvent& obj) : _obj(obj) {}
	virtual ~VmInstanceUuidAssignedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmInstanceUuidAssignedEvent"; }
};

class VmInstanceUuidChangedEvent_closure : public closure
{
protected:
	vw1__VmInstanceUuidChangedEvent _obj;
public:
	VmInstanceUuidChangedEvent_closure(const vw1__VmInstanceUuidChangedEvent& obj) : _obj(obj) {}
	virtual ~VmInstanceUuidChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmInstanceUuidChangedEvent"; }
};

class VmInstanceUuidConflictEvent_closure : public closure
{
protected:
	vw1__VmInstanceUuidConflictEvent _obj;
public:
	VmInstanceUuidConflictEvent_closure(const vw1__VmInstanceUuidConflictEvent& obj) : _obj(obj) {}
	virtual ~VmInstanceUuidConflictEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmInstanceUuidConflictEvent"; }
};

class VmLogFileInfo_closure : public closure
{
protected:
	vw1__VmLogFileInfo _obj;
public:
	VmLogFileInfo_closure(const vw1__VmLogFileInfo& obj) : _obj(obj) {}
	virtual ~VmLogFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmLogFileInfo"; }
};

class VmLogFileQuery_closure : public closure
{
protected:
	vw1__VmLogFileQuery _obj;
public:
	VmLogFileQuery_closure(const vw1__VmLogFileQuery& obj) : _obj(obj) {}
	virtual ~VmLogFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmLogFileQuery"; }
};

class VmMacAssignedEvent_closure : public closure
{
protected:
	vw1__VmMacAssignedEvent _obj;
public:
	VmMacAssignedEvent_closure(const vw1__VmMacAssignedEvent& obj) : _obj(obj) {}
	virtual ~VmMacAssignedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMacAssignedEvent"; }
};

class VmMacChangedEvent_closure : public closure
{
protected:
	vw1__VmMacChangedEvent _obj;
public:
	VmMacChangedEvent_closure(const vw1__VmMacChangedEvent& obj) : _obj(obj) {}
	virtual ~VmMacChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMacChangedEvent"; }
};

class VmMacConflictEvent_closure : public closure
{
protected:
	vw1__VmMacConflictEvent _obj;
public:
	VmMacConflictEvent_closure(const vw1__VmMacConflictEvent& obj) : _obj(obj) {}
	virtual ~VmMacConflictEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMacConflictEvent"; }
};

class VmMaxFTRestartCountReached_closure : public closure
{
protected:
	vw1__VmMaxFTRestartCountReached _obj;
public:
	VmMaxFTRestartCountReached_closure(const vw1__VmMaxFTRestartCountReached& obj) : _obj(obj) {}
	virtual ~VmMaxFTRestartCountReached_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMaxFTRestartCountReached"; }
};

class VmMaxRestartCountReached_closure : public closure
{
protected:
	vw1__VmMaxRestartCountReached _obj;
public:
	VmMaxRestartCountReached_closure(const vw1__VmMaxRestartCountReached& obj) : _obj(obj) {}
	virtual ~VmMaxRestartCountReached_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMaxRestartCountReached"; }
};

class VmMessageErrorEvent_closure : public closure
{
protected:
	vw1__VmMessageErrorEvent _obj;
public:
	VmMessageErrorEvent_closure(const vw1__VmMessageErrorEvent& obj) : _obj(obj) {}
	virtual ~VmMessageErrorEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMessageErrorEvent"; }
};

class VmMessageEvent_closure : public closure
{
protected:
	vw1__VmMessageEvent _obj;
public:
	VmMessageEvent_closure(const vw1__VmMessageEvent& obj) : _obj(obj) {}
	virtual ~VmMessageEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMessageEvent"; }
};

class VmMessageWarningEvent_closure : public closure
{
protected:
	vw1__VmMessageWarningEvent _obj;
public:
	VmMessageWarningEvent_closure(const vw1__VmMessageWarningEvent& obj) : _obj(obj) {}
	virtual ~VmMessageWarningEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMessageWarningEvent"; }
};

class VmMigratedEvent_closure : public closure
{
protected:
	vw1__VmMigratedEvent _obj;
public:
	VmMigratedEvent_closure(const vw1__VmMigratedEvent& obj) : _obj(obj) {}
	virtual ~VmMigratedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMigratedEvent"; }
};

class VmNoCompatibleHostForSecondaryEvent_closure : public closure
{
protected:
	vw1__VmNoCompatibleHostForSecondaryEvent _obj;
public:
	VmNoCompatibleHostForSecondaryEvent_closure(const vw1__VmNoCompatibleHostForSecondaryEvent& obj) : _obj(obj) {}
	virtual ~VmNoCompatibleHostForSecondaryEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmNoCompatibleHostForSecondaryEvent"; }
};

class VmNoNetworkAccessEvent_closure : public closure
{
protected:
	vw1__VmNoNetworkAccessEvent _obj;
public:
	VmNoNetworkAccessEvent_closure(const vw1__VmNoNetworkAccessEvent& obj) : _obj(obj) {}
	virtual ~VmNoNetworkAccessEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmNoNetworkAccessEvent"; }
};

class VmNvramFileInfo_closure : public closure
{
protected:
	vw1__VmNvramFileInfo _obj;
public:
	VmNvramFileInfo_closure(const vw1__VmNvramFileInfo& obj) : _obj(obj) {}
	virtual ~VmNvramFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmNvramFileInfo"; }
};

class VmNvramFileQuery_closure : public closure
{
protected:
	vw1__VmNvramFileQuery _obj;
public:
	VmNvramFileQuery_closure(const vw1__VmNvramFileQuery& obj) : _obj(obj) {}
	virtual ~VmNvramFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmNvramFileQuery"; }
};

class VmOrphanedEvent_closure : public closure
{
protected:
	vw1__VmOrphanedEvent _obj;
public:
	VmOrphanedEvent_closure(const vw1__VmOrphanedEvent& obj) : _obj(obj) {}
	virtual ~VmOrphanedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmOrphanedEvent"; }
};

class VmPodConfigForPlacement_closure : public closure
{
protected:
	vw1__VmPodConfigForPlacement _obj;
public:
	VmPodConfigForPlacement_closure(const vw1__VmPodConfigForPlacement& obj) : _obj(obj) {}
	virtual ~VmPodConfigForPlacement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmPodConfigForPlacement"; }
};

class VmPortGroupProfile_closure : public closure
{
protected:
	vw1__VmPortGroupProfile _obj;
public:
	VmPortGroupProfile_closure(const vw1__VmPortGroupProfile& obj) : _obj(obj) {}
	virtual ~VmPortGroupProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmPortGroupProfile"; }
};

class VmPowerOffOnIsolationEvent_closure : public closure
{
protected:
	vw1__VmPowerOffOnIsolationEvent _obj;
public:
	VmPowerOffOnIsolationEvent_closure(const vw1__VmPowerOffOnIsolationEvent& obj) : _obj(obj) {}
	virtual ~VmPowerOffOnIsolationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmPowerOffOnIsolationEvent"; }
};

class VmPoweredOffEvent_closure : public closure
{
protected:
	vw1__VmPoweredOffEvent _obj;
public:
	VmPoweredOffEvent_closure(const vw1__VmPoweredOffEvent& obj) : _obj(obj) {}
	virtual ~VmPoweredOffEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmPoweredOffEvent"; }
};

class VmPoweredOnEvent_closure : public closure
{
protected:
	vw1__VmPoweredOnEvent _obj;
public:
	VmPoweredOnEvent_closure(const vw1__VmPoweredOnEvent& obj) : _obj(obj) {}
	virtual ~VmPoweredOnEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmPoweredOnEvent"; }
};

class VmPoweringOnWithCustomizedDVPortEvent_closure : public closure
{
protected:
	vw1__VmPoweringOnWithCustomizedDVPortEvent _obj;
public:
	VmPoweringOnWithCustomizedDVPortEvent_closure(const vw1__VmPoweringOnWithCustomizedDVPortEvent& obj) : _obj(obj) {}
	virtual ~VmPoweringOnWithCustomizedDVPortEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmPoweringOnWithCustomizedDVPortEvent"; }
};

class VmPrimaryFailoverEvent_closure : public closure
{
protected:
	vw1__VmPrimaryFailoverEvent _obj;
public:
	VmPrimaryFailoverEvent_closure(const vw1__VmPrimaryFailoverEvent& obj) : _obj(obj) {}
	virtual ~VmPrimaryFailoverEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmPrimaryFailoverEvent"; }
};

class VmReconfiguredEvent_closure : public closure
{
protected:
	vw1__VmReconfiguredEvent _obj;
public:
	VmReconfiguredEvent_closure(const vw1__VmReconfiguredEvent& obj) : _obj(obj) {}
	virtual ~VmReconfiguredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmReconfiguredEvent"; }
};

class VmRegisteredEvent_closure : public closure
{
protected:
	vw1__VmRegisteredEvent _obj;
public:
	VmRegisteredEvent_closure(const vw1__VmRegisteredEvent& obj) : _obj(obj) {}
	virtual ~VmRegisteredEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRegisteredEvent"; }
};

class VmRelayoutSuccessfulEvent_closure : public closure
{
protected:
	vw1__VmRelayoutSuccessfulEvent _obj;
public:
	VmRelayoutSuccessfulEvent_closure(const vw1__VmRelayoutSuccessfulEvent& obj) : _obj(obj) {}
	virtual ~VmRelayoutSuccessfulEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRelayoutSuccessfulEvent"; }
};

class VmRelayoutUpToDateEvent_closure : public closure
{
protected:
	vw1__VmRelayoutUpToDateEvent _obj;
public:
	VmRelayoutUpToDateEvent_closure(const vw1__VmRelayoutUpToDateEvent& obj) : _obj(obj) {}
	virtual ~VmRelayoutUpToDateEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRelayoutUpToDateEvent"; }
};

class VmReloadFromPathEvent_closure : public closure
{
protected:
	vw1__VmReloadFromPathEvent _obj;
public:
	VmReloadFromPathEvent_closure(const vw1__VmReloadFromPathEvent& obj) : _obj(obj) {}
	virtual ~VmReloadFromPathEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmReloadFromPathEvent"; }
};

class VmReloadFromPathFailedEvent_closure : public closure
{
protected:
	vw1__VmReloadFromPathFailedEvent _obj;
public:
	VmReloadFromPathFailedEvent_closure(const vw1__VmReloadFromPathFailedEvent& obj) : _obj(obj) {}
	virtual ~VmReloadFromPathFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmReloadFromPathFailedEvent"; }
};

class VmRelocateFailedEvent_closure : public closure
{
protected:
	vw1__VmRelocateFailedEvent _obj;
public:
	VmRelocateFailedEvent_closure(const vw1__VmRelocateFailedEvent& obj) : _obj(obj) {}
	virtual ~VmRelocateFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRelocateFailedEvent"; }
};

class VmRelocateSpecEvent_closure : public closure
{
protected:
	vw1__VmRelocateSpecEvent _obj;
public:
	VmRelocateSpecEvent_closure(const vw1__VmRelocateSpecEvent& obj) : _obj(obj) {}
	virtual ~VmRelocateSpecEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRelocateSpecEvent"; }
};

class VmRelocatedEvent_closure : public closure
{
protected:
	vw1__VmRelocatedEvent _obj;
public:
	VmRelocatedEvent_closure(const vw1__VmRelocatedEvent& obj) : _obj(obj) {}
	virtual ~VmRelocatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRelocatedEvent"; }
};

class VmRemoteConsoleConnectedEvent_closure : public closure
{
protected:
	vw1__VmRemoteConsoleConnectedEvent _obj;
public:
	VmRemoteConsoleConnectedEvent_closure(const vw1__VmRemoteConsoleConnectedEvent& obj) : _obj(obj) {}
	virtual ~VmRemoteConsoleConnectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRemoteConsoleConnectedEvent"; }
};

class VmRemoteConsoleDisconnectedEvent_closure : public closure
{
protected:
	vw1__VmRemoteConsoleDisconnectedEvent _obj;
public:
	VmRemoteConsoleDisconnectedEvent_closure(const vw1__VmRemoteConsoleDisconnectedEvent& obj) : _obj(obj) {}
	virtual ~VmRemoteConsoleDisconnectedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRemoteConsoleDisconnectedEvent"; }
};

class VmRemovedEvent_closure : public closure
{
protected:
	vw1__VmRemovedEvent _obj;
public:
	VmRemovedEvent_closure(const vw1__VmRemovedEvent& obj) : _obj(obj) {}
	virtual ~VmRemovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRemovedEvent"; }
};

class VmRenamedEvent_closure : public closure
{
protected:
	vw1__VmRenamedEvent _obj;
public:
	VmRenamedEvent_closure(const vw1__VmRenamedEvent& obj) : _obj(obj) {}
	virtual ~VmRenamedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRenamedEvent"; }
};

class VmResettingEvent_closure : public closure
{
protected:
	vw1__VmResettingEvent _obj;
public:
	VmResettingEvent_closure(const vw1__VmResettingEvent& obj) : _obj(obj) {}
	virtual ~VmResettingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmResettingEvent"; }
};

class VmResourcePoolMovedEvent_closure : public closure
{
protected:
	vw1__VmResourcePoolMovedEvent _obj;
public:
	VmResourcePoolMovedEvent_closure(const vw1__VmResourcePoolMovedEvent& obj) : _obj(obj) {}
	virtual ~VmResourcePoolMovedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmResourcePoolMovedEvent"; }
};

class VmResourceReallocatedEvent_closure : public closure
{
protected:
	vw1__VmResourceReallocatedEvent _obj;
public:
	VmResourceReallocatedEvent_closure(const vw1__VmResourceReallocatedEvent& obj) : _obj(obj) {}
	virtual ~VmResourceReallocatedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmResourceReallocatedEvent"; }
};

class VmRestartedOnAlternateHostEvent_closure : public closure
{
protected:
	vw1__VmRestartedOnAlternateHostEvent _obj;
public:
	VmRestartedOnAlternateHostEvent_closure(const vw1__VmRestartedOnAlternateHostEvent& obj) : _obj(obj) {}
	virtual ~VmRestartedOnAlternateHostEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmRestartedOnAlternateHostEvent"; }
};

class VmResumingEvent_closure : public closure
{
protected:
	vw1__VmResumingEvent _obj;
public:
	VmResumingEvent_closure(const vw1__VmResumingEvent& obj) : _obj(obj) {}
	virtual ~VmResumingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmResumingEvent"; }
};

class VmSecondaryAddedEvent_closure : public closure
{
protected:
	vw1__VmSecondaryAddedEvent _obj;
public:
	VmSecondaryAddedEvent_closure(const vw1__VmSecondaryAddedEvent& obj) : _obj(obj) {}
	virtual ~VmSecondaryAddedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSecondaryAddedEvent"; }
};

class VmSecondaryDisabledBySystemEvent_closure : public closure
{
protected:
	vw1__VmSecondaryDisabledBySystemEvent _obj;
public:
	VmSecondaryDisabledBySystemEvent_closure(const vw1__VmSecondaryDisabledBySystemEvent& obj) : _obj(obj) {}
	virtual ~VmSecondaryDisabledBySystemEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSecondaryDisabledBySystemEvent"; }
};

class VmSecondaryDisabledEvent_closure : public closure
{
protected:
	vw1__VmSecondaryDisabledEvent _obj;
public:
	VmSecondaryDisabledEvent_closure(const vw1__VmSecondaryDisabledEvent& obj) : _obj(obj) {}
	virtual ~VmSecondaryDisabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSecondaryDisabledEvent"; }
};

class VmSecondaryEnabledEvent_closure : public closure
{
protected:
	vw1__VmSecondaryEnabledEvent _obj;
public:
	VmSecondaryEnabledEvent_closure(const vw1__VmSecondaryEnabledEvent& obj) : _obj(obj) {}
	virtual ~VmSecondaryEnabledEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSecondaryEnabledEvent"; }
};

class VmSecondaryStartedEvent_closure : public closure
{
protected:
	vw1__VmSecondaryStartedEvent _obj;
public:
	VmSecondaryStartedEvent_closure(const vw1__VmSecondaryStartedEvent& obj) : _obj(obj) {}
	virtual ~VmSecondaryStartedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSecondaryStartedEvent"; }
};

class VmShutdownOnIsolationEvent_closure : public closure
{
protected:
	vw1__VmShutdownOnIsolationEvent _obj;
public:
	VmShutdownOnIsolationEvent_closure(const vw1__VmShutdownOnIsolationEvent& obj) : _obj(obj) {}
	virtual ~VmShutdownOnIsolationEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmShutdownOnIsolationEvent"; }
};

class VmSnapshotFileInfo_closure : public closure
{
protected:
	vw1__VmSnapshotFileInfo _obj;
public:
	VmSnapshotFileInfo_closure(const vw1__VmSnapshotFileInfo& obj) : _obj(obj) {}
	virtual ~VmSnapshotFileInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSnapshotFileInfo"; }
};

class VmSnapshotFileQuery_closure : public closure
{
protected:
	vw1__VmSnapshotFileQuery _obj;
public:
	VmSnapshotFileQuery_closure(const vw1__VmSnapshotFileQuery& obj) : _obj(obj) {}
	virtual ~VmSnapshotFileQuery_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSnapshotFileQuery"; }
};

class VmStartRecordingEvent_closure : public closure
{
protected:
	vw1__VmStartRecordingEvent _obj;
public:
	VmStartRecordingEvent_closure(const vw1__VmStartRecordingEvent& obj) : _obj(obj) {}
	virtual ~VmStartRecordingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmStartRecordingEvent"; }
};

class VmStartReplayingEvent_closure : public closure
{
protected:
	vw1__VmStartReplayingEvent _obj;
public:
	VmStartReplayingEvent_closure(const vw1__VmStartReplayingEvent& obj) : _obj(obj) {}
	virtual ~VmStartReplayingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmStartReplayingEvent"; }
};

class VmStartingEvent_closure : public closure
{
protected:
	vw1__VmStartingEvent _obj;
public:
	VmStartingEvent_closure(const vw1__VmStartingEvent& obj) : _obj(obj) {}
	virtual ~VmStartingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmStartingEvent"; }
};

class VmStartingSecondaryEvent_closure : public closure
{
protected:
	vw1__VmStartingSecondaryEvent _obj;
public:
	VmStartingSecondaryEvent_closure(const vw1__VmStartingSecondaryEvent& obj) : _obj(obj) {}
	virtual ~VmStartingSecondaryEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmStartingSecondaryEvent"; }
};

class VmStaticMacConflictEvent_closure : public closure
{
protected:
	vw1__VmStaticMacConflictEvent _obj;
public:
	VmStaticMacConflictEvent_closure(const vw1__VmStaticMacConflictEvent& obj) : _obj(obj) {}
	virtual ~VmStaticMacConflictEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmStaticMacConflictEvent"; }
};

class VmStoppingEvent_closure : public closure
{
protected:
	vw1__VmStoppingEvent _obj;
public:
	VmStoppingEvent_closure(const vw1__VmStoppingEvent& obj) : _obj(obj) {}
	virtual ~VmStoppingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmStoppingEvent"; }
};

class VmSuspendedEvent_closure : public closure
{
protected:
	vw1__VmSuspendedEvent _obj;
public:
	VmSuspendedEvent_closure(const vw1__VmSuspendedEvent& obj) : _obj(obj) {}
	virtual ~VmSuspendedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSuspendedEvent"; }
};

class VmSuspendingEvent_closure : public closure
{
protected:
	vw1__VmSuspendingEvent _obj;
public:
	VmSuspendingEvent_closure(const vw1__VmSuspendingEvent& obj) : _obj(obj) {}
	virtual ~VmSuspendingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmSuspendingEvent"; }
};

class VmTimedoutStartingSecondaryEvent_closure : public closure
{
protected:
	vw1__VmTimedoutStartingSecondaryEvent _obj;
public:
	VmTimedoutStartingSecondaryEvent_closure(const vw1__VmTimedoutStartingSecondaryEvent& obj) : _obj(obj) {}
	virtual ~VmTimedoutStartingSecondaryEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmTimedoutStartingSecondaryEvent"; }
};

class VmUnsupportedStartingEvent_closure : public closure
{
protected:
	vw1__VmUnsupportedStartingEvent _obj;
public:
	VmUnsupportedStartingEvent_closure(const vw1__VmUnsupportedStartingEvent& obj) : _obj(obj) {}
	virtual ~VmUnsupportedStartingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmUnsupportedStartingEvent"; }
};

class VmUpgradeCompleteEvent_closure : public closure
{
protected:
	vw1__VmUpgradeCompleteEvent _obj;
public:
	VmUpgradeCompleteEvent_closure(const vw1__VmUpgradeCompleteEvent& obj) : _obj(obj) {}
	virtual ~VmUpgradeCompleteEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmUpgradeCompleteEvent"; }
};

class VmUpgradeFailedEvent_closure : public closure
{
protected:
	vw1__VmUpgradeFailedEvent _obj;
public:
	VmUpgradeFailedEvent_closure(const vw1__VmUpgradeFailedEvent& obj) : _obj(obj) {}
	virtual ~VmUpgradeFailedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmUpgradeFailedEvent"; }
};

class VmUpgradingEvent_closure : public closure
{
protected:
	vw1__VmUpgradingEvent _obj;
public:
	VmUpgradingEvent_closure(const vw1__VmUpgradingEvent& obj) : _obj(obj) {}
	virtual ~VmUpgradingEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmUpgradingEvent"; }
};

class VmUuidAssignedEvent_closure : public closure
{
protected:
	vw1__VmUuidAssignedEvent _obj;
public:
	VmUuidAssignedEvent_closure(const vw1__VmUuidAssignedEvent& obj) : _obj(obj) {}
	virtual ~VmUuidAssignedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmUuidAssignedEvent"; }
};

class VmUuidChangedEvent_closure : public closure
{
protected:
	vw1__VmUuidChangedEvent _obj;
public:
	VmUuidChangedEvent_closure(const vw1__VmUuidChangedEvent& obj) : _obj(obj) {}
	virtual ~VmUuidChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmUuidChangedEvent"; }
};

class VmUuidConflictEvent_closure : public closure
{
protected:
	vw1__VmUuidConflictEvent _obj;
public:
	VmUuidConflictEvent_closure(const vw1__VmUuidConflictEvent& obj) : _obj(obj) {}
	virtual ~VmUuidConflictEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmUuidConflictEvent"; }
};

class VmWwnAssignedEvent_closure : public closure
{
protected:
	vw1__VmWwnAssignedEvent _obj;
public:
	VmWwnAssignedEvent_closure(const vw1__VmWwnAssignedEvent& obj) : _obj(obj) {}
	virtual ~VmWwnAssignedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmWwnAssignedEvent"; }
};

class VmWwnChangedEvent_closure : public closure
{
protected:
	vw1__VmWwnChangedEvent _obj;
public:
	VmWwnChangedEvent_closure(const vw1__VmWwnChangedEvent& obj) : _obj(obj) {}
	virtual ~VmWwnChangedEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmWwnChangedEvent"; }
};

class VmWwnConflictEvent_closure : public closure
{
protected:
	vw1__VmWwnConflictEvent _obj;
public:
	VmWwnConflictEvent_closure(const vw1__VmWwnConflictEvent& obj) : _obj(obj) {}
	virtual ~VmWwnConflictEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmWwnConflictEvent"; }
};

class VmfsDatastoreAllExtentOption_closure : public closure
{
protected:
	vw1__VmfsDatastoreAllExtentOption _obj;
public:
	VmfsDatastoreAllExtentOption_closure(const vw1__VmfsDatastoreAllExtentOption& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreAllExtentOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreAllExtentOption"; }
};

class VmfsDatastoreBaseOption_closure : public closure
{
protected:
	vw1__VmfsDatastoreBaseOption _obj;
public:
	VmfsDatastoreBaseOption_closure(const vw1__VmfsDatastoreBaseOption& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreBaseOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreBaseOption"; }
};

class VmfsDatastoreCreateSpec_closure : public closure
{
protected:
	vw1__VmfsDatastoreCreateSpec _obj;
public:
	VmfsDatastoreCreateSpec_closure(const vw1__VmfsDatastoreCreateSpec& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreCreateSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreCreateSpec"; }
};

class VmfsDatastoreExpandSpec_closure : public closure
{
protected:
	vw1__VmfsDatastoreExpandSpec _obj;
public:
	VmfsDatastoreExpandSpec_closure(const vw1__VmfsDatastoreExpandSpec& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreExpandSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreExpandSpec"; }
};

class VmfsDatastoreExtendSpec_closure : public closure
{
protected:
	vw1__VmfsDatastoreExtendSpec _obj;
public:
	VmfsDatastoreExtendSpec_closure(const vw1__VmfsDatastoreExtendSpec& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreExtendSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreExtendSpec"; }
};

class VmfsDatastoreInfo_closure : public closure
{
protected:
	vw1__VmfsDatastoreInfo _obj;
public:
	VmfsDatastoreInfo_closure(const vw1__VmfsDatastoreInfo& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreInfo"; }
};

class VmfsDatastoreMultipleExtentOption_closure : public closure
{
protected:
	vw1__VmfsDatastoreMultipleExtentOption _obj;
public:
	VmfsDatastoreMultipleExtentOption_closure(const vw1__VmfsDatastoreMultipleExtentOption& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreMultipleExtentOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreMultipleExtentOption"; }
};

class VmfsDatastoreOption_closure : public closure
{
protected:
	vw1__VmfsDatastoreOption _obj;
public:
	VmfsDatastoreOption_closure(const vw1__VmfsDatastoreOption& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreOption"; }
};

class VmfsDatastoreSingleExtentOption_closure : public closure
{
protected:
	vw1__VmfsDatastoreSingleExtentOption _obj;
public:
	VmfsDatastoreSingleExtentOption_closure(const vw1__VmfsDatastoreSingleExtentOption& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreSingleExtentOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreSingleExtentOption"; }
};

class VmfsDatastoreSpec_closure : public closure
{
protected:
	vw1__VmfsDatastoreSpec _obj;
public:
	VmfsDatastoreSpec_closure(const vw1__VmfsDatastoreSpec& obj) : _obj(obj) {}
	virtual ~VmfsDatastoreSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsDatastoreSpec"; }
};

class VmwareDistributedVirtualSwitchPvlanSpec_closure : public closure
{
protected:
	vw1__VmwareDistributedVirtualSwitchPvlanSpec _obj;
public:
	VmwareDistributedVirtualSwitchPvlanSpec_closure(const vw1__VmwareDistributedVirtualSwitchPvlanSpec& obj) : _obj(obj) {}
	virtual ~VmwareDistributedVirtualSwitchPvlanSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmwareDistributedVirtualSwitchPvlanSpec"; }
};

class VmwareDistributedVirtualSwitchTrunkVlanSpec_closure : public closure
{
protected:
	vw1__VmwareDistributedVirtualSwitchTrunkVlanSpec _obj;
public:
	VmwareDistributedVirtualSwitchTrunkVlanSpec_closure(const vw1__VmwareDistributedVirtualSwitchTrunkVlanSpec& obj) : _obj(obj) {}
	virtual ~VmwareDistributedVirtualSwitchTrunkVlanSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmwareDistributedVirtualSwitchTrunkVlanSpec"; }
};

class VmwareDistributedVirtualSwitchVlanIdSpec_closure : public closure
{
protected:
	vw1__VmwareDistributedVirtualSwitchVlanIdSpec _obj;
public:
	VmwareDistributedVirtualSwitchVlanIdSpec_closure(const vw1__VmwareDistributedVirtualSwitchVlanIdSpec& obj) : _obj(obj) {}
	virtual ~VmwareDistributedVirtualSwitchVlanIdSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmwareDistributedVirtualSwitchVlanIdSpec"; }
};

class VmwareDistributedVirtualSwitchVlanSpec_closure : public closure
{
protected:
	vw1__VmwareDistributedVirtualSwitchVlanSpec _obj;
public:
	VmwareDistributedVirtualSwitchVlanSpec_closure(const vw1__VmwareDistributedVirtualSwitchVlanSpec& obj) : _obj(obj) {}
	virtual ~VmwareDistributedVirtualSwitchVlanSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmwareDistributedVirtualSwitchVlanSpec"; }
};

class VmwareUplinkPortTeamingPolicy_closure : public closure
{
protected:
	vw1__VmwareUplinkPortTeamingPolicy _obj;
public:
	VmwareUplinkPortTeamingPolicy_closure(const vw1__VmwareUplinkPortTeamingPolicy& obj) : _obj(obj) {}
	virtual ~VmwareUplinkPortTeamingPolicy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmwareUplinkPortTeamingPolicy"; }
};

class VnicPortArgument_closure : public closure
{
protected:
	vw1__VnicPortArgument _obj;
public:
	VnicPortArgument_closure(const vw1__VnicPortArgument& obj) : _obj(obj) {}
	virtual ~VnicPortArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VnicPortArgument"; }
};

class WaitOptions_closure : public closure
{
protected:
	vw1__WaitOptions _obj;
public:
	WaitOptions_closure(const vw1__WaitOptions& obj) : _obj(obj) {}
	virtual ~WaitOptions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WaitOptions"; }
};

class WarningUpgradeEvent_closure : public closure
{
protected:
	vw1__WarningUpgradeEvent _obj;
public:
	WarningUpgradeEvent_closure(const vw1__WarningUpgradeEvent& obj) : _obj(obj) {}
	virtual ~WarningUpgradeEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WarningUpgradeEvent"; }
};

class WeeklyTaskScheduler_closure : public closure
{
protected:
	vw1__WeeklyTaskScheduler _obj;
public:
	WeeklyTaskScheduler_closure(const vw1__WeeklyTaskScheduler& obj) : _obj(obj) {}
	virtual ~WeeklyTaskScheduler_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WeeklyTaskScheduler"; }
};

class WinNetBIOSConfigInfo_closure : public closure
{
protected:
	vw1__WinNetBIOSConfigInfo _obj;
public:
	WinNetBIOSConfigInfo_closure(const vw1__WinNetBIOSConfigInfo& obj) : _obj(obj) {}
	virtual ~WinNetBIOSConfigInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WinNetBIOSConfigInfo"; }
};

class ActiveDirectoryFault_closure : public closure
{
protected:
	vw1__ActiveDirectoryFault _obj;
public:
	ActiveDirectoryFault_closure(const vw1__ActiveDirectoryFault& obj) : _obj(obj) {}
	virtual ~ActiveDirectoryFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ActiveDirectoryFault"; }
};

class AdminDisabled_closure : public closure
{
protected:
	vw1__AdminDisabled _obj;
public:
	AdminDisabled_closure(const vw1__AdminDisabled& obj) : _obj(obj) {}
	virtual ~AdminDisabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AdminDisabled"; }
};

class AdminNotDisabled_closure : public closure
{
protected:
	vw1__AdminNotDisabled _obj;
public:
	AdminNotDisabled_closure(const vw1__AdminNotDisabled& obj) : _obj(obj) {}
	virtual ~AdminNotDisabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AdminNotDisabled"; }
};

class AffinityConfigured_closure : public closure
{
protected:
	vw1__AffinityConfigured _obj;
public:
	AffinityConfigured_closure(const vw1__AffinityConfigured& obj) : _obj(obj) {}
	virtual ~AffinityConfigured_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AffinityConfigured"; }
};

class AgentInstallFailed_closure : public closure
{
protected:
	vw1__AgentInstallFailed _obj;
public:
	AgentInstallFailed_closure(const vw1__AgentInstallFailed& obj) : _obj(obj) {}
	virtual ~AgentInstallFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AgentInstallFailed"; }
};

class AlreadyBeingManaged_closure : public closure
{
protected:
	vw1__AlreadyBeingManaged _obj;
public:
	AlreadyBeingManaged_closure(const vw1__AlreadyBeingManaged& obj) : _obj(obj) {}
	virtual ~AlreadyBeingManaged_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlreadyBeingManaged"; }
};

class AlreadyConnected_closure : public closure
{
protected:
	vw1__AlreadyConnected _obj;
public:
	AlreadyConnected_closure(const vw1__AlreadyConnected& obj) : _obj(obj) {}
	virtual ~AlreadyConnected_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlreadyConnected"; }
};

class AlreadyExists_closure : public closure
{
protected:
	vw1__AlreadyExists _obj;
public:
	AlreadyExists_closure(const vw1__AlreadyExists& obj) : _obj(obj) {}
	virtual ~AlreadyExists_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlreadyExists"; }
};

class AlreadyUpgraded_closure : public closure
{
protected:
	vw1__AlreadyUpgraded _obj;
public:
	AlreadyUpgraded_closure(const vw1__AlreadyUpgraded& obj) : _obj(obj) {}
	virtual ~AlreadyUpgraded_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlreadyUpgraded"; }
};

class AnswerFileUpdateFailed_closure : public closure
{
protected:
	vw1__AnswerFileUpdateFailed _obj;
public:
	AnswerFileUpdateFailed_closure(const vw1__AnswerFileUpdateFailed& obj) : _obj(obj) {}
	virtual ~AnswerFileUpdateFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AnswerFileUpdateFailed"; }
};

class ApplicationQuiesceFault_closure : public closure
{
protected:
	vw1__ApplicationQuiesceFault _obj;
public:
	ApplicationQuiesceFault_closure(const vw1__ApplicationQuiesceFault& obj) : _obj(obj) {}
	virtual ~ApplicationQuiesceFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ApplicationQuiesceFault"; }
};

class AuthMinimumAdminPermission_closure : public closure
{
protected:
	vw1__AuthMinimumAdminPermission _obj;
public:
	AuthMinimumAdminPermission_closure(const vw1__AuthMinimumAdminPermission& obj) : _obj(obj) {}
	virtual ~AuthMinimumAdminPermission_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AuthMinimumAdminPermission"; }
};

class BlockedByFirewall_closure : public closure
{
protected:
	vw1__BlockedByFirewall _obj;
public:
	BlockedByFirewall_closure(const vw1__BlockedByFirewall& obj) : _obj(obj) {}
	virtual ~BlockedByFirewall_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "BlockedByFirewall"; }
};

class CAMServerRefusedConnection_closure : public closure
{
protected:
	vw1__CAMServerRefusedConnection _obj;
public:
	CAMServerRefusedConnection_closure(const vw1__CAMServerRefusedConnection& obj) : _obj(obj) {}
	virtual ~CAMServerRefusedConnection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CAMServerRefusedConnection"; }
};

class CannotAccessFile_closure : public closure
{
protected:
	vw1__CannotAccessFile _obj;
public:
	CannotAccessFile_closure(const vw1__CannotAccessFile& obj) : _obj(obj) {}
	virtual ~CannotAccessFile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAccessFile"; }
};

class CannotAccessLocalSource_closure : public closure
{
protected:
	vw1__CannotAccessLocalSource _obj;
public:
	CannotAccessLocalSource_closure(const vw1__CannotAccessLocalSource& obj) : _obj(obj) {}
	virtual ~CannotAccessLocalSource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAccessLocalSource"; }
};

class CannotAccessNetwork_closure : public closure
{
protected:
	vw1__CannotAccessNetwork _obj;
public:
	CannotAccessNetwork_closure(const vw1__CannotAccessNetwork& obj) : _obj(obj) {}
	virtual ~CannotAccessNetwork_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAccessNetwork"; }
};

class CannotAccessVmComponent_closure : public closure
{
protected:
	vw1__CannotAccessVmComponent _obj;
public:
	CannotAccessVmComponent_closure(const vw1__CannotAccessVmComponent& obj) : _obj(obj) {}
	virtual ~CannotAccessVmComponent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAccessVmComponent"; }
};

class CannotAccessVmConfig_closure : public closure
{
protected:
	vw1__CannotAccessVmConfig _obj;
public:
	CannotAccessVmConfig_closure(const vw1__CannotAccessVmConfig& obj) : _obj(obj) {}
	virtual ~CannotAccessVmConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAccessVmConfig"; }
};

class CannotAccessVmDevice_closure : public closure
{
protected:
	vw1__CannotAccessVmDevice _obj;
public:
	CannotAccessVmDevice_closure(const vw1__CannotAccessVmDevice& obj) : _obj(obj) {}
	virtual ~CannotAccessVmDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAccessVmDevice"; }
};

class CannotAccessVmDisk_closure : public closure
{
protected:
	vw1__CannotAccessVmDisk _obj;
public:
	CannotAccessVmDisk_closure(const vw1__CannotAccessVmDisk& obj) : _obj(obj) {}
	virtual ~CannotAccessVmDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAccessVmDisk"; }
};

class CannotAddHostWithFTVmAsStandalone_closure : public closure
{
protected:
	vw1__CannotAddHostWithFTVmAsStandalone _obj;
public:
	CannotAddHostWithFTVmAsStandalone_closure(const vw1__CannotAddHostWithFTVmAsStandalone& obj) : _obj(obj) {}
	virtual ~CannotAddHostWithFTVmAsStandalone_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAddHostWithFTVmAsStandalone"; }
};

class CannotAddHostWithFTVmToDifferentCluster_closure : public closure
{
protected:
	vw1__CannotAddHostWithFTVmToDifferentCluster _obj;
public:
	CannotAddHostWithFTVmToDifferentCluster_closure(const vw1__CannotAddHostWithFTVmToDifferentCluster& obj) : _obj(obj) {}
	virtual ~CannotAddHostWithFTVmToDifferentCluster_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAddHostWithFTVmToDifferentCluster"; }
};

class CannotAddHostWithFTVmToNonHACluster_closure : public closure
{
protected:
	vw1__CannotAddHostWithFTVmToNonHACluster _obj;
public:
	CannotAddHostWithFTVmToNonHACluster_closure(const vw1__CannotAddHostWithFTVmToNonHACluster& obj) : _obj(obj) {}
	virtual ~CannotAddHostWithFTVmToNonHACluster_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotAddHostWithFTVmToNonHACluster"; }
};

class CannotChangeDrsBehaviorForFtSecondary_closure : public closure
{
protected:
	vw1__CannotChangeDrsBehaviorForFtSecondary _obj;
public:
	CannotChangeDrsBehaviorForFtSecondary_closure(const vw1__CannotChangeDrsBehaviorForFtSecondary& obj) : _obj(obj) {}
	virtual ~CannotChangeDrsBehaviorForFtSecondary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotChangeDrsBehaviorForFtSecondary"; }
};

class CannotChangeHaSettingsForFtSecondary_closure : public closure
{
protected:
	vw1__CannotChangeHaSettingsForFtSecondary _obj;
public:
	CannotChangeHaSettingsForFtSecondary_closure(const vw1__CannotChangeHaSettingsForFtSecondary& obj) : _obj(obj) {}
	virtual ~CannotChangeHaSettingsForFtSecondary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotChangeHaSettingsForFtSecondary"; }
};

class CannotCreateFile_closure : public closure
{
protected:
	vw1__CannotCreateFile _obj;
public:
	CannotCreateFile_closure(const vw1__CannotCreateFile& obj) : _obj(obj) {}
	virtual ~CannotCreateFile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotCreateFile"; }
};

class CannotDecryptPasswords_closure : public closure
{
protected:
	vw1__CannotDecryptPasswords _obj;
public:
	CannotDecryptPasswords_closure(const vw1__CannotDecryptPasswords& obj) : _obj(obj) {}
	virtual ~CannotDecryptPasswords_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotDecryptPasswords"; }
};

class CannotDeleteFile_closure : public closure
{
protected:
	vw1__CannotDeleteFile _obj;
public:
	CannotDeleteFile_closure(const vw1__CannotDeleteFile& obj) : _obj(obj) {}
	virtual ~CannotDeleteFile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotDeleteFile"; }
};

class CannotDisableDrsOnClustersWithVApps_closure : public closure
{
protected:
	vw1__CannotDisableDrsOnClustersWithVApps _obj;
public:
	CannotDisableDrsOnClustersWithVApps_closure(const vw1__CannotDisableDrsOnClustersWithVApps& obj) : _obj(obj) {}
	virtual ~CannotDisableDrsOnClustersWithVApps_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotDisableDrsOnClustersWithVApps"; }
};

class CannotDisableSnapshot_closure : public closure
{
protected:
	vw1__CannotDisableSnapshot _obj;
public:
	CannotDisableSnapshot_closure(const vw1__CannotDisableSnapshot& obj) : _obj(obj) {}
	virtual ~CannotDisableSnapshot_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotDisableSnapshot"; }
};

class CannotDisconnectHostWithFaultToleranceVm_closure : public closure
{
protected:
	vw1__CannotDisconnectHostWithFaultToleranceVm _obj;
public:
	CannotDisconnectHostWithFaultToleranceVm_closure(const vw1__CannotDisconnectHostWithFaultToleranceVm& obj) : _obj(obj) {}
	virtual ~CannotDisconnectHostWithFaultToleranceVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotDisconnectHostWithFaultToleranceVm"; }
};

class CannotModifyConfigCpuRequirements_closure : public closure
{
protected:
	vw1__CannotModifyConfigCpuRequirements _obj;
public:
	CannotModifyConfigCpuRequirements_closure(const vw1__CannotModifyConfigCpuRequirements& obj) : _obj(obj) {}
	virtual ~CannotModifyConfigCpuRequirements_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotModifyConfigCpuRequirements"; }
};

class CannotMoveFaultToleranceVm_closure : public closure
{
protected:
	vw1__CannotMoveFaultToleranceVm _obj;
public:
	CannotMoveFaultToleranceVm_closure(const vw1__CannotMoveFaultToleranceVm& obj) : _obj(obj) {}
	virtual ~CannotMoveFaultToleranceVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotMoveFaultToleranceVm"; }
};

class CannotMoveHostWithFaultToleranceVm_closure : public closure
{
protected:
	vw1__CannotMoveHostWithFaultToleranceVm _obj;
public:
	CannotMoveHostWithFaultToleranceVm_closure(const vw1__CannotMoveHostWithFaultToleranceVm& obj) : _obj(obj) {}
	virtual ~CannotMoveHostWithFaultToleranceVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotMoveHostWithFaultToleranceVm"; }
};

class CannotMoveVmWithDeltaDisk_closure : public closure
{
protected:
	vw1__CannotMoveVmWithDeltaDisk _obj;
public:
	CannotMoveVmWithDeltaDisk_closure(const vw1__CannotMoveVmWithDeltaDisk& obj) : _obj(obj) {}
	virtual ~CannotMoveVmWithDeltaDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotMoveVmWithDeltaDisk"; }
};

class CannotMoveVmWithNativeDeltaDisk_closure : public closure
{
protected:
	vw1__CannotMoveVmWithNativeDeltaDisk _obj;
public:
	CannotMoveVmWithNativeDeltaDisk_closure(const vw1__CannotMoveVmWithNativeDeltaDisk& obj) : _obj(obj) {}
	virtual ~CannotMoveVmWithNativeDeltaDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotMoveVmWithNativeDeltaDisk"; }
};

class CannotPowerOffVmInCluster_closure : public closure
{
protected:
	vw1__CannotPowerOffVmInCluster _obj;
public:
	CannotPowerOffVmInCluster_closure(const vw1__CannotPowerOffVmInCluster& obj) : _obj(obj) {}
	virtual ~CannotPowerOffVmInCluster_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CannotPowerOffVmInCluster"; }
};

class ClockSkew_closure : public closure
{
protected:
	vw1__ClockSkew _obj;
public:
	ClockSkew_closure(const vw1__ClockSkew& obj) : _obj(obj) {}
	virtual ~ClockSkew_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClockSkew"; }
};

class CloneFromSnapshotNotSupported_closure : public closure
{
protected:
	vw1__CloneFromSnapshotNotSupported _obj;
public:
	CloneFromSnapshotNotSupported_closure(const vw1__CloneFromSnapshotNotSupported& obj) : _obj(obj) {}
	virtual ~CloneFromSnapshotNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CloneFromSnapshotNotSupported"; }
};

class ConcurrentAccess_closure : public closure
{
protected:
	vw1__ConcurrentAccess _obj;
public:
	ConcurrentAccess_closure(const vw1__ConcurrentAccess& obj) : _obj(obj) {}
	virtual ~ConcurrentAccess_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ConcurrentAccess"; }
};

class ConnectedIso_closure : public closure
{
protected:
	vw1__ConnectedIso _obj;
public:
	ConnectedIso_closure(const vw1__ConnectedIso& obj) : _obj(obj) {}
	virtual ~ConnectedIso_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ConnectedIso"; }
};

class CpuCompatibilityUnknown_closure : public closure
{
protected:
	vw1__CpuCompatibilityUnknown _obj;
public:
	CpuCompatibilityUnknown_closure(const vw1__CpuCompatibilityUnknown& obj) : _obj(obj) {}
	virtual ~CpuCompatibilityUnknown_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CpuCompatibilityUnknown"; }
};

class CpuHotPlugNotSupported_closure : public closure
{
protected:
	vw1__CpuHotPlugNotSupported _obj;
public:
	CpuHotPlugNotSupported_closure(const vw1__CpuHotPlugNotSupported& obj) : _obj(obj) {}
	virtual ~CpuHotPlugNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CpuHotPlugNotSupported"; }
};

class CpuIncompatible_closure : public closure
{
protected:
	vw1__CpuIncompatible _obj;
public:
	CpuIncompatible_closure(const vw1__CpuIncompatible& obj) : _obj(obj) {}
	virtual ~CpuIncompatible_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CpuIncompatible"; }
};

class CpuIncompatible1ECX_closure : public closure
{
protected:
	vw1__CpuIncompatible1ECX _obj;
public:
	CpuIncompatible1ECX_closure(const vw1__CpuIncompatible1ECX& obj) : _obj(obj) {}
	virtual ~CpuIncompatible1ECX_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CpuIncompatible1ECX"; }
};

class CpuIncompatible81EDX_closure : public closure
{
protected:
	vw1__CpuIncompatible81EDX _obj;
public:
	CpuIncompatible81EDX_closure(const vw1__CpuIncompatible81EDX& obj) : _obj(obj) {}
	virtual ~CpuIncompatible81EDX_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CpuIncompatible81EDX"; }
};

class CustomizationFault_closure : public closure
{
protected:
	vw1__CustomizationFault _obj;
public:
	CustomizationFault_closure(const vw1__CustomizationFault& obj) : _obj(obj) {}
	virtual ~CustomizationFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationFault"; }
};

class CustomizationPending_closure : public closure
{
protected:
	vw1__CustomizationPending _obj;
public:
	CustomizationPending_closure(const vw1__CustomizationPending& obj) : _obj(obj) {}
	virtual ~CustomizationPending_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationPending"; }
};

class DVPortNotSupported_closure : public closure
{
protected:
	vw1__DVPortNotSupported _obj;
public:
	DVPortNotSupported_closure(const vw1__DVPortNotSupported& obj) : _obj(obj) {}
	virtual ~DVPortNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DVPortNotSupported"; }
};

class DasConfigFault_closure : public closure
{
protected:
	vw1__DasConfigFault _obj;
public:
	DasConfigFault_closure(const vw1__DasConfigFault& obj) : _obj(obj) {}
	virtual ~DasConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DasConfigFault"; }
};

class DatabaseError_closure : public closure
{
protected:
	vw1__DatabaseError _obj;
public:
	DatabaseError_closure(const vw1__DatabaseError& obj) : _obj(obj) {}
	virtual ~DatabaseError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatabaseError"; }
};

class DatacenterMismatch_closure : public closure
{
protected:
	vw1__DatacenterMismatch _obj;
public:
	DatacenterMismatch_closure(const vw1__DatacenterMismatch& obj) : _obj(obj) {}
	virtual ~DatacenterMismatch_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatacenterMismatch"; }
};

class DatastoreNotWritableOnHost_closure : public closure
{
protected:
	vw1__DatastoreNotWritableOnHost _obj;
public:
	DatastoreNotWritableOnHost_closure(const vw1__DatastoreNotWritableOnHost& obj) : _obj(obj) {}
	virtual ~DatastoreNotWritableOnHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DatastoreNotWritableOnHost"; }
};

class DeltaDiskFormatNotSupported_closure : public closure
{
protected:
	vw1__DeltaDiskFormatNotSupported _obj;
public:
	DeltaDiskFormatNotSupported_closure(const vw1__DeltaDiskFormatNotSupported& obj) : _obj(obj) {}
	virtual ~DeltaDiskFormatNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeltaDiskFormatNotSupported"; }
};

class DestinationSwitchFull_closure : public closure
{
protected:
	vw1__DestinationSwitchFull _obj;
public:
	DestinationSwitchFull_closure(const vw1__DestinationSwitchFull& obj) : _obj(obj) {}
	virtual ~DestinationSwitchFull_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DestinationSwitchFull"; }
};

class DeviceBackingNotSupported_closure : public closure
{
protected:
	vw1__DeviceBackingNotSupported _obj;
public:
	DeviceBackingNotSupported_closure(const vw1__DeviceBackingNotSupported& obj) : _obj(obj) {}
	virtual ~DeviceBackingNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeviceBackingNotSupported"; }
};

class DeviceControllerNotSupported_closure : public closure
{
protected:
	vw1__DeviceControllerNotSupported _obj;
public:
	DeviceControllerNotSupported_closure(const vw1__DeviceControllerNotSupported& obj) : _obj(obj) {}
	virtual ~DeviceControllerNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeviceControllerNotSupported"; }
};

class DeviceHotPlugNotSupported_closure : public closure
{
protected:
	vw1__DeviceHotPlugNotSupported _obj;
public:
	DeviceHotPlugNotSupported_closure(const vw1__DeviceHotPlugNotSupported& obj) : _obj(obj) {}
	virtual ~DeviceHotPlugNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeviceHotPlugNotSupported"; }
};

class DeviceNotFound_closure : public closure
{
protected:
	vw1__DeviceNotFound _obj;
public:
	DeviceNotFound_closure(const vw1__DeviceNotFound& obj) : _obj(obj) {}
	virtual ~DeviceNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeviceNotFound"; }
};

class DeviceNotSupported_closure : public closure
{
protected:
	vw1__DeviceNotSupported _obj;
public:
	DeviceNotSupported_closure(const vw1__DeviceNotSupported& obj) : _obj(obj) {}
	virtual ~DeviceNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeviceNotSupported"; }
};

class DeviceUnsupportedForVmPlatform_closure : public closure
{
protected:
	vw1__DeviceUnsupportedForVmPlatform _obj;
public:
	DeviceUnsupportedForVmPlatform_closure(const vw1__DeviceUnsupportedForVmPlatform& obj) : _obj(obj) {}
	virtual ~DeviceUnsupportedForVmPlatform_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeviceUnsupportedForVmPlatform"; }
};

class DeviceUnsupportedForVmVersion_closure : public closure
{
protected:
	vw1__DeviceUnsupportedForVmVersion _obj;
public:
	DeviceUnsupportedForVmVersion_closure(const vw1__DeviceUnsupportedForVmVersion& obj) : _obj(obj) {}
	virtual ~DeviceUnsupportedForVmVersion_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DeviceUnsupportedForVmVersion"; }
};

class DirectoryNotEmpty_closure : public closure
{
protected:
	vw1__DirectoryNotEmpty _obj;
public:
	DirectoryNotEmpty_closure(const vw1__DirectoryNotEmpty& obj) : _obj(obj) {}
	virtual ~DirectoryNotEmpty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DirectoryNotEmpty"; }
};

class DisableAdminNotSupported_closure : public closure
{
protected:
	vw1__DisableAdminNotSupported _obj;
public:
	DisableAdminNotSupported_closure(const vw1__DisableAdminNotSupported& obj) : _obj(obj) {}
	virtual ~DisableAdminNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DisableAdminNotSupported"; }
};

class DisallowedChangeByService_closure : public closure
{
protected:
	vw1__DisallowedChangeByService _obj;
public:
	DisallowedChangeByService_closure(const vw1__DisallowedChangeByService& obj) : _obj(obj) {}
	virtual ~DisallowedChangeByService_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DisallowedChangeByService"; }
};

class DisallowedDiskModeChange_closure : public closure
{
protected:
	vw1__DisallowedDiskModeChange _obj;
public:
	DisallowedDiskModeChange_closure(const vw1__DisallowedDiskModeChange& obj) : _obj(obj) {}
	virtual ~DisallowedDiskModeChange_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DisallowedDiskModeChange"; }
};

class DisallowedMigrationDeviceAttached_closure : public closure
{
protected:
	vw1__DisallowedMigrationDeviceAttached _obj;
public:
	DisallowedMigrationDeviceAttached_closure(const vw1__DisallowedMigrationDeviceAttached& obj) : _obj(obj) {}
	virtual ~DisallowedMigrationDeviceAttached_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DisallowedMigrationDeviceAttached"; }
};

class DisallowedOperationOnFailoverHost_closure : public closure
{
protected:
	vw1__DisallowedOperationOnFailoverHost _obj;
public:
	DisallowedOperationOnFailoverHost_closure(const vw1__DisallowedOperationOnFailoverHost& obj) : _obj(obj) {}
	virtual ~DisallowedOperationOnFailoverHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DisallowedOperationOnFailoverHost"; }
};

class DiskMoveTypeNotSupported_closure : public closure
{
protected:
	vw1__DiskMoveTypeNotSupported _obj;
public:
	DiskMoveTypeNotSupported_closure(const vw1__DiskMoveTypeNotSupported& obj) : _obj(obj) {}
	virtual ~DiskMoveTypeNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DiskMoveTypeNotSupported"; }
};

class DiskNotSupported_closure : public closure
{
protected:
	vw1__DiskNotSupported _obj;
public:
	DiskNotSupported_closure(const vw1__DiskNotSupported& obj) : _obj(obj) {}
	virtual ~DiskNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DiskNotSupported"; }
};

class DomainNotFound_closure : public closure
{
protected:
	vw1__DomainNotFound _obj;
public:
	DomainNotFound_closure(const vw1__DomainNotFound& obj) : _obj(obj) {}
	virtual ~DomainNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DomainNotFound"; }
};

class DrsDisabledOnVm_closure : public closure
{
protected:
	vw1__DrsDisabledOnVm _obj;
public:
	DrsDisabledOnVm_closure(const vw1__DrsDisabledOnVm& obj) : _obj(obj) {}
	virtual ~DrsDisabledOnVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsDisabledOnVm"; }
};

class DrsVmotionIncompatibleFault_closure : public closure
{
protected:
	vw1__DrsVmotionIncompatibleFault _obj;
public:
	DrsVmotionIncompatibleFault_closure(const vw1__DrsVmotionIncompatibleFault& obj) : _obj(obj) {}
	virtual ~DrsVmotionIncompatibleFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DrsVmotionIncompatibleFault"; }
};

class DuplicateName_closure : public closure
{
protected:
	vw1__DuplicateName _obj;
public:
	DuplicateName_closure(const vw1__DuplicateName& obj) : _obj(obj) {}
	virtual ~DuplicateName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DuplicateName"; }
};

class DvsFault_closure : public closure
{
protected:
	vw1__DvsFault _obj;
public:
	DvsFault_closure(const vw1__DvsFault& obj) : _obj(obj) {}
	virtual ~DvsFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsFault"; }
};

class DvsNotAuthorized_closure : public closure
{
protected:
	vw1__DvsNotAuthorized _obj;
public:
	DvsNotAuthorized_closure(const vw1__DvsNotAuthorized& obj) : _obj(obj) {}
	virtual ~DvsNotAuthorized_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsNotAuthorized"; }
};

class DvsOperationBulkFault_closure : public closure
{
protected:
	vw1__DvsOperationBulkFault _obj;
public:
	DvsOperationBulkFault_closure(const vw1__DvsOperationBulkFault& obj) : _obj(obj) {}
	virtual ~DvsOperationBulkFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsOperationBulkFault"; }
};

class DvsScopeViolated_closure : public closure
{
protected:
	vw1__DvsScopeViolated _obj;
public:
	DvsScopeViolated_closure(const vw1__DvsScopeViolated& obj) : _obj(obj) {}
	virtual ~DvsScopeViolated_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DvsScopeViolated"; }
};

class EVCAdmissionFailed_closure : public closure
{
protected:
	vw1__EVCAdmissionFailed _obj;
public:
	EVCAdmissionFailed_closure(const vw1__EVCAdmissionFailed& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailed"; }
};

class EVCAdmissionFailedCPUFeaturesForMode_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedCPUFeaturesForMode _obj;
public:
	EVCAdmissionFailedCPUFeaturesForMode_closure(const vw1__EVCAdmissionFailedCPUFeaturesForMode& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedCPUFeaturesForMode_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedCPUFeaturesForMode"; }
};

class EVCAdmissionFailedCPUModel_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedCPUModel _obj;
public:
	EVCAdmissionFailedCPUModel_closure(const vw1__EVCAdmissionFailedCPUModel& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedCPUModel_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedCPUModel"; }
};

class EVCAdmissionFailedCPUModelForMode_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedCPUModelForMode _obj;
public:
	EVCAdmissionFailedCPUModelForMode_closure(const vw1__EVCAdmissionFailedCPUModelForMode& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedCPUModelForMode_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedCPUModelForMode"; }
};

class EVCAdmissionFailedCPUVendor_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedCPUVendor _obj;
public:
	EVCAdmissionFailedCPUVendor_closure(const vw1__EVCAdmissionFailedCPUVendor& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedCPUVendor_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedCPUVendor"; }
};

class EVCAdmissionFailedCPUVendorUnknown_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedCPUVendorUnknown _obj;
public:
	EVCAdmissionFailedCPUVendorUnknown_closure(const vw1__EVCAdmissionFailedCPUVendorUnknown& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedCPUVendorUnknown_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedCPUVendorUnknown"; }
};

class EVCAdmissionFailedHostDisconnected_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedHostDisconnected _obj;
public:
	EVCAdmissionFailedHostDisconnected_closure(const vw1__EVCAdmissionFailedHostDisconnected& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedHostDisconnected_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedHostDisconnected"; }
};

class EVCAdmissionFailedHostSoftware_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedHostSoftware _obj;
public:
	EVCAdmissionFailedHostSoftware_closure(const vw1__EVCAdmissionFailedHostSoftware& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedHostSoftware_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedHostSoftware"; }
};

class EVCAdmissionFailedHostSoftwareForMode_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedHostSoftwareForMode _obj;
public:
	EVCAdmissionFailedHostSoftwareForMode_closure(const vw1__EVCAdmissionFailedHostSoftwareForMode& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedHostSoftwareForMode_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedHostSoftwareForMode"; }
};

class EVCAdmissionFailedVmActive_closure : public closure
{
protected:
	vw1__EVCAdmissionFailedVmActive _obj;
public:
	EVCAdmissionFailedVmActive_closure(const vw1__EVCAdmissionFailedVmActive& obj) : _obj(obj) {}
	virtual ~EVCAdmissionFailedVmActive_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EVCAdmissionFailedVmActive"; }
};

class EightHostLimitViolated_closure : public closure
{
protected:
	vw1__EightHostLimitViolated _obj;
public:
	EightHostLimitViolated_closure(const vw1__EightHostLimitViolated& obj) : _obj(obj) {}
	virtual ~EightHostLimitViolated_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EightHostLimitViolated"; }
};

class ExpiredAddonLicense_closure : public closure
{
protected:
	vw1__ExpiredAddonLicense _obj;
public:
	ExpiredAddonLicense_closure(const vw1__ExpiredAddonLicense& obj) : _obj(obj) {}
	virtual ~ExpiredAddonLicense_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExpiredAddonLicense"; }
};

class ExpiredEditionLicense_closure : public closure
{
protected:
	vw1__ExpiredEditionLicense _obj;
public:
	ExpiredEditionLicense_closure(const vw1__ExpiredEditionLicense& obj) : _obj(obj) {}
	virtual ~ExpiredEditionLicense_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExpiredEditionLicense"; }
};

class ExpiredFeatureLicense_closure : public closure
{
protected:
	vw1__ExpiredFeatureLicense _obj;
public:
	ExpiredFeatureLicense_closure(const vw1__ExpiredFeatureLicense& obj) : _obj(obj) {}
	virtual ~ExpiredFeatureLicense_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExpiredFeatureLicense"; }
};

class ExtendedFault_closure : public closure
{
protected:
	vw1__ExtendedFault _obj;
public:
	ExtendedFault_closure(const vw1__ExtendedFault& obj) : _obj(obj) {}
	virtual ~ExtendedFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtendedFault"; }
};

class FailToEnableSPBM_closure : public closure
{
protected:
	vw1__FailToEnableSPBM _obj;
public:
	FailToEnableSPBM_closure(const vw1__FailToEnableSPBM& obj) : _obj(obj) {}
	virtual ~FailToEnableSPBM_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FailToEnableSPBM"; }
};

class FailToLockFaultToleranceVMs_closure : public closure
{
protected:
	vw1__FailToLockFaultToleranceVMs _obj;
public:
	FailToLockFaultToleranceVMs_closure(const vw1__FailToLockFaultToleranceVMs& obj) : _obj(obj) {}
	virtual ~FailToLockFaultToleranceVMs_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FailToLockFaultToleranceVMs"; }
};

class FaultToleranceAntiAffinityViolated_closure : public closure
{
protected:
	vw1__FaultToleranceAntiAffinityViolated _obj;
public:
	FaultToleranceAntiAffinityViolated_closure(const vw1__FaultToleranceAntiAffinityViolated& obj) : _obj(obj) {}
	virtual ~FaultToleranceAntiAffinityViolated_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceAntiAffinityViolated"; }
};

class FaultToleranceCannotEditMem_closure : public closure
{
protected:
	vw1__FaultToleranceCannotEditMem _obj;
public:
	FaultToleranceCannotEditMem_closure(const vw1__FaultToleranceCannotEditMem& obj) : _obj(obj) {}
	virtual ~FaultToleranceCannotEditMem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceCannotEditMem"; }
};

class FaultToleranceCpuIncompatible_closure : public closure
{
protected:
	vw1__FaultToleranceCpuIncompatible _obj;
public:
	FaultToleranceCpuIncompatible_closure(const vw1__FaultToleranceCpuIncompatible& obj) : _obj(obj) {}
	virtual ~FaultToleranceCpuIncompatible_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceCpuIncompatible"; }
};

class FaultToleranceNeedsThickDisk_closure : public closure
{
protected:
	vw1__FaultToleranceNeedsThickDisk _obj;
public:
	FaultToleranceNeedsThickDisk_closure(const vw1__FaultToleranceNeedsThickDisk& obj) : _obj(obj) {}
	virtual ~FaultToleranceNeedsThickDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceNeedsThickDisk"; }
};

class FaultToleranceNotLicensed_closure : public closure
{
protected:
	vw1__FaultToleranceNotLicensed _obj;
public:
	FaultToleranceNotLicensed_closure(const vw1__FaultToleranceNotLicensed& obj) : _obj(obj) {}
	virtual ~FaultToleranceNotLicensed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceNotLicensed"; }
};

class FaultToleranceNotSameBuild_closure : public closure
{
protected:
	vw1__FaultToleranceNotSameBuild _obj;
public:
	FaultToleranceNotSameBuild_closure(const vw1__FaultToleranceNotSameBuild& obj) : _obj(obj) {}
	virtual ~FaultToleranceNotSameBuild_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceNotSameBuild"; }
};

class FaultTolerancePrimaryPowerOnNotAttempted_closure : public closure
{
protected:
	vw1__FaultTolerancePrimaryPowerOnNotAttempted _obj;
public:
	FaultTolerancePrimaryPowerOnNotAttempted_closure(const vw1__FaultTolerancePrimaryPowerOnNotAttempted& obj) : _obj(obj) {}
	virtual ~FaultTolerancePrimaryPowerOnNotAttempted_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultTolerancePrimaryPowerOnNotAttempted"; }
};

class FaultToleranceVmNotDasProtected_closure : public closure
{
protected:
	vw1__FaultToleranceVmNotDasProtected _obj;
public:
	FaultToleranceVmNotDasProtected_closure(const vw1__FaultToleranceVmNotDasProtected& obj) : _obj(obj) {}
	virtual ~FaultToleranceVmNotDasProtected_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FaultToleranceVmNotDasProtected"; }
};

class FcoeFault_closure : public closure
{
protected:
	vw1__FcoeFault _obj;
public:
	FcoeFault_closure(const vw1__FcoeFault& obj) : _obj(obj) {}
	virtual ~FcoeFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FcoeFault"; }
};

class FcoeFaultPnicHasNoPortSet_closure : public closure
{
protected:
	vw1__FcoeFaultPnicHasNoPortSet _obj;
public:
	FcoeFaultPnicHasNoPortSet_closure(const vw1__FcoeFaultPnicHasNoPortSet& obj) : _obj(obj) {}
	virtual ~FcoeFaultPnicHasNoPortSet_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FcoeFaultPnicHasNoPortSet"; }
};

class FileAlreadyExists_closure : public closure
{
protected:
	vw1__FileAlreadyExists _obj;
public:
	FileAlreadyExists_closure(const vw1__FileAlreadyExists& obj) : _obj(obj) {}
	virtual ~FileAlreadyExists_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileAlreadyExists"; }
};

class FileBackedPortNotSupported_closure : public closure
{
protected:
	vw1__FileBackedPortNotSupported _obj;
public:
	FileBackedPortNotSupported_closure(const vw1__FileBackedPortNotSupported& obj) : _obj(obj) {}
	virtual ~FileBackedPortNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileBackedPortNotSupported"; }
};

class FileFault_closure : public closure
{
protected:
	vw1__FileFault _obj;
public:
	FileFault_closure(const vw1__FileFault& obj) : _obj(obj) {}
	virtual ~FileFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileFault"; }
};

class FileLocked_closure : public closure
{
protected:
	vw1__FileLocked _obj;
public:
	FileLocked_closure(const vw1__FileLocked& obj) : _obj(obj) {}
	virtual ~FileLocked_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileLocked"; }
};

class FileNameTooLong_closure : public closure
{
protected:
	vw1__FileNameTooLong _obj;
public:
	FileNameTooLong_closure(const vw1__FileNameTooLong& obj) : _obj(obj) {}
	virtual ~FileNameTooLong_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileNameTooLong"; }
};

class FileNotFound_closure : public closure
{
protected:
	vw1__FileNotFound _obj;
public:
	FileNotFound_closure(const vw1__FileNotFound& obj) : _obj(obj) {}
	virtual ~FileNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileNotFound"; }
};

class FileNotWritable_closure : public closure
{
protected:
	vw1__FileNotWritable _obj;
public:
	FileNotWritable_closure(const vw1__FileNotWritable& obj) : _obj(obj) {}
	virtual ~FileNotWritable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileNotWritable"; }
};

class FileTooLarge_closure : public closure
{
protected:
	vw1__FileTooLarge _obj;
public:
	FileTooLarge_closure(const vw1__FileTooLarge& obj) : _obj(obj) {}
	virtual ~FileTooLarge_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileTooLarge"; }
};

class FilesystemQuiesceFault_closure : public closure
{
protected:
	vw1__FilesystemQuiesceFault _obj;
public:
	FilesystemQuiesceFault_closure(const vw1__FilesystemQuiesceFault& obj) : _obj(obj) {}
	virtual ~FilesystemQuiesceFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FilesystemQuiesceFault"; }
};

class FtIssuesOnHost_closure : public closure
{
protected:
	vw1__FtIssuesOnHost _obj;
public:
	FtIssuesOnHost_closure(const vw1__FtIssuesOnHost& obj) : _obj(obj) {}
	virtual ~FtIssuesOnHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FtIssuesOnHost"; }
};

class FullStorageVMotionNotSupported_closure : public closure
{
protected:
	vw1__FullStorageVMotionNotSupported _obj;
public:
	FullStorageVMotionNotSupported_closure(const vw1__FullStorageVMotionNotSupported& obj) : _obj(obj) {}
	virtual ~FullStorageVMotionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FullStorageVMotionNotSupported"; }
};

class GenericDrsFault_closure : public closure
{
protected:
	vw1__GenericDrsFault _obj;
public:
	GenericDrsFault_closure(const vw1__GenericDrsFault& obj) : _obj(obj) {}
	virtual ~GenericDrsFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GenericDrsFault"; }
};

class GenericVmConfigFault_closure : public closure
{
protected:
	vw1__GenericVmConfigFault _obj;
public:
	GenericVmConfigFault_closure(const vw1__GenericVmConfigFault& obj) : _obj(obj) {}
	virtual ~GenericVmConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GenericVmConfigFault"; }
};

class GuestAuthenticationChallenge_closure : public closure
{
protected:
	vw1__GuestAuthenticationChallenge _obj;
public:
	GuestAuthenticationChallenge_closure(const vw1__GuestAuthenticationChallenge& obj) : _obj(obj) {}
	virtual ~GuestAuthenticationChallenge_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestAuthenticationChallenge"; }
};

class GuestComponentsOutOfDate_closure : public closure
{
protected:
	vw1__GuestComponentsOutOfDate _obj;
public:
	GuestComponentsOutOfDate_closure(const vw1__GuestComponentsOutOfDate& obj) : _obj(obj) {}
	virtual ~GuestComponentsOutOfDate_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestComponentsOutOfDate"; }
};

class GuestOperationsFault_closure : public closure
{
protected:
	vw1__GuestOperationsFault _obj;
public:
	GuestOperationsFault_closure(const vw1__GuestOperationsFault& obj) : _obj(obj) {}
	virtual ~GuestOperationsFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestOperationsFault"; }
};

class GuestOperationsUnavailable_closure : public closure
{
protected:
	vw1__GuestOperationsUnavailable _obj;
public:
	GuestOperationsUnavailable_closure(const vw1__GuestOperationsUnavailable& obj) : _obj(obj) {}
	virtual ~GuestOperationsUnavailable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestOperationsUnavailable"; }
};

class GuestPermissionDenied_closure : public closure
{
protected:
	vw1__GuestPermissionDenied _obj;
public:
	GuestPermissionDenied_closure(const vw1__GuestPermissionDenied& obj) : _obj(obj) {}
	virtual ~GuestPermissionDenied_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestPermissionDenied"; }
};

class GuestProcessNotFound_closure : public closure
{
protected:
	vw1__GuestProcessNotFound _obj;
public:
	GuestProcessNotFound_closure(const vw1__GuestProcessNotFound& obj) : _obj(obj) {}
	virtual ~GuestProcessNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestProcessNotFound"; }
};

class HAErrorsAtDest_closure : public closure
{
protected:
	vw1__HAErrorsAtDest _obj;
public:
	HAErrorsAtDest_closure(const vw1__HAErrorsAtDest& obj) : _obj(obj) {}
	virtual ~HAErrorsAtDest_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HAErrorsAtDest"; }
};

class HostAccessRestrictedToManagementServer_closure : public closure
{
protected:
	vw1__HostAccessRestrictedToManagementServer _obj;
public:
	HostAccessRestrictedToManagementServer_closure(const vw1__HostAccessRestrictedToManagementServer& obj) : _obj(obj) {}
	virtual ~HostAccessRestrictedToManagementServer_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAccessRestrictedToManagementServer"; }
};

class HostCommunication_closure : public closure
{
protected:
	vw1__HostCommunication _obj;
public:
	HostCommunication_closure(const vw1__HostCommunication& obj) : _obj(obj) {}
	virtual ~HostCommunication_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCommunication"; }
};

class HostConfigFailed_closure : public closure
{
protected:
	vw1__HostConfigFailed _obj;
public:
	HostConfigFailed_closure(const vw1__HostConfigFailed& obj) : _obj(obj) {}
	virtual ~HostConfigFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConfigFailed"; }
};

class HostConfigFault_closure : public closure
{
protected:
	vw1__HostConfigFault _obj;
public:
	HostConfigFault_closure(const vw1__HostConfigFault& obj) : _obj(obj) {}
	virtual ~HostConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConfigFault"; }
};

class HostConnectFault_closure : public closure
{
protected:
	vw1__HostConnectFault _obj;
public:
	HostConnectFault_closure(const vw1__HostConnectFault& obj) : _obj(obj) {}
	virtual ~HostConnectFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostConnectFault"; }
};

class HostInDomain_closure : public closure
{
protected:
	vw1__HostInDomain _obj;
public:
	HostInDomain_closure(const vw1__HostInDomain& obj) : _obj(obj) {}
	virtual ~HostInDomain_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInDomain"; }
};

class HostIncompatibleForFaultTolerance_closure : public closure
{
protected:
	vw1__HostIncompatibleForFaultTolerance _obj;
public:
	HostIncompatibleForFaultTolerance_closure(const vw1__HostIncompatibleForFaultTolerance& obj) : _obj(obj) {}
	virtual ~HostIncompatibleForFaultTolerance_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIncompatibleForFaultTolerance"; }
};

class HostIncompatibleForRecordReplay_closure : public closure
{
protected:
	vw1__HostIncompatibleForRecordReplay _obj;
public:
	HostIncompatibleForRecordReplay_closure(const vw1__HostIncompatibleForRecordReplay& obj) : _obj(obj) {}
	virtual ~HostIncompatibleForRecordReplay_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostIncompatibleForRecordReplay"; }
};

class HostInventoryFull_closure : public closure
{
protected:
	vw1__HostInventoryFull _obj;
public:
	HostInventoryFull_closure(const vw1__HostInventoryFull& obj) : _obj(obj) {}
	virtual ~HostInventoryFull_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostInventoryFull"; }
};

class HostNotConnected_closure : public closure
{
protected:
	vw1__HostNotConnected _obj;
public:
	HostNotConnected_closure(const vw1__HostNotConnected& obj) : _obj(obj) {}
	virtual ~HostNotConnected_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNotConnected"; }
};

class HostNotReachable_closure : public closure
{
protected:
	vw1__HostNotReachable _obj;
public:
	HostNotReachable_closure(const vw1__HostNotReachable& obj) : _obj(obj) {}
	virtual ~HostNotReachable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNotReachable"; }
};

class HostPowerOpFailed_closure : public closure
{
protected:
	vw1__HostPowerOpFailed _obj;
public:
	HostPowerOpFailed_closure(const vw1__HostPowerOpFailed& obj) : _obj(obj) {}
	virtual ~HostPowerOpFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPowerOpFailed"; }
};

class HotSnapshotMoveNotSupported_closure : public closure
{
protected:
	vw1__HotSnapshotMoveNotSupported _obj;
public:
	HotSnapshotMoveNotSupported_closure(const vw1__HotSnapshotMoveNotSupported& obj) : _obj(obj) {}
	virtual ~HotSnapshotMoveNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HotSnapshotMoveNotSupported"; }
};

class IDEDiskNotSupported_closure : public closure
{
protected:
	vw1__IDEDiskNotSupported _obj;
public:
	IDEDiskNotSupported_closure(const vw1__IDEDiskNotSupported& obj) : _obj(obj) {}
	virtual ~IDEDiskNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IDEDiskNotSupported"; }
};

class IORMNotSupportedHostOnDatastore_closure : public closure
{
protected:
	vw1__IORMNotSupportedHostOnDatastore _obj;
public:
	IORMNotSupportedHostOnDatastore_closure(const vw1__IORMNotSupportedHostOnDatastore& obj) : _obj(obj) {}
	virtual ~IORMNotSupportedHostOnDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IORMNotSupportedHostOnDatastore"; }
};

class InUseFeatureManipulationDisallowed_closure : public closure
{
protected:
	vw1__InUseFeatureManipulationDisallowed _obj;
public:
	InUseFeatureManipulationDisallowed_closure(const vw1__InUseFeatureManipulationDisallowed& obj) : _obj(obj) {}
	virtual ~InUseFeatureManipulationDisallowed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InUseFeatureManipulationDisallowed"; }
};

class InaccessibleDatastore_closure : public closure
{
protected:
	vw1__InaccessibleDatastore _obj;
public:
	InaccessibleDatastore_closure(const vw1__InaccessibleDatastore& obj) : _obj(obj) {}
	virtual ~InaccessibleDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InaccessibleDatastore"; }
};

class IncompatibleDefaultDevice_closure : public closure
{
protected:
	vw1__IncompatibleDefaultDevice _obj;
public:
	IncompatibleDefaultDevice_closure(const vw1__IncompatibleDefaultDevice& obj) : _obj(obj) {}
	virtual ~IncompatibleDefaultDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IncompatibleDefaultDevice"; }
};

class IncompatibleHostForFtSecondary_closure : public closure
{
protected:
	vw1__IncompatibleHostForFtSecondary _obj;
public:
	IncompatibleHostForFtSecondary_closure(const vw1__IncompatibleHostForFtSecondary& obj) : _obj(obj) {}
	virtual ~IncompatibleHostForFtSecondary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IncompatibleHostForFtSecondary"; }
};

class IncompatibleSetting_closure : public closure
{
protected:
	vw1__IncompatibleSetting _obj;
public:
	IncompatibleSetting_closure(const vw1__IncompatibleSetting& obj) : _obj(obj) {}
	virtual ~IncompatibleSetting_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IncompatibleSetting"; }
};

class IncorrectFileType_closure : public closure
{
protected:
	vw1__IncorrectFileType _obj;
public:
	IncorrectFileType_closure(const vw1__IncorrectFileType& obj) : _obj(obj) {}
	virtual ~IncorrectFileType_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IncorrectFileType"; }
};

class IncorrectHostInformation_closure : public closure
{
protected:
	vw1__IncorrectHostInformation _obj;
public:
	IncorrectHostInformation_closure(const vw1__IncorrectHostInformation& obj) : _obj(obj) {}
	virtual ~IncorrectHostInformation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IncorrectHostInformation"; }
};

class IndependentDiskVMotionNotSupported_closure : public closure
{
protected:
	vw1__IndependentDiskVMotionNotSupported _obj;
public:
	IndependentDiskVMotionNotSupported_closure(const vw1__IndependentDiskVMotionNotSupported& obj) : _obj(obj) {}
	virtual ~IndependentDiskVMotionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IndependentDiskVMotionNotSupported"; }
};

class InsufficientAgentVmsDeployed_closure : public closure
{
protected:
	vw1__InsufficientAgentVmsDeployed _obj;
public:
	InsufficientAgentVmsDeployed_closure(const vw1__InsufficientAgentVmsDeployed& obj) : _obj(obj) {}
	virtual ~InsufficientAgentVmsDeployed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientAgentVmsDeployed"; }
};

class InsufficientCpuResourcesFault_closure : public closure
{
protected:
	vw1__InsufficientCpuResourcesFault _obj;
public:
	InsufficientCpuResourcesFault_closure(const vw1__InsufficientCpuResourcesFault& obj) : _obj(obj) {}
	virtual ~InsufficientCpuResourcesFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientCpuResourcesFault"; }
};

class InsufficientFailoverResourcesFault_closure : public closure
{
protected:
	vw1__InsufficientFailoverResourcesFault _obj;
public:
	InsufficientFailoverResourcesFault_closure(const vw1__InsufficientFailoverResourcesFault& obj) : _obj(obj) {}
	virtual ~InsufficientFailoverResourcesFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientFailoverResourcesFault"; }
};

class InsufficientHostCapacityFault_closure : public closure
{
protected:
	vw1__InsufficientHostCapacityFault _obj;
public:
	InsufficientHostCapacityFault_closure(const vw1__InsufficientHostCapacityFault& obj) : _obj(obj) {}
	virtual ~InsufficientHostCapacityFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientHostCapacityFault"; }
};

class InsufficientHostCpuCapacityFault_closure : public closure
{
protected:
	vw1__InsufficientHostCpuCapacityFault _obj;
public:
	InsufficientHostCpuCapacityFault_closure(const vw1__InsufficientHostCpuCapacityFault& obj) : _obj(obj) {}
	virtual ~InsufficientHostCpuCapacityFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientHostCpuCapacityFault"; }
};

class InsufficientHostMemoryCapacityFault_closure : public closure
{
protected:
	vw1__InsufficientHostMemoryCapacityFault _obj;
public:
	InsufficientHostMemoryCapacityFault_closure(const vw1__InsufficientHostMemoryCapacityFault& obj) : _obj(obj) {}
	virtual ~InsufficientHostMemoryCapacityFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientHostMemoryCapacityFault"; }
};

class InsufficientMemoryResourcesFault_closure : public closure
{
protected:
	vw1__InsufficientMemoryResourcesFault _obj;
public:
	InsufficientMemoryResourcesFault_closure(const vw1__InsufficientMemoryResourcesFault& obj) : _obj(obj) {}
	virtual ~InsufficientMemoryResourcesFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientMemoryResourcesFault"; }
};

class InsufficientPerCpuCapacity_closure : public closure
{
protected:
	vw1__InsufficientPerCpuCapacity _obj;
public:
	InsufficientPerCpuCapacity_closure(const vw1__InsufficientPerCpuCapacity& obj) : _obj(obj) {}
	virtual ~InsufficientPerCpuCapacity_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientPerCpuCapacity"; }
};

class InsufficientResourcesFault_closure : public closure
{
protected:
	vw1__InsufficientResourcesFault _obj;
public:
	InsufficientResourcesFault_closure(const vw1__InsufficientResourcesFault& obj) : _obj(obj) {}
	virtual ~InsufficientResourcesFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientResourcesFault"; }
};

class InsufficientStandbyCpuResource_closure : public closure
{
protected:
	vw1__InsufficientStandbyCpuResource _obj;
public:
	InsufficientStandbyCpuResource_closure(const vw1__InsufficientStandbyCpuResource& obj) : _obj(obj) {}
	virtual ~InsufficientStandbyCpuResource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientStandbyCpuResource"; }
};

class InsufficientStandbyMemoryResource_closure : public closure
{
protected:
	vw1__InsufficientStandbyMemoryResource _obj;
public:
	InsufficientStandbyMemoryResource_closure(const vw1__InsufficientStandbyMemoryResource& obj) : _obj(obj) {}
	virtual ~InsufficientStandbyMemoryResource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientStandbyMemoryResource"; }
};

class InsufficientStandbyResource_closure : public closure
{
protected:
	vw1__InsufficientStandbyResource _obj;
public:
	InsufficientStandbyResource_closure(const vw1__InsufficientStandbyResource& obj) : _obj(obj) {}
	virtual ~InsufficientStandbyResource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientStandbyResource"; }
};

class InsufficientStorageSpace_closure : public closure
{
protected:
	vw1__InsufficientStorageSpace _obj;
public:
	InsufficientStorageSpace_closure(const vw1__InsufficientStorageSpace& obj) : _obj(obj) {}
	virtual ~InsufficientStorageSpace_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InsufficientStorageSpace"; }
};

class InvalidAffinitySettingFault_closure : public closure
{
protected:
	vw1__InvalidAffinitySettingFault _obj;
public:
	InvalidAffinitySettingFault_closure(const vw1__InvalidAffinitySettingFault& obj) : _obj(obj) {}
	virtual ~InvalidAffinitySettingFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidAffinitySettingFault"; }
};

class InvalidArgument_closure : public closure
{
protected:
	vw1__InvalidArgument _obj;
public:
	InvalidArgument_closure(const vw1__InvalidArgument& obj) : _obj(obj) {}
	virtual ~InvalidArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidArgument"; }
};

class InvalidBmcRole_closure : public closure
{
protected:
	vw1__InvalidBmcRole _obj;
public:
	InvalidBmcRole_closure(const vw1__InvalidBmcRole& obj) : _obj(obj) {}
	virtual ~InvalidBmcRole_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidBmcRole"; }
};

class InvalidBundle_closure : public closure
{
protected:
	vw1__InvalidBundle _obj;
public:
	InvalidBundle_closure(const vw1__InvalidBundle& obj) : _obj(obj) {}
	virtual ~InvalidBundle_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidBundle"; }
};

class InvalidCAMCertificate_closure : public closure
{
protected:
	vw1__InvalidCAMCertificate _obj;
public:
	InvalidCAMCertificate_closure(const vw1__InvalidCAMCertificate& obj) : _obj(obj) {}
	virtual ~InvalidCAMCertificate_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidCAMCertificate"; }
};

class InvalidCAMServer_closure : public closure
{
protected:
	vw1__InvalidCAMServer _obj;
public:
	InvalidCAMServer_closure(const vw1__InvalidCAMServer& obj) : _obj(obj) {}
	virtual ~InvalidCAMServer_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidCAMServer"; }
};

class InvalidClientCertificate_closure : public closure
{
protected:
	vw1__InvalidClientCertificate _obj;
public:
	InvalidClientCertificate_closure(const vw1__InvalidClientCertificate& obj) : _obj(obj) {}
	virtual ~InvalidClientCertificate_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidClientCertificate"; }
};

class InvalidCollectorVersion_closure : public closure
{
protected:
	vw1__InvalidCollectorVersion _obj;
public:
	InvalidCollectorVersion_closure(const vw1__InvalidCollectorVersion& obj) : _obj(obj) {}
	virtual ~InvalidCollectorVersion_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidCollectorVersion"; }
};

class InvalidController_closure : public closure
{
protected:
	vw1__InvalidController _obj;
public:
	InvalidController_closure(const vw1__InvalidController& obj) : _obj(obj) {}
	virtual ~InvalidController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidController"; }
};

class InvalidDasRestartPriorityForFtVm_closure : public closure
{
protected:
	vw1__InvalidDasRestartPriorityForFtVm _obj;
public:
	InvalidDasRestartPriorityForFtVm_closure(const vw1__InvalidDasRestartPriorityForFtVm& obj) : _obj(obj) {}
	virtual ~InvalidDasRestartPriorityForFtVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDasRestartPriorityForFtVm"; }
};

class InvalidDatastore_closure : public closure
{
protected:
	vw1__InvalidDatastore _obj;
public:
	InvalidDatastore_closure(const vw1__InvalidDatastore& obj) : _obj(obj) {}
	virtual ~InvalidDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDatastore"; }
};

class InvalidDatastorePath_closure : public closure
{
protected:
	vw1__InvalidDatastorePath _obj;
public:
	InvalidDatastorePath_closure(const vw1__InvalidDatastorePath& obj) : _obj(obj) {}
	virtual ~InvalidDatastorePath_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDatastorePath"; }
};

class InvalidDatastoreState_closure : public closure
{
protected:
	vw1__InvalidDatastoreState _obj;
public:
	InvalidDatastoreState_closure(const vw1__InvalidDatastoreState& obj) : _obj(obj) {}
	virtual ~InvalidDatastoreState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDatastoreState"; }
};

class InvalidDeviceBacking_closure : public closure
{
protected:
	vw1__InvalidDeviceBacking _obj;
public:
	InvalidDeviceBacking_closure(const vw1__InvalidDeviceBacking& obj) : _obj(obj) {}
	virtual ~InvalidDeviceBacking_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDeviceBacking"; }
};

class InvalidDeviceOperation_closure : public closure
{
protected:
	vw1__InvalidDeviceOperation _obj;
public:
	InvalidDeviceOperation_closure(const vw1__InvalidDeviceOperation& obj) : _obj(obj) {}
	virtual ~InvalidDeviceOperation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDeviceOperation"; }
};

class InvalidDeviceSpec_closure : public closure
{
protected:
	vw1__InvalidDeviceSpec _obj;
public:
	InvalidDeviceSpec_closure(const vw1__InvalidDeviceSpec& obj) : _obj(obj) {}
	virtual ~InvalidDeviceSpec_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDeviceSpec"; }
};

class InvalidDiskFormat_closure : public closure
{
protected:
	vw1__InvalidDiskFormat _obj;
public:
	InvalidDiskFormat_closure(const vw1__InvalidDiskFormat& obj) : _obj(obj) {}
	virtual ~InvalidDiskFormat_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDiskFormat"; }
};

class InvalidDrsBehaviorForFtVm_closure : public closure
{
protected:
	vw1__InvalidDrsBehaviorForFtVm _obj;
public:
	InvalidDrsBehaviorForFtVm_closure(const vw1__InvalidDrsBehaviorForFtVm& obj) : _obj(obj) {}
	virtual ~InvalidDrsBehaviorForFtVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidDrsBehaviorForFtVm"; }
};

class InvalidEditionLicense_closure : public closure
{
protected:
	vw1__InvalidEditionLicense _obj;
public:
	InvalidEditionLicense_closure(const vw1__InvalidEditionLicense& obj) : _obj(obj) {}
	virtual ~InvalidEditionLicense_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidEditionLicense"; }
};

class InvalidEvent_closure : public closure
{
protected:
	vw1__InvalidEvent _obj;
public:
	InvalidEvent_closure(const vw1__InvalidEvent& obj) : _obj(obj) {}
	virtual ~InvalidEvent_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidEvent"; }
};

class InvalidFolder_closure : public closure
{
protected:
	vw1__InvalidFolder _obj;
public:
	InvalidFolder_closure(const vw1__InvalidFolder& obj) : _obj(obj) {}
	virtual ~InvalidFolder_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidFolder"; }
};

class InvalidFormat_closure : public closure
{
protected:
	vw1__InvalidFormat _obj;
public:
	InvalidFormat_closure(const vw1__InvalidFormat& obj) : _obj(obj) {}
	virtual ~InvalidFormat_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidFormat"; }
};

class InvalidGuestLogin_closure : public closure
{
protected:
	vw1__InvalidGuestLogin _obj;
public:
	InvalidGuestLogin_closure(const vw1__InvalidGuestLogin& obj) : _obj(obj) {}
	virtual ~InvalidGuestLogin_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidGuestLogin"; }
};

class InvalidHostName_closure : public closure
{
protected:
	vw1__InvalidHostName _obj;
public:
	InvalidHostName_closure(const vw1__InvalidHostName& obj) : _obj(obj) {}
	virtual ~InvalidHostName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidHostName"; }
};

class InvalidHostState_closure : public closure
{
protected:
	vw1__InvalidHostState _obj;
public:
	InvalidHostState_closure(const vw1__InvalidHostState& obj) : _obj(obj) {}
	virtual ~InvalidHostState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidHostState"; }
};

class InvalidIndexArgument_closure : public closure
{
protected:
	vw1__InvalidIndexArgument _obj;
public:
	InvalidIndexArgument_closure(const vw1__InvalidIndexArgument& obj) : _obj(obj) {}
	virtual ~InvalidIndexArgument_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidIndexArgument"; }
};

class InvalidIpmiLoginInfo_closure : public closure
{
protected:
	vw1__InvalidIpmiLoginInfo _obj;
public:
	InvalidIpmiLoginInfo_closure(const vw1__InvalidIpmiLoginInfo& obj) : _obj(obj) {}
	virtual ~InvalidIpmiLoginInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidIpmiLoginInfo"; }
};

class InvalidIpmiMacAddress_closure : public closure
{
protected:
	vw1__InvalidIpmiMacAddress _obj;
public:
	InvalidIpmiMacAddress_closure(const vw1__InvalidIpmiMacAddress& obj) : _obj(obj) {}
	virtual ~InvalidIpmiMacAddress_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidIpmiMacAddress"; }
};

class InvalidLicense_closure : public closure
{
protected:
	vw1__InvalidLicense _obj;
public:
	InvalidLicense_closure(const vw1__InvalidLicense& obj) : _obj(obj) {}
	virtual ~InvalidLicense_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidLicense"; }
};

class InvalidLocale_closure : public closure
{
protected:
	vw1__InvalidLocale _obj;
public:
	InvalidLocale_closure(const vw1__InvalidLocale& obj) : _obj(obj) {}
	virtual ~InvalidLocale_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidLocale"; }
};

class InvalidLogin_closure : public closure
{
protected:
	vw1__InvalidLogin _obj;
public:
	InvalidLogin_closure(const vw1__InvalidLogin& obj) : _obj(obj) {}
	virtual ~InvalidLogin_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidLogin"; }
};

class InvalidName_closure : public closure
{
protected:
	vw1__InvalidName _obj;
public:
	InvalidName_closure(const vw1__InvalidName& obj) : _obj(obj) {}
	virtual ~InvalidName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidName"; }
};

class InvalidNasCredentials_closure : public closure
{
protected:
	vw1__InvalidNasCredentials _obj;
public:
	InvalidNasCredentials_closure(const vw1__InvalidNasCredentials& obj) : _obj(obj) {}
	virtual ~InvalidNasCredentials_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidNasCredentials"; }
};

class InvalidNetworkInType_closure : public closure
{
protected:
	vw1__InvalidNetworkInType _obj;
public:
	InvalidNetworkInType_closure(const vw1__InvalidNetworkInType& obj) : _obj(obj) {}
	virtual ~InvalidNetworkInType_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidNetworkInType"; }
};

class InvalidNetworkResource_closure : public closure
{
protected:
	vw1__InvalidNetworkResource _obj;
public:
	InvalidNetworkResource_closure(const vw1__InvalidNetworkResource& obj) : _obj(obj) {}
	virtual ~InvalidNetworkResource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidNetworkResource"; }
};

class InvalidOperationOnSecondaryVm_closure : public closure
{
protected:
	vw1__InvalidOperationOnSecondaryVm _obj;
public:
	InvalidOperationOnSecondaryVm_closure(const vw1__InvalidOperationOnSecondaryVm& obj) : _obj(obj) {}
	virtual ~InvalidOperationOnSecondaryVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidOperationOnSecondaryVm"; }
};

class InvalidPowerState_closure : public closure
{
protected:
	vw1__InvalidPowerState _obj;
public:
	InvalidPowerState_closure(const vw1__InvalidPowerState& obj) : _obj(obj) {}
	virtual ~InvalidPowerState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidPowerState"; }
};

class InvalidPrivilege_closure : public closure
{
protected:
	vw1__InvalidPrivilege _obj;
public:
	InvalidPrivilege_closure(const vw1__InvalidPrivilege& obj) : _obj(obj) {}
	virtual ~InvalidPrivilege_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidPrivilege"; }
};

class InvalidProfileReferenceHost_closure : public closure
{
protected:
	vw1__InvalidProfileReferenceHost _obj;
public:
	InvalidProfileReferenceHost_closure(const vw1__InvalidProfileReferenceHost& obj) : _obj(obj) {}
	virtual ~InvalidProfileReferenceHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidProfileReferenceHost"; }
};

class InvalidProperty_closure : public closure
{
protected:
	vw1__InvalidProperty _obj;
public:
	InvalidProperty_closure(const vw1__InvalidProperty& obj) : _obj(obj) {}
	virtual ~InvalidProperty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidProperty"; }
};

class InvalidPropertyType_closure : public closure
{
protected:
	vw1__InvalidPropertyType _obj;
public:
	InvalidPropertyType_closure(const vw1__InvalidPropertyType& obj) : _obj(obj) {}
	virtual ~InvalidPropertyType_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidPropertyType"; }
};

class InvalidPropertyValue_closure : public closure
{
protected:
	vw1__InvalidPropertyValue _obj;
public:
	InvalidPropertyValue_closure(const vw1__InvalidPropertyValue& obj) : _obj(obj) {}
	virtual ~InvalidPropertyValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidPropertyValue"; }
};

class InvalidRequest_closure : public closure
{
protected:
	vw1__InvalidRequest _obj;
public:
	InvalidRequest_closure(const vw1__InvalidRequest& obj) : _obj(obj) {}
	virtual ~InvalidRequest_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidRequest"; }
};

class InvalidResourcePoolStructureFault_closure : public closure
{
protected:
	vw1__InvalidResourcePoolStructureFault _obj;
public:
	InvalidResourcePoolStructureFault_closure(const vw1__InvalidResourcePoolStructureFault& obj) : _obj(obj) {}
	virtual ~InvalidResourcePoolStructureFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidResourcePoolStructureFault"; }
};

class InvalidSnapshotFormat_closure : public closure
{
protected:
	vw1__InvalidSnapshotFormat _obj;
public:
	InvalidSnapshotFormat_closure(const vw1__InvalidSnapshotFormat& obj) : _obj(obj) {}
	virtual ~InvalidSnapshotFormat_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidSnapshotFormat"; }
};

class InvalidState_closure : public closure
{
protected:
	vw1__InvalidState _obj;
public:
	InvalidState_closure(const vw1__InvalidState& obj) : _obj(obj) {}
	virtual ~InvalidState_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidState"; }
};

class InvalidType_closure : public closure
{
protected:
	vw1__InvalidType _obj;
public:
	InvalidType_closure(const vw1__InvalidType& obj) : _obj(obj) {}
	virtual ~InvalidType_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidType"; }
};

class InvalidVmConfig_closure : public closure
{
protected:
	vw1__InvalidVmConfig _obj;
public:
	InvalidVmConfig_closure(const vw1__InvalidVmConfig& obj) : _obj(obj) {}
	virtual ~InvalidVmConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InvalidVmConfig"; }
};

class InventoryHasStandardAloneHosts_closure : public closure
{
protected:
	vw1__InventoryHasStandardAloneHosts _obj;
public:
	InventoryHasStandardAloneHosts_closure(const vw1__InventoryHasStandardAloneHosts& obj) : _obj(obj) {}
	virtual ~InventoryHasStandardAloneHosts_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InventoryHasStandardAloneHosts"; }
};

class IpHostnameGeneratorError_closure : public closure
{
protected:
	vw1__IpHostnameGeneratorError _obj;
public:
	IpHostnameGeneratorError_closure(const vw1__IpHostnameGeneratorError& obj) : _obj(obj) {}
	virtual ~IpHostnameGeneratorError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IpHostnameGeneratorError"; }
};

class IscsiFault_closure : public closure
{
protected:
	vw1__IscsiFault _obj;
public:
	IscsiFault_closure(const vw1__IscsiFault& obj) : _obj(obj) {}
	virtual ~IscsiFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFault"; }
};

class IscsiFaultInvalidVnic_closure : public closure
{
protected:
	vw1__IscsiFaultInvalidVnic _obj;
public:
	IscsiFaultInvalidVnic_closure(const vw1__IscsiFaultInvalidVnic& obj) : _obj(obj) {}
	virtual ~IscsiFaultInvalidVnic_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultInvalidVnic"; }
};

class IscsiFaultPnicInUse_closure : public closure
{
protected:
	vw1__IscsiFaultPnicInUse _obj;
public:
	IscsiFaultPnicInUse_closure(const vw1__IscsiFaultPnicInUse& obj) : _obj(obj) {}
	virtual ~IscsiFaultPnicInUse_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultPnicInUse"; }
};

class IscsiFaultVnicAlreadyBound_closure : public closure
{
protected:
	vw1__IscsiFaultVnicAlreadyBound _obj;
public:
	IscsiFaultVnicAlreadyBound_closure(const vw1__IscsiFaultVnicAlreadyBound& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicAlreadyBound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicAlreadyBound"; }
};

class IscsiFaultVnicHasActivePaths_closure : public closure
{
protected:
	vw1__IscsiFaultVnicHasActivePaths _obj;
public:
	IscsiFaultVnicHasActivePaths_closure(const vw1__IscsiFaultVnicHasActivePaths& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicHasActivePaths_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicHasActivePaths"; }
};

class IscsiFaultVnicHasMultipleUplinks_closure : public closure
{
protected:
	vw1__IscsiFaultVnicHasMultipleUplinks _obj;
public:
	IscsiFaultVnicHasMultipleUplinks_closure(const vw1__IscsiFaultVnicHasMultipleUplinks& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicHasMultipleUplinks_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicHasMultipleUplinks"; }
};

class IscsiFaultVnicHasNoUplinks_closure : public closure
{
protected:
	vw1__IscsiFaultVnicHasNoUplinks _obj;
public:
	IscsiFaultVnicHasNoUplinks_closure(const vw1__IscsiFaultVnicHasNoUplinks& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicHasNoUplinks_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicHasNoUplinks"; }
};

class IscsiFaultVnicHasWrongUplink_closure : public closure
{
protected:
	vw1__IscsiFaultVnicHasWrongUplink _obj;
public:
	IscsiFaultVnicHasWrongUplink_closure(const vw1__IscsiFaultVnicHasWrongUplink& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicHasWrongUplink_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicHasWrongUplink"; }
};

class IscsiFaultVnicInUse_closure : public closure
{
protected:
	vw1__IscsiFaultVnicInUse _obj;
public:
	IscsiFaultVnicInUse_closure(const vw1__IscsiFaultVnicInUse& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicInUse_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicInUse"; }
};

class IscsiFaultVnicIsLastPath_closure : public closure
{
protected:
	vw1__IscsiFaultVnicIsLastPath _obj;
public:
	IscsiFaultVnicIsLastPath_closure(const vw1__IscsiFaultVnicIsLastPath& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicIsLastPath_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicIsLastPath"; }
};

class IscsiFaultVnicNotBound_closure : public closure
{
protected:
	vw1__IscsiFaultVnicNotBound _obj;
public:
	IscsiFaultVnicNotBound_closure(const vw1__IscsiFaultVnicNotBound& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicNotBound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicNotBound"; }
};

class IscsiFaultVnicNotFound_closure : public closure
{
protected:
	vw1__IscsiFaultVnicNotFound _obj;
public:
	IscsiFaultVnicNotFound_closure(const vw1__IscsiFaultVnicNotFound& obj) : _obj(obj) {}
	virtual ~IscsiFaultVnicNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiFaultVnicNotFound"; }
};

class LargeRDMConversionNotSupported_closure : public closure
{
protected:
	vw1__LargeRDMConversionNotSupported _obj;
public:
	LargeRDMConversionNotSupported_closure(const vw1__LargeRDMConversionNotSupported& obj) : _obj(obj) {}
	virtual ~LargeRDMConversionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LargeRDMConversionNotSupported"; }
};

class LargeRDMNotSupportedOnDatastore_closure : public closure
{
protected:
	vw1__LargeRDMNotSupportedOnDatastore _obj;
public:
	LargeRDMNotSupportedOnDatastore_closure(const vw1__LargeRDMNotSupportedOnDatastore& obj) : _obj(obj) {}
	virtual ~LargeRDMNotSupportedOnDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LargeRDMNotSupportedOnDatastore"; }
};

class LegacyNetworkInterfaceInUse_closure : public closure
{
protected:
	vw1__LegacyNetworkInterfaceInUse _obj;
public:
	LegacyNetworkInterfaceInUse_closure(const vw1__LegacyNetworkInterfaceInUse& obj) : _obj(obj) {}
	virtual ~LegacyNetworkInterfaceInUse_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LegacyNetworkInterfaceInUse"; }
};

class LicenseAssignmentFailed_closure : public closure
{
protected:
	vw1__LicenseAssignmentFailed _obj;
public:
	LicenseAssignmentFailed_closure(const vw1__LicenseAssignmentFailed& obj) : _obj(obj) {}
	virtual ~LicenseAssignmentFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseAssignmentFailed"; }
};

class LicenseDowngradeDisallowed_closure : public closure
{
protected:
	vw1__LicenseDowngradeDisallowed _obj;
public:
	LicenseDowngradeDisallowed_closure(const vw1__LicenseDowngradeDisallowed& obj) : _obj(obj) {}
	virtual ~LicenseDowngradeDisallowed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseDowngradeDisallowed"; }
};

class LicenseEntityNotFound_closure : public closure
{
protected:
	vw1__LicenseEntityNotFound _obj;
public:
	LicenseEntityNotFound_closure(const vw1__LicenseEntityNotFound& obj) : _obj(obj) {}
	virtual ~LicenseEntityNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseEntityNotFound"; }
};

class LicenseExpired_closure : public closure
{
protected:
	vw1__LicenseExpired _obj;
public:
	LicenseExpired_closure(const vw1__LicenseExpired& obj) : _obj(obj) {}
	virtual ~LicenseExpired_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseExpired"; }
};

class LicenseKeyEntityMismatch_closure : public closure
{
protected:
	vw1__LicenseKeyEntityMismatch _obj;
public:
	LicenseKeyEntityMismatch_closure(const vw1__LicenseKeyEntityMismatch& obj) : _obj(obj) {}
	virtual ~LicenseKeyEntityMismatch_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseKeyEntityMismatch"; }
};

class LicenseRestricted_closure : public closure
{
protected:
	vw1__LicenseRestricted _obj;
public:
	LicenseRestricted_closure(const vw1__LicenseRestricted& obj) : _obj(obj) {}
	virtual ~LicenseRestricted_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseRestricted"; }
};

class LicenseServerUnavailable_closure : public closure
{
protected:
	vw1__LicenseServerUnavailable _obj;
public:
	LicenseServerUnavailable_closure(const vw1__LicenseServerUnavailable& obj) : _obj(obj) {}
	virtual ~LicenseServerUnavailable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseServerUnavailable"; }
};

class LicenseSourceUnavailable_closure : public closure
{
protected:
	vw1__LicenseSourceUnavailable _obj;
public:
	LicenseSourceUnavailable_closure(const vw1__LicenseSourceUnavailable& obj) : _obj(obj) {}
	virtual ~LicenseSourceUnavailable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseSourceUnavailable"; }
};

class LimitExceeded_closure : public closure
{
protected:
	vw1__LimitExceeded _obj;
public:
	LimitExceeded_closure(const vw1__LimitExceeded& obj) : _obj(obj) {}
	virtual ~LimitExceeded_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LimitExceeded"; }
};

class LinuxVolumeNotClean_closure : public closure
{
protected:
	vw1__LinuxVolumeNotClean _obj;
public:
	LinuxVolumeNotClean_closure(const vw1__LinuxVolumeNotClean& obj) : _obj(obj) {}
	virtual ~LinuxVolumeNotClean_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LinuxVolumeNotClean"; }
};

class LogBundlingFailed_closure : public closure
{
protected:
	vw1__LogBundlingFailed _obj;
public:
	LogBundlingFailed_closure(const vw1__LogBundlingFailed& obj) : _obj(obj) {}
	virtual ~LogBundlingFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LogBundlingFailed"; }
};

class MaintenanceModeFileMove_closure : public closure
{
protected:
	vw1__MaintenanceModeFileMove _obj;
public:
	MaintenanceModeFileMove_closure(const vw1__MaintenanceModeFileMove& obj) : _obj(obj) {}
	virtual ~MaintenanceModeFileMove_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MaintenanceModeFileMove"; }
};

class ManagedObjectNotFound_closure : public closure
{
protected:
	vw1__ManagedObjectNotFound _obj;
public:
	ManagedObjectNotFound_closure(const vw1__ManagedObjectNotFound& obj) : _obj(obj) {}
	virtual ~ManagedObjectNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ManagedObjectNotFound"; }
};

class MemoryHotPlugNotSupported_closure : public closure
{
protected:
	vw1__MemoryHotPlugNotSupported _obj;
public:
	MemoryHotPlugNotSupported_closure(const vw1__MemoryHotPlugNotSupported& obj) : _obj(obj) {}
	virtual ~MemoryHotPlugNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MemoryHotPlugNotSupported"; }
};

class MemorySizeNotRecommended_closure : public closure
{
protected:
	vw1__MemorySizeNotRecommended _obj;
public:
	MemorySizeNotRecommended_closure(const vw1__MemorySizeNotRecommended& obj) : _obj(obj) {}
	virtual ~MemorySizeNotRecommended_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MemorySizeNotRecommended"; }
};

class MemorySizeNotSupported_closure : public closure
{
protected:
	vw1__MemorySizeNotSupported _obj;
public:
	MemorySizeNotSupported_closure(const vw1__MemorySizeNotSupported& obj) : _obj(obj) {}
	virtual ~MemorySizeNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MemorySizeNotSupported"; }
};

class MemorySizeNotSupportedByDatastore_closure : public closure
{
protected:
	vw1__MemorySizeNotSupportedByDatastore _obj;
public:
	MemorySizeNotSupportedByDatastore_closure(const vw1__MemorySizeNotSupportedByDatastore& obj) : _obj(obj) {}
	virtual ~MemorySizeNotSupportedByDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MemorySizeNotSupportedByDatastore"; }
};

class MemorySnapshotOnIndependentDisk_closure : public closure
{
protected:
	vw1__MemorySnapshotOnIndependentDisk _obj;
public:
	MemorySnapshotOnIndependentDisk_closure(const vw1__MemorySnapshotOnIndependentDisk& obj) : _obj(obj) {}
	virtual ~MemorySnapshotOnIndependentDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MemorySnapshotOnIndependentDisk"; }
};

class MethodAlreadyDisabledFault_closure : public closure
{
protected:
	vw1__MethodAlreadyDisabledFault _obj;
public:
	MethodAlreadyDisabledFault_closure(const vw1__MethodAlreadyDisabledFault& obj) : _obj(obj) {}
	virtual ~MethodAlreadyDisabledFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MethodAlreadyDisabledFault"; }
};

class MethodDisabled_closure : public closure
{
protected:
	vw1__MethodDisabled _obj;
public:
	MethodDisabled_closure(const vw1__MethodDisabled& obj) : _obj(obj) {}
	virtual ~MethodDisabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MethodDisabled"; }
};

class MethodFault_closure : public closure
{
protected:
	vw1__MethodFault _obj;
public:
	MethodFault_closure(const vw1__MethodFault& obj) : _obj(obj) {}
	virtual ~MethodFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MethodFault"; }
};

class MethodNotFound_closure : public closure
{
protected:
	vw1__MethodNotFound _obj;
public:
	MethodNotFound_closure(const vw1__MethodNotFound& obj) : _obj(obj) {}
	virtual ~MethodNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MethodNotFound"; }
};

class MigrationDisabled_closure : public closure
{
protected:
	vw1__MigrationDisabled _obj;
public:
	MigrationDisabled_closure(const vw1__MigrationDisabled& obj) : _obj(obj) {}
	virtual ~MigrationDisabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationDisabled"; }
};

class MigrationFault_closure : public closure
{
protected:
	vw1__MigrationFault _obj;
public:
	MigrationFault_closure(const vw1__MigrationFault& obj) : _obj(obj) {}
	virtual ~MigrationFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationFault"; }
};

class MigrationFeatureNotSupported_closure : public closure
{
protected:
	vw1__MigrationFeatureNotSupported _obj;
public:
	MigrationFeatureNotSupported_closure(const vw1__MigrationFeatureNotSupported& obj) : _obj(obj) {}
	virtual ~MigrationFeatureNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationFeatureNotSupported"; }
};

class MigrationNotReady_closure : public closure
{
protected:
	vw1__MigrationNotReady _obj;
public:
	MigrationNotReady_closure(const vw1__MigrationNotReady& obj) : _obj(obj) {}
	virtual ~MigrationNotReady_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MigrationNotReady"; }
};

class MismatchedBundle_closure : public closure
{
protected:
	vw1__MismatchedBundle _obj;
public:
	MismatchedBundle_closure(const vw1__MismatchedBundle& obj) : _obj(obj) {}
	virtual ~MismatchedBundle_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MismatchedBundle"; }
};

class MismatchedNetworkPolicies_closure : public closure
{
protected:
	vw1__MismatchedNetworkPolicies _obj;
public:
	MismatchedNetworkPolicies_closure(const vw1__MismatchedNetworkPolicies& obj) : _obj(obj) {}
	virtual ~MismatchedNetworkPolicies_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MismatchedNetworkPolicies"; }
};

class MismatchedVMotionNetworkNames_closure : public closure
{
protected:
	vw1__MismatchedVMotionNetworkNames _obj;
public:
	MismatchedVMotionNetworkNames_closure(const vw1__MismatchedVMotionNetworkNames& obj) : _obj(obj) {}
	virtual ~MismatchedVMotionNetworkNames_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MismatchedVMotionNetworkNames"; }
};

class MissingBmcSupport_closure : public closure
{
protected:
	vw1__MissingBmcSupport _obj;
public:
	MissingBmcSupport_closure(const vw1__MissingBmcSupport& obj) : _obj(obj) {}
	virtual ~MissingBmcSupport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingBmcSupport"; }
};

class MissingController_closure : public closure
{
protected:
	vw1__MissingController _obj;
public:
	MissingController_closure(const vw1__MissingController& obj) : _obj(obj) {}
	virtual ~MissingController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingController"; }
};

class MissingIpPool_closure : public closure
{
protected:
	vw1__MissingIpPool _obj;
public:
	MissingIpPool_closure(const vw1__MissingIpPool& obj) : _obj(obj) {}
	virtual ~MissingIpPool_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingIpPool"; }
};

class MissingLinuxCustResources_closure : public closure
{
protected:
	vw1__MissingLinuxCustResources _obj;
public:
	MissingLinuxCustResources_closure(const vw1__MissingLinuxCustResources& obj) : _obj(obj) {}
	virtual ~MissingLinuxCustResources_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingLinuxCustResources"; }
};

class MissingNetworkIpConfig_closure : public closure
{
protected:
	vw1__MissingNetworkIpConfig _obj;
public:
	MissingNetworkIpConfig_closure(const vw1__MissingNetworkIpConfig& obj) : _obj(obj) {}
	virtual ~MissingNetworkIpConfig_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingNetworkIpConfig"; }
};

class MissingPowerOffConfiguration_closure : public closure
{
protected:
	vw1__MissingPowerOffConfiguration _obj;
public:
	MissingPowerOffConfiguration_closure(const vw1__MissingPowerOffConfiguration& obj) : _obj(obj) {}
	virtual ~MissingPowerOffConfiguration_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingPowerOffConfiguration"; }
};

class MissingPowerOnConfiguration_closure : public closure
{
protected:
	vw1__MissingPowerOnConfiguration _obj;
public:
	MissingPowerOnConfiguration_closure(const vw1__MissingPowerOnConfiguration& obj) : _obj(obj) {}
	virtual ~MissingPowerOnConfiguration_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingPowerOnConfiguration"; }
};

class MissingWindowsCustResources_closure : public closure
{
protected:
	vw1__MissingWindowsCustResources _obj;
public:
	MissingWindowsCustResources_closure(const vw1__MissingWindowsCustResources& obj) : _obj(obj) {}
	virtual ~MissingWindowsCustResources_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MissingWindowsCustResources"; }
};

class MksConnectionLimitReached_closure : public closure
{
protected:
	vw1__MksConnectionLimitReached _obj;
public:
	MksConnectionLimitReached_closure(const vw1__MksConnectionLimitReached& obj) : _obj(obj) {}
	virtual ~MksConnectionLimitReached_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MksConnectionLimitReached"; }
};

class MountError_closure : public closure
{
protected:
	vw1__MountError _obj;
public:
	MountError_closure(const vw1__MountError& obj) : _obj(obj) {}
	virtual ~MountError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MountError"; }
};

class MultipleCertificatesVerifyFault_closure : public closure
{
protected:
	vw1__MultipleCertificatesVerifyFault _obj;
public:
	MultipleCertificatesVerifyFault_closure(const vw1__MultipleCertificatesVerifyFault& obj) : _obj(obj) {}
	virtual ~MultipleCertificatesVerifyFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MultipleCertificatesVerifyFault"; }
};

class MultipleSnapshotsNotSupported_closure : public closure
{
protected:
	vw1__MultipleSnapshotsNotSupported _obj;
public:
	MultipleSnapshotsNotSupported_closure(const vw1__MultipleSnapshotsNotSupported& obj) : _obj(obj) {}
	virtual ~MultipleSnapshotsNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "MultipleSnapshotsNotSupported"; }
};

class NasConfigFault_closure : public closure
{
protected:
	vw1__NasConfigFault _obj;
public:
	NasConfigFault_closure(const vw1__NasConfigFault& obj) : _obj(obj) {}
	virtual ~NasConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NasConfigFault"; }
};

class NasConnectionLimitReached_closure : public closure
{
protected:
	vw1__NasConnectionLimitReached _obj;
public:
	NasConnectionLimitReached_closure(const vw1__NasConnectionLimitReached& obj) : _obj(obj) {}
	virtual ~NasConnectionLimitReached_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NasConnectionLimitReached"; }
};

class NasSessionCredentialConflict_closure : public closure
{
protected:
	vw1__NasSessionCredentialConflict _obj;
public:
	NasSessionCredentialConflict_closure(const vw1__NasSessionCredentialConflict& obj) : _obj(obj) {}
	virtual ~NasSessionCredentialConflict_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NasSessionCredentialConflict"; }
};

class NasVolumeNotMounted_closure : public closure
{
protected:
	vw1__NasVolumeNotMounted _obj;
public:
	NasVolumeNotMounted_closure(const vw1__NasVolumeNotMounted& obj) : _obj(obj) {}
	virtual ~NasVolumeNotMounted_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NasVolumeNotMounted"; }
};

class NetworkCopyFault_closure : public closure
{
protected:
	vw1__NetworkCopyFault _obj;
public:
	NetworkCopyFault_closure(const vw1__NetworkCopyFault& obj) : _obj(obj) {}
	virtual ~NetworkCopyFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetworkCopyFault"; }
};

class NetworkInaccessible_closure : public closure
{
protected:
	vw1__NetworkInaccessible _obj;
public:
	NetworkInaccessible_closure(const vw1__NetworkInaccessible& obj) : _obj(obj) {}
	virtual ~NetworkInaccessible_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetworkInaccessible"; }
};

class NetworksMayNotBeTheSame_closure : public closure
{
protected:
	vw1__NetworksMayNotBeTheSame _obj;
public:
	NetworksMayNotBeTheSame_closure(const vw1__NetworksMayNotBeTheSame& obj) : _obj(obj) {}
	virtual ~NetworksMayNotBeTheSame_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NetworksMayNotBeTheSame"; }
};

class NicSettingMismatch_closure : public closure
{
protected:
	vw1__NicSettingMismatch _obj;
public:
	NicSettingMismatch_closure(const vw1__NicSettingMismatch& obj) : _obj(obj) {}
	virtual ~NicSettingMismatch_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NicSettingMismatch"; }
};

class NoActiveHostInCluster_closure : public closure
{
protected:
	vw1__NoActiveHostInCluster _obj;
public:
	NoActiveHostInCluster_closure(const vw1__NoActiveHostInCluster& obj) : _obj(obj) {}
	virtual ~NoActiveHostInCluster_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoActiveHostInCluster"; }
};

class NoAvailableIp_closure : public closure
{
protected:
	vw1__NoAvailableIp _obj;
public:
	NoAvailableIp_closure(const vw1__NoAvailableIp& obj) : _obj(obj) {}
	virtual ~NoAvailableIp_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoAvailableIp"; }
};

class NoClientCertificate_closure : public closure
{
protected:
	vw1__NoClientCertificate _obj;
public:
	NoClientCertificate_closure(const vw1__NoClientCertificate& obj) : _obj(obj) {}
	virtual ~NoClientCertificate_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoClientCertificate"; }
};

class NoCompatibleDatastore_closure : public closure
{
protected:
	vw1__NoCompatibleDatastore _obj;
public:
	NoCompatibleDatastore_closure(const vw1__NoCompatibleDatastore& obj) : _obj(obj) {}
	virtual ~NoCompatibleDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoCompatibleDatastore"; }
};

class NoCompatibleHardAffinityHost_closure : public closure
{
protected:
	vw1__NoCompatibleHardAffinityHost _obj;
public:
	NoCompatibleHardAffinityHost_closure(const vw1__NoCompatibleHardAffinityHost& obj) : _obj(obj) {}
	virtual ~NoCompatibleHardAffinityHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoCompatibleHardAffinityHost"; }
};

class NoCompatibleHost_closure : public closure
{
protected:
	vw1__NoCompatibleHost _obj;
public:
	NoCompatibleHost_closure(const vw1__NoCompatibleHost& obj) : _obj(obj) {}
	virtual ~NoCompatibleHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoCompatibleHost"; }
};

class NoCompatibleHostWithAccessToDevice_closure : public closure
{
protected:
	vw1__NoCompatibleHostWithAccessToDevice _obj;
public:
	NoCompatibleHostWithAccessToDevice_closure(const vw1__NoCompatibleHostWithAccessToDevice& obj) : _obj(obj) {}
	virtual ~NoCompatibleHostWithAccessToDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoCompatibleHostWithAccessToDevice"; }
};

class NoCompatibleSoftAffinityHost_closure : public closure
{
protected:
	vw1__NoCompatibleSoftAffinityHost _obj;
public:
	NoCompatibleSoftAffinityHost_closure(const vw1__NoCompatibleSoftAffinityHost& obj) : _obj(obj) {}
	virtual ~NoCompatibleSoftAffinityHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoCompatibleSoftAffinityHost"; }
};

class NoConnectedDatastore_closure : public closure
{
protected:
	vw1__NoConnectedDatastore _obj;
public:
	NoConnectedDatastore_closure(const vw1__NoConnectedDatastore& obj) : _obj(obj) {}
	virtual ~NoConnectedDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoConnectedDatastore"; }
};

class NoDiskFound_closure : public closure
{
protected:
	vw1__NoDiskFound _obj;
public:
	NoDiskFound_closure(const vw1__NoDiskFound& obj) : _obj(obj) {}
	virtual ~NoDiskFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoDiskFound"; }
};

class NoDiskSpace_closure : public closure
{
protected:
	vw1__NoDiskSpace _obj;
public:
	NoDiskSpace_closure(const vw1__NoDiskSpace& obj) : _obj(obj) {}
	virtual ~NoDiskSpace_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoDiskSpace"; }
};

class NoDisksToCustomize_closure : public closure
{
protected:
	vw1__NoDisksToCustomize _obj;
public:
	NoDisksToCustomize_closure(const vw1__NoDisksToCustomize& obj) : _obj(obj) {}
	virtual ~NoDisksToCustomize_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoDisksToCustomize"; }
};

class NoGateway_closure : public closure
{
protected:
	vw1__NoGateway _obj;
public:
	NoGateway_closure(const vw1__NoGateway& obj) : _obj(obj) {}
	virtual ~NoGateway_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoGateway"; }
};

class NoGuestHeartbeat_closure : public closure
{
protected:
	vw1__NoGuestHeartbeat _obj;
public:
	NoGuestHeartbeat_closure(const vw1__NoGuestHeartbeat& obj) : _obj(obj) {}
	virtual ~NoGuestHeartbeat_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoGuestHeartbeat"; }
};

class NoHost_closure : public closure
{
protected:
	vw1__NoHost _obj;
public:
	NoHost_closure(const vw1__NoHost& obj) : _obj(obj) {}
	virtual ~NoHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoHost"; }
};

class NoHostSuitableForFtSecondary_closure : public closure
{
protected:
	vw1__NoHostSuitableForFtSecondary _obj;
public:
	NoHostSuitableForFtSecondary_closure(const vw1__NoHostSuitableForFtSecondary& obj) : _obj(obj) {}
	virtual ~NoHostSuitableForFtSecondary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoHostSuitableForFtSecondary"; }
};

class NoLicenseServerConfigured_closure : public closure
{
protected:
	vw1__NoLicenseServerConfigured _obj;
public:
	NoLicenseServerConfigured_closure(const vw1__NoLicenseServerConfigured& obj) : _obj(obj) {}
	virtual ~NoLicenseServerConfigured_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoLicenseServerConfigured"; }
};

class NoPeerHostFound_closure : public closure
{
protected:
	vw1__NoPeerHostFound _obj;
public:
	NoPeerHostFound_closure(const vw1__NoPeerHostFound& obj) : _obj(obj) {}
	virtual ~NoPeerHostFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoPeerHostFound"; }
};

class NoPermission_closure : public closure
{
protected:
	vw1__NoPermission _obj;
public:
	NoPermission_closure(const vw1__NoPermission& obj) : _obj(obj) {}
	virtual ~NoPermission_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoPermission"; }
};

class NoPermissionOnAD_closure : public closure
{
protected:
	vw1__NoPermissionOnAD _obj;
public:
	NoPermissionOnAD_closure(const vw1__NoPermissionOnAD& obj) : _obj(obj) {}
	virtual ~NoPermissionOnAD_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoPermissionOnAD"; }
};

class NoPermissionOnHost_closure : public closure
{
protected:
	vw1__NoPermissionOnHost _obj;
public:
	NoPermissionOnHost_closure(const vw1__NoPermissionOnHost& obj) : _obj(obj) {}
	virtual ~NoPermissionOnHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoPermissionOnHost"; }
};

class NoPermissionOnNasVolume_closure : public closure
{
protected:
	vw1__NoPermissionOnNasVolume _obj;
public:
	NoPermissionOnNasVolume_closure(const vw1__NoPermissionOnNasVolume& obj) : _obj(obj) {}
	virtual ~NoPermissionOnNasVolume_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoPermissionOnNasVolume"; }
};

class NoSubjectName_closure : public closure
{
protected:
	vw1__NoSubjectName _obj;
public:
	NoSubjectName_closure(const vw1__NoSubjectName& obj) : _obj(obj) {}
	virtual ~NoSubjectName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoSubjectName"; }
};

class NoVcManagedIpConfigured_closure : public closure
{
protected:
	vw1__NoVcManagedIpConfigured _obj;
public:
	NoVcManagedIpConfigured_closure(const vw1__NoVcManagedIpConfigured& obj) : _obj(obj) {}
	virtual ~NoVcManagedIpConfigured_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoVcManagedIpConfigured"; }
};

class NoVirtualNic_closure : public closure
{
protected:
	vw1__NoVirtualNic _obj;
public:
	NoVirtualNic_closure(const vw1__NoVirtualNic& obj) : _obj(obj) {}
	virtual ~NoVirtualNic_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoVirtualNic"; }
};

class NoVmInVApp_closure : public closure
{
protected:
	vw1__NoVmInVApp _obj;
public:
	NoVmInVApp_closure(const vw1__NoVmInVApp& obj) : _obj(obj) {}
	virtual ~NoVmInVApp_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NoVmInVApp"; }
};

class NonADUserRequired_closure : public closure
{
protected:
	vw1__NonADUserRequired _obj;
public:
	NonADUserRequired_closure(const vw1__NonADUserRequired& obj) : _obj(obj) {}
	virtual ~NonADUserRequired_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NonADUserRequired"; }
};

class NonHomeRDMVMotionNotSupported_closure : public closure
{
protected:
	vw1__NonHomeRDMVMotionNotSupported _obj;
public:
	NonHomeRDMVMotionNotSupported_closure(const vw1__NonHomeRDMVMotionNotSupported& obj) : _obj(obj) {}
	virtual ~NonHomeRDMVMotionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NonHomeRDMVMotionNotSupported"; }
};

class NonPersistentDisksNotSupported_closure : public closure
{
protected:
	vw1__NonPersistentDisksNotSupported _obj;
public:
	NonPersistentDisksNotSupported_closure(const vw1__NonPersistentDisksNotSupported& obj) : _obj(obj) {}
	virtual ~NonPersistentDisksNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NonPersistentDisksNotSupported"; }
};

class NotADirectory_closure : public closure
{
protected:
	vw1__NotADirectory _obj;
public:
	NotADirectory_closure(const vw1__NotADirectory& obj) : _obj(obj) {}
	virtual ~NotADirectory_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotADirectory"; }
};

class NotAFile_closure : public closure
{
protected:
	vw1__NotAFile _obj;
public:
	NotAFile_closure(const vw1__NotAFile& obj) : _obj(obj) {}
	virtual ~NotAFile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotAFile"; }
};

class NotAuthenticated_closure : public closure
{
protected:
	vw1__NotAuthenticated _obj;
public:
	NotAuthenticated_closure(const vw1__NotAuthenticated& obj) : _obj(obj) {}
	virtual ~NotAuthenticated_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotAuthenticated"; }
};

class NotEnoughCpus_closure : public closure
{
protected:
	vw1__NotEnoughCpus _obj;
public:
	NotEnoughCpus_closure(const vw1__NotEnoughCpus& obj) : _obj(obj) {}
	virtual ~NotEnoughCpus_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotEnoughCpus"; }
};

class NotEnoughLicenses_closure : public closure
{
protected:
	vw1__NotEnoughLicenses _obj;
public:
	NotEnoughLicenses_closure(const vw1__NotEnoughLicenses& obj) : _obj(obj) {}
	virtual ~NotEnoughLicenses_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotEnoughLicenses"; }
};

class NotEnoughLogicalCpus_closure : public closure
{
protected:
	vw1__NotEnoughLogicalCpus _obj;
public:
	NotEnoughLogicalCpus_closure(const vw1__NotEnoughLogicalCpus& obj) : _obj(obj) {}
	virtual ~NotEnoughLogicalCpus_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotEnoughLogicalCpus"; }
};

class NotFound_closure : public closure
{
protected:
	vw1__NotFound _obj;
public:
	NotFound_closure(const vw1__NotFound& obj) : _obj(obj) {}
	virtual ~NotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotFound"; }
};

class NotImplemented_closure : public closure
{
protected:
	vw1__NotImplemented _obj;
public:
	NotImplemented_closure(const vw1__NotImplemented& obj) : _obj(obj) {}
	virtual ~NotImplemented_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotImplemented"; }
};

class NotSupported_closure : public closure
{
protected:
	vw1__NotSupported _obj;
public:
	NotSupported_closure(const vw1__NotSupported& obj) : _obj(obj) {}
	virtual ~NotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotSupported"; }
};

class NotSupportedDeviceForFT_closure : public closure
{
protected:
	vw1__NotSupportedDeviceForFT _obj;
public:
	NotSupportedDeviceForFT_closure(const vw1__NotSupportedDeviceForFT& obj) : _obj(obj) {}
	virtual ~NotSupportedDeviceForFT_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotSupportedDeviceForFT"; }
};

class NotSupportedHost_closure : public closure
{
protected:
	vw1__NotSupportedHost _obj;
public:
	NotSupportedHost_closure(const vw1__NotSupportedHost& obj) : _obj(obj) {}
	virtual ~NotSupportedHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotSupportedHost"; }
};

class NotSupportedHostInCluster_closure : public closure
{
protected:
	vw1__NotSupportedHostInCluster _obj;
public:
	NotSupportedHostInCluster_closure(const vw1__NotSupportedHostInCluster& obj) : _obj(obj) {}
	virtual ~NotSupportedHostInCluster_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotSupportedHostInCluster"; }
};

class NotSupportedHostInDvs_closure : public closure
{
protected:
	vw1__NotSupportedHostInDvs _obj;
public:
	NotSupportedHostInDvs_closure(const vw1__NotSupportedHostInDvs& obj) : _obj(obj) {}
	virtual ~NotSupportedHostInDvs_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotSupportedHostInDvs"; }
};

class NotSupportedHostInHACluster_closure : public closure
{
protected:
	vw1__NotSupportedHostInHACluster _obj;
public:
	NotSupportedHostInHACluster_closure(const vw1__NotSupportedHostInHACluster& obj) : _obj(obj) {}
	virtual ~NotSupportedHostInHACluster_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotSupportedHostInHACluster"; }
};

class NotUserConfigurableProperty_closure : public closure
{
protected:
	vw1__NotUserConfigurableProperty _obj;
public:
	NotUserConfigurableProperty_closure(const vw1__NotUserConfigurableProperty& obj) : _obj(obj) {}
	virtual ~NotUserConfigurableProperty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NotUserConfigurableProperty"; }
};

class NumVirtualCoresPerSocketNotSupported_closure : public closure
{
protected:
	vw1__NumVirtualCoresPerSocketNotSupported _obj;
public:
	NumVirtualCoresPerSocketNotSupported_closure(const vw1__NumVirtualCoresPerSocketNotSupported& obj) : _obj(obj) {}
	virtual ~NumVirtualCoresPerSocketNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NumVirtualCoresPerSocketNotSupported"; }
};

class NumVirtualCpusExceedsLimit_closure : public closure
{
protected:
	vw1__NumVirtualCpusExceedsLimit _obj;
public:
	NumVirtualCpusExceedsLimit_closure(const vw1__NumVirtualCpusExceedsLimit& obj) : _obj(obj) {}
	virtual ~NumVirtualCpusExceedsLimit_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NumVirtualCpusExceedsLimit"; }
};

class NumVirtualCpusIncompatible_closure : public closure
{
protected:
	vw1__NumVirtualCpusIncompatible _obj;
public:
	NumVirtualCpusIncompatible_closure(const vw1__NumVirtualCpusIncompatible& obj) : _obj(obj) {}
	virtual ~NumVirtualCpusIncompatible_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NumVirtualCpusIncompatible"; }
};

class NumVirtualCpusNotSupported_closure : public closure
{
protected:
	vw1__NumVirtualCpusNotSupported _obj;
public:
	NumVirtualCpusNotSupported_closure(const vw1__NumVirtualCpusNotSupported& obj) : _obj(obj) {}
	virtual ~NumVirtualCpusNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "NumVirtualCpusNotSupported"; }
};

class OperationDisabledByGuest_closure : public closure
{
protected:
	vw1__OperationDisabledByGuest _obj;
public:
	OperationDisabledByGuest_closure(const vw1__OperationDisabledByGuest& obj) : _obj(obj) {}
	virtual ~OperationDisabledByGuest_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OperationDisabledByGuest"; }
};

class OperationDisallowedOnHost_closure : public closure
{
protected:
	vw1__OperationDisallowedOnHost _obj;
public:
	OperationDisallowedOnHost_closure(const vw1__OperationDisallowedOnHost& obj) : _obj(obj) {}
	virtual ~OperationDisallowedOnHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OperationDisallowedOnHost"; }
};

class OperationNotSupportedByGuest_closure : public closure
{
protected:
	vw1__OperationNotSupportedByGuest _obj;
public:
	OperationNotSupportedByGuest_closure(const vw1__OperationNotSupportedByGuest& obj) : _obj(obj) {}
	virtual ~OperationNotSupportedByGuest_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OperationNotSupportedByGuest"; }
};

class OutOfBounds_closure : public closure
{
protected:
	vw1__OutOfBounds _obj;
public:
	OutOfBounds_closure(const vw1__OutOfBounds& obj) : _obj(obj) {}
	virtual ~OutOfBounds_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OutOfBounds"; }
};

class OvfAttribute_closure : public closure
{
protected:
	vw1__OvfAttribute _obj;
public:
	OvfAttribute_closure(const vw1__OvfAttribute& obj) : _obj(obj) {}
	virtual ~OvfAttribute_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfAttribute"; }
};

class OvfConnectedDevice_closure : public closure
{
protected:
	vw1__OvfConnectedDevice _obj;
public:
	OvfConnectedDevice_closure(const vw1__OvfConnectedDevice& obj) : _obj(obj) {}
	virtual ~OvfConnectedDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConnectedDevice"; }
};

class OvfConnectedDeviceFloppy_closure : public closure
{
protected:
	vw1__OvfConnectedDeviceFloppy _obj;
public:
	OvfConnectedDeviceFloppy_closure(const vw1__OvfConnectedDeviceFloppy& obj) : _obj(obj) {}
	virtual ~OvfConnectedDeviceFloppy_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConnectedDeviceFloppy"; }
};

class OvfConnectedDeviceIso_closure : public closure
{
protected:
	vw1__OvfConnectedDeviceIso _obj;
public:
	OvfConnectedDeviceIso_closure(const vw1__OvfConnectedDeviceIso& obj) : _obj(obj) {}
	virtual ~OvfConnectedDeviceIso_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConnectedDeviceIso"; }
};

class OvfConstraint_closure : public closure
{
protected:
	vw1__OvfConstraint _obj;
public:
	OvfConstraint_closure(const vw1__OvfConstraint& obj) : _obj(obj) {}
	virtual ~OvfConstraint_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConstraint"; }
};

class OvfConsumerCallbackFault_closure : public closure
{
protected:
	vw1__OvfConsumerCallbackFault _obj;
public:
	OvfConsumerCallbackFault_closure(const vw1__OvfConsumerCallbackFault& obj) : _obj(obj) {}
	virtual ~OvfConsumerCallbackFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerCallbackFault"; }
};

class OvfConsumerCommunicationError_closure : public closure
{
protected:
	vw1__OvfConsumerCommunicationError _obj;
public:
	OvfConsumerCommunicationError_closure(const vw1__OvfConsumerCommunicationError& obj) : _obj(obj) {}
	virtual ~OvfConsumerCommunicationError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerCommunicationError"; }
};

class OvfConsumerFault_closure : public closure
{
protected:
	vw1__OvfConsumerFault _obj;
public:
	OvfConsumerFault_closure(const vw1__OvfConsumerFault& obj) : _obj(obj) {}
	virtual ~OvfConsumerFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerFault"; }
};

class OvfConsumerInvalidSection_closure : public closure
{
protected:
	vw1__OvfConsumerInvalidSection _obj;
public:
	OvfConsumerInvalidSection_closure(const vw1__OvfConsumerInvalidSection& obj) : _obj(obj) {}
	virtual ~OvfConsumerInvalidSection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerInvalidSection"; }
};

class OvfConsumerPowerOnFault_closure : public closure
{
protected:
	vw1__OvfConsumerPowerOnFault _obj;
public:
	OvfConsumerPowerOnFault_closure(const vw1__OvfConsumerPowerOnFault& obj) : _obj(obj) {}
	virtual ~OvfConsumerPowerOnFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerPowerOnFault"; }
};

class OvfConsumerUndeclaredSection_closure : public closure
{
protected:
	vw1__OvfConsumerUndeclaredSection _obj;
public:
	OvfConsumerUndeclaredSection_closure(const vw1__OvfConsumerUndeclaredSection& obj) : _obj(obj) {}
	virtual ~OvfConsumerUndeclaredSection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerUndeclaredSection"; }
};

class OvfConsumerUndefinedPrefix_closure : public closure
{
protected:
	vw1__OvfConsumerUndefinedPrefix _obj;
public:
	OvfConsumerUndefinedPrefix_closure(const vw1__OvfConsumerUndefinedPrefix& obj) : _obj(obj) {}
	virtual ~OvfConsumerUndefinedPrefix_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerUndefinedPrefix"; }
};

class OvfConsumerValidationFault_closure : public closure
{
protected:
	vw1__OvfConsumerValidationFault _obj;
public:
	OvfConsumerValidationFault_closure(const vw1__OvfConsumerValidationFault& obj) : _obj(obj) {}
	virtual ~OvfConsumerValidationFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfConsumerValidationFault"; }
};

class OvfCpuCompatibility_closure : public closure
{
protected:
	vw1__OvfCpuCompatibility _obj;
public:
	OvfCpuCompatibility_closure(const vw1__OvfCpuCompatibility& obj) : _obj(obj) {}
	virtual ~OvfCpuCompatibility_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfCpuCompatibility"; }
};

class OvfCpuCompatibilityCheckNotSupported_closure : public closure
{
protected:
	vw1__OvfCpuCompatibilityCheckNotSupported _obj;
public:
	OvfCpuCompatibilityCheckNotSupported_closure(const vw1__OvfCpuCompatibilityCheckNotSupported& obj) : _obj(obj) {}
	virtual ~OvfCpuCompatibilityCheckNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfCpuCompatibilityCheckNotSupported"; }
};

class OvfDiskMappingNotFound_closure : public closure
{
protected:
	vw1__OvfDiskMappingNotFound _obj;
public:
	OvfDiskMappingNotFound_closure(const vw1__OvfDiskMappingNotFound& obj) : _obj(obj) {}
	virtual ~OvfDiskMappingNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfDiskMappingNotFound"; }
};

class OvfDiskOrderConstraint_closure : public closure
{
protected:
	vw1__OvfDiskOrderConstraint _obj;
public:
	OvfDiskOrderConstraint_closure(const vw1__OvfDiskOrderConstraint& obj) : _obj(obj) {}
	virtual ~OvfDiskOrderConstraint_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfDiskOrderConstraint"; }
};

class OvfDuplicateElement_closure : public closure
{
protected:
	vw1__OvfDuplicateElement _obj;
public:
	OvfDuplicateElement_closure(const vw1__OvfDuplicateElement& obj) : _obj(obj) {}
	virtual ~OvfDuplicateElement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfDuplicateElement"; }
};

class OvfDuplicatedElementBoundary_closure : public closure
{
protected:
	vw1__OvfDuplicatedElementBoundary _obj;
public:
	OvfDuplicatedElementBoundary_closure(const vw1__OvfDuplicatedElementBoundary& obj) : _obj(obj) {}
	virtual ~OvfDuplicatedElementBoundary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfDuplicatedElementBoundary"; }
};

class OvfDuplicatedPropertyIdExport_closure : public closure
{
protected:
	vw1__OvfDuplicatedPropertyIdExport _obj;
public:
	OvfDuplicatedPropertyIdExport_closure(const vw1__OvfDuplicatedPropertyIdExport& obj) : _obj(obj) {}
	virtual ~OvfDuplicatedPropertyIdExport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfDuplicatedPropertyIdExport"; }
};

class OvfDuplicatedPropertyIdImport_closure : public closure
{
protected:
	vw1__OvfDuplicatedPropertyIdImport _obj;
public:
	OvfDuplicatedPropertyIdImport_closure(const vw1__OvfDuplicatedPropertyIdImport& obj) : _obj(obj) {}
	virtual ~OvfDuplicatedPropertyIdImport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfDuplicatedPropertyIdImport"; }
};

class OvfElement_closure : public closure
{
protected:
	vw1__OvfElement _obj;
public:
	OvfElement_closure(const vw1__OvfElement& obj) : _obj(obj) {}
	virtual ~OvfElement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfElement"; }
};

class OvfElementInvalidValue_closure : public closure
{
protected:
	vw1__OvfElementInvalidValue _obj;
public:
	OvfElementInvalidValue_closure(const vw1__OvfElementInvalidValue& obj) : _obj(obj) {}
	virtual ~OvfElementInvalidValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfElementInvalidValue"; }
};

class OvfExport_closure : public closure
{
protected:
	vw1__OvfExport _obj;
public:
	OvfExport_closure(const vw1__OvfExport& obj) : _obj(obj) {}
	virtual ~OvfExport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfExport"; }
};

class OvfExportFailed_closure : public closure
{
protected:
	vw1__OvfExportFailed _obj;
public:
	OvfExportFailed_closure(const vw1__OvfExportFailed& obj) : _obj(obj) {}
	virtual ~OvfExportFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfExportFailed"; }
};

class OvfFault_closure : public closure
{
protected:
	vw1__OvfFault _obj;
public:
	OvfFault_closure(const vw1__OvfFault& obj) : _obj(obj) {}
	virtual ~OvfFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfFault"; }
};

class OvfHardwareCheck_closure : public closure
{
protected:
	vw1__OvfHardwareCheck _obj;
public:
	OvfHardwareCheck_closure(const vw1__OvfHardwareCheck& obj) : _obj(obj) {}
	virtual ~OvfHardwareCheck_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfHardwareCheck"; }
};

class OvfHardwareExport_closure : public closure
{
protected:
	vw1__OvfHardwareExport _obj;
public:
	OvfHardwareExport_closure(const vw1__OvfHardwareExport& obj) : _obj(obj) {}
	virtual ~OvfHardwareExport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfHardwareExport"; }
};

class OvfHostResourceConstraint_closure : public closure
{
protected:
	vw1__OvfHostResourceConstraint _obj;
public:
	OvfHostResourceConstraint_closure(const vw1__OvfHostResourceConstraint& obj) : _obj(obj) {}
	virtual ~OvfHostResourceConstraint_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfHostResourceConstraint"; }
};

class OvfHostValueNotParsed_closure : public closure
{
protected:
	vw1__OvfHostValueNotParsed _obj;
public:
	OvfHostValueNotParsed_closure(const vw1__OvfHostValueNotParsed& obj) : _obj(obj) {}
	virtual ~OvfHostValueNotParsed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfHostValueNotParsed"; }
};

class OvfImport_closure : public closure
{
protected:
	vw1__OvfImport _obj;
public:
	OvfImport_closure(const vw1__OvfImport& obj) : _obj(obj) {}
	virtual ~OvfImport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfImport"; }
};

class OvfImportFailed_closure : public closure
{
protected:
	vw1__OvfImportFailed _obj;
public:
	OvfImportFailed_closure(const vw1__OvfImportFailed& obj) : _obj(obj) {}
	virtual ~OvfImportFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfImportFailed"; }
};

class OvfInternalError_closure : public closure
{
protected:
	vw1__OvfInternalError _obj;
public:
	OvfInternalError_closure(const vw1__OvfInternalError& obj) : _obj(obj) {}
	virtual ~OvfInternalError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfInternalError"; }
};

class OvfInvalidPackage_closure : public closure
{
protected:
	vw1__OvfInvalidPackage _obj;
public:
	OvfInvalidPackage_closure(const vw1__OvfInvalidPackage& obj) : _obj(obj) {}
	virtual ~OvfInvalidPackage_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfInvalidPackage"; }
};

class OvfInvalidValue_closure : public closure
{
protected:
	vw1__OvfInvalidValue _obj;
public:
	OvfInvalidValue_closure(const vw1__OvfInvalidValue& obj) : _obj(obj) {}
	virtual ~OvfInvalidValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfInvalidValue"; }
};

class OvfInvalidValueConfiguration_closure : public closure
{
protected:
	vw1__OvfInvalidValueConfiguration _obj;
public:
	OvfInvalidValueConfiguration_closure(const vw1__OvfInvalidValueConfiguration& obj) : _obj(obj) {}
	virtual ~OvfInvalidValueConfiguration_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfInvalidValueConfiguration"; }
};

class OvfInvalidValueEmpty_closure : public closure
{
protected:
	vw1__OvfInvalidValueEmpty _obj;
public:
	OvfInvalidValueEmpty_closure(const vw1__OvfInvalidValueEmpty& obj) : _obj(obj) {}
	virtual ~OvfInvalidValueEmpty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfInvalidValueEmpty"; }
};

class OvfInvalidValueFormatMalformed_closure : public closure
{
protected:
	vw1__OvfInvalidValueFormatMalformed _obj;
public:
	OvfInvalidValueFormatMalformed_closure(const vw1__OvfInvalidValueFormatMalformed& obj) : _obj(obj) {}
	virtual ~OvfInvalidValueFormatMalformed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfInvalidValueFormatMalformed"; }
};

class OvfInvalidValueReference_closure : public closure
{
protected:
	vw1__OvfInvalidValueReference _obj;
public:
	OvfInvalidValueReference_closure(const vw1__OvfInvalidValueReference& obj) : _obj(obj) {}
	virtual ~OvfInvalidValueReference_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfInvalidValueReference"; }
};

class OvfInvalidVmName_closure : public closure
{
protected:
	vw1__OvfInvalidVmName _obj;
public:
	OvfInvalidVmName_closure(const vw1__OvfInvalidVmName& obj) : _obj(obj) {}
	virtual ~OvfInvalidVmName_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfInvalidVmName"; }
};

class OvfMappedOsId_closure : public closure
{
protected:
	vw1__OvfMappedOsId _obj;
public:
	OvfMappedOsId_closure(const vw1__OvfMappedOsId& obj) : _obj(obj) {}
	virtual ~OvfMappedOsId_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfMappedOsId"; }
};

class OvfMissingAttribute_closure : public closure
{
protected:
	vw1__OvfMissingAttribute _obj;
public:
	OvfMissingAttribute_closure(const vw1__OvfMissingAttribute& obj) : _obj(obj) {}
	virtual ~OvfMissingAttribute_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfMissingAttribute"; }
};

class OvfMissingElement_closure : public closure
{
protected:
	vw1__OvfMissingElement _obj;
public:
	OvfMissingElement_closure(const vw1__OvfMissingElement& obj) : _obj(obj) {}
	virtual ~OvfMissingElement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfMissingElement"; }
};

class OvfMissingElementNormalBoundary_closure : public closure
{
protected:
	vw1__OvfMissingElementNormalBoundary _obj;
public:
	OvfMissingElementNormalBoundary_closure(const vw1__OvfMissingElementNormalBoundary& obj) : _obj(obj) {}
	virtual ~OvfMissingElementNormalBoundary_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfMissingElementNormalBoundary"; }
};

class OvfMissingHardware_closure : public closure
{
protected:
	vw1__OvfMissingHardware _obj;
public:
	OvfMissingHardware_closure(const vw1__OvfMissingHardware& obj) : _obj(obj) {}
	virtual ~OvfMissingHardware_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfMissingHardware"; }
};

class OvfNoHostNic_closure : public closure
{
protected:
	vw1__OvfNoHostNic _obj;
public:
	OvfNoHostNic_closure(const vw1__OvfNoHostNic& obj) : _obj(obj) {}
	virtual ~OvfNoHostNic_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfNoHostNic"; }
};

class OvfNoSpaceOnController_closure : public closure
{
protected:
	vw1__OvfNoSpaceOnController _obj;
public:
	OvfNoSpaceOnController_closure(const vw1__OvfNoSpaceOnController& obj) : _obj(obj) {}
	virtual ~OvfNoSpaceOnController_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfNoSpaceOnController"; }
};

class OvfNoSupportedHardwareFamily_closure : public closure
{
protected:
	vw1__OvfNoSupportedHardwareFamily _obj;
public:
	OvfNoSupportedHardwareFamily_closure(const vw1__OvfNoSupportedHardwareFamily& obj) : _obj(obj) {}
	virtual ~OvfNoSupportedHardwareFamily_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfNoSupportedHardwareFamily"; }
};

class OvfProperty_closure : public closure
{
protected:
	vw1__OvfProperty _obj;
public:
	OvfProperty_closure(const vw1__OvfProperty& obj) : _obj(obj) {}
	virtual ~OvfProperty_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfProperty"; }
};

class OvfPropertyExport_closure : public closure
{
protected:
	vw1__OvfPropertyExport _obj;
public:
	OvfPropertyExport_closure(const vw1__OvfPropertyExport& obj) : _obj(obj) {}
	virtual ~OvfPropertyExport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfPropertyExport"; }
};

class OvfPropertyNetwork_closure : public closure
{
protected:
	vw1__OvfPropertyNetwork _obj;
public:
	OvfPropertyNetwork_closure(const vw1__OvfPropertyNetwork& obj) : _obj(obj) {}
	virtual ~OvfPropertyNetwork_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfPropertyNetwork"; }
};

class OvfPropertyNetworkExport_closure : public closure
{
protected:
	vw1__OvfPropertyNetworkExport _obj;
public:
	OvfPropertyNetworkExport_closure(const vw1__OvfPropertyNetworkExport& obj) : _obj(obj) {}
	virtual ~OvfPropertyNetworkExport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfPropertyNetworkExport"; }
};

class OvfPropertyQualifier_closure : public closure
{
protected:
	vw1__OvfPropertyQualifier _obj;
public:
	OvfPropertyQualifier_closure(const vw1__OvfPropertyQualifier& obj) : _obj(obj) {}
	virtual ~OvfPropertyQualifier_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfPropertyQualifier"; }
};

class OvfPropertyQualifierDuplicate_closure : public closure
{
protected:
	vw1__OvfPropertyQualifierDuplicate _obj;
public:
	OvfPropertyQualifierDuplicate_closure(const vw1__OvfPropertyQualifierDuplicate& obj) : _obj(obj) {}
	virtual ~OvfPropertyQualifierDuplicate_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfPropertyQualifierDuplicate"; }
};

class OvfPropertyQualifierIgnored_closure : public closure
{
protected:
	vw1__OvfPropertyQualifierIgnored _obj;
public:
	OvfPropertyQualifierIgnored_closure(const vw1__OvfPropertyQualifierIgnored& obj) : _obj(obj) {}
	virtual ~OvfPropertyQualifierIgnored_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfPropertyQualifierIgnored"; }
};

class OvfPropertyType_closure : public closure
{
protected:
	vw1__OvfPropertyType _obj;
public:
	OvfPropertyType_closure(const vw1__OvfPropertyType& obj) : _obj(obj) {}
	virtual ~OvfPropertyType_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfPropertyType"; }
};

class OvfPropertyValue_closure : public closure
{
protected:
	vw1__OvfPropertyValue _obj;
public:
	OvfPropertyValue_closure(const vw1__OvfPropertyValue& obj) : _obj(obj) {}
	virtual ~OvfPropertyValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfPropertyValue"; }
};

class OvfSystemFault_closure : public closure
{
protected:
	vw1__OvfSystemFault _obj;
public:
	OvfSystemFault_closure(const vw1__OvfSystemFault& obj) : _obj(obj) {}
	virtual ~OvfSystemFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfSystemFault"; }
};

class OvfToXmlUnsupportedElement_closure : public closure
{
protected:
	vw1__OvfToXmlUnsupportedElement _obj;
public:
	OvfToXmlUnsupportedElement_closure(const vw1__OvfToXmlUnsupportedElement& obj) : _obj(obj) {}
	virtual ~OvfToXmlUnsupportedElement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfToXmlUnsupportedElement"; }
};

class OvfUnableToExportDisk_closure : public closure
{
protected:
	vw1__OvfUnableToExportDisk _obj;
public:
	OvfUnableToExportDisk_closure(const vw1__OvfUnableToExportDisk& obj) : _obj(obj) {}
	virtual ~OvfUnableToExportDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnableToExportDisk"; }
};

class OvfUnexpectedElement_closure : public closure
{
protected:
	vw1__OvfUnexpectedElement _obj;
public:
	OvfUnexpectedElement_closure(const vw1__OvfUnexpectedElement& obj) : _obj(obj) {}
	virtual ~OvfUnexpectedElement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnexpectedElement"; }
};

class OvfUnknownDevice_closure : public closure
{
protected:
	vw1__OvfUnknownDevice _obj;
public:
	OvfUnknownDevice_closure(const vw1__OvfUnknownDevice& obj) : _obj(obj) {}
	virtual ~OvfUnknownDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnknownDevice"; }
};

class OvfUnknownDeviceBacking_closure : public closure
{
protected:
	vw1__OvfUnknownDeviceBacking _obj;
public:
	OvfUnknownDeviceBacking_closure(const vw1__OvfUnknownDeviceBacking& obj) : _obj(obj) {}
	virtual ~OvfUnknownDeviceBacking_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnknownDeviceBacking"; }
};

class OvfUnknownEntity_closure : public closure
{
protected:
	vw1__OvfUnknownEntity _obj;
public:
	OvfUnknownEntity_closure(const vw1__OvfUnknownEntity& obj) : _obj(obj) {}
	virtual ~OvfUnknownEntity_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnknownEntity"; }
};

class OvfUnsupportedAttribute_closure : public closure
{
protected:
	vw1__OvfUnsupportedAttribute _obj;
public:
	OvfUnsupportedAttribute_closure(const vw1__OvfUnsupportedAttribute& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedAttribute_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedAttribute"; }
};

class OvfUnsupportedAttributeValue_closure : public closure
{
protected:
	vw1__OvfUnsupportedAttributeValue _obj;
public:
	OvfUnsupportedAttributeValue_closure(const vw1__OvfUnsupportedAttributeValue& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedAttributeValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedAttributeValue"; }
};

class OvfUnsupportedDeviceBackingInfo_closure : public closure
{
protected:
	vw1__OvfUnsupportedDeviceBackingInfo _obj;
public:
	OvfUnsupportedDeviceBackingInfo_closure(const vw1__OvfUnsupportedDeviceBackingInfo& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedDeviceBackingInfo_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedDeviceBackingInfo"; }
};

class OvfUnsupportedDeviceBackingOption_closure : public closure
{
protected:
	vw1__OvfUnsupportedDeviceBackingOption _obj;
public:
	OvfUnsupportedDeviceBackingOption_closure(const vw1__OvfUnsupportedDeviceBackingOption& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedDeviceBackingOption_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedDeviceBackingOption"; }
};

class OvfUnsupportedDeviceExport_closure : public closure
{
protected:
	vw1__OvfUnsupportedDeviceExport _obj;
public:
	OvfUnsupportedDeviceExport_closure(const vw1__OvfUnsupportedDeviceExport& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedDeviceExport_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedDeviceExport"; }
};

class OvfUnsupportedDiskProvisioning_closure : public closure
{
protected:
	vw1__OvfUnsupportedDiskProvisioning _obj;
public:
	OvfUnsupportedDiskProvisioning_closure(const vw1__OvfUnsupportedDiskProvisioning& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedDiskProvisioning_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedDiskProvisioning"; }
};

class OvfUnsupportedElement_closure : public closure
{
protected:
	vw1__OvfUnsupportedElement _obj;
public:
	OvfUnsupportedElement_closure(const vw1__OvfUnsupportedElement& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedElement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedElement"; }
};

class OvfUnsupportedElementValue_closure : public closure
{
protected:
	vw1__OvfUnsupportedElementValue _obj;
public:
	OvfUnsupportedElementValue_closure(const vw1__OvfUnsupportedElementValue& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedElementValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedElementValue"; }
};

class OvfUnsupportedPackage_closure : public closure
{
protected:
	vw1__OvfUnsupportedPackage _obj;
public:
	OvfUnsupportedPackage_closure(const vw1__OvfUnsupportedPackage& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedPackage_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedPackage"; }
};

class OvfUnsupportedSection_closure : public closure
{
protected:
	vw1__OvfUnsupportedSection _obj;
public:
	OvfUnsupportedSection_closure(const vw1__OvfUnsupportedSection& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedSection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedSection"; }
};

class OvfUnsupportedSubType_closure : public closure
{
protected:
	vw1__OvfUnsupportedSubType _obj;
public:
	OvfUnsupportedSubType_closure(const vw1__OvfUnsupportedSubType& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedSubType_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedSubType"; }
};

class OvfUnsupportedType_closure : public closure
{
protected:
	vw1__OvfUnsupportedType _obj;
public:
	OvfUnsupportedType_closure(const vw1__OvfUnsupportedType& obj) : _obj(obj) {}
	virtual ~OvfUnsupportedType_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfUnsupportedType"; }
};

class OvfWrongElement_closure : public closure
{
protected:
	vw1__OvfWrongElement _obj;
public:
	OvfWrongElement_closure(const vw1__OvfWrongElement& obj) : _obj(obj) {}
	virtual ~OvfWrongElement_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfWrongElement"; }
};

class OvfWrongNamespace_closure : public closure
{
protected:
	vw1__OvfWrongNamespace _obj;
public:
	OvfWrongNamespace_closure(const vw1__OvfWrongNamespace& obj) : _obj(obj) {}
	virtual ~OvfWrongNamespace_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfWrongNamespace"; }
};

class OvfXmlFormat_closure : public closure
{
protected:
	vw1__OvfXmlFormat _obj;
public:
	OvfXmlFormat_closure(const vw1__OvfXmlFormat& obj) : _obj(obj) {}
	virtual ~OvfXmlFormat_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfXmlFormat"; }
};

class PatchAlreadyInstalled_closure : public closure
{
protected:
	vw1__PatchAlreadyInstalled _obj;
public:
	PatchAlreadyInstalled_closure(const vw1__PatchAlreadyInstalled& obj) : _obj(obj) {}
	virtual ~PatchAlreadyInstalled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchAlreadyInstalled"; }
};

class PatchBinariesNotFound_closure : public closure
{
protected:
	vw1__PatchBinariesNotFound _obj;
public:
	PatchBinariesNotFound_closure(const vw1__PatchBinariesNotFound& obj) : _obj(obj) {}
	virtual ~PatchBinariesNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchBinariesNotFound"; }
};

class PatchInstallFailed_closure : public closure
{
protected:
	vw1__PatchInstallFailed _obj;
public:
	PatchInstallFailed_closure(const vw1__PatchInstallFailed& obj) : _obj(obj) {}
	virtual ~PatchInstallFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchInstallFailed"; }
};

class PatchIntegrityError_closure : public closure
{
protected:
	vw1__PatchIntegrityError _obj;
public:
	PatchIntegrityError_closure(const vw1__PatchIntegrityError& obj) : _obj(obj) {}
	virtual ~PatchIntegrityError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchIntegrityError"; }
};

class PatchMetadataCorrupted_closure : public closure
{
protected:
	vw1__PatchMetadataCorrupted _obj;
public:
	PatchMetadataCorrupted_closure(const vw1__PatchMetadataCorrupted& obj) : _obj(obj) {}
	virtual ~PatchMetadataCorrupted_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchMetadataCorrupted"; }
};

class PatchMetadataInvalid_closure : public closure
{
protected:
	vw1__PatchMetadataInvalid _obj;
public:
	PatchMetadataInvalid_closure(const vw1__PatchMetadataInvalid& obj) : _obj(obj) {}
	virtual ~PatchMetadataInvalid_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchMetadataInvalid"; }
};

class PatchMetadataNotFound_closure : public closure
{
protected:
	vw1__PatchMetadataNotFound _obj;
public:
	PatchMetadataNotFound_closure(const vw1__PatchMetadataNotFound& obj) : _obj(obj) {}
	virtual ~PatchMetadataNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchMetadataNotFound"; }
};

class PatchMissingDependencies_closure : public closure
{
protected:
	vw1__PatchMissingDependencies _obj;
public:
	PatchMissingDependencies_closure(const vw1__PatchMissingDependencies& obj) : _obj(obj) {}
	virtual ~PatchMissingDependencies_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchMissingDependencies"; }
};

class PatchNotApplicable_closure : public closure
{
protected:
	vw1__PatchNotApplicable _obj;
public:
	PatchNotApplicable_closure(const vw1__PatchNotApplicable& obj) : _obj(obj) {}
	virtual ~PatchNotApplicable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchNotApplicable"; }
};

class PatchSuperseded_closure : public closure
{
protected:
	vw1__PatchSuperseded _obj;
public:
	PatchSuperseded_closure(const vw1__PatchSuperseded& obj) : _obj(obj) {}
	virtual ~PatchSuperseded_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PatchSuperseded"; }
};

class PhysCompatRDMNotSupported_closure : public closure
{
protected:
	vw1__PhysCompatRDMNotSupported _obj;
public:
	PhysCompatRDMNotSupported_closure(const vw1__PhysCompatRDMNotSupported& obj) : _obj(obj) {}
	virtual ~PhysCompatRDMNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PhysCompatRDMNotSupported"; }
};

class PlatformConfigFault_closure : public closure
{
protected:
	vw1__PlatformConfigFault _obj;
public:
	PlatformConfigFault_closure(const vw1__PlatformConfigFault& obj) : _obj(obj) {}
	virtual ~PlatformConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PlatformConfigFault"; }
};

class PowerOnFtSecondaryFailed_closure : public closure
{
protected:
	vw1__PowerOnFtSecondaryFailed _obj;
public:
	PowerOnFtSecondaryFailed_closure(const vw1__PowerOnFtSecondaryFailed& obj) : _obj(obj) {}
	virtual ~PowerOnFtSecondaryFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PowerOnFtSecondaryFailed"; }
};

class PowerOnFtSecondaryTimedout_closure : public closure
{
protected:
	vw1__PowerOnFtSecondaryTimedout _obj;
public:
	PowerOnFtSecondaryTimedout_closure(const vw1__PowerOnFtSecondaryTimedout& obj) : _obj(obj) {}
	virtual ~PowerOnFtSecondaryTimedout_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PowerOnFtSecondaryTimedout"; }
};

class ProfileUpdateFailed_closure : public closure
{
protected:
	vw1__ProfileUpdateFailed _obj;
public:
	ProfileUpdateFailed_closure(const vw1__ProfileUpdateFailed& obj) : _obj(obj) {}
	virtual ~ProfileUpdateFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileUpdateFailed"; }
};

class QuestionPending_closure : public closure
{
protected:
	vw1__QuestionPending _obj;
public:
	QuestionPending_closure(const vw1__QuestionPending& obj) : _obj(obj) {}
	virtual ~QuestionPending_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "QuestionPending"; }
};

class QuiesceDatastoreIOForHAFailed_closure : public closure
{
protected:
	vw1__QuiesceDatastoreIOForHAFailed _obj;
public:
	QuiesceDatastoreIOForHAFailed_closure(const vw1__QuiesceDatastoreIOForHAFailed& obj) : _obj(obj) {}
	virtual ~QuiesceDatastoreIOForHAFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "QuiesceDatastoreIOForHAFailed"; }
};

class RDMConversionNotSupported_closure : public closure
{
protected:
	vw1__RDMConversionNotSupported _obj;
public:
	RDMConversionNotSupported_closure(const vw1__RDMConversionNotSupported& obj) : _obj(obj) {}
	virtual ~RDMConversionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RDMConversionNotSupported"; }
};

class RDMNotPreserved_closure : public closure
{
protected:
	vw1__RDMNotPreserved _obj;
public:
	RDMNotPreserved_closure(const vw1__RDMNotPreserved& obj) : _obj(obj) {}
	virtual ~RDMNotPreserved_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RDMNotPreserved"; }
};

class RDMNotSupported_closure : public closure
{
protected:
	vw1__RDMNotSupported _obj;
public:
	RDMNotSupported_closure(const vw1__RDMNotSupported& obj) : _obj(obj) {}
	virtual ~RDMNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RDMNotSupported"; }
};

class RDMNotSupportedOnDatastore_closure : public closure
{
protected:
	vw1__RDMNotSupportedOnDatastore _obj;
public:
	RDMNotSupportedOnDatastore_closure(const vw1__RDMNotSupportedOnDatastore& obj) : _obj(obj) {}
	virtual ~RDMNotSupportedOnDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RDMNotSupportedOnDatastore"; }
};

class RDMPointsToInaccessibleDisk_closure : public closure
{
protected:
	vw1__RDMPointsToInaccessibleDisk _obj;
public:
	RDMPointsToInaccessibleDisk_closure(const vw1__RDMPointsToInaccessibleDisk& obj) : _obj(obj) {}
	virtual ~RDMPointsToInaccessibleDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RDMPointsToInaccessibleDisk"; }
};

class RawDiskNotSupported_closure : public closure
{
protected:
	vw1__RawDiskNotSupported _obj;
public:
	RawDiskNotSupported_closure(const vw1__RawDiskNotSupported& obj) : _obj(obj) {}
	virtual ~RawDiskNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RawDiskNotSupported"; }
};

class ReadHostResourcePoolTreeFailed_closure : public closure
{
protected:
	vw1__ReadHostResourcePoolTreeFailed _obj;
public:
	ReadHostResourcePoolTreeFailed_closure(const vw1__ReadHostResourcePoolTreeFailed& obj) : _obj(obj) {}
	virtual ~ReadHostResourcePoolTreeFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReadHostResourcePoolTreeFailed"; }
};

class ReadOnlyDisksWithLegacyDestination_closure : public closure
{
protected:
	vw1__ReadOnlyDisksWithLegacyDestination _obj;
public:
	ReadOnlyDisksWithLegacyDestination_closure(const vw1__ReadOnlyDisksWithLegacyDestination& obj) : _obj(obj) {}
	virtual ~ReadOnlyDisksWithLegacyDestination_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReadOnlyDisksWithLegacyDestination"; }
};

class RebootRequired_closure : public closure
{
protected:
	vw1__RebootRequired _obj;
public:
	RebootRequired_closure(const vw1__RebootRequired& obj) : _obj(obj) {}
	virtual ~RebootRequired_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RebootRequired"; }
};

class RecordReplayDisabled_closure : public closure
{
protected:
	vw1__RecordReplayDisabled _obj;
public:
	RecordReplayDisabled_closure(const vw1__RecordReplayDisabled& obj) : _obj(obj) {}
	virtual ~RecordReplayDisabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RecordReplayDisabled"; }
};

class RemoteDeviceNotSupported_closure : public closure
{
protected:
	vw1__RemoteDeviceNotSupported _obj;
public:
	RemoteDeviceNotSupported_closure(const vw1__RemoteDeviceNotSupported& obj) : _obj(obj) {}
	virtual ~RemoteDeviceNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RemoteDeviceNotSupported"; }
};

class RemoveFailed_closure : public closure
{
protected:
	vw1__RemoveFailed _obj;
public:
	RemoveFailed_closure(const vw1__RemoveFailed& obj) : _obj(obj) {}
	virtual ~RemoveFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RemoveFailed"; }
};

class ReplicationConfigFault_closure : public closure
{
protected:
	vw1__ReplicationConfigFault _obj;
public:
	ReplicationConfigFault_closure(const vw1__ReplicationConfigFault& obj) : _obj(obj) {}
	virtual ~ReplicationConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationConfigFault"; }
};

class ReplicationDiskConfigFault_closure : public closure
{
protected:
	vw1__ReplicationDiskConfigFault _obj;
public:
	ReplicationDiskConfigFault_closure(const vw1__ReplicationDiskConfigFault& obj) : _obj(obj) {}
	virtual ~ReplicationDiskConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationDiskConfigFault"; }
};

class ReplicationFault_closure : public closure
{
protected:
	vw1__ReplicationFault _obj;
public:
	ReplicationFault_closure(const vw1__ReplicationFault& obj) : _obj(obj) {}
	virtual ~ReplicationFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationFault"; }
};

class ReplicationIncompatibleWithFT_closure : public closure
{
protected:
	vw1__ReplicationIncompatibleWithFT _obj;
public:
	ReplicationIncompatibleWithFT_closure(const vw1__ReplicationIncompatibleWithFT& obj) : _obj(obj) {}
	virtual ~ReplicationIncompatibleWithFT_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationIncompatibleWithFT"; }
};

class ReplicationInvalidOptions_closure : public closure
{
protected:
	vw1__ReplicationInvalidOptions _obj;
public:
	ReplicationInvalidOptions_closure(const vw1__ReplicationInvalidOptions& obj) : _obj(obj) {}
	virtual ~ReplicationInvalidOptions_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationInvalidOptions"; }
};

class ReplicationNotSupportedOnHost_closure : public closure
{
protected:
	vw1__ReplicationNotSupportedOnHost _obj;
public:
	ReplicationNotSupportedOnHost_closure(const vw1__ReplicationNotSupportedOnHost& obj) : _obj(obj) {}
	virtual ~ReplicationNotSupportedOnHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationNotSupportedOnHost"; }
};

class ReplicationVmConfigFault_closure : public closure
{
protected:
	vw1__ReplicationVmConfigFault _obj;
public:
	ReplicationVmConfigFault_closure(const vw1__ReplicationVmConfigFault& obj) : _obj(obj) {}
	virtual ~ReplicationVmConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationVmConfigFault"; }
};

class ReplicationVmFault_closure : public closure
{
protected:
	vw1__ReplicationVmFault _obj;
public:
	ReplicationVmFault_closure(const vw1__ReplicationVmFault& obj) : _obj(obj) {}
	virtual ~ReplicationVmFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ReplicationVmFault"; }
};

class RequestCanceled_closure : public closure
{
protected:
	vw1__RequestCanceled _obj;
public:
	RequestCanceled_closure(const vw1__RequestCanceled& obj) : _obj(obj) {}
	virtual ~RequestCanceled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RequestCanceled"; }
};

class ResourceInUse_closure : public closure
{
protected:
	vw1__ResourceInUse _obj;
public:
	ResourceInUse_closure(const vw1__ResourceInUse& obj) : _obj(obj) {}
	virtual ~ResourceInUse_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourceInUse"; }
};

class ResourceNotAvailable_closure : public closure
{
protected:
	vw1__ResourceNotAvailable _obj;
public:
	ResourceNotAvailable_closure(const vw1__ResourceNotAvailable& obj) : _obj(obj) {}
	virtual ~ResourceNotAvailable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourceNotAvailable"; }
};

class RestrictedVersion_closure : public closure
{
protected:
	vw1__RestrictedVersion _obj;
public:
	RestrictedVersion_closure(const vw1__RestrictedVersion& obj) : _obj(obj) {}
	virtual ~RestrictedVersion_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RestrictedVersion"; }
};

class RuleViolation_closure : public closure
{
protected:
	vw1__RuleViolation _obj;
public:
	RuleViolation_closure(const vw1__RuleViolation& obj) : _obj(obj) {}
	virtual ~RuleViolation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RuleViolation"; }
};

class RuntimeFault_closure : public closure
{
protected:
	vw1__RuntimeFault _obj;
public:
	RuntimeFault_closure(const vw1__RuntimeFault& obj) : _obj(obj) {}
	virtual ~RuntimeFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "RuntimeFault"; }
};

class SSLDisabledFault_closure : public closure
{
protected:
	vw1__SSLDisabledFault _obj;
public:
	SSLDisabledFault_closure(const vw1__SSLDisabledFault& obj) : _obj(obj) {}
	virtual ~SSLDisabledFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SSLDisabledFault"; }
};

class SSLVerifyFault_closure : public closure
{
protected:
	vw1__SSLVerifyFault _obj;
public:
	SSLVerifyFault_closure(const vw1__SSLVerifyFault& obj) : _obj(obj) {}
	virtual ~SSLVerifyFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SSLVerifyFault"; }
};

class SSPIChallenge_closure : public closure
{
protected:
	vw1__SSPIChallenge _obj;
public:
	SSPIChallenge_closure(const vw1__SSPIChallenge& obj) : _obj(obj) {}
	virtual ~SSPIChallenge_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SSPIChallenge"; }
};

class SecondaryVmAlreadyDisabled_closure : public closure
{
protected:
	vw1__SecondaryVmAlreadyDisabled _obj;
public:
	SecondaryVmAlreadyDisabled_closure(const vw1__SecondaryVmAlreadyDisabled& obj) : _obj(obj) {}
	virtual ~SecondaryVmAlreadyDisabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SecondaryVmAlreadyDisabled"; }
};

class SecondaryVmAlreadyEnabled_closure : public closure
{
protected:
	vw1__SecondaryVmAlreadyEnabled _obj;
public:
	SecondaryVmAlreadyEnabled_closure(const vw1__SecondaryVmAlreadyEnabled& obj) : _obj(obj) {}
	virtual ~SecondaryVmAlreadyEnabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SecondaryVmAlreadyEnabled"; }
};

class SecondaryVmAlreadyRegistered_closure : public closure
{
protected:
	vw1__SecondaryVmAlreadyRegistered _obj;
public:
	SecondaryVmAlreadyRegistered_closure(const vw1__SecondaryVmAlreadyRegistered& obj) : _obj(obj) {}
	virtual ~SecondaryVmAlreadyRegistered_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SecondaryVmAlreadyRegistered"; }
};

class SecondaryVmNotRegistered_closure : public closure
{
protected:
	vw1__SecondaryVmNotRegistered _obj;
public:
	SecondaryVmNotRegistered_closure(const vw1__SecondaryVmNotRegistered& obj) : _obj(obj) {}
	virtual ~SecondaryVmNotRegistered_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SecondaryVmNotRegistered"; }
};

class SecurityError_closure : public closure
{
protected:
	vw1__SecurityError _obj;
public:
	SecurityError_closure(const vw1__SecurityError& obj) : _obj(obj) {}
	virtual ~SecurityError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SecurityError"; }
};

class SharedBusControllerNotSupported_closure : public closure
{
protected:
	vw1__SharedBusControllerNotSupported _obj;
public:
	SharedBusControllerNotSupported_closure(const vw1__SharedBusControllerNotSupported& obj) : _obj(obj) {}
	virtual ~SharedBusControllerNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SharedBusControllerNotSupported"; }
};

class SnapshotCloneNotSupported_closure : public closure
{
protected:
	vw1__SnapshotCloneNotSupported _obj;
public:
	SnapshotCloneNotSupported_closure(const vw1__SnapshotCloneNotSupported& obj) : _obj(obj) {}
	virtual ~SnapshotCloneNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotCloneNotSupported"; }
};

class SnapshotCopyNotSupported_closure : public closure
{
protected:
	vw1__SnapshotCopyNotSupported _obj;
public:
	SnapshotCopyNotSupported_closure(const vw1__SnapshotCopyNotSupported& obj) : _obj(obj) {}
	virtual ~SnapshotCopyNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotCopyNotSupported"; }
};

class SnapshotDisabled_closure : public closure
{
protected:
	vw1__SnapshotDisabled _obj;
public:
	SnapshotDisabled_closure(const vw1__SnapshotDisabled& obj) : _obj(obj) {}
	virtual ~SnapshotDisabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotDisabled"; }
};

class SnapshotFault_closure : public closure
{
protected:
	vw1__SnapshotFault _obj;
public:
	SnapshotFault_closure(const vw1__SnapshotFault& obj) : _obj(obj) {}
	virtual ~SnapshotFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotFault"; }
};

class SnapshotIncompatibleDeviceInVm_closure : public closure
{
protected:
	vw1__SnapshotIncompatibleDeviceInVm _obj;
public:
	SnapshotIncompatibleDeviceInVm_closure(const vw1__SnapshotIncompatibleDeviceInVm& obj) : _obj(obj) {}
	virtual ~SnapshotIncompatibleDeviceInVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotIncompatibleDeviceInVm"; }
};

class SnapshotLocked_closure : public closure
{
protected:
	vw1__SnapshotLocked _obj;
public:
	SnapshotLocked_closure(const vw1__SnapshotLocked& obj) : _obj(obj) {}
	virtual ~SnapshotLocked_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotLocked"; }
};

class SnapshotMoveFromNonHomeNotSupported_closure : public closure
{
protected:
	vw1__SnapshotMoveFromNonHomeNotSupported _obj;
public:
	SnapshotMoveFromNonHomeNotSupported_closure(const vw1__SnapshotMoveFromNonHomeNotSupported& obj) : _obj(obj) {}
	virtual ~SnapshotMoveFromNonHomeNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotMoveFromNonHomeNotSupported"; }
};

class SnapshotMoveNotSupported_closure : public closure
{
protected:
	vw1__SnapshotMoveNotSupported _obj;
public:
	SnapshotMoveNotSupported_closure(const vw1__SnapshotMoveNotSupported& obj) : _obj(obj) {}
	virtual ~SnapshotMoveNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotMoveNotSupported"; }
};

class SnapshotMoveToNonHomeNotSupported_closure : public closure
{
protected:
	vw1__SnapshotMoveToNonHomeNotSupported _obj;
public:
	SnapshotMoveToNonHomeNotSupported_closure(const vw1__SnapshotMoveToNonHomeNotSupported& obj) : _obj(obj) {}
	virtual ~SnapshotMoveToNonHomeNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotMoveToNonHomeNotSupported"; }
};

class SnapshotNoChange_closure : public closure
{
protected:
	vw1__SnapshotNoChange _obj;
public:
	SnapshotNoChange_closure(const vw1__SnapshotNoChange& obj) : _obj(obj) {}
	virtual ~SnapshotNoChange_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotNoChange"; }
};

class SnapshotRevertIssue_closure : public closure
{
protected:
	vw1__SnapshotRevertIssue _obj;
public:
	SnapshotRevertIssue_closure(const vw1__SnapshotRevertIssue& obj) : _obj(obj) {}
	virtual ~SnapshotRevertIssue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SnapshotRevertIssue"; }
};

class SoftRuleVioCorrectionDisallowed_closure : public closure
{
protected:
	vw1__SoftRuleVioCorrectionDisallowed _obj;
public:
	SoftRuleVioCorrectionDisallowed_closure(const vw1__SoftRuleVioCorrectionDisallowed& obj) : _obj(obj) {}
	virtual ~SoftRuleVioCorrectionDisallowed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SoftRuleVioCorrectionDisallowed"; }
};

class SoftRuleVioCorrectionImpact_closure : public closure
{
protected:
	vw1__SoftRuleVioCorrectionImpact _obj;
public:
	SoftRuleVioCorrectionImpact_closure(const vw1__SoftRuleVioCorrectionImpact& obj) : _obj(obj) {}
	virtual ~SoftRuleVioCorrectionImpact_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SoftRuleVioCorrectionImpact"; }
};

class StorageDrsDisabledOnVm_closure : public closure
{
protected:
	vw1__StorageDrsDisabledOnVm _obj;
public:
	StorageDrsDisabledOnVm_closure(const vw1__StorageDrsDisabledOnVm& obj) : _obj(obj) {}
	virtual ~StorageDrsDisabledOnVm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsDisabledOnVm"; }
};

class StorageDrsIolbDisabledInternally_closure : public closure
{
protected:
	vw1__StorageDrsIolbDisabledInternally _obj;
public:
	StorageDrsIolbDisabledInternally_closure(const vw1__StorageDrsIolbDisabledInternally& obj) : _obj(obj) {}
	virtual ~StorageDrsIolbDisabledInternally_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageDrsIolbDisabledInternally"; }
};

class StorageVMotionNotSupported_closure : public closure
{
protected:
	vw1__StorageVMotionNotSupported _obj;
public:
	StorageVMotionNotSupported_closure(const vw1__StorageVMotionNotSupported& obj) : _obj(obj) {}
	virtual ~StorageVMotionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageVMotionNotSupported"; }
};

class StorageVmotionIncompatible_closure : public closure
{
protected:
	vw1__StorageVmotionIncompatible _obj;
public:
	StorageVmotionIncompatible_closure(const vw1__StorageVmotionIncompatible& obj) : _obj(obj) {}
	virtual ~StorageVmotionIncompatible_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageVmotionIncompatible"; }
};

class SuspendedRelocateNotSupported_closure : public closure
{
protected:
	vw1__SuspendedRelocateNotSupported _obj;
public:
	SuspendedRelocateNotSupported_closure(const vw1__SuspendedRelocateNotSupported& obj) : _obj(obj) {}
	virtual ~SuspendedRelocateNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SuspendedRelocateNotSupported"; }
};

class SwapDatastoreNotWritableOnHost_closure : public closure
{
protected:
	vw1__SwapDatastoreNotWritableOnHost _obj;
public:
	SwapDatastoreNotWritableOnHost_closure(const vw1__SwapDatastoreNotWritableOnHost& obj) : _obj(obj) {}
	virtual ~SwapDatastoreNotWritableOnHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SwapDatastoreNotWritableOnHost"; }
};

class SwapDatastoreUnset_closure : public closure
{
protected:
	vw1__SwapDatastoreUnset _obj;
public:
	SwapDatastoreUnset_closure(const vw1__SwapDatastoreUnset& obj) : _obj(obj) {}
	virtual ~SwapDatastoreUnset_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SwapDatastoreUnset"; }
};

class SwapPlacementOverrideNotSupported_closure : public closure
{
protected:
	vw1__SwapPlacementOverrideNotSupported _obj;
public:
	SwapPlacementOverrideNotSupported_closure(const vw1__SwapPlacementOverrideNotSupported& obj) : _obj(obj) {}
	virtual ~SwapPlacementOverrideNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SwapPlacementOverrideNotSupported"; }
};

class SwitchNotInUpgradeMode_closure : public closure
{
protected:
	vw1__SwitchNotInUpgradeMode _obj;
public:
	SwitchNotInUpgradeMode_closure(const vw1__SwitchNotInUpgradeMode& obj) : _obj(obj) {}
	virtual ~SwitchNotInUpgradeMode_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SwitchNotInUpgradeMode"; }
};

class SystemError_closure : public closure
{
protected:
	vw1__SystemError _obj;
public:
	SystemError_closure(const vw1__SystemError& obj) : _obj(obj) {}
	virtual ~SystemError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SystemError"; }
};

class TaskInProgress_closure : public closure
{
protected:
	vw1__TaskInProgress _obj;
public:
	TaskInProgress_closure(const vw1__TaskInProgress& obj) : _obj(obj) {}
	virtual ~TaskInProgress_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskInProgress"; }
};

class ThirdPartyLicenseAssignmentFailed_closure : public closure
{
protected:
	vw1__ThirdPartyLicenseAssignmentFailed _obj;
public:
	ThirdPartyLicenseAssignmentFailed_closure(const vw1__ThirdPartyLicenseAssignmentFailed& obj) : _obj(obj) {}
	virtual ~ThirdPartyLicenseAssignmentFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ThirdPartyLicenseAssignmentFailed"; }
};

class Timedout_closure : public closure
{
protected:
	vw1__Timedout _obj;
public:
	Timedout_closure(const vw1__Timedout& obj) : _obj(obj) {}
	virtual ~Timedout_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Timedout"; }
};

class TooManyConcurrentNativeClones_closure : public closure
{
protected:
	vw1__TooManyConcurrentNativeClones _obj;
public:
	TooManyConcurrentNativeClones_closure(const vw1__TooManyConcurrentNativeClones& obj) : _obj(obj) {}
	virtual ~TooManyConcurrentNativeClones_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManyConcurrentNativeClones"; }
};

class TooManyConsecutiveOverrides_closure : public closure
{
protected:
	vw1__TooManyConsecutiveOverrides _obj;
public:
	TooManyConsecutiveOverrides_closure(const vw1__TooManyConsecutiveOverrides& obj) : _obj(obj) {}
	virtual ~TooManyConsecutiveOverrides_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManyConsecutiveOverrides"; }
};

class TooManyDevices_closure : public closure
{
protected:
	vw1__TooManyDevices _obj;
public:
	TooManyDevices_closure(const vw1__TooManyDevices& obj) : _obj(obj) {}
	virtual ~TooManyDevices_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManyDevices"; }
};

class TooManyDisksOnLegacyHost_closure : public closure
{
protected:
	vw1__TooManyDisksOnLegacyHost _obj;
public:
	TooManyDisksOnLegacyHost_closure(const vw1__TooManyDisksOnLegacyHost& obj) : _obj(obj) {}
	virtual ~TooManyDisksOnLegacyHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManyDisksOnLegacyHost"; }
};

class TooManyGuestLogons_closure : public closure
{
protected:
	vw1__TooManyGuestLogons _obj;
public:
	TooManyGuestLogons_closure(const vw1__TooManyGuestLogons& obj) : _obj(obj) {}
	virtual ~TooManyGuestLogons_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManyGuestLogons"; }
};

class TooManyHosts_closure : public closure
{
protected:
	vw1__TooManyHosts _obj;
public:
	TooManyHosts_closure(const vw1__TooManyHosts& obj) : _obj(obj) {}
	virtual ~TooManyHosts_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManyHosts"; }
};

class TooManyNativeCloneLevels_closure : public closure
{
protected:
	vw1__TooManyNativeCloneLevels _obj;
public:
	TooManyNativeCloneLevels_closure(const vw1__TooManyNativeCloneLevels& obj) : _obj(obj) {}
	virtual ~TooManyNativeCloneLevels_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManyNativeCloneLevels"; }
};

class TooManyNativeClonesOnFile_closure : public closure
{
protected:
	vw1__TooManyNativeClonesOnFile _obj;
public:
	TooManyNativeClonesOnFile_closure(const vw1__TooManyNativeClonesOnFile& obj) : _obj(obj) {}
	virtual ~TooManyNativeClonesOnFile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManyNativeClonesOnFile"; }
};

class TooManySnapshotLevels_closure : public closure
{
protected:
	vw1__TooManySnapshotLevels _obj;
public:
	TooManySnapshotLevels_closure(const vw1__TooManySnapshotLevels& obj) : _obj(obj) {}
	virtual ~TooManySnapshotLevels_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TooManySnapshotLevels"; }
};

class ToolsAlreadyUpgraded_closure : public closure
{
protected:
	vw1__ToolsAlreadyUpgraded _obj;
public:
	ToolsAlreadyUpgraded_closure(const vw1__ToolsAlreadyUpgraded& obj) : _obj(obj) {}
	virtual ~ToolsAlreadyUpgraded_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsAlreadyUpgraded"; }
};

class ToolsAutoUpgradeNotSupported_closure : public closure
{
protected:
	vw1__ToolsAutoUpgradeNotSupported _obj;
public:
	ToolsAutoUpgradeNotSupported_closure(const vw1__ToolsAutoUpgradeNotSupported& obj) : _obj(obj) {}
	virtual ~ToolsAutoUpgradeNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsAutoUpgradeNotSupported"; }
};

class ToolsImageNotAvailable_closure : public closure
{
protected:
	vw1__ToolsImageNotAvailable _obj;
public:
	ToolsImageNotAvailable_closure(const vw1__ToolsImageNotAvailable& obj) : _obj(obj) {}
	virtual ~ToolsImageNotAvailable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsImageNotAvailable"; }
};

class ToolsImageSignatureCheckFailed_closure : public closure
{
protected:
	vw1__ToolsImageSignatureCheckFailed _obj;
public:
	ToolsImageSignatureCheckFailed_closure(const vw1__ToolsImageSignatureCheckFailed& obj) : _obj(obj) {}
	virtual ~ToolsImageSignatureCheckFailed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsImageSignatureCheckFailed"; }
};

class ToolsInstallationInProgress_closure : public closure
{
protected:
	vw1__ToolsInstallationInProgress _obj;
public:
	ToolsInstallationInProgress_closure(const vw1__ToolsInstallationInProgress& obj) : _obj(obj) {}
	virtual ~ToolsInstallationInProgress_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsInstallationInProgress"; }
};

class ToolsUnavailable_closure : public closure
{
protected:
	vw1__ToolsUnavailable _obj;
public:
	ToolsUnavailable_closure(const vw1__ToolsUnavailable& obj) : _obj(obj) {}
	virtual ~ToolsUnavailable_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsUnavailable"; }
};

class ToolsUpgradeCancelled_closure : public closure
{
protected:
	vw1__ToolsUpgradeCancelled _obj;
public:
	ToolsUpgradeCancelled_closure(const vw1__ToolsUpgradeCancelled& obj) : _obj(obj) {}
	virtual ~ToolsUpgradeCancelled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ToolsUpgradeCancelled"; }
};

class UncommittedUndoableDisk_closure : public closure
{
protected:
	vw1__UncommittedUndoableDisk _obj;
public:
	UncommittedUndoableDisk_closure(const vw1__UncommittedUndoableDisk& obj) : _obj(obj) {}
	virtual ~UncommittedUndoableDisk_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UncommittedUndoableDisk"; }
};

class UnconfiguredPropertyValue_closure : public closure
{
protected:
	vw1__UnconfiguredPropertyValue _obj;
public:
	UnconfiguredPropertyValue_closure(const vw1__UnconfiguredPropertyValue& obj) : _obj(obj) {}
	virtual ~UnconfiguredPropertyValue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnconfiguredPropertyValue"; }
};

class UncustomizableGuest_closure : public closure
{
protected:
	vw1__UncustomizableGuest _obj;
public:
	UncustomizableGuest_closure(const vw1__UncustomizableGuest& obj) : _obj(obj) {}
	virtual ~UncustomizableGuest_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UncustomizableGuest"; }
};

class UnexpectedCustomizationFault_closure : public closure
{
protected:
	vw1__UnexpectedCustomizationFault _obj;
public:
	UnexpectedCustomizationFault_closure(const vw1__UnexpectedCustomizationFault& obj) : _obj(obj) {}
	virtual ~UnexpectedCustomizationFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnexpectedCustomizationFault"; }
};

class UnexpectedFault_closure : public closure
{
protected:
	vw1__UnexpectedFault _obj;
public:
	UnexpectedFault_closure(const vw1__UnexpectedFault& obj) : _obj(obj) {}
	virtual ~UnexpectedFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnexpectedFault"; }
};

class UnrecognizedHost_closure : public closure
{
protected:
	vw1__UnrecognizedHost _obj;
public:
	UnrecognizedHost_closure(const vw1__UnrecognizedHost& obj) : _obj(obj) {}
	virtual ~UnrecognizedHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnrecognizedHost"; }
};

class UnsharedSwapVMotionNotSupported_closure : public closure
{
protected:
	vw1__UnsharedSwapVMotionNotSupported _obj;
public:
	UnsharedSwapVMotionNotSupported_closure(const vw1__UnsharedSwapVMotionNotSupported& obj) : _obj(obj) {}
	virtual ~UnsharedSwapVMotionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnsharedSwapVMotionNotSupported"; }
};

class UnsupportedDatastore_closure : public closure
{
protected:
	vw1__UnsupportedDatastore _obj;
public:
	UnsupportedDatastore_closure(const vw1__UnsupportedDatastore& obj) : _obj(obj) {}
	virtual ~UnsupportedDatastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnsupportedDatastore"; }
};

class UnsupportedGuest_closure : public closure
{
protected:
	vw1__UnsupportedGuest _obj;
public:
	UnsupportedGuest_closure(const vw1__UnsupportedGuest& obj) : _obj(obj) {}
	virtual ~UnsupportedGuest_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnsupportedGuest"; }
};

class UnsupportedVimApiVersion_closure : public closure
{
protected:
	vw1__UnsupportedVimApiVersion _obj;
public:
	UnsupportedVimApiVersion_closure(const vw1__UnsupportedVimApiVersion& obj) : _obj(obj) {}
	virtual ~UnsupportedVimApiVersion_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnsupportedVimApiVersion"; }
};

class UnsupportedVmxLocation_closure : public closure
{
protected:
	vw1__UnsupportedVmxLocation _obj;
public:
	UnsupportedVmxLocation_closure(const vw1__UnsupportedVmxLocation& obj) : _obj(obj) {}
	virtual ~UnsupportedVmxLocation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnsupportedVmxLocation"; }
};

class UnusedVirtualDiskBlocksNotScrubbed_closure : public closure
{
protected:
	vw1__UnusedVirtualDiskBlocksNotScrubbed _obj;
public:
	UnusedVirtualDiskBlocksNotScrubbed_closure(const vw1__UnusedVirtualDiskBlocksNotScrubbed& obj) : _obj(obj) {}
	virtual ~UnusedVirtualDiskBlocksNotScrubbed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UnusedVirtualDiskBlocksNotScrubbed"; }
};

class UserNotFound_closure : public closure
{
protected:
	vw1__UserNotFound _obj;
public:
	UserNotFound_closure(const vw1__UserNotFound& obj) : _obj(obj) {}
	virtual ~UserNotFound_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserNotFound"; }
};

class VAppConfigFault_closure : public closure
{
protected:
	vw1__VAppConfigFault _obj;
public:
	VAppConfigFault_closure(const vw1__VAppConfigFault& obj) : _obj(obj) {}
	virtual ~VAppConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppConfigFault"; }
};

class VAppNotRunning_closure : public closure
{
protected:
	vw1__VAppNotRunning _obj;
public:
	VAppNotRunning_closure(const vw1__VAppNotRunning& obj) : _obj(obj) {}
	virtual ~VAppNotRunning_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppNotRunning"; }
};

class VAppOperationInProgress_closure : public closure
{
protected:
	vw1__VAppOperationInProgress _obj;
public:
	VAppOperationInProgress_closure(const vw1__VAppOperationInProgress& obj) : _obj(obj) {}
	virtual ~VAppOperationInProgress_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppOperationInProgress"; }
};

class VAppPropertyFault_closure : public closure
{
protected:
	vw1__VAppPropertyFault _obj;
public:
	VAppPropertyFault_closure(const vw1__VAppPropertyFault& obj) : _obj(obj) {}
	virtual ~VAppPropertyFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppPropertyFault"; }
};

class VAppTaskInProgress_closure : public closure
{
protected:
	vw1__VAppTaskInProgress _obj;
public:
	VAppTaskInProgress_closure(const vw1__VAppTaskInProgress& obj) : _obj(obj) {}
	virtual ~VAppTaskInProgress_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VAppTaskInProgress"; }
};

class VMINotSupported_closure : public closure
{
protected:
	vw1__VMINotSupported _obj;
public:
	VMINotSupported_closure(const vw1__VMINotSupported& obj) : _obj(obj) {}
	virtual ~VMINotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMINotSupported"; }
};

class VMOnConflictDVPort_closure : public closure
{
protected:
	vw1__VMOnConflictDVPort _obj;
public:
	VMOnConflictDVPort_closure(const vw1__VMOnConflictDVPort& obj) : _obj(obj) {}
	virtual ~VMOnConflictDVPort_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMOnConflictDVPort"; }
};

class VMOnVirtualIntranet_closure : public closure
{
protected:
	vw1__VMOnVirtualIntranet _obj;
public:
	VMOnVirtualIntranet_closure(const vw1__VMOnVirtualIntranet& obj) : _obj(obj) {}
	virtual ~VMOnVirtualIntranet_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMOnVirtualIntranet"; }
};

class VMotionInterfaceIssue_closure : public closure
{
protected:
	vw1__VMotionInterfaceIssue _obj;
public:
	VMotionInterfaceIssue_closure(const vw1__VMotionInterfaceIssue& obj) : _obj(obj) {}
	virtual ~VMotionInterfaceIssue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMotionInterfaceIssue"; }
};

class VMotionLinkCapacityLow_closure : public closure
{
protected:
	vw1__VMotionLinkCapacityLow _obj;
public:
	VMotionLinkCapacityLow_closure(const vw1__VMotionLinkCapacityLow& obj) : _obj(obj) {}
	virtual ~VMotionLinkCapacityLow_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMotionLinkCapacityLow"; }
};

class VMotionLinkDown_closure : public closure
{
protected:
	vw1__VMotionLinkDown _obj;
public:
	VMotionLinkDown_closure(const vw1__VMotionLinkDown& obj) : _obj(obj) {}
	virtual ~VMotionLinkDown_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMotionLinkDown"; }
};

class VMotionNotConfigured_closure : public closure
{
protected:
	vw1__VMotionNotConfigured _obj;
public:
	VMotionNotConfigured_closure(const vw1__VMotionNotConfigured& obj) : _obj(obj) {}
	virtual ~VMotionNotConfigured_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMotionNotConfigured"; }
};

class VMotionNotLicensed_closure : public closure
{
protected:
	vw1__VMotionNotLicensed _obj;
public:
	VMotionNotLicensed_closure(const vw1__VMotionNotLicensed& obj) : _obj(obj) {}
	virtual ~VMotionNotLicensed_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMotionNotLicensed"; }
};

class VMotionNotSupported_closure : public closure
{
protected:
	vw1__VMotionNotSupported _obj;
public:
	VMotionNotSupported_closure(const vw1__VMotionNotSupported& obj) : _obj(obj) {}
	virtual ~VMotionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMotionNotSupported"; }
};

class VMotionProtocolIncompatible_closure : public closure
{
protected:
	vw1__VMotionProtocolIncompatible _obj;
public:
	VMotionProtocolIncompatible_closure(const vw1__VMotionProtocolIncompatible& obj) : _obj(obj) {}
	virtual ~VMotionProtocolIncompatible_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VMotionProtocolIncompatible"; }
};

class VimFault_closure : public closure
{
protected:
	vw1__VimFault _obj;
public:
	VimFault_closure(const vw1__VimFault& obj) : _obj(obj) {}
	virtual ~VimFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VimFault"; }
};

class VirtualDiskBlocksNotFullyProvisioned_closure : public closure
{
protected:
	vw1__VirtualDiskBlocksNotFullyProvisioned _obj;
public:
	VirtualDiskBlocksNotFullyProvisioned_closure(const vw1__VirtualDiskBlocksNotFullyProvisioned& obj) : _obj(obj) {}
	virtual ~VirtualDiskBlocksNotFullyProvisioned_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskBlocksNotFullyProvisioned"; }
};

class VirtualDiskModeNotSupported_closure : public closure
{
protected:
	vw1__VirtualDiskModeNotSupported _obj;
public:
	VirtualDiskModeNotSupported_closure(const vw1__VirtualDiskModeNotSupported& obj) : _obj(obj) {}
	virtual ~VirtualDiskModeNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskModeNotSupported"; }
};

class VirtualEthernetCardNotSupported_closure : public closure
{
protected:
	vw1__VirtualEthernetCardNotSupported _obj;
public:
	VirtualEthernetCardNotSupported_closure(const vw1__VirtualEthernetCardNotSupported& obj) : _obj(obj) {}
	virtual ~VirtualEthernetCardNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualEthernetCardNotSupported"; }
};

class VirtualHardwareCompatibilityIssue_closure : public closure
{
protected:
	vw1__VirtualHardwareCompatibilityIssue _obj;
public:
	VirtualHardwareCompatibilityIssue_closure(const vw1__VirtualHardwareCompatibilityIssue& obj) : _obj(obj) {}
	virtual ~VirtualHardwareCompatibilityIssue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualHardwareCompatibilityIssue"; }
};

class VirtualHardwareVersionNotSupported_closure : public closure
{
protected:
	vw1__VirtualHardwareVersionNotSupported _obj;
public:
	VirtualHardwareVersionNotSupported_closure(const vw1__VirtualHardwareVersionNotSupported& obj) : _obj(obj) {}
	virtual ~VirtualHardwareVersionNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualHardwareVersionNotSupported"; }
};

class VmAlreadyExistsInDatacenter_closure : public closure
{
protected:
	vw1__VmAlreadyExistsInDatacenter _obj;
public:
	VmAlreadyExistsInDatacenter_closure(const vw1__VmAlreadyExistsInDatacenter& obj) : _obj(obj) {}
	virtual ~VmAlreadyExistsInDatacenter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmAlreadyExistsInDatacenter"; }
};

class VmConfigFault_closure : public closure
{
protected:
	vw1__VmConfigFault _obj;
public:
	VmConfigFault_closure(const vw1__VmConfigFault& obj) : _obj(obj) {}
	virtual ~VmConfigFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigFault"; }
};

class VmConfigIncompatibleForFaultTolerance_closure : public closure
{
protected:
	vw1__VmConfigIncompatibleForFaultTolerance _obj;
public:
	VmConfigIncompatibleForFaultTolerance_closure(const vw1__VmConfigIncompatibleForFaultTolerance& obj) : _obj(obj) {}
	virtual ~VmConfigIncompatibleForFaultTolerance_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigIncompatibleForFaultTolerance"; }
};

class VmConfigIncompatibleForRecordReplay_closure : public closure
{
protected:
	vw1__VmConfigIncompatibleForRecordReplay _obj;
public:
	VmConfigIncompatibleForRecordReplay_closure(const vw1__VmConfigIncompatibleForRecordReplay& obj) : _obj(obj) {}
	virtual ~VmConfigIncompatibleForRecordReplay_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmConfigIncompatibleForRecordReplay"; }
};

class VmFaultToleranceConfigIssue_closure : public closure
{
protected:
	vw1__VmFaultToleranceConfigIssue _obj;
public:
	VmFaultToleranceConfigIssue_closure(const vw1__VmFaultToleranceConfigIssue& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceConfigIssue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceConfigIssue"; }
};

class VmFaultToleranceConfigIssueWrapper_closure : public closure
{
protected:
	vw1__VmFaultToleranceConfigIssueWrapper _obj;
public:
	VmFaultToleranceConfigIssueWrapper_closure(const vw1__VmFaultToleranceConfigIssueWrapper& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceConfigIssueWrapper_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceConfigIssueWrapper"; }
};

class VmFaultToleranceInvalidFileBacking_closure : public closure
{
protected:
	vw1__VmFaultToleranceInvalidFileBacking _obj;
public:
	VmFaultToleranceInvalidFileBacking_closure(const vw1__VmFaultToleranceInvalidFileBacking& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceInvalidFileBacking_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceInvalidFileBacking"; }
};

class VmFaultToleranceIssue_closure : public closure
{
protected:
	vw1__VmFaultToleranceIssue _obj;
public:
	VmFaultToleranceIssue_closure(const vw1__VmFaultToleranceIssue& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceIssue_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceIssue"; }
};

class VmFaultToleranceOpIssuesList_closure : public closure
{
protected:
	vw1__VmFaultToleranceOpIssuesList _obj;
public:
	VmFaultToleranceOpIssuesList_closure(const vw1__VmFaultToleranceOpIssuesList& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceOpIssuesList_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceOpIssuesList"; }
};

class VmFaultToleranceTooManyVMsOnHost_closure : public closure
{
protected:
	vw1__VmFaultToleranceTooManyVMsOnHost _obj;
public:
	VmFaultToleranceTooManyVMsOnHost_closure(const vw1__VmFaultToleranceTooManyVMsOnHost& obj) : _obj(obj) {}
	virtual ~VmFaultToleranceTooManyVMsOnHost_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmFaultToleranceTooManyVMsOnHost"; }
};

class VmHostAffinityRuleViolation_closure : public closure
{
protected:
	vw1__VmHostAffinityRuleViolation _obj;
public:
	VmHostAffinityRuleViolation_closure(const vw1__VmHostAffinityRuleViolation& obj) : _obj(obj) {}
	virtual ~VmHostAffinityRuleViolation_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmHostAffinityRuleViolation"; }
};

class VmLimitLicense_closure : public closure
{
protected:
	vw1__VmLimitLicense _obj;
public:
	VmLimitLicense_closure(const vw1__VmLimitLicense& obj) : _obj(obj) {}
	virtual ~VmLimitLicense_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmLimitLicense"; }
};

class VmMonitorIncompatibleForFaultTolerance_closure : public closure
{
protected:
	vw1__VmMonitorIncompatibleForFaultTolerance _obj;
public:
	VmMonitorIncompatibleForFaultTolerance_closure(const vw1__VmMonitorIncompatibleForFaultTolerance& obj) : _obj(obj) {}
	virtual ~VmMonitorIncompatibleForFaultTolerance_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmMonitorIncompatibleForFaultTolerance"; }
};

class VmPowerOnDisabled_closure : public closure
{
protected:
	vw1__VmPowerOnDisabled _obj;
public:
	VmPowerOnDisabled_closure(const vw1__VmPowerOnDisabled& obj) : _obj(obj) {}
	virtual ~VmPowerOnDisabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmPowerOnDisabled"; }
};

class VmToolsUpgradeFault_closure : public closure
{
protected:
	vw1__VmToolsUpgradeFault _obj;
public:
	VmToolsUpgradeFault_closure(const vw1__VmToolsUpgradeFault& obj) : _obj(obj) {}
	virtual ~VmToolsUpgradeFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmToolsUpgradeFault"; }
};

class VmValidateMaxDevice_closure : public closure
{
protected:
	vw1__VmValidateMaxDevice _obj;
public:
	VmValidateMaxDevice_closure(const vw1__VmValidateMaxDevice& obj) : _obj(obj) {}
	virtual ~VmValidateMaxDevice_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmValidateMaxDevice"; }
};

class VmWwnConflict_closure : public closure
{
protected:
	vw1__VmWwnConflict _obj;
public:
	VmWwnConflict_closure(const vw1__VmWwnConflict& obj) : _obj(obj) {}
	virtual ~VmWwnConflict_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmWwnConflict"; }
};

class VmfsAlreadyMounted_closure : public closure
{
protected:
	vw1__VmfsAlreadyMounted _obj;
public:
	VmfsAlreadyMounted_closure(const vw1__VmfsAlreadyMounted& obj) : _obj(obj) {}
	virtual ~VmfsAlreadyMounted_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsAlreadyMounted"; }
};

class VmfsAmbiguousMount_closure : public closure
{
protected:
	vw1__VmfsAmbiguousMount _obj;
public:
	VmfsAmbiguousMount_closure(const vw1__VmfsAmbiguousMount& obj) : _obj(obj) {}
	virtual ~VmfsAmbiguousMount_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsAmbiguousMount"; }
};

class VmfsMountFault_closure : public closure
{
protected:
	vw1__VmfsMountFault _obj;
public:
	VmfsMountFault_closure(const vw1__VmfsMountFault& obj) : _obj(obj) {}
	virtual ~VmfsMountFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmfsMountFault"; }
};

class VmotionInterfaceNotEnabled_closure : public closure
{
protected:
	vw1__VmotionInterfaceNotEnabled _obj;
public:
	VmotionInterfaceNotEnabled_closure(const vw1__VmotionInterfaceNotEnabled& obj) : _obj(obj) {}
	virtual ~VmotionInterfaceNotEnabled_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmotionInterfaceNotEnabled"; }
};

class VolumeEditorError_closure : public closure
{
protected:
	vw1__VolumeEditorError _obj;
public:
	VolumeEditorError_closure(const vw1__VolumeEditorError& obj) : _obj(obj) {}
	virtual ~VolumeEditorError_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VolumeEditorError"; }
};

class VramLimitLicense_closure : public closure
{
protected:
	vw1__VramLimitLicense _obj;
public:
	VramLimitLicense_closure(const vw1__VramLimitLicense& obj) : _obj(obj) {}
	virtual ~VramLimitLicense_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VramLimitLicense"; }
};

class VspanDestPortConflict_closure : public closure
{
protected:
	vw1__VspanDestPortConflict _obj;
public:
	VspanDestPortConflict_closure(const vw1__VspanDestPortConflict& obj) : _obj(obj) {}
	virtual ~VspanDestPortConflict_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VspanDestPortConflict"; }
};

class VspanPortConflict_closure : public closure
{
protected:
	vw1__VspanPortConflict _obj;
public:
	VspanPortConflict_closure(const vw1__VspanPortConflict& obj) : _obj(obj) {}
	virtual ~VspanPortConflict_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VspanPortConflict"; }
};

class VspanPortMoveFault_closure : public closure
{
protected:
	vw1__VspanPortMoveFault _obj;
public:
	VspanPortMoveFault_closure(const vw1__VspanPortMoveFault& obj) : _obj(obj) {}
	virtual ~VspanPortMoveFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VspanPortMoveFault"; }
};

class VspanPortPromiscChangeFault_closure : public closure
{
protected:
	vw1__VspanPortPromiscChangeFault _obj;
public:
	VspanPortPromiscChangeFault_closure(const vw1__VspanPortPromiscChangeFault& obj) : _obj(obj) {}
	virtual ~VspanPortPromiscChangeFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VspanPortPromiscChangeFault"; }
};

class VspanPortgroupPromiscChangeFault_closure : public closure
{
protected:
	vw1__VspanPortgroupPromiscChangeFault _obj;
public:
	VspanPortgroupPromiscChangeFault_closure(const vw1__VspanPortgroupPromiscChangeFault& obj) : _obj(obj) {}
	virtual ~VspanPortgroupPromiscChangeFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VspanPortgroupPromiscChangeFault"; }
};

class VspanPortgroupTypeChangeFault_closure : public closure
{
protected:
	vw1__VspanPortgroupTypeChangeFault _obj;
public:
	VspanPortgroupTypeChangeFault_closure(const vw1__VspanPortgroupTypeChangeFault& obj) : _obj(obj) {}
	virtual ~VspanPortgroupTypeChangeFault_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VspanPortgroupTypeChangeFault"; }
};

class VspanPromiscuousPortNotSupported_closure : public closure
{
protected:
	vw1__VspanPromiscuousPortNotSupported _obj;
public:
	VspanPromiscuousPortNotSupported_closure(const vw1__VspanPromiscuousPortNotSupported& obj) : _obj(obj) {}
	virtual ~VspanPromiscuousPortNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VspanPromiscuousPortNotSupported"; }
};

class VspanSameSessionPortConflict_closure : public closure
{
protected:
	vw1__VspanSameSessionPortConflict _obj;
public:
	VspanSameSessionPortConflict_closure(const vw1__VspanSameSessionPortConflict& obj) : _obj(obj) {}
	virtual ~VspanSameSessionPortConflict_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VspanSameSessionPortConflict"; }
};

class WakeOnLanNotSupported_closure : public closure
{
protected:
	vw1__WakeOnLanNotSupported _obj;
public:
	WakeOnLanNotSupported_closure(const vw1__WakeOnLanNotSupported& obj) : _obj(obj) {}
	virtual ~WakeOnLanNotSupported_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WakeOnLanNotSupported"; }
};

class WakeOnLanNotSupportedByVmotionNIC_closure : public closure
{
protected:
	vw1__WakeOnLanNotSupportedByVmotionNIC _obj;
public:
	WakeOnLanNotSupportedByVmotionNIC_closure(const vw1__WakeOnLanNotSupportedByVmotionNIC& obj) : _obj(obj) {}
	virtual ~WakeOnLanNotSupportedByVmotionNIC_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WakeOnLanNotSupportedByVmotionNIC"; }
};

class WillLoseHAProtection_closure : public closure
{
protected:
	vw1__WillLoseHAProtection _obj;
public:
	WillLoseHAProtection_closure(const vw1__WillLoseHAProtection& obj) : _obj(obj) {}
	virtual ~WillLoseHAProtection_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WillLoseHAProtection"; }
};

class WillModifyConfigCpuRequirements_closure : public closure
{
protected:
	vw1__WillModifyConfigCpuRequirements _obj;
public:
	WillModifyConfigCpuRequirements_closure(const vw1__WillModifyConfigCpuRequirements& obj) : _obj(obj) {}
	virtual ~WillModifyConfigCpuRequirements_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WillModifyConfigCpuRequirements"; }
};

class WillResetSnapshotDirectory_closure : public closure
{
protected:
	vw1__WillResetSnapshotDirectory _obj;
public:
	WillResetSnapshotDirectory_closure(const vw1__WillResetSnapshotDirectory& obj) : _obj(obj) {}
	virtual ~WillResetSnapshotDirectory_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "WillResetSnapshotDirectory"; }
};

class Alarm_closure : public closure
{
protected:
	Alarm _obj;
public:
	Alarm_closure(const Alarm& obj) : _obj(obj) {}
	virtual ~Alarm_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Alarm"; }
};

class AlarmManager_closure : public closure
{
protected:
	AlarmManager _obj;
public:
	AlarmManager_closure(const AlarmManager& obj) : _obj(obj) {}
	virtual ~AlarmManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AlarmManager"; }
};

class AuthorizationManager_closure : public closure
{
protected:
	AuthorizationManager _obj;
public:
	AuthorizationManager_closure(const AuthorizationManager& obj) : _obj(obj) {}
	virtual ~AuthorizationManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "AuthorizationManager"; }
};

class ClusterComputeResource_closure : public closure
{
protected:
	ClusterComputeResource _obj;
public:
	ClusterComputeResource_closure(const ClusterComputeResource& obj) : _obj(obj) {}
	virtual ~ClusterComputeResource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterComputeResource"; }
};

class ClusterProfile_closure : public closure
{
protected:
	ClusterProfile _obj;
public:
	ClusterProfile_closure(const ClusterProfile& obj) : _obj(obj) {}
	virtual ~ClusterProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterProfile"; }
};

class ClusterProfileManager_closure : public closure
{
protected:
	ClusterProfileManager _obj;
public:
	ClusterProfileManager_closure(const ClusterProfileManager& obj) : _obj(obj) {}
	virtual ~ClusterProfileManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ClusterProfileManager"; }
};

class ComputeResource_closure : public closure
{
protected:
	ComputeResource _obj;
public:
	ComputeResource_closure(const ComputeResource& obj) : _obj(obj) {}
	virtual ~ComputeResource_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ComputeResource"; }
};

class ContainerView_closure : public closure
{
protected:
	ContainerView _obj;
public:
	ContainerView_closure(const ContainerView& obj) : _obj(obj) {}
	virtual ~ContainerView_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ContainerView"; }
};

class CustomFieldsManager_closure : public closure
{
protected:
	CustomFieldsManager _obj;
public:
	CustomFieldsManager_closure(const CustomFieldsManager& obj) : _obj(obj) {}
	virtual ~CustomFieldsManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomFieldsManager"; }
};

class CustomizationSpecManager_closure : public closure
{
protected:
	CustomizationSpecManager _obj;
public:
	CustomizationSpecManager_closure(const CustomizationSpecManager& obj) : _obj(obj) {}
	virtual ~CustomizationSpecManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "CustomizationSpecManager"; }
};

class Datacenter_closure : public closure
{
protected:
	Datacenter _obj;
public:
	Datacenter_closure(const Datacenter& obj) : _obj(obj) {}
	virtual ~Datacenter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Datacenter"; }
};

class Datastore_closure : public closure
{
protected:
	Datastore _obj;
public:
	Datastore_closure(const Datastore& obj) : _obj(obj) {}
	virtual ~Datastore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Datastore"; }
};

class DiagnosticManager_closure : public closure
{
protected:
	DiagnosticManager _obj;
public:
	DiagnosticManager_closure(const DiagnosticManager& obj) : _obj(obj) {}
	virtual ~DiagnosticManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DiagnosticManager"; }
};

class DistributedVirtualPortgroup_closure : public closure
{
protected:
	DistributedVirtualPortgroup _obj;
public:
	DistributedVirtualPortgroup_closure(const DistributedVirtualPortgroup& obj) : _obj(obj) {}
	virtual ~DistributedVirtualPortgroup_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualPortgroup"; }
};

class DistributedVirtualSwitch_closure : public closure
{
protected:
	DistributedVirtualSwitch _obj;
public:
	DistributedVirtualSwitch_closure(const DistributedVirtualSwitch& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitch_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitch"; }
};

class DistributedVirtualSwitchManager_closure : public closure
{
protected:
	DistributedVirtualSwitchManager _obj;
public:
	DistributedVirtualSwitchManager_closure(const DistributedVirtualSwitchManager& obj) : _obj(obj) {}
	virtual ~DistributedVirtualSwitchManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "DistributedVirtualSwitchManager"; }
};

class EnvironmentBrowser_closure : public closure
{
protected:
	EnvironmentBrowser _obj;
public:
	EnvironmentBrowser_closure(const EnvironmentBrowser& obj) : _obj(obj) {}
	virtual ~EnvironmentBrowser_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EnvironmentBrowser"; }
};

class EventHistoryCollector_closure : public closure
{
protected:
	EventHistoryCollector _obj;
public:
	EventHistoryCollector_closure(const EventHistoryCollector& obj) : _obj(obj) {}
	virtual ~EventHistoryCollector_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventHistoryCollector"; }
};

class EventManager_closure : public closure
{
protected:
	EventManager _obj;
public:
	EventManager_closure(const EventManager& obj) : _obj(obj) {}
	virtual ~EventManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "EventManager"; }
};

class ExtensibleManagedObject_closure : public closure
{
protected:
	ExtensibleManagedObject _obj;
public:
	ExtensibleManagedObject_closure(const ExtensibleManagedObject& obj) : _obj(obj) {}
	virtual ~ExtensibleManagedObject_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensibleManagedObject"; }
};

class ExtensionManager_closure : public closure
{
protected:
	ExtensionManager _obj;
public:
	ExtensionManager_closure(const ExtensionManager& obj) : _obj(obj) {}
	virtual ~ExtensionManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ExtensionManager"; }
};

class FileManager_closure : public closure
{
protected:
	FileManager _obj;
public:
	FileManager_closure(const FileManager& obj) : _obj(obj) {}
	virtual ~FileManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "FileManager"; }
};

class Folder_closure : public closure
{
protected:
	Folder _obj;
public:
	Folder_closure(const Folder& obj) : _obj(obj) {}
	virtual ~Folder_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Folder"; }
};

class GuestAuthManager_closure : public closure
{
protected:
	GuestAuthManager _obj;
public:
	GuestAuthManager_closure(const GuestAuthManager& obj) : _obj(obj) {}
	virtual ~GuestAuthManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestAuthManager"; }
};

class GuestFileManager_closure : public closure
{
protected:
	GuestFileManager _obj;
public:
	GuestFileManager_closure(const GuestFileManager& obj) : _obj(obj) {}
	virtual ~GuestFileManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestFileManager"; }
};

class GuestOperationsManager_closure : public closure
{
protected:
	GuestOperationsManager _obj;
public:
	GuestOperationsManager_closure(const GuestOperationsManager& obj) : _obj(obj) {}
	virtual ~GuestOperationsManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestOperationsManager"; }
};

class GuestProcessManager_closure : public closure
{
protected:
	GuestProcessManager _obj;
public:
	GuestProcessManager_closure(const GuestProcessManager& obj) : _obj(obj) {}
	virtual ~GuestProcessManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "GuestProcessManager"; }
};

class HistoryCollector_closure : public closure
{
protected:
	HistoryCollector _obj;
public:
	HistoryCollector_closure(const HistoryCollector& obj) : _obj(obj) {}
	virtual ~HistoryCollector_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HistoryCollector"; }
};

class HostActiveDirectoryAuthentication_closure : public closure
{
protected:
	HostActiveDirectoryAuthentication _obj;
public:
	HostActiveDirectoryAuthentication_closure(const HostActiveDirectoryAuthentication& obj) : _obj(obj) {}
	virtual ~HostActiveDirectoryAuthentication_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostActiveDirectoryAuthentication"; }
};

class HostAuthenticationManager_closure : public closure
{
protected:
	HostAuthenticationManager _obj;
public:
	HostAuthenticationManager_closure(const HostAuthenticationManager& obj) : _obj(obj) {}
	virtual ~HostAuthenticationManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAuthenticationManager"; }
};

class HostAuthenticationStore_closure : public closure
{
protected:
	HostAuthenticationStore _obj;
public:
	HostAuthenticationStore_closure(const HostAuthenticationStore& obj) : _obj(obj) {}
	virtual ~HostAuthenticationStore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAuthenticationStore"; }
};

class HostAutoStartManager_closure : public closure
{
protected:
	HostAutoStartManager _obj;
public:
	HostAutoStartManager_closure(const HostAutoStartManager& obj) : _obj(obj) {}
	virtual ~HostAutoStartManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostAutoStartManager"; }
};

class HostBootDeviceSystem_closure : public closure
{
protected:
	HostBootDeviceSystem _obj;
public:
	HostBootDeviceSystem_closure(const HostBootDeviceSystem& obj) : _obj(obj) {}
	virtual ~HostBootDeviceSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostBootDeviceSystem"; }
};

class HostCacheConfigurationManager_closure : public closure
{
protected:
	HostCacheConfigurationManager _obj;
public:
	HostCacheConfigurationManager_closure(const HostCacheConfigurationManager& obj) : _obj(obj) {}
	virtual ~HostCacheConfigurationManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCacheConfigurationManager"; }
};

class HostCpuSchedulerSystem_closure : public closure
{
protected:
	HostCpuSchedulerSystem _obj;
public:
	HostCpuSchedulerSystem_closure(const HostCpuSchedulerSystem& obj) : _obj(obj) {}
	virtual ~HostCpuSchedulerSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostCpuSchedulerSystem"; }
};

class HostDatastoreBrowser_closure : public closure
{
protected:
	HostDatastoreBrowser _obj;
public:
	HostDatastoreBrowser_closure(const HostDatastoreBrowser& obj) : _obj(obj) {}
	virtual ~HostDatastoreBrowser_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDatastoreBrowser"; }
};

class HostDatastoreSystem_closure : public closure
{
protected:
	HostDatastoreSystem _obj;
public:
	HostDatastoreSystem_closure(const HostDatastoreSystem& obj) : _obj(obj) {}
	virtual ~HostDatastoreSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDatastoreSystem"; }
};

class HostDateTimeSystem_closure : public closure
{
protected:
	HostDateTimeSystem _obj;
public:
	HostDateTimeSystem_closure(const HostDateTimeSystem& obj) : _obj(obj) {}
	virtual ~HostDateTimeSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDateTimeSystem"; }
};

class HostDiagnosticSystem_closure : public closure
{
protected:
	HostDiagnosticSystem _obj;
public:
	HostDiagnosticSystem_closure(const HostDiagnosticSystem& obj) : _obj(obj) {}
	virtual ~HostDiagnosticSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDiagnosticSystem"; }
};

class HostDirectoryStore_closure : public closure
{
protected:
	HostDirectoryStore _obj;
public:
	HostDirectoryStore_closure(const HostDirectoryStore& obj) : _obj(obj) {}
	virtual ~HostDirectoryStore_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostDirectoryStore"; }
};

class HostEsxAgentHostManager_closure : public closure
{
protected:
	HostEsxAgentHostManager _obj;
public:
	HostEsxAgentHostManager_closure(const HostEsxAgentHostManager& obj) : _obj(obj) {}
	virtual ~HostEsxAgentHostManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostEsxAgentHostManager"; }
};

class HostFirewallSystem_closure : public closure
{
protected:
	HostFirewallSystem _obj;
public:
	HostFirewallSystem_closure(const HostFirewallSystem& obj) : _obj(obj) {}
	virtual ~HostFirewallSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirewallSystem"; }
};

class HostFirmwareSystem_closure : public closure
{
protected:
	HostFirmwareSystem _obj;
public:
	HostFirmwareSystem_closure(const HostFirmwareSystem& obj) : _obj(obj) {}
	virtual ~HostFirmwareSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostFirmwareSystem"; }
};

class HostHealthStatusSystem_closure : public closure
{
protected:
	HostHealthStatusSystem _obj;
public:
	HostHealthStatusSystem_closure(const HostHealthStatusSystem& obj) : _obj(obj) {}
	virtual ~HostHealthStatusSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostHealthStatusSystem"; }
};

class HostImageConfigManager_closure : public closure
{
protected:
	HostImageConfigManager _obj;
public:
	HostImageConfigManager_closure(const HostImageConfigManager& obj) : _obj(obj) {}
	virtual ~HostImageConfigManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostImageConfigManager"; }
};

class HostKernelModuleSystem_closure : public closure
{
protected:
	HostKernelModuleSystem _obj;
public:
	HostKernelModuleSystem_closure(const HostKernelModuleSystem& obj) : _obj(obj) {}
	virtual ~HostKernelModuleSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostKernelModuleSystem"; }
};

class HostLocalAccountManager_closure : public closure
{
protected:
	HostLocalAccountManager _obj;
public:
	HostLocalAccountManager_closure(const HostLocalAccountManager& obj) : _obj(obj) {}
	virtual ~HostLocalAccountManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLocalAccountManager"; }
};

class HostLocalAuthentication_closure : public closure
{
protected:
	HostLocalAuthentication _obj;
public:
	HostLocalAuthentication_closure(const HostLocalAuthentication& obj) : _obj(obj) {}
	virtual ~HostLocalAuthentication_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostLocalAuthentication"; }
};

class HostMemorySystem_closure : public closure
{
protected:
	HostMemorySystem _obj;
public:
	HostMemorySystem_closure(const HostMemorySystem& obj) : _obj(obj) {}
	virtual ~HostMemorySystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostMemorySystem"; }
};

class HostNetworkSystem_closure : public closure
{
protected:
	HostNetworkSystem _obj;
public:
	HostNetworkSystem_closure(const HostNetworkSystem& obj) : _obj(obj) {}
	virtual ~HostNetworkSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostNetworkSystem"; }
};

class HostPatchManager_closure : public closure
{
protected:
	HostPatchManager _obj;
public:
	HostPatchManager_closure(const HostPatchManager& obj) : _obj(obj) {}
	virtual ~HostPatchManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPatchManager"; }
};

class HostPciPassthruSystem_closure : public closure
{
protected:
	HostPciPassthruSystem _obj;
public:
	HostPciPassthruSystem_closure(const HostPciPassthruSystem& obj) : _obj(obj) {}
	virtual ~HostPciPassthruSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPciPassthruSystem"; }
};

class HostPowerSystem_closure : public closure
{
protected:
	HostPowerSystem _obj;
public:
	HostPowerSystem_closure(const HostPowerSystem& obj) : _obj(obj) {}
	virtual ~HostPowerSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostPowerSystem"; }
};

class HostProfile_closure : public closure
{
protected:
	HostProfile _obj;
public:
	HostProfile_closure(const HostProfile& obj) : _obj(obj) {}
	virtual ~HostProfile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfile"; }
};

class HostProfileManager_closure : public closure
{
protected:
	HostProfileManager _obj;
public:
	HostProfileManager_closure(const HostProfileManager& obj) : _obj(obj) {}
	virtual ~HostProfileManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostProfileManager"; }
};

class HostServiceSystem_closure : public closure
{
protected:
	HostServiceSystem _obj;
public:
	HostServiceSystem_closure(const HostServiceSystem& obj) : _obj(obj) {}
	virtual ~HostServiceSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostServiceSystem"; }
};

class HostSnmpSystem_closure : public closure
{
protected:
	HostSnmpSystem _obj;
public:
	HostSnmpSystem_closure(const HostSnmpSystem& obj) : _obj(obj) {}
	virtual ~HostSnmpSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSnmpSystem"; }
};

class HostStorageSystem_closure : public closure
{
protected:
	HostStorageSystem _obj;
public:
	HostStorageSystem_closure(const HostStorageSystem& obj) : _obj(obj) {}
	virtual ~HostStorageSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostStorageSystem"; }
};

class HostSystem_closure : public closure
{
protected:
	HostSystem _obj;
public:
	HostSystem_closure(const HostSystem& obj) : _obj(obj) {}
	virtual ~HostSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostSystem"; }
};

class HostVMotionSystem_closure : public closure
{
protected:
	HostVMotionSystem _obj;
public:
	HostVMotionSystem_closure(const HostVMotionSystem& obj) : _obj(obj) {}
	virtual ~HostVMotionSystem_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVMotionSystem"; }
};

class HostVirtualNicManager_closure : public closure
{
protected:
	HostVirtualNicManager _obj;
public:
	HostVirtualNicManager_closure(const HostVirtualNicManager& obj) : _obj(obj) {}
	virtual ~HostVirtualNicManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HostVirtualNicManager"; }
};

class HttpNfcLease_closure : public closure
{
protected:
	HttpNfcLease _obj;
public:
	HttpNfcLease_closure(const HttpNfcLease& obj) : _obj(obj) {}
	virtual ~HttpNfcLease_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "HttpNfcLease"; }
};

class InventoryView_closure : public closure
{
protected:
	InventoryView _obj;
public:
	InventoryView_closure(const InventoryView& obj) : _obj(obj) {}
	virtual ~InventoryView_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "InventoryView"; }
};

class IpPoolManager_closure : public closure
{
protected:
	IpPoolManager _obj;
public:
	IpPoolManager_closure(const IpPoolManager& obj) : _obj(obj) {}
	virtual ~IpPoolManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IpPoolManager"; }
};

class IscsiManager_closure : public closure
{
protected:
	IscsiManager _obj;
public:
	IscsiManager_closure(const IscsiManager& obj) : _obj(obj) {}
	virtual ~IscsiManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "IscsiManager"; }
};

class LicenseAssignmentManager_closure : public closure
{
protected:
	LicenseAssignmentManager _obj;
public:
	LicenseAssignmentManager_closure(const LicenseAssignmentManager& obj) : _obj(obj) {}
	virtual ~LicenseAssignmentManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseAssignmentManager"; }
};

class LicenseManager_closure : public closure
{
protected:
	LicenseManager _obj;
public:
	LicenseManager_closure(const LicenseManager& obj) : _obj(obj) {}
	virtual ~LicenseManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LicenseManager"; }
};

class ListView_closure : public closure
{
protected:
	ListView _obj;
public:
	ListView_closure(const ListView& obj) : _obj(obj) {}
	virtual ~ListView_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ListView"; }
};

class LocalizationManager_closure : public closure
{
protected:
	LocalizationManager _obj;
public:
	LocalizationManager_closure(const LocalizationManager& obj) : _obj(obj) {}
	virtual ~LocalizationManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "LocalizationManager"; }
};

class ManagedEntity_closure : public closure
{
protected:
	ManagedEntity _obj;
public:
	ManagedEntity_closure(const ManagedEntity& obj) : _obj(obj) {}
	virtual ~ManagedEntity_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ManagedEntity"; }
};

class ManagedObjectView_closure : public closure
{
protected:
	ManagedObjectView _obj;
public:
	ManagedObjectView_closure(const ManagedObjectView& obj) : _obj(obj) {}
	virtual ~ManagedObjectView_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ManagedObjectView"; }
};

class Network_closure : public closure
{
protected:
	Network _obj;
public:
	Network_closure(const Network& obj) : _obj(obj) {}
	virtual ~Network_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Network"; }
};

class OptionManager_closure : public closure
{
protected:
	OptionManager _obj;
public:
	OptionManager_closure(const OptionManager& obj) : _obj(obj) {}
	virtual ~OptionManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OptionManager"; }
};

class OvfManager_closure : public closure
{
protected:
	OvfManager _obj;
public:
	OvfManager_closure(const OvfManager& obj) : _obj(obj) {}
	virtual ~OvfManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "OvfManager"; }
};

class PerformanceManager_closure : public closure
{
protected:
	PerformanceManager _obj;
public:
	PerformanceManager_closure(const PerformanceManager& obj) : _obj(obj) {}
	virtual ~PerformanceManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PerformanceManager"; }
};

class Profile_closure : public closure
{
protected:
	Profile _obj;
public:
	Profile_closure(const Profile& obj) : _obj(obj) {}
	virtual ~Profile_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Profile"; }
};

class ProfileComplianceManager_closure : public closure
{
protected:
	ProfileComplianceManager _obj;
public:
	ProfileComplianceManager_closure(const ProfileComplianceManager& obj) : _obj(obj) {}
	virtual ~ProfileComplianceManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileComplianceManager"; }
};

class ProfileManager_closure : public closure
{
protected:
	ProfileManager _obj;
public:
	ProfileManager_closure(const ProfileManager& obj) : _obj(obj) {}
	virtual ~ProfileManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ProfileManager"; }
};

class PropertyCollector_closure : public closure
{
protected:
	PropertyCollector _obj;
public:
	PropertyCollector_closure(const PropertyCollector& obj) : _obj(obj) {}
	virtual ~PropertyCollector_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PropertyCollector"; }
};

class PropertyFilter_closure : public closure
{
protected:
	PropertyFilter _obj;
public:
	PropertyFilter_closure(const PropertyFilter& obj) : _obj(obj) {}
	virtual ~PropertyFilter_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "PropertyFilter"; }
};

class ResourcePlanningManager_closure : public closure
{
protected:
	ResourcePlanningManager _obj;
public:
	ResourcePlanningManager_closure(const ResourcePlanningManager& obj) : _obj(obj) {}
	virtual ~ResourcePlanningManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePlanningManager"; }
};

class ResourcePool_closure : public closure
{
protected:
	ResourcePool _obj;
public:
	ResourcePool_closure(const ResourcePool& obj) : _obj(obj) {}
	virtual ~ResourcePool_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ResourcePool"; }
};

class ScheduledTask_closure : public closure
{
protected:
	ScheduledTask _obj;
public:
	ScheduledTask_closure(const ScheduledTask& obj) : _obj(obj) {}
	virtual ~ScheduledTask_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTask"; }
};

class ScheduledTaskManager_closure : public closure
{
protected:
	ScheduledTaskManager _obj;
public:
	ScheduledTaskManager_closure(const ScheduledTaskManager& obj) : _obj(obj) {}
	virtual ~ScheduledTaskManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ScheduledTaskManager"; }
};

class SearchIndex_closure : public closure
{
protected:
	SearchIndex _obj;
public:
	SearchIndex_closure(const SearchIndex& obj) : _obj(obj) {}
	virtual ~SearchIndex_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SearchIndex"; }
};

class ServiceInstance_closure : public closure
{
protected:
	ServiceInstance _obj;
public:
	ServiceInstance_closure(const ServiceInstance& obj) : _obj(obj) {}
	virtual ~ServiceInstance_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ServiceInstance"; }
};

class SessionManager_closure : public closure
{
protected:
	SessionManager _obj;
public:
	SessionManager_closure(const SessionManager& obj) : _obj(obj) {}
	virtual ~SessionManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "SessionManager"; }
};

class StoragePod_closure : public closure
{
protected:
	StoragePod _obj;
public:
	StoragePod_closure(const StoragePod& obj) : _obj(obj) {}
	virtual ~StoragePod_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StoragePod"; }
};

class StorageResourceManager_closure : public closure
{
protected:
	StorageResourceManager _obj;
public:
	StorageResourceManager_closure(const StorageResourceManager& obj) : _obj(obj) {}
	virtual ~StorageResourceManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "StorageResourceManager"; }
};

class Task_closure : public closure
{
protected:
	Task _obj;
public:
	Task_closure(const Task& obj) : _obj(obj) {}
	virtual ~Task_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "Task"; }
};

class TaskHistoryCollector_closure : public closure
{
protected:
	TaskHistoryCollector _obj;
public:
	TaskHistoryCollector_closure(const TaskHistoryCollector& obj) : _obj(obj) {}
	virtual ~TaskHistoryCollector_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskHistoryCollector"; }
};

class TaskManager_closure : public closure
{
protected:
	TaskManager _obj;
public:
	TaskManager_closure(const TaskManager& obj) : _obj(obj) {}
	virtual ~TaskManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "TaskManager"; }
};

class UserDirectory_closure : public closure
{
protected:
	UserDirectory _obj;
public:
	UserDirectory_closure(const UserDirectory& obj) : _obj(obj) {}
	virtual ~UserDirectory_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "UserDirectory"; }
};

class View_closure : public closure
{
protected:
	View _obj;
public:
	View_closure(const View& obj) : _obj(obj) {}
	virtual ~View_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "View"; }
};

class ViewManager_closure : public closure
{
protected:
	ViewManager _obj;
public:
	ViewManager_closure(const ViewManager& obj) : _obj(obj) {}
	virtual ~ViewManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "ViewManager"; }
};

class VirtualApp_closure : public closure
{
protected:
	VirtualApp _obj;
public:
	VirtualApp_closure(const VirtualApp& obj) : _obj(obj) {}
	virtual ~VirtualApp_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualApp"; }
};

class VirtualDiskManager_closure : public closure
{
protected:
	VirtualDiskManager _obj;
public:
	VirtualDiskManager_closure(const VirtualDiskManager& obj) : _obj(obj) {}
	virtual ~VirtualDiskManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualDiskManager"; }
};

class VirtualMachine_closure : public closure
{
protected:
	VirtualMachine _obj;
public:
	VirtualMachine_closure(const VirtualMachine& obj) : _obj(obj) {}
	virtual ~VirtualMachine_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachine"; }
};

class VirtualMachineCompatibilityChecker_closure : public closure
{
protected:
	VirtualMachineCompatibilityChecker _obj;
public:
	VirtualMachineCompatibilityChecker_closure(const VirtualMachineCompatibilityChecker& obj) : _obj(obj) {}
	virtual ~VirtualMachineCompatibilityChecker_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineCompatibilityChecker"; }
};

class VirtualMachineProvisioningChecker_closure : public closure
{
protected:
	VirtualMachineProvisioningChecker _obj;
public:
	VirtualMachineProvisioningChecker_closure(const VirtualMachineProvisioningChecker& obj) : _obj(obj) {}
	virtual ~VirtualMachineProvisioningChecker_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineProvisioningChecker"; }
};

class VirtualMachineSnapshot_closure : public closure
{
protected:
	VirtualMachineSnapshot _obj;
public:
	VirtualMachineSnapshot_closure(const VirtualMachineSnapshot& obj) : _obj(obj) {}
	virtual ~VirtualMachineSnapshot_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualMachineSnapshot"; }
};

class VirtualizationManager_closure : public closure
{
protected:
	VirtualizationManager _obj;
public:
	VirtualizationManager_closure(const VirtualizationManager& obj) : _obj(obj) {}
	virtual ~VirtualizationManager_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VirtualizationManager"; }
};

class VmwareDistributedVirtualSwitch_closure : public closure
{
protected:
	VmwareDistributedVirtualSwitch _obj;
public:
	VmwareDistributedVirtualSwitch_closure(const VmwareDistributedVirtualSwitch& obj) : _obj(obj) {}
	virtual ~VmwareDistributedVirtualSwitch_closure() {}
	virtual closure* get_sub_closure(size_t index) const;
	virtual void browse(pf_update update, void* context) const;
	virtual const char* type() const { return "VmwareDistributedVirtualSwitch"; }
};

// browse handler for different types
//template<typename T> std::string handle_obj(T t);

inline std::string handle_obj(vw1__AboutInfo obj)
	{ return "<vw1__AboutInfo>"; }

inline std::string handle_obj(vw1__Action obj)
	{ return "<vw1__Action>"; }

inline std::string handle_obj(vw1__ActiveDirectoryProfile obj)
	{ return "<vw1__ActiveDirectoryProfile>"; }

inline std::string handle_obj(Alarm obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__AlarmAction obj)
	{ return "<vw1__AlarmAction>"; }

inline std::string handle_obj(vw1__AlarmDescription obj)
	{ return "<vw1__AlarmDescription>"; }

inline std::string handle_obj(vw1__AlarmEventArgument obj)
	{ return "<vw1__AlarmEventArgument>"; }

inline std::string handle_obj(vw1__AlarmExpression obj)
	{ return "<vw1__AlarmExpression>"; }

inline std::string handle_obj(vw1__AlarmInfo obj)
	{ return "<vw1__AlarmInfo>"; }

inline std::string handle_obj(AlarmManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__AlarmSetting obj)
	{ return "<vw1__AlarmSetting>"; }

inline std::string handle_obj(vw1__AlarmState obj)
	{ return "<vw1__AlarmState>"; }

inline std::string handle_obj(vw1__AlarmTriggeringActionTransitionSpec obj)
	{ return "<vw1__AlarmTriggeringActionTransitionSpec>"; }

inline std::string handle_obj(vw1__AnswerFileStatusError obj)
	{ return "<vw1__AnswerFileStatusError>"; }

inline std::string handle_obj(vw1__AnswerFileUpdateFailure obj)
	{ return "<vw1__AnswerFileUpdateFailure>"; }

inline std::string handle_obj(vw1__ApplyProfile obj)
	{ return "<vw1__ApplyProfile>"; }

inline std::string handle_obj(vw1__AuthenticationProfile obj)
	{ return "<vw1__AuthenticationProfile>"; }

inline std::string handle_obj(vw1__AuthorizationDescription obj)
	{ return "<vw1__AuthorizationDescription>"; }

inline std::string handle_obj(AuthorizationManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__AuthorizationPrivilege obj)
	{ return "<vw1__AuthorizationPrivilege>"; }

inline std::string handle_obj(vw1__AuthorizationRole obj)
	{ return "<vw1__AuthorizationRole>"; }

inline std::string handle_obj(vw1__AutoStartDefaults obj)
	{ return "<vw1__AutoStartDefaults>"; }

inline std::string handle_obj(vw1__AutoStartPowerInfo obj)
	{ return "<vw1__AutoStartPowerInfo>"; }

inline std::string handle_obj(vw1__BoolOption obj)
	{ return "<vw1__BoolOption>"; }

inline std::string handle_obj(vw1__BoolPolicy obj)
	{ return "<vw1__BoolPolicy>"; }

inline std::string handle_obj(vw1__Capability obj)
	{ return "<vw1__Capability>"; }

inline std::string handle_obj(vw1__ChoiceOption obj)
	{ return "<vw1__ChoiceOption>"; }

inline std::string handle_obj(vw1__ClusterAction obj)
	{ return "<vw1__ClusterAction>"; }

inline std::string handle_obj(vw1__ClusterActionHistory obj)
	{ return "<vw1__ClusterActionHistory>"; }

inline std::string handle_obj(vw1__ClusterAttemptedVmInfo obj)
	{ return "<vw1__ClusterAttemptedVmInfo>"; }

inline std::string handle_obj(vw1__ClusterConfigInfo obj)
	{ return "<vw1__ClusterConfigInfo>"; }

inline std::string handle_obj(vw1__ClusterDasAamNodeState obj)
	{ return "<vw1__ClusterDasAamNodeState>"; }

inline std::string handle_obj(vw1__ClusterDasAdmissionControlInfo obj)
	{ return "<vw1__ClusterDasAdmissionControlInfo>"; }

inline std::string handle_obj(vw1__ClusterDasAdmissionControlPolicy obj)
	{ return "<vw1__ClusterDasAdmissionControlPolicy>"; }

inline std::string handle_obj(vw1__ClusterDasConfigInfo obj)
	{ return "<vw1__ClusterDasConfigInfo>"; }

inline std::string handle_obj(vw1__ClusterDasData obj)
	{ return "<vw1__ClusterDasData>"; }

inline std::string handle_obj(vw1__ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots obj)
	{ return "<vw1__ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots>"; }

inline std::string handle_obj(vw1__ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo obj)
	{ return "<vw1__ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo>"; }

inline std::string handle_obj(vw1__ClusterDasFdmHostState obj)
	{ return "<vw1__ClusterDasFdmHostState>"; }

inline std::string handle_obj(vw1__ClusterDasHostInfo obj)
	{ return "<vw1__ClusterDasHostInfo>"; }

inline std::string handle_obj(vw1__ClusterDasVmConfigInfo obj)
	{ return "<vw1__ClusterDasVmConfigInfo>"; }

inline std::string handle_obj(vw1__ClusterDasVmConfigSpec obj)
	{ return "<vw1__ClusterDasVmConfigSpec>"; }

inline std::string handle_obj(vw1__ClusterDasVmSettings obj)
	{ return "<vw1__ClusterDasVmSettings>"; }

inline std::string handle_obj(vw1__ClusterDpmConfigInfo obj)
	{ return "<vw1__ClusterDpmConfigInfo>"; }

inline std::string handle_obj(vw1__ClusterDpmHostConfigInfo obj)
	{ return "<vw1__ClusterDpmHostConfigInfo>"; }

inline std::string handle_obj(vw1__ClusterDpmHostConfigSpec obj)
	{ return "<vw1__ClusterDpmHostConfigSpec>"; }

inline std::string handle_obj(vw1__ClusterDrsConfigInfo obj)
	{ return "<vw1__ClusterDrsConfigInfo>"; }

inline std::string handle_obj(vw1__ClusterDrsFaults obj)
	{ return "<vw1__ClusterDrsFaults>"; }

inline std::string handle_obj(vw1__ClusterDrsFaultsFaultsByVm obj)
	{ return "<vw1__ClusterDrsFaultsFaultsByVm>"; }

inline std::string handle_obj(vw1__ClusterDrsMigration obj)
	{ return "<vw1__ClusterDrsMigration>"; }

inline std::string handle_obj(vw1__ClusterDrsRecommendation obj)
	{ return "<vw1__ClusterDrsRecommendation>"; }

inline std::string handle_obj(vw1__ClusterDrsVmConfigInfo obj)
	{ return "<vw1__ClusterDrsVmConfigInfo>"; }

inline std::string handle_obj(vw1__ClusterDrsVmConfigSpec obj)
	{ return "<vw1__ClusterDrsVmConfigSpec>"; }

inline std::string handle_obj(vw1__ClusterFailoverHostAdmissionControlInfoHostStatus obj)
	{ return "<vw1__ClusterFailoverHostAdmissionControlInfoHostStatus>"; }

inline std::string handle_obj(vw1__ClusterGroupInfo obj)
	{ return "<vw1__ClusterGroupInfo>"; }

inline std::string handle_obj(vw1__ClusterGroupSpec obj)
	{ return "<vw1__ClusterGroupSpec>"; }

inline std::string handle_obj(vw1__ClusterNotAttemptedVmInfo obj)
	{ return "<vw1__ClusterNotAttemptedVmInfo>"; }

inline std::string handle_obj(vw1__ClusterPowerOnVmResult obj)
	{ return "<vw1__ClusterPowerOnVmResult>"; }

inline std::string handle_obj(ClusterProfileManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ClusterRecommendation obj)
	{ return "<vw1__ClusterRecommendation>"; }

inline std::string handle_obj(vw1__ClusterRuleInfo obj)
	{ return "<vw1__ClusterRuleInfo>"; }

inline std::string handle_obj(vw1__ClusterRuleSpec obj)
	{ return "<vw1__ClusterRuleSpec>"; }

inline std::string handle_obj(vw1__ClusterVmToolsMonitoringSettings obj)
	{ return "<vw1__ClusterVmToolsMonitoringSettings>"; }

inline std::string handle_obj(vw1__ComplianceFailure obj)
	{ return "<vw1__ComplianceFailure>"; }

inline std::string handle_obj(vw1__ComplianceLocator obj)
	{ return "<vw1__ComplianceLocator>"; }

inline std::string handle_obj(vw1__ComplianceProfile obj)
	{ return "<vw1__ComplianceProfile>"; }

inline std::string handle_obj(ComputeResource obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ComputeResourceConfigInfo obj)
	{ return "<vw1__ComputeResourceConfigInfo>"; }

inline std::string handle_obj(vw1__ComputeResourceEventArgument obj)
	{ return "<vw1__ComputeResourceEventArgument>"; }

inline std::string handle_obj(vw1__ComputeResourceHostSPBMLicenseInfo obj)
	{ return "<vw1__ComputeResourceHostSPBMLicenseInfo>"; }

inline std::string handle_obj(vw1__ComputeResourceSummary obj)
	{ return "<vw1__ComputeResourceSummary>"; }

inline std::string handle_obj(vw1__CustomFieldDef obj)
	{ return "<vw1__CustomFieldDef>"; }

inline std::string handle_obj(vw1__CustomFieldValue obj)
	{ return "<vw1__CustomFieldValue>"; }

inline std::string handle_obj(CustomFieldsManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__CustomizationAdapterMapping obj)
	{ return "<vw1__CustomizationAdapterMapping>"; }

inline std::string handle_obj(vw1__CustomizationGlobalIPSettings obj)
	{ return "<vw1__CustomizationGlobalIPSettings>"; }

inline std::string handle_obj(vw1__CustomizationGuiRunOnce obj)
	{ return "<vw1__CustomizationGuiRunOnce>"; }

inline std::string handle_obj(vw1__CustomizationGuiUnattended obj)
	{ return "<vw1__CustomizationGuiUnattended>"; }

inline std::string handle_obj(vw1__CustomizationIPSettings obj)
	{ return "<vw1__CustomizationIPSettings>"; }

inline std::string handle_obj(vw1__CustomizationIPSettingsIpV6AddressSpec obj)
	{ return "<vw1__CustomizationIPSettingsIpV6AddressSpec>"; }

inline std::string handle_obj(vw1__CustomizationIdentification obj)
	{ return "<vw1__CustomizationIdentification>"; }

inline std::string handle_obj(vw1__CustomizationIdentitySettings obj)
	{ return "<vw1__CustomizationIdentitySettings>"; }

inline std::string handle_obj(vw1__CustomizationIpGenerator obj)
	{ return "<vw1__CustomizationIpGenerator>"; }

inline std::string handle_obj(vw1__CustomizationIpV6Generator obj)
	{ return "<vw1__CustomizationIpV6Generator>"; }

inline std::string handle_obj(vw1__CustomizationLicenseFilePrintData obj)
	{ return "<vw1__CustomizationLicenseFilePrintData>"; }

inline std::string handle_obj(vw1__CustomizationName obj)
	{ return "<vw1__CustomizationName>"; }

inline std::string handle_obj(vw1__CustomizationOptions obj)
	{ return "<vw1__CustomizationOptions>"; }

inline std::string handle_obj(vw1__CustomizationPassword obj)
	{ return "<vw1__CustomizationPassword>"; }

inline std::string handle_obj(vw1__CustomizationSpec obj)
	{ return "<vw1__CustomizationSpec>"; }

inline std::string handle_obj(vw1__CustomizationSpecInfo obj)
	{ return "<vw1__CustomizationSpecInfo>"; }

inline std::string handle_obj(CustomizationSpecManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__CustomizationUserData obj)
	{ return "<vw1__CustomizationUserData>"; }

inline std::string handle_obj(vw1__DVPortConfigInfo obj)
	{ return "<vw1__DVPortConfigInfo>"; }

inline std::string handle_obj(vw1__DVPortSetting obj)
	{ return "<vw1__DVPortSetting>"; }

inline std::string handle_obj(vw1__DVPortState obj)
	{ return "<vw1__DVPortState>"; }

inline std::string handle_obj(vw1__DVPortStatus obj)
	{ return "<vw1__DVPortStatus>"; }

inline std::string handle_obj(vw1__DVPortgroupConfigInfo obj)
	{ return "<vw1__DVPortgroupConfigInfo>"; }

inline std::string handle_obj(vw1__DVPortgroupConfigSpec obj)
	{ return "<vw1__DVPortgroupConfigSpec>"; }

inline std::string handle_obj(vw1__DVPortgroupPolicy obj)
	{ return "<vw1__DVPortgroupPolicy>"; }

inline std::string handle_obj(vw1__DVSCapability obj)
	{ return "<vw1__DVSCapability>"; }

inline std::string handle_obj(vw1__DVSConfigInfo obj)
	{ return "<vw1__DVSConfigInfo>"; }

inline std::string handle_obj(vw1__DVSConfigSpec obj)
	{ return "<vw1__DVSConfigSpec>"; }

inline std::string handle_obj(vw1__DVSContactInfo obj)
	{ return "<vw1__DVSContactInfo>"; }

inline std::string handle_obj(vw1__DVSFailureCriteria obj)
	{ return "<vw1__DVSFailureCriteria>"; }

inline std::string handle_obj(vw1__DVSFeatureCapability obj)
	{ return "<vw1__DVSFeatureCapability>"; }

inline std::string handle_obj(vw1__DVSNetworkResourceManagementCapability obj)
	{ return "<vw1__DVSNetworkResourceManagementCapability>"; }

inline std::string handle_obj(vw1__DVSNetworkResourcePool obj)
	{ return "<vw1__DVSNetworkResourcePool>"; }

inline std::string handle_obj(vw1__DVSNetworkResourcePoolAllocationInfo obj)
	{ return "<vw1__DVSNetworkResourcePoolAllocationInfo>"; }

inline std::string handle_obj(vw1__DVSPolicy obj)
	{ return "<vw1__DVSPolicy>"; }

inline std::string handle_obj(vw1__DVSSecurityPolicy obj)
	{ return "<vw1__DVSSecurityPolicy>"; }

inline std::string handle_obj(vw1__DVSSummary obj)
	{ return "<vw1__DVSSummary>"; }

inline std::string handle_obj(vw1__DVSTrafficShapingPolicy obj)
	{ return "<vw1__DVSTrafficShapingPolicy>"; }

inline std::string handle_obj(vw1__DVSUplinkPortPolicy obj)
	{ return "<vw1__DVSUplinkPortPolicy>"; }

inline std::string handle_obj(vw1__DVSVendorSpecificConfig obj)
	{ return "<vw1__DVSVendorSpecificConfig>"; }

inline std::string handle_obj(vw1__DasHeartbeatDatastoreInfo obj)
	{ return "<vw1__DasHeartbeatDatastoreInfo>"; }

inline std::string handle_obj(Datacenter obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__DatacenterEventArgument obj)
	{ return "<vw1__DatacenterEventArgument>"; }

inline std::string handle_obj(vw1__DatacenterMismatchArgument obj)
	{ return "<vw1__DatacenterMismatchArgument>"; }

inline std::string handle_obj(Datastore obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__DatastoreCapability obj)
	{ return "<vw1__DatastoreCapability>"; }

inline std::string handle_obj(vw1__DatastoreEventArgument obj)
	{ return "<vw1__DatastoreEventArgument>"; }

inline std::string handle_obj(vw1__DatastoreHostMount obj)
	{ return "<vw1__DatastoreHostMount>"; }

inline std::string handle_obj(vw1__DatastoreInfo obj)
	{ return "<vw1__DatastoreInfo>"; }

inline std::string handle_obj(vw1__DatastoreOption obj)
	{ return "<vw1__DatastoreOption>"; }

inline std::string handle_obj(vw1__DatastoreSummary obj)
	{ return "<vw1__DatastoreSummary>"; }

inline std::string handle_obj(vw1__DateTimeProfile obj)
	{ return "<vw1__DateTimeProfile>"; }

inline std::string handle_obj(vw1__Description obj)
	{ return "<vw1__Description>"; }

inline std::string handle_obj(DiagnosticManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__DiskChangeExtent obj)
	{ return "<vw1__DiskChangeExtent>"; }

inline std::string handle_obj(DistributedVirtualPortgroup obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__DistributedVirtualPortgroupInfo obj)
	{ return "<vw1__DistributedVirtualPortgroupInfo>"; }

inline std::string handle_obj(DistributedVirtualSwitch obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchHostMember obj)
	{ return "<vw1__DistributedVirtualSwitchHostMember>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchHostMemberBacking obj)
	{ return "<vw1__DistributedVirtualSwitchHostMemberBacking>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchHostMemberConfigInfo obj)
	{ return "<vw1__DistributedVirtualSwitchHostMemberConfigInfo>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchHostMemberConfigSpec obj)
	{ return "<vw1__DistributedVirtualSwitchHostMemberConfigSpec>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchHostMemberPnicSpec obj)
	{ return "<vw1__DistributedVirtualSwitchHostMemberPnicSpec>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchHostMemberRuntimeState obj)
	{ return "<vw1__DistributedVirtualSwitchHostMemberRuntimeState>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchHostProductSpec obj)
	{ return "<vw1__DistributedVirtualSwitchHostProductSpec>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchInfo obj)
	{ return "<vw1__DistributedVirtualSwitchInfo>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchKeyedOpaqueBlob obj)
	{ return "<vw1__DistributedVirtualSwitchKeyedOpaqueBlob>"; }

inline std::string handle_obj(DistributedVirtualSwitchManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchManagerHostContainer obj)
	{ return "<vw1__DistributedVirtualSwitchManagerHostContainer>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchPortConnectee obj)
	{ return "<vw1__DistributedVirtualSwitchPortConnectee>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchPortConnection obj)
	{ return "<vw1__DistributedVirtualSwitchPortConnection>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchPortStatistics obj)
	{ return "<vw1__DistributedVirtualSwitchPortStatistics>"; }

inline std::string handle_obj(vw1__DistributedVirtualSwitchProductSpec obj)
	{ return "<vw1__DistributedVirtualSwitchProductSpec>"; }

inline std::string handle_obj(vw1__DvsEventArgument obj)
	{ return "<vw1__DvsEventArgument>"; }

inline std::string handle_obj(vw1__DvsHostVNicProfile obj)
	{ return "<vw1__DvsHostVNicProfile>"; }

inline std::string handle_obj(vw1__DvsOperationBulkFaultFaultOnHost obj)
	{ return "<vw1__DvsOperationBulkFaultFaultOnHost>"; }

inline std::string handle_obj(vw1__DvsOutOfSyncHostArgument obj)
	{ return "<vw1__DvsOutOfSyncHostArgument>"; }

inline std::string handle_obj(vw1__DvsProfile obj)
	{ return "<vw1__DvsProfile>"; }

inline std::string handle_obj(vw1__DvsServiceConsoleVNicProfile obj)
	{ return "<vw1__DvsServiceConsoleVNicProfile>"; }

inline std::string handle_obj(vw1__DynamicProperty obj)
	{ return "<vw1__DynamicProperty>"; }

inline std::string handle_obj(vw1__EVCMode obj)
	{ return "<vw1__EVCMode>"; }

inline std::string handle_obj(vw1__ElementDescription obj)
	{ return "<vw1__ElementDescription>"; }

inline std::string handle_obj(vw1__EntityEventArgument obj)
	{ return "<vw1__EntityEventArgument>"; }

inline std::string handle_obj(vw1__EnumDescription obj)
	{ return "<vw1__EnumDescription>"; }

inline std::string handle_obj(EnvironmentBrowser obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__Event obj)
	{ return "<vw1__Event>"; }

inline std::string handle_obj(vw1__EventAlarmExpressionComparison obj)
	{ return "<vw1__EventAlarmExpressionComparison>"; }

inline std::string handle_obj(vw1__EventDescription obj)
	{ return "<vw1__EventDescription>"; }

inline std::string handle_obj(vw1__EventDescriptionEventDetail obj)
	{ return "<vw1__EventDescriptionEventDetail>"; }

inline std::string handle_obj(vw1__EventFilterSpecByEntity obj)
	{ return "<vw1__EventFilterSpecByEntity>"; }

inline std::string handle_obj(vw1__EventFilterSpecByTime obj)
	{ return "<vw1__EventFilterSpecByTime>"; }

inline std::string handle_obj(vw1__EventFilterSpecByUsername obj)
	{ return "<vw1__EventFilterSpecByUsername>"; }

inline std::string handle_obj(EventManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ExtExtendedProductInfo obj)
	{ return "<vw1__ExtExtendedProductInfo>"; }

inline std::string handle_obj(vw1__ExtManagedEntityInfo obj)
	{ return "<vw1__ExtManagedEntityInfo>"; }

inline std::string handle_obj(vw1__ExtSolutionManagerInfo obj)
	{ return "<vw1__ExtSolutionManagerInfo>"; }

inline std::string handle_obj(vw1__ExtSolutionManagerInfoTabInfo obj)
	{ return "<vw1__ExtSolutionManagerInfoTabInfo>"; }

inline std::string handle_obj(vw1__ExtendedDescription obj)
	{ return "<vw1__ExtendedDescription>"; }

inline std::string handle_obj(vw1__ExtendedElementDescription obj)
	{ return "<vw1__ExtendedElementDescription>"; }

inline std::string handle_obj(vw1__ExtendedEventPair obj)
	{ return "<vw1__ExtendedEventPair>"; }

inline std::string handle_obj(vw1__Extension obj)
	{ return "<vw1__Extension>"; }

inline std::string handle_obj(vw1__ExtensionClientInfo obj)
	{ return "<vw1__ExtensionClientInfo>"; }

inline std::string handle_obj(vw1__ExtensionEventTypeInfo obj)
	{ return "<vw1__ExtensionEventTypeInfo>"; }

inline std::string handle_obj(vw1__ExtensionFaultTypeInfo obj)
	{ return "<vw1__ExtensionFaultTypeInfo>"; }

inline std::string handle_obj(vw1__ExtensionHealthInfo obj)
	{ return "<vw1__ExtensionHealthInfo>"; }

inline std::string handle_obj(ExtensionManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ExtensionOvfConsumerInfo obj)
	{ return "<vw1__ExtensionOvfConsumerInfo>"; }

inline std::string handle_obj(vw1__ExtensionPrivilegeInfo obj)
	{ return "<vw1__ExtensionPrivilegeInfo>"; }

inline std::string handle_obj(vw1__ExtensionResourceInfo obj)
	{ return "<vw1__ExtensionResourceInfo>"; }

inline std::string handle_obj(vw1__ExtensionServerInfo obj)
	{ return "<vw1__ExtensionServerInfo>"; }

inline std::string handle_obj(vw1__ExtensionTaskTypeInfo obj)
	{ return "<vw1__ExtensionTaskTypeInfo>"; }

inline std::string handle_obj(vw1__FaultToleranceConfigInfo obj)
	{ return "<vw1__FaultToleranceConfigInfo>"; }

inline std::string handle_obj(vw1__FcoeConfig obj)
	{ return "<vw1__FcoeConfig>"; }

inline std::string handle_obj(vw1__FcoeConfigFcoeCapabilities obj)
	{ return "<vw1__FcoeConfigFcoeCapabilities>"; }

inline std::string handle_obj(vw1__FcoeConfigVlanRange obj)
	{ return "<vw1__FcoeConfigVlanRange>"; }

inline std::string handle_obj(vw1__FileInfo obj)
	{ return "<vw1__FileInfo>"; }

inline std::string handle_obj(FileManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__FileQuery obj)
	{ return "<vw1__FileQuery>"; }

inline std::string handle_obj(vw1__FileQueryFlags obj)
	{ return "<vw1__FileQueryFlags>"; }

inline std::string handle_obj(vw1__FirewallProfile obj)
	{ return "<vw1__FirewallProfile>"; }

inline std::string handle_obj(vw1__FirewallProfileRulesetProfile obj)
	{ return "<vw1__FirewallProfileRulesetProfile>"; }

inline std::string handle_obj(Folder obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__FolderEventArgument obj)
	{ return "<vw1__FolderEventArgument>"; }

inline std::string handle_obj(GuestAuthManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__GuestAuthentication obj)
	{ return "<vw1__GuestAuthentication>"; }

inline std::string handle_obj(vw1__GuestDiskInfo obj)
	{ return "<vw1__GuestDiskInfo>"; }

inline std::string handle_obj(vw1__GuestFileAttributes obj)
	{ return "<vw1__GuestFileAttributes>"; }

inline std::string handle_obj(vw1__GuestFileInfo obj)
	{ return "<vw1__GuestFileInfo>"; }

inline std::string handle_obj(GuestFileManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__GuestInfo obj)
	{ return "<vw1__GuestInfo>"; }

inline std::string handle_obj(vw1__GuestNicInfo obj)
	{ return "<vw1__GuestNicInfo>"; }

inline std::string handle_obj(GuestOperationsManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__GuestOsDescriptor obj)
	{ return "<vw1__GuestOsDescriptor>"; }

inline std::string handle_obj(GuestProcessManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__GuestScreenInfo obj)
	{ return "<vw1__GuestScreenInfo>"; }

inline std::string handle_obj(vw1__GuestStackInfo obj)
	{ return "<vw1__GuestStackInfo>"; }

inline std::string handle_obj(vw1__HealthSystemRuntime obj)
	{ return "<vw1__HealthSystemRuntime>"; }

inline std::string handle_obj(vw1__HostAccountSpec obj)
	{ return "<vw1__HostAccountSpec>"; }

inline std::string handle_obj(vw1__HostActiveDirectory obj)
	{ return "<vw1__HostActiveDirectory>"; }

inline std::string handle_obj(vw1__HostActiveDirectorySpec obj)
	{ return "<vw1__HostActiveDirectorySpec>"; }

inline std::string handle_obj(vw1__HostApplyProfile obj)
	{ return "<vw1__HostApplyProfile>"; }

inline std::string handle_obj(HostAuthenticationManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostAuthenticationManagerInfo obj)
	{ return "<vw1__HostAuthenticationManagerInfo>"; }

inline std::string handle_obj(HostAuthenticationStore obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostAuthenticationStoreInfo obj)
	{ return "<vw1__HostAuthenticationStoreInfo>"; }

inline std::string handle_obj(HostAutoStartManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostAutoStartManagerConfig obj)
	{ return "<vw1__HostAutoStartManagerConfig>"; }

inline std::string handle_obj(vw1__HostBIOSInfo obj)
	{ return "<vw1__HostBIOSInfo>"; }

inline std::string handle_obj(vw1__HostBootDevice obj)
	{ return "<vw1__HostBootDevice>"; }

inline std::string handle_obj(HostBootDeviceSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostCacheConfigurationInfo obj)
	{ return "<vw1__HostCacheConfigurationInfo>"; }

inline std::string handle_obj(HostCacheConfigurationManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostCapability obj)
	{ return "<vw1__HostCapability>"; }

inline std::string handle_obj(vw1__HostConfigInfo obj)
	{ return "<vw1__HostConfigInfo>"; }

inline std::string handle_obj(vw1__HostConfigManager obj)
	{ return "<vw1__HostConfigManager>"; }

inline std::string handle_obj(vw1__HostConfigSpec obj)
	{ return "<vw1__HostConfigSpec>"; }

inline std::string handle_obj(vw1__HostConfigSummary obj)
	{ return "<vw1__HostConfigSummary>"; }

inline std::string handle_obj(vw1__HostConnectInfoNetworkInfo obj)
	{ return "<vw1__HostConnectInfoNetworkInfo>"; }

inline std::string handle_obj(vw1__HostCpuIdInfo obj)
	{ return "<vw1__HostCpuIdInfo>"; }

inline std::string handle_obj(vw1__HostCpuInfo obj)
	{ return "<vw1__HostCpuInfo>"; }

inline std::string handle_obj(vw1__HostCpuPackage obj)
	{ return "<vw1__HostCpuPackage>"; }

inline std::string handle_obj(vw1__HostCpuPowerManagementInfo obj)
	{ return "<vw1__HostCpuPowerManagementInfo>"; }

inline std::string handle_obj(HostCpuSchedulerSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(HostDatastoreBrowser obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostDatastoreConnectInfo obj)
	{ return "<vw1__HostDatastoreConnectInfo>"; }

inline std::string handle_obj(HostDatastoreSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostDatastoreSystemCapabilities obj)
	{ return "<vw1__HostDatastoreSystemCapabilities>"; }

inline std::string handle_obj(vw1__HostDateTimeConfig obj)
	{ return "<vw1__HostDateTimeConfig>"; }

inline std::string handle_obj(vw1__HostDateTimeInfo obj)
	{ return "<vw1__HostDateTimeInfo>"; }

inline std::string handle_obj(HostDateTimeSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostDateTimeSystemTimeZone obj)
	{ return "<vw1__HostDateTimeSystemTimeZone>"; }

inline std::string handle_obj(vw1__HostDhcpService obj)
	{ return "<vw1__HostDhcpService>"; }

inline std::string handle_obj(vw1__HostDhcpServiceConfig obj)
	{ return "<vw1__HostDhcpServiceConfig>"; }

inline std::string handle_obj(vw1__HostDhcpServiceSpec obj)
	{ return "<vw1__HostDhcpServiceSpec>"; }

inline std::string handle_obj(vw1__HostDiagnosticPartition obj)
	{ return "<vw1__HostDiagnosticPartition>"; }

inline std::string handle_obj(vw1__HostDiagnosticPartitionCreateSpec obj)
	{ return "<vw1__HostDiagnosticPartitionCreateSpec>"; }

inline std::string handle_obj(HostDiagnosticSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostDiskDimensionsChs obj)
	{ return "<vw1__HostDiskDimensionsChs>"; }

inline std::string handle_obj(vw1__HostDiskDimensionsLba obj)
	{ return "<vw1__HostDiskDimensionsLba>"; }

inline std::string handle_obj(vw1__HostDiskMappingPartitionInfo obj)
	{ return "<vw1__HostDiskMappingPartitionInfo>"; }

inline std::string handle_obj(vw1__HostDiskMappingPartitionOption obj)
	{ return "<vw1__HostDiskMappingPartitionOption>"; }

inline std::string handle_obj(vw1__HostDiskPartitionAttributes obj)
	{ return "<vw1__HostDiskPartitionAttributes>"; }

inline std::string handle_obj(vw1__HostDiskPartitionBlockRange obj)
	{ return "<vw1__HostDiskPartitionBlockRange>"; }

inline std::string handle_obj(vw1__HostDiskPartitionLayout obj)
	{ return "<vw1__HostDiskPartitionLayout>"; }

inline std::string handle_obj(vw1__HostDiskPartitionSpec obj)
	{ return "<vw1__HostDiskPartitionSpec>"; }

inline std::string handle_obj(vw1__HostDnsConfig obj)
	{ return "<vw1__HostDnsConfig>"; }

inline std::string handle_obj(HostEsxAgentHostManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostEsxAgentHostManagerConfigInfo obj)
	{ return "<vw1__HostEsxAgentHostManagerConfigInfo>"; }

inline std::string handle_obj(vw1__HostEventArgument obj)
	{ return "<vw1__HostEventArgument>"; }

inline std::string handle_obj(vw1__HostFeatureVersionInfo obj)
	{ return "<vw1__HostFeatureVersionInfo>"; }

inline std::string handle_obj(vw1__HostFibreChannelOverEthernetHbaLinkInfo obj)
	{ return "<vw1__HostFibreChannelOverEthernetHbaLinkInfo>"; }

inline std::string handle_obj(vw1__HostFileSystemMountInfo obj)
	{ return "<vw1__HostFileSystemMountInfo>"; }

inline std::string handle_obj(vw1__HostFileSystemVolume obj)
	{ return "<vw1__HostFileSystemVolume>"; }

inline std::string handle_obj(vw1__HostFileSystemVolumeInfo obj)
	{ return "<vw1__HostFileSystemVolumeInfo>"; }

inline std::string handle_obj(vw1__HostFirewallConfig obj)
	{ return "<vw1__HostFirewallConfig>"; }

inline std::string handle_obj(vw1__HostFirewallConfigRuleSetConfig obj)
	{ return "<vw1__HostFirewallConfigRuleSetConfig>"; }

inline std::string handle_obj(vw1__HostFirewallDefaultPolicy obj)
	{ return "<vw1__HostFirewallDefaultPolicy>"; }

inline std::string handle_obj(vw1__HostFirewallInfo obj)
	{ return "<vw1__HostFirewallInfo>"; }

inline std::string handle_obj(vw1__HostFirewallRule obj)
	{ return "<vw1__HostFirewallRule>"; }

inline std::string handle_obj(vw1__HostFirewallRuleset obj)
	{ return "<vw1__HostFirewallRuleset>"; }

inline std::string handle_obj(vw1__HostFirewallRulesetIpList obj)
	{ return "<vw1__HostFirewallRulesetIpList>"; }

inline std::string handle_obj(vw1__HostFirewallRulesetIpNetwork obj)
	{ return "<vw1__HostFirewallRulesetIpNetwork>"; }

inline std::string handle_obj(HostFirewallSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(HostFirmwareSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostFlagInfo obj)
	{ return "<vw1__HostFlagInfo>"; }

inline std::string handle_obj(vw1__HostForceMountedInfo obj)
	{ return "<vw1__HostForceMountedInfo>"; }

inline std::string handle_obj(vw1__HostHardwareElementInfo obj)
	{ return "<vw1__HostHardwareElementInfo>"; }

inline std::string handle_obj(vw1__HostHardwareInfo obj)
	{ return "<vw1__HostHardwareInfo>"; }

inline std::string handle_obj(vw1__HostHardwareStatusInfo obj)
	{ return "<vw1__HostHardwareStatusInfo>"; }

inline std::string handle_obj(vw1__HostHardwareSummary obj)
	{ return "<vw1__HostHardwareSummary>"; }

inline std::string handle_obj(HostHealthStatusSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostHostBusAdapter obj)
	{ return "<vw1__HostHostBusAdapter>"; }

inline std::string handle_obj(vw1__HostHyperThreadScheduleInfo obj)
	{ return "<vw1__HostHyperThreadScheduleInfo>"; }

inline std::string handle_obj(HostImageConfigManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaAuthenticationCapabilities obj)
	{ return "<vw1__HostInternetScsiHbaAuthenticationCapabilities>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaAuthenticationProperties obj)
	{ return "<vw1__HostInternetScsiHbaAuthenticationProperties>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaDigestCapabilities obj)
	{ return "<vw1__HostInternetScsiHbaDigestCapabilities>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaDigestProperties obj)
	{ return "<vw1__HostInternetScsiHbaDigestProperties>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaDiscoveryCapabilities obj)
	{ return "<vw1__HostInternetScsiHbaDiscoveryCapabilities>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaDiscoveryProperties obj)
	{ return "<vw1__HostInternetScsiHbaDiscoveryProperties>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaIPCapabilities obj)
	{ return "<vw1__HostInternetScsiHbaIPCapabilities>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaIPProperties obj)
	{ return "<vw1__HostInternetScsiHbaIPProperties>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaParamValue obj)
	{ return "<vw1__HostInternetScsiHbaParamValue>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaSendTarget obj)
	{ return "<vw1__HostInternetScsiHbaSendTarget>"; }

inline std::string handle_obj(vw1__HostInternetScsiHbaStaticTarget obj)
	{ return "<vw1__HostInternetScsiHbaStaticTarget>"; }

inline std::string handle_obj(vw1__HostIpConfig obj)
	{ return "<vw1__HostIpConfig>"; }

inline std::string handle_obj(vw1__HostIpConfigIpV6Address obj)
	{ return "<vw1__HostIpConfigIpV6Address>"; }

inline std::string handle_obj(vw1__HostIpConfigIpV6AddressConfiguration obj)
	{ return "<vw1__HostIpConfigIpV6AddressConfiguration>"; }

inline std::string handle_obj(vw1__HostIpRouteConfig obj)
	{ return "<vw1__HostIpRouteConfig>"; }

inline std::string handle_obj(vw1__HostIpRouteEntry obj)
	{ return "<vw1__HostIpRouteEntry>"; }

inline std::string handle_obj(vw1__HostIpRouteOp obj)
	{ return "<vw1__HostIpRouteOp>"; }

inline std::string handle_obj(vw1__HostIpRouteTableConfig obj)
	{ return "<vw1__HostIpRouteTableConfig>"; }

inline std::string handle_obj(vw1__HostIpRouteTableInfo obj)
	{ return "<vw1__HostIpRouteTableInfo>"; }

inline std::string handle_obj(vw1__HostIpmiInfo obj)
	{ return "<vw1__HostIpmiInfo>"; }

inline std::string handle_obj(HostKernelModuleSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostLicensableResourceInfo obj)
	{ return "<vw1__HostLicensableResourceInfo>"; }

inline std::string handle_obj(vw1__HostLicenseConnectInfo obj)
	{ return "<vw1__HostLicenseConnectInfo>"; }

inline std::string handle_obj(vw1__HostLicenseSpec obj)
	{ return "<vw1__HostLicenseSpec>"; }

inline std::string handle_obj(vw1__HostListSummary obj)
	{ return "<vw1__HostListSummary>"; }

inline std::string handle_obj(vw1__HostListSummaryQuickStats obj)
	{ return "<vw1__HostListSummaryQuickStats>"; }

inline std::string handle_obj(HostLocalAccountManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostLowLevelProvisioningManagerDiskLayoutSpec obj)
	{ return "<vw1__HostLowLevelProvisioningManagerDiskLayoutSpec>"; }

inline std::string handle_obj(vw1__HostMemoryProfile obj)
	{ return "<vw1__HostMemoryProfile>"; }

inline std::string handle_obj(vw1__HostMemorySpec obj)
	{ return "<vw1__HostMemorySpec>"; }

inline std::string handle_obj(HostMemorySystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostMountInfo obj)
	{ return "<vw1__HostMountInfo>"; }

inline std::string handle_obj(vw1__HostMultipathInfo obj)
	{ return "<vw1__HostMultipathInfo>"; }

inline std::string handle_obj(vw1__HostMultipathInfoLogicalUnit obj)
	{ return "<vw1__HostMultipathInfoLogicalUnit>"; }

inline std::string handle_obj(vw1__HostMultipathInfoLogicalUnitPolicy obj)
	{ return "<vw1__HostMultipathInfoLogicalUnitPolicy>"; }

inline std::string handle_obj(vw1__HostMultipathInfoLogicalUnitStorageArrayTypePolicy obj)
	{ return "<vw1__HostMultipathInfoLogicalUnitStorageArrayTypePolicy>"; }

inline std::string handle_obj(vw1__HostMultipathInfoPath obj)
	{ return "<vw1__HostMultipathInfoPath>"; }

inline std::string handle_obj(vw1__HostMultipathStateInfo obj)
	{ return "<vw1__HostMultipathStateInfo>"; }

inline std::string handle_obj(vw1__HostMultipathStateInfoPath obj)
	{ return "<vw1__HostMultipathStateInfoPath>"; }

inline std::string handle_obj(vw1__HostNasVolume obj)
	{ return "<vw1__HostNasVolume>"; }

inline std::string handle_obj(vw1__HostNasVolumeConfig obj)
	{ return "<vw1__HostNasVolumeConfig>"; }

inline std::string handle_obj(vw1__HostNasVolumeSpec obj)
	{ return "<vw1__HostNasVolumeSpec>"; }

inline std::string handle_obj(vw1__HostNatService obj)
	{ return "<vw1__HostNatService>"; }

inline std::string handle_obj(vw1__HostNatServiceConfig obj)
	{ return "<vw1__HostNatServiceConfig>"; }

inline std::string handle_obj(vw1__HostNatServiceNameServiceSpec obj)
	{ return "<vw1__HostNatServiceNameServiceSpec>"; }

inline std::string handle_obj(vw1__HostNatServicePortForwardSpec obj)
	{ return "<vw1__HostNatServicePortForwardSpec>"; }

inline std::string handle_obj(vw1__HostNatServiceSpec obj)
	{ return "<vw1__HostNatServiceSpec>"; }

inline std::string handle_obj(vw1__HostNetCapabilities obj)
	{ return "<vw1__HostNetCapabilities>"; }

inline std::string handle_obj(vw1__HostNetOffloadCapabilities obj)
	{ return "<vw1__HostNetOffloadCapabilities>"; }

inline std::string handle_obj(vw1__HostNetworkConfig obj)
	{ return "<vw1__HostNetworkConfig>"; }

inline std::string handle_obj(vw1__HostNetworkInfo obj)
	{ return "<vw1__HostNetworkInfo>"; }

inline std::string handle_obj(vw1__HostNetworkPolicy obj)
	{ return "<vw1__HostNetworkPolicy>"; }

inline std::string handle_obj(vw1__HostNetworkSecurityPolicy obj)
	{ return "<vw1__HostNetworkSecurityPolicy>"; }

inline std::string handle_obj(HostNetworkSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostNetworkTrafficShapingPolicy obj)
	{ return "<vw1__HostNetworkTrafficShapingPolicy>"; }

inline std::string handle_obj(vw1__HostNicFailureCriteria obj)
	{ return "<vw1__HostNicFailureCriteria>"; }

inline std::string handle_obj(vw1__HostNicOrderPolicy obj)
	{ return "<vw1__HostNicOrderPolicy>"; }

inline std::string handle_obj(vw1__HostNicTeamingPolicy obj)
	{ return "<vw1__HostNicTeamingPolicy>"; }

inline std::string handle_obj(vw1__HostNtpConfig obj)
	{ return "<vw1__HostNtpConfig>"; }

inline std::string handle_obj(vw1__HostNumaInfo obj)
	{ return "<vw1__HostNumaInfo>"; }

inline std::string handle_obj(vw1__HostNumaNode obj)
	{ return "<vw1__HostNumaNode>"; }

inline std::string handle_obj(vw1__HostNumericSensorInfo obj)
	{ return "<vw1__HostNumericSensorInfo>"; }

inline std::string handle_obj(HostPatchManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostPatchManagerStatus obj)
	{ return "<vw1__HostPatchManagerStatus>"; }

inline std::string handle_obj(vw1__HostPatchManagerStatusPrerequisitePatch obj)
	{ return "<vw1__HostPatchManagerStatusPrerequisitePatch>"; }

inline std::string handle_obj(vw1__HostPciDevice obj)
	{ return "<vw1__HostPciDevice>"; }

inline std::string handle_obj(vw1__HostPciPassthruInfo obj)
	{ return "<vw1__HostPciPassthruInfo>"; }

inline std::string handle_obj(HostPciPassthruSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostPlugStoreTopology obj)
	{ return "<vw1__HostPlugStoreTopology>"; }

inline std::string handle_obj(vw1__HostPlugStoreTopologyAdapter obj)
	{ return "<vw1__HostPlugStoreTopologyAdapter>"; }

inline std::string handle_obj(vw1__HostPlugStoreTopologyDevice obj)
	{ return "<vw1__HostPlugStoreTopologyDevice>"; }

inline std::string handle_obj(vw1__HostPlugStoreTopologyPath obj)
	{ return "<vw1__HostPlugStoreTopologyPath>"; }

inline std::string handle_obj(vw1__HostPlugStoreTopologyPlugin obj)
	{ return "<vw1__HostPlugStoreTopologyPlugin>"; }

inline std::string handle_obj(vw1__HostPlugStoreTopologyTarget obj)
	{ return "<vw1__HostPlugStoreTopologyTarget>"; }

inline std::string handle_obj(vw1__HostPortGroup obj)
	{ return "<vw1__HostPortGroup>"; }

inline std::string handle_obj(vw1__HostPortGroupConfig obj)
	{ return "<vw1__HostPortGroupConfig>"; }

inline std::string handle_obj(vw1__HostPortGroupPort obj)
	{ return "<vw1__HostPortGroupPort>"; }

inline std::string handle_obj(vw1__HostPortGroupProfile obj)
	{ return "<vw1__HostPortGroupProfile>"; }

inline std::string handle_obj(vw1__HostPortGroupSpec obj)
	{ return "<vw1__HostPortGroupSpec>"; }

inline std::string handle_obj(vw1__HostPowerPolicy obj)
	{ return "<vw1__HostPowerPolicy>"; }

inline std::string handle_obj(HostPowerSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(HostProfileManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostProxySwitch obj)
	{ return "<vw1__HostProxySwitch>"; }

inline std::string handle_obj(vw1__HostProxySwitchConfig obj)
	{ return "<vw1__HostProxySwitchConfig>"; }

inline std::string handle_obj(vw1__HostProxySwitchSpec obj)
	{ return "<vw1__HostProxySwitchSpec>"; }

inline std::string handle_obj(vw1__HostRuntimeInfo obj)
	{ return "<vw1__HostRuntimeInfo>"; }

inline std::string handle_obj(vw1__HostScsiDisk obj)
	{ return "<vw1__HostScsiDisk>"; }

inline std::string handle_obj(vw1__HostScsiDiskPartition obj)
	{ return "<vw1__HostScsiDiskPartition>"; }

inline std::string handle_obj(vw1__HostScsiTopology obj)
	{ return "<vw1__HostScsiTopology>"; }

inline std::string handle_obj(vw1__HostScsiTopologyInterface obj)
	{ return "<vw1__HostScsiTopologyInterface>"; }

inline std::string handle_obj(vw1__HostScsiTopologyLun obj)
	{ return "<vw1__HostScsiTopologyLun>"; }

inline std::string handle_obj(vw1__HostScsiTopologyTarget obj)
	{ return "<vw1__HostScsiTopologyTarget>"; }

inline std::string handle_obj(vw1__HostSecuritySpec obj)
	{ return "<vw1__HostSecuritySpec>"; }

inline std::string handle_obj(vw1__HostService obj)
	{ return "<vw1__HostService>"; }

inline std::string handle_obj(vw1__HostServiceConfig obj)
	{ return "<vw1__HostServiceConfig>"; }

inline std::string handle_obj(vw1__HostServiceInfo obj)
	{ return "<vw1__HostServiceInfo>"; }

inline std::string handle_obj(vw1__HostServiceSourcePackage obj)
	{ return "<vw1__HostServiceSourcePackage>"; }

inline std::string handle_obj(HostServiceSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostSnmpConfigSpec obj)
	{ return "<vw1__HostSnmpConfigSpec>"; }

inline std::string handle_obj(vw1__HostSnmpDestination obj)
	{ return "<vw1__HostSnmpDestination>"; }

inline std::string handle_obj(HostSnmpSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostSnmpSystemAgentLimits obj)
	{ return "<vw1__HostSnmpSystemAgentLimits>"; }

inline std::string handle_obj(vw1__HostSslThumbprintInfo obj)
	{ return "<vw1__HostSslThumbprintInfo>"; }

inline std::string handle_obj(vw1__HostStorageDeviceInfo obj)
	{ return "<vw1__HostStorageDeviceInfo>"; }

inline std::string handle_obj(vw1__HostStorageElementInfo obj)
	{ return "<vw1__HostStorageElementInfo>"; }

inline std::string handle_obj(vw1__HostStorageOperationalInfo obj)
	{ return "<vw1__HostStorageOperationalInfo>"; }

inline std::string handle_obj(HostStorageSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(HostSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostSystemHealthInfo obj)
	{ return "<vw1__HostSystemHealthInfo>"; }

inline std::string handle_obj(vw1__HostSystemIdentificationInfo obj)
	{ return "<vw1__HostSystemIdentificationInfo>"; }

inline std::string handle_obj(vw1__HostSystemInfo obj)
	{ return "<vw1__HostSystemInfo>"; }

inline std::string handle_obj(vw1__HostSystemResourceInfo obj)
	{ return "<vw1__HostSystemResourceInfo>"; }

inline std::string handle_obj(vw1__HostTargetTransport obj)
	{ return "<vw1__HostTargetTransport>"; }

inline std::string handle_obj(vw1__HostTpmDigestInfo obj)
	{ return "<vw1__HostTpmDigestInfo>"; }

inline std::string handle_obj(vw1__HostUnresolvedVmfsExtent obj)
	{ return "<vw1__HostUnresolvedVmfsExtent>"; }

inline std::string handle_obj(vw1__HostUnresolvedVmfsResolutionSpec obj)
	{ return "<vw1__HostUnresolvedVmfsResolutionSpec>"; }

inline std::string handle_obj(vw1__HostUnresolvedVmfsVolumeResolveStatus obj)
	{ return "<vw1__HostUnresolvedVmfsVolumeResolveStatus>"; }

inline std::string handle_obj(vw1__HostVMotionInfo obj)
	{ return "<vw1__HostVMotionInfo>"; }

inline std::string handle_obj(vw1__HostVMotionNetConfig obj)
	{ return "<vw1__HostVMotionNetConfig>"; }

inline std::string handle_obj(HostVMotionSystem obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostVirtualNic obj)
	{ return "<vw1__HostVirtualNic>"; }

inline std::string handle_obj(vw1__HostVirtualNicConfig obj)
	{ return "<vw1__HostVirtualNicConfig>"; }

inline std::string handle_obj(vw1__HostVirtualNicConnection obj)
	{ return "<vw1__HostVirtualNicConnection>"; }

inline std::string handle_obj(HostVirtualNicManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HostVirtualNicManagerInfo obj)
	{ return "<vw1__HostVirtualNicManagerInfo>"; }

inline std::string handle_obj(vw1__HostVirtualNicManagerNicTypeSelection obj)
	{ return "<vw1__HostVirtualNicManagerNicTypeSelection>"; }

inline std::string handle_obj(vw1__HostVirtualNicSpec obj)
	{ return "<vw1__HostVirtualNicSpec>"; }

inline std::string handle_obj(vw1__HostVirtualSwitch obj)
	{ return "<vw1__HostVirtualSwitch>"; }

inline std::string handle_obj(vw1__HostVirtualSwitchBeaconConfig obj)
	{ return "<vw1__HostVirtualSwitchBeaconConfig>"; }

inline std::string handle_obj(vw1__HostVirtualSwitchBridge obj)
	{ return "<vw1__HostVirtualSwitchBridge>"; }

inline std::string handle_obj(vw1__HostVirtualSwitchConfig obj)
	{ return "<vw1__HostVirtualSwitchConfig>"; }

inline std::string handle_obj(vw1__HostVirtualSwitchSpec obj)
	{ return "<vw1__HostVirtualSwitchSpec>"; }

inline std::string handle_obj(vw1__HostVmfsRescanResult obj)
	{ return "<vw1__HostVmfsRescanResult>"; }

inline std::string handle_obj(vw1__HostVmfsSpec obj)
	{ return "<vw1__HostVmfsSpec>"; }

inline std::string handle_obj(vw1__HostVmfsVolume obj)
	{ return "<vw1__HostVmfsVolume>"; }

inline std::string handle_obj(HttpNfcLease obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__HttpNfcLeaseDatastoreLeaseInfo obj)
	{ return "<vw1__HttpNfcLeaseDatastoreLeaseInfo>"; }

inline std::string handle_obj(vw1__HttpNfcLeaseDeviceUrl obj)
	{ return "<vw1__HttpNfcLeaseDeviceUrl>"; }

inline std::string handle_obj(vw1__HttpNfcLeaseHostInfo obj)
	{ return "<vw1__HttpNfcLeaseHostInfo>"; }

inline std::string handle_obj(vw1__HttpNfcLeaseInfo obj)
	{ return "<vw1__HttpNfcLeaseInfo>"; }

inline std::string handle_obj(vw1__ImportSpec obj)
	{ return "<vw1__ImportSpec>"; }

inline std::string handle_obj(vw1__IntOption obj)
	{ return "<vw1__IntOption>"; }

inline std::string handle_obj(vw1__IntPolicy obj)
	{ return "<vw1__IntPolicy>"; }

inline std::string handle_obj(vw1__InventoryDescription obj)
	{ return "<vw1__InventoryDescription>"; }

inline std::string handle_obj(vw1__IpAddressProfile obj)
	{ return "<vw1__IpAddressProfile>"; }

inline std::string handle_obj(vw1__IpPoolAssociation obj)
	{ return "<vw1__IpPoolAssociation>"; }

inline std::string handle_obj(vw1__IpPoolIpPoolConfigInfo obj)
	{ return "<vw1__IpPoolIpPoolConfigInfo>"; }

inline std::string handle_obj(IpPoolManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__IpRouteProfile obj)
	{ return "<vw1__IpRouteProfile>"; }

inline std::string handle_obj(vw1__IscsiDependencyEntity obj)
	{ return "<vw1__IscsiDependencyEntity>"; }

inline std::string handle_obj(IscsiManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__IscsiStatus obj)
	{ return "<vw1__IscsiStatus>"; }

inline std::string handle_obj(vw1__KernelModuleSectionInfo obj)
	{ return "<vw1__KernelModuleSectionInfo>"; }

inline std::string handle_obj(vw1__KeyAnyValue obj)
	{ return "<vw1__KeyAnyValue>"; }

inline std::string handle_obj(vw1__KeyValue obj)
	{ return "<vw1__KeyValue>"; }

inline std::string handle_obj(LicenseAssignmentManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__LicenseDiagnostics obj)
	{ return "<vw1__LicenseDiagnostics>"; }

inline std::string handle_obj(vw1__LicenseFeatureInfo obj)
	{ return "<vw1__LicenseFeatureInfo>"; }

inline std::string handle_obj(LicenseManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__LicenseManagerEvaluationInfo obj)
	{ return "<vw1__LicenseManagerEvaluationInfo>"; }

inline std::string handle_obj(vw1__LicenseManagerLicenseInfo obj)
	{ return "<vw1__LicenseManagerLicenseInfo>"; }

inline std::string handle_obj(vw1__LicenseReservationInfo obj)
	{ return "<vw1__LicenseReservationInfo>"; }

inline std::string handle_obj(vw1__LicenseSource obj)
	{ return "<vw1__LicenseSource>"; }

inline std::string handle_obj(vw1__LinkDiscoveryProtocolConfig obj)
	{ return "<vw1__LinkDiscoveryProtocolConfig>"; }

inline std::string handle_obj(vw1__LinkLayerDiscoveryProtocolInfo obj)
	{ return "<vw1__LinkLayerDiscoveryProtocolInfo>"; }

inline std::string handle_obj(vw1__LinkProfile obj)
	{ return "<vw1__LinkProfile>"; }

inline std::string handle_obj(vw1__LocalizableMessage obj)
	{ return "<vw1__LocalizableMessage>"; }

inline std::string handle_obj(LocalizationManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__LocalizationManagerMessageCatalog obj)
	{ return "<vw1__LocalizationManagerMessageCatalog>"; }

inline std::string handle_obj(vw1__LocalizedMethodFault obj)
	{ return "<vw1__LocalizedMethodFault>"; }

inline std::string handle_obj(vw1__LongOption obj)
	{ return "<vw1__LongOption>"; }

inline std::string handle_obj(vw1__LongPolicy obj)
	{ return "<vw1__LongPolicy>"; }

inline std::string handle_obj(vw1__ManagedByInfo obj)
	{ return "<vw1__ManagedByInfo>"; }

inline std::string handle_obj(ManagedEntity obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ManagedEntityEventArgument obj)
	{ return "<vw1__ManagedEntityEventArgument>"; }

inline std::string handle_obj(vw1__ManagedObjectReference obj)
	{ return obj.__item; }

inline std::string handle_obj(vw1__MethodActionArgument obj)
	{ return "<vw1__MethodActionArgument>"; }

inline std::string handle_obj(vw1__MethodFault obj)
	{ return "<vw1__MethodFault>"; }

inline std::string handle_obj(vw1__MissingObject obj)
	{ return "<vw1__MissingObject>"; }

inline std::string handle_obj(vw1__MissingProperty obj)
	{ return "<vw1__MissingProperty>"; }

inline std::string handle_obj(vw1__MultipleCertificatesVerifyFaultThumbprintData obj)
	{ return "<vw1__MultipleCertificatesVerifyFaultThumbprintData>"; }

inline std::string handle_obj(vw1__NasStorageProfile obj)
	{ return "<vw1__NasStorageProfile>"; }

inline std::string handle_obj(vw1__NetBIOSConfigInfo obj)
	{ return "<vw1__NetBIOSConfigInfo>"; }

inline std::string handle_obj(vw1__NetDhcpConfigInfo obj)
	{ return "<vw1__NetDhcpConfigInfo>"; }

inline std::string handle_obj(vw1__NetDhcpConfigInfoDhcpOptions obj)
	{ return "<vw1__NetDhcpConfigInfoDhcpOptions>"; }

inline std::string handle_obj(vw1__NetDhcpConfigSpec obj)
	{ return "<vw1__NetDhcpConfigSpec>"; }

inline std::string handle_obj(vw1__NetDhcpConfigSpecDhcpOptionsSpec obj)
	{ return "<vw1__NetDhcpConfigSpecDhcpOptionsSpec>"; }

inline std::string handle_obj(vw1__NetDnsConfigInfo obj)
	{ return "<vw1__NetDnsConfigInfo>"; }

inline std::string handle_obj(vw1__NetIpConfigInfo obj)
	{ return "<vw1__NetIpConfigInfo>"; }

inline std::string handle_obj(vw1__NetIpConfigInfoIpAddress obj)
	{ return "<vw1__NetIpConfigInfoIpAddress>"; }

inline std::string handle_obj(vw1__NetIpConfigSpecIpAddressSpec obj)
	{ return "<vw1__NetIpConfigSpecIpAddressSpec>"; }

inline std::string handle_obj(vw1__NetIpRouteConfigInfo obj)
	{ return "<vw1__NetIpRouteConfigInfo>"; }

inline std::string handle_obj(vw1__NetIpRouteConfigInfoGateway obj)
	{ return "<vw1__NetIpRouteConfigInfoGateway>"; }

inline std::string handle_obj(vw1__NetIpRouteConfigInfoIpRoute obj)
	{ return "<vw1__NetIpRouteConfigInfoIpRoute>"; }

inline std::string handle_obj(vw1__NetIpRouteConfigSpecGatewaySpec obj)
	{ return "<vw1__NetIpRouteConfigSpecGatewaySpec>"; }

inline std::string handle_obj(vw1__NetIpRouteConfigSpecIpRouteSpec obj)
	{ return "<vw1__NetIpRouteConfigSpecIpRouteSpec>"; }

inline std::string handle_obj(vw1__NetIpStackInfoDefaultRouter obj)
	{ return "<vw1__NetIpStackInfoDefaultRouter>"; }

inline std::string handle_obj(vw1__NetIpStackInfoNetToMedia obj)
	{ return "<vw1__NetIpStackInfoNetToMedia>"; }

inline std::string handle_obj(Network obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__NetworkEventArgument obj)
	{ return "<vw1__NetworkEventArgument>"; }

inline std::string handle_obj(vw1__NetworkPolicyProfile obj)
	{ return "<vw1__NetworkPolicyProfile>"; }

inline std::string handle_obj(vw1__NetworkProfile obj)
	{ return "<vw1__NetworkProfile>"; }

inline std::string handle_obj(vw1__NetworkProfileDnsConfigProfile obj)
	{ return "<vw1__NetworkProfileDnsConfigProfile>"; }

inline std::string handle_obj(vw1__NetworkSummary obj)
	{ return "<vw1__NetworkSummary>"; }

inline std::string handle_obj(vw1__NumPortsProfile obj)
	{ return "<vw1__NumPortsProfile>"; }

inline std::string handle_obj(vw1__NumericRange obj)
	{ return "<vw1__NumericRange>"; }

inline std::string handle_obj(vw1__ObjectContent obj)
	{ return "<vw1__ObjectContent>"; }

inline std::string handle_obj(vw1__ObjectSpec obj)
	{ return "<vw1__ObjectSpec>"; }

inline std::string handle_obj(vw1__ObjectUpdate obj)
	{ return "<vw1__ObjectUpdate>"; }

inline std::string handle_obj(vw1__OptionDef obj)
	{ return "<vw1__OptionDef>"; }

inline std::string handle_obj(OptionManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__OptionProfile obj)
	{ return "<vw1__OptionProfile>"; }

inline std::string handle_obj(vw1__OptionType obj)
	{ return "<vw1__OptionType>"; }

inline std::string handle_obj(vw1__OptionValue obj)
	{ return "<vw1__OptionValue>"; }

inline std::string handle_obj(vw1__OvfConsumerOstNode obj)
	{ return "<vw1__OvfConsumerOstNode>"; }

inline std::string handle_obj(vw1__OvfConsumerOvfSection obj)
	{ return "<vw1__OvfConsumerOvfSection>"; }

inline std::string handle_obj(vw1__OvfDeploymentOption obj)
	{ return "<vw1__OvfDeploymentOption>"; }

inline std::string handle_obj(vw1__OvfFile obj)
	{ return "<vw1__OvfFile>"; }

inline std::string handle_obj(vw1__OvfFileItem obj)
	{ return "<vw1__OvfFileItem>"; }

inline std::string handle_obj(OvfManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__OvfNetworkInfo obj)
	{ return "<vw1__OvfNetworkInfo>"; }

inline std::string handle_obj(vw1__OvfNetworkMapping obj)
	{ return "<vw1__OvfNetworkMapping>"; }

inline std::string handle_obj(vw1__OvfResourceMap obj)
	{ return "<vw1__OvfResourceMap>"; }

inline std::string handle_obj(vw1__PerfCounterInfo obj)
	{ return "<vw1__PerfCounterInfo>"; }

inline std::string handle_obj(vw1__PerfEntityMetricBase obj)
	{ return "<vw1__PerfEntityMetricBase>"; }

inline std::string handle_obj(vw1__PerfInterval obj)
	{ return "<vw1__PerfInterval>"; }

inline std::string handle_obj(vw1__PerfMetricId obj)
	{ return "<vw1__PerfMetricId>"; }

inline std::string handle_obj(vw1__PerfMetricSeries obj)
	{ return "<vw1__PerfMetricSeries>"; }

inline std::string handle_obj(vw1__PerfMetricSeriesCSV obj)
	{ return "<vw1__PerfMetricSeriesCSV>"; }

inline std::string handle_obj(vw1__PerfSampleInfo obj)
	{ return "<vw1__PerfSampleInfo>"; }

inline std::string handle_obj(vw1__PerformanceDescription obj)
	{ return "<vw1__PerformanceDescription>"; }

inline std::string handle_obj(PerformanceManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__PerformanceStatisticsDescription obj)
	{ return "<vw1__PerformanceStatisticsDescription>"; }

inline std::string handle_obj(vw1__Permission obj)
	{ return "<vw1__Permission>"; }

inline std::string handle_obj(vw1__PermissionProfile obj)
	{ return "<vw1__PermissionProfile>"; }

inline std::string handle_obj(vw1__PhysicalNic obj)
	{ return "<vw1__PhysicalNic>"; }

inline std::string handle_obj(vw1__PhysicalNicCdpDeviceCapability obj)
	{ return "<vw1__PhysicalNicCdpDeviceCapability>"; }

inline std::string handle_obj(vw1__PhysicalNicCdpInfo obj)
	{ return "<vw1__PhysicalNicCdpInfo>"; }

inline std::string handle_obj(vw1__PhysicalNicConfig obj)
	{ return "<vw1__PhysicalNicConfig>"; }

inline std::string handle_obj(vw1__PhysicalNicIpHint obj)
	{ return "<vw1__PhysicalNicIpHint>"; }

inline std::string handle_obj(vw1__PhysicalNicLinkInfo obj)
	{ return "<vw1__PhysicalNicLinkInfo>"; }

inline std::string handle_obj(vw1__PhysicalNicNameHint obj)
	{ return "<vw1__PhysicalNicNameHint>"; }

inline std::string handle_obj(vw1__PhysicalNicProfile obj)
	{ return "<vw1__PhysicalNicProfile>"; }

inline std::string handle_obj(vw1__PhysicalNicSpec obj)
	{ return "<vw1__PhysicalNicSpec>"; }

inline std::string handle_obj(vw1__PnicUplinkProfile obj)
	{ return "<vw1__PnicUplinkProfile>"; }

inline std::string handle_obj(vw1__PodDiskLocator obj)
	{ return "<vw1__PodDiskLocator>"; }

inline std::string handle_obj(vw1__PodStorageDrsEntry obj)
	{ return "<vw1__PodStorageDrsEntry>"; }

inline std::string handle_obj(vw1__PolicyOption obj)
	{ return "<vw1__PolicyOption>"; }

inline std::string handle_obj(vw1__PowerSystemCapability obj)
	{ return "<vw1__PowerSystemCapability>"; }

inline std::string handle_obj(vw1__PowerSystemInfo obj)
	{ return "<vw1__PowerSystemInfo>"; }

inline std::string handle_obj(vw1__PrivilegePolicyDef obj)
	{ return "<vw1__PrivilegePolicyDef>"; }

inline std::string handle_obj(Profile obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ProfileApplyProfileProperty obj)
	{ return "<vw1__ProfileApplyProfileProperty>"; }

inline std::string handle_obj(ProfileComplianceManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ProfileConfigInfo obj)
	{ return "<vw1__ProfileConfigInfo>"; }

inline std::string handle_obj(vw1__ProfileDeferredPolicyOptionParameter obj)
	{ return "<vw1__ProfileDeferredPolicyOptionParameter>"; }

inline std::string handle_obj(vw1__ProfileDescription obj)
	{ return "<vw1__ProfileDescription>"; }

inline std::string handle_obj(vw1__ProfileDescriptionSection obj)
	{ return "<vw1__ProfileDescriptionSection>"; }

inline std::string handle_obj(vw1__ProfileEventArgument obj)
	{ return "<vw1__ProfileEventArgument>"; }

inline std::string handle_obj(vw1__ProfileExecuteError obj)
	{ return "<vw1__ProfileExecuteError>"; }

inline std::string handle_obj(vw1__ProfileExpression obj)
	{ return "<vw1__ProfileExpression>"; }

inline std::string handle_obj(vw1__ProfileMetadataProfileSortSpec obj)
	{ return "<vw1__ProfileMetadataProfileSortSpec>"; }

inline std::string handle_obj(vw1__ProfileParameterMetadata obj)
	{ return "<vw1__ProfileParameterMetadata>"; }

inline std::string handle_obj(vw1__ProfilePolicy obj)
	{ return "<vw1__ProfilePolicy>"; }

inline std::string handle_obj(vw1__ProfilePolicyOptionMetadata obj)
	{ return "<vw1__ProfilePolicyOptionMetadata>"; }

inline std::string handle_obj(vw1__ProfileProfileStructure obj)
	{ return "<vw1__ProfileProfileStructure>"; }

inline std::string handle_obj(vw1__ProfileProfileStructureProperty obj)
	{ return "<vw1__ProfileProfileStructureProperty>"; }

inline std::string handle_obj(vw1__ProfilePropertyPath obj)
	{ return "<vw1__ProfilePropertyPath>"; }

inline std::string handle_obj(vw1__ProfileUpdateFailedUpdateFailure obj)
	{ return "<vw1__ProfileUpdateFailedUpdateFailure>"; }

inline std::string handle_obj(vw1__PropertyChange obj)
	{ return "<vw1__PropertyChange>"; }

inline std::string handle_obj(PropertyCollector obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(PropertyFilter obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__PropertyFilterSpec obj)
	{ return "<vw1__PropertyFilterSpec>"; }

inline std::string handle_obj(vw1__PropertyFilterUpdate obj)
	{ return "<vw1__PropertyFilterUpdate>"; }

inline std::string handle_obj(vw1__PropertySpec obj)
	{ return "<vw1__PropertySpec>"; }

inline std::string handle_obj(vw1__ReplicationVmProgressInfo obj)
	{ return "<vw1__ReplicationVmProgressInfo>"; }

inline std::string handle_obj(vw1__ResourceAllocationInfo obj)
	{ return "<vw1__ResourceAllocationInfo>"; }

inline std::string handle_obj(vw1__ResourceAllocationOption obj)
	{ return "<vw1__ResourceAllocationOption>"; }

inline std::string handle_obj(vw1__ResourceConfigOption obj)
	{ return "<vw1__ResourceConfigOption>"; }

inline std::string handle_obj(vw1__ResourceConfigSpec obj)
	{ return "<vw1__ResourceConfigSpec>"; }

inline std::string handle_obj(ResourcePool obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ResourcePoolEventArgument obj)
	{ return "<vw1__ResourcePoolEventArgument>"; }

inline std::string handle_obj(vw1__ResourcePoolQuickStats obj)
	{ return "<vw1__ResourcePoolQuickStats>"; }

inline std::string handle_obj(vw1__ResourcePoolResourceUsage obj)
	{ return "<vw1__ResourcePoolResourceUsage>"; }

inline std::string handle_obj(vw1__ResourcePoolRuntimeInfo obj)
	{ return "<vw1__ResourcePoolRuntimeInfo>"; }

inline std::string handle_obj(vw1__ResourcePoolSummary obj)
	{ return "<vw1__ResourcePoolSummary>"; }

inline std::string handle_obj(vw1__RoleEventArgument obj)
	{ return "<vw1__RoleEventArgument>"; }

inline std::string handle_obj(ScheduledTask obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ScheduledTaskDescription obj)
	{ return "<vw1__ScheduledTaskDescription>"; }

inline std::string handle_obj(vw1__ScheduledTaskDetail obj)
	{ return "<vw1__ScheduledTaskDetail>"; }

inline std::string handle_obj(vw1__ScheduledTaskEventArgument obj)
	{ return "<vw1__ScheduledTaskEventArgument>"; }

inline std::string handle_obj(vw1__ScheduledTaskInfo obj)
	{ return "<vw1__ScheduledTaskInfo>"; }

inline std::string handle_obj(ScheduledTaskManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__ScsiLun obj)
	{ return "<vw1__ScsiLun>"; }

inline std::string handle_obj(vw1__ScsiLunCapabilities obj)
	{ return "<vw1__ScsiLunCapabilities>"; }

inline std::string handle_obj(vw1__ScsiLunDescriptor obj)
	{ return "<vw1__ScsiLunDescriptor>"; }

inline std::string handle_obj(vw1__ScsiLunDurableName obj)
	{ return "<vw1__ScsiLunDurableName>"; }

inline std::string handle_obj(SearchIndex obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__SecurityProfile obj)
	{ return "<vw1__SecurityProfile>"; }

inline std::string handle_obj(vw1__SelectionSpec obj)
	{ return "<vw1__SelectionSpec>"; }

inline std::string handle_obj(vw1__ServiceConsolePortGroupProfile obj)
	{ return "<vw1__ServiceConsolePortGroupProfile>"; }

inline std::string handle_obj(vw1__ServiceConsoleReservationInfo obj)
	{ return "<vw1__ServiceConsoleReservationInfo>"; }

inline std::string handle_obj(vw1__ServiceContent obj)
	{ return "<vw1__ServiceContent>"; }

inline std::string handle_obj(vw1__ServiceProfile obj)
	{ return "<vw1__ServiceProfile>"; }

inline std::string handle_obj(SessionManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__SharesInfo obj)
	{ return "<vw1__SharesInfo>"; }

inline std::string handle_obj(vw1__SharesOption obj)
	{ return "<vw1__SharesOption>"; }

inline std::string handle_obj(vw1__StaticRouteProfile obj)
	{ return "<vw1__StaticRouteProfile>"; }

inline std::string handle_obj(vw1__StorageDrsConfigInfo obj)
	{ return "<vw1__StorageDrsConfigInfo>"; }

inline std::string handle_obj(vw1__StorageDrsIoLoadBalanceConfig obj)
	{ return "<vw1__StorageDrsIoLoadBalanceConfig>"; }

inline std::string handle_obj(vw1__StorageDrsOptionSpec obj)
	{ return "<vw1__StorageDrsOptionSpec>"; }

inline std::string handle_obj(vw1__StorageDrsPodConfigInfo obj)
	{ return "<vw1__StorageDrsPodConfigInfo>"; }

inline std::string handle_obj(vw1__StorageDrsPodConfigSpec obj)
	{ return "<vw1__StorageDrsPodConfigSpec>"; }

inline std::string handle_obj(vw1__StorageDrsPodSelectionSpec obj)
	{ return "<vw1__StorageDrsPodSelectionSpec>"; }

inline std::string handle_obj(vw1__StorageDrsSpaceLoadBalanceConfig obj)
	{ return "<vw1__StorageDrsSpaceLoadBalanceConfig>"; }

inline std::string handle_obj(vw1__StorageDrsVmConfigInfo obj)
	{ return "<vw1__StorageDrsVmConfigInfo>"; }

inline std::string handle_obj(vw1__StorageDrsVmConfigSpec obj)
	{ return "<vw1__StorageDrsVmConfigSpec>"; }

inline std::string handle_obj(vw1__StorageIOAllocationInfo obj)
	{ return "<vw1__StorageIOAllocationInfo>"; }

inline std::string handle_obj(vw1__StorageIOAllocationOption obj)
	{ return "<vw1__StorageIOAllocationOption>"; }

inline std::string handle_obj(vw1__StorageIORMInfo obj)
	{ return "<vw1__StorageIORMInfo>"; }

inline std::string handle_obj(StoragePod obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__StoragePodSummary obj)
	{ return "<vw1__StoragePodSummary>"; }

inline std::string handle_obj(vw1__StorageProfile obj)
	{ return "<vw1__StorageProfile>"; }

inline std::string handle_obj(StorageResourceManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__StringPolicy obj)
	{ return "<vw1__StringPolicy>"; }

inline std::string handle_obj(vw1__Tag obj)
	{ return "<vw1__Tag>"; }

inline std::string handle_obj(Task obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__TaskDescription obj)
	{ return "<vw1__TaskDescription>"; }

inline std::string handle_obj(vw1__TaskFilterSpecByEntity obj)
	{ return "<vw1__TaskFilterSpecByEntity>"; }

inline std::string handle_obj(vw1__TaskFilterSpecByTime obj)
	{ return "<vw1__TaskFilterSpecByTime>"; }

inline std::string handle_obj(vw1__TaskFilterSpecByUsername obj)
	{ return "<vw1__TaskFilterSpecByUsername>"; }

inline std::string handle_obj(vw1__TaskInfo obj)
	{ return "<vw1__TaskInfo>"; }

inline std::string handle_obj(TaskManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__TaskReason obj)
	{ return "<vw1__TaskReason>"; }

inline std::string handle_obj(vw1__TaskScheduler obj)
	{ return "<vw1__TaskScheduler>"; }

inline std::string handle_obj(vw1__ToolsConfigInfo obj)
	{ return "<vw1__ToolsConfigInfo>"; }

inline std::string handle_obj(vw1__ToolsConfigInfoToolsLastInstallInfo obj)
	{ return "<vw1__ToolsConfigInfoToolsLastInstallInfo>"; }

inline std::string handle_obj(vw1__TypeDescription obj)
	{ return "<vw1__TypeDescription>"; }

inline std::string handle_obj(vw1__UpdateVirtualMachineFilesResultFailedVmFileInfo obj)
	{ return "<vw1__UpdateVirtualMachineFilesResultFailedVmFileInfo>"; }

inline std::string handle_obj(UserDirectory obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__UserGroupProfile obj)
	{ return "<vw1__UserGroupProfile>"; }

inline std::string handle_obj(vw1__UserProfile obj)
	{ return "<vw1__UserProfile>"; }

inline std::string handle_obj(vw1__UserSession obj)
	{ return "<vw1__UserSession>"; }

inline std::string handle_obj(vw1__VAppCloneSpecNetworkMappingPair obj)
	{ return "<vw1__VAppCloneSpecNetworkMappingPair>"; }

inline std::string handle_obj(vw1__VAppCloneSpecResourceMap obj)
	{ return "<vw1__VAppCloneSpecResourceMap>"; }

inline std::string handle_obj(vw1__VAppConfigInfo obj)
	{ return "<vw1__VAppConfigInfo>"; }

inline std::string handle_obj(vw1__VAppConfigSpec obj)
	{ return "<vw1__VAppConfigSpec>"; }

inline std::string handle_obj(vw1__VAppEntityConfigInfo obj)
	{ return "<vw1__VAppEntityConfigInfo>"; }

inline std::string handle_obj(vw1__VAppIPAssignmentInfo obj)
	{ return "<vw1__VAppIPAssignmentInfo>"; }

inline std::string handle_obj(vw1__VAppOvfSectionInfo obj)
	{ return "<vw1__VAppOvfSectionInfo>"; }

inline std::string handle_obj(vw1__VAppOvfSectionSpec obj)
	{ return "<vw1__VAppOvfSectionSpec>"; }

inline std::string handle_obj(vw1__VAppProductInfo obj)
	{ return "<vw1__VAppProductInfo>"; }

inline std::string handle_obj(vw1__VAppProductSpec obj)
	{ return "<vw1__VAppProductSpec>"; }

inline std::string handle_obj(vw1__VAppPropertyInfo obj)
	{ return "<vw1__VAppPropertyInfo>"; }

inline std::string handle_obj(vw1__VAppPropertySpec obj)
	{ return "<vw1__VAppPropertySpec>"; }

inline std::string handle_obj(vw1__VMwareDVSPvlanConfigSpec obj)
	{ return "<vw1__VMwareDVSPvlanConfigSpec>"; }

inline std::string handle_obj(vw1__VMwareDVSPvlanMapEntry obj)
	{ return "<vw1__VMwareDVSPvlanMapEntry>"; }

inline std::string handle_obj(vw1__VMwareDVSVspanConfigSpec obj)
	{ return "<vw1__VMwareDVSVspanConfigSpec>"; }

inline std::string handle_obj(vw1__VMwareIpfixConfig obj)
	{ return "<vw1__VMwareIpfixConfig>"; }

inline std::string handle_obj(vw1__VMwareUplinkPortOrderPolicy obj)
	{ return "<vw1__VMwareUplinkPortOrderPolicy>"; }

inline std::string handle_obj(vw1__VMwareVspanPort obj)
	{ return "<vw1__VMwareVspanPort>"; }

inline std::string handle_obj(vw1__VMwareVspanSession obj)
	{ return "<vw1__VMwareVspanSession>"; }

inline std::string handle_obj(View obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(ViewManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__VirtualAppLinkInfo obj)
	{ return "<vw1__VirtualAppLinkInfo>"; }

inline std::string handle_obj(vw1__VirtualCdrom obj)
	{ return "<vw1__VirtualCdrom>"; }

inline std::string handle_obj(vw1__VirtualDevice obj)
	{ return "<vw1__VirtualDevice>"; }

inline std::string handle_obj(vw1__VirtualDeviceBackingInfo obj)
	{ return "<vw1__VirtualDeviceBackingInfo>"; }

inline std::string handle_obj(vw1__VirtualDeviceBackingOption obj)
	{ return "<vw1__VirtualDeviceBackingOption>"; }

inline std::string handle_obj(vw1__VirtualDeviceConfigSpec obj)
	{ return "<vw1__VirtualDeviceConfigSpec>"; }

inline std::string handle_obj(vw1__VirtualDeviceConnectInfo obj)
	{ return "<vw1__VirtualDeviceConnectInfo>"; }

inline std::string handle_obj(vw1__VirtualDeviceConnectOption obj)
	{ return "<vw1__VirtualDeviceConnectOption>"; }

inline std::string handle_obj(vw1__VirtualDeviceOption obj)
	{ return "<vw1__VirtualDeviceOption>"; }

inline std::string handle_obj(vw1__VirtualDiskAntiAffinityRuleSpec obj)
	{ return "<vw1__VirtualDiskAntiAffinityRuleSpec>"; }

inline std::string handle_obj(vw1__VirtualDiskFlatVer1BackingInfo obj)
	{ return "<vw1__VirtualDiskFlatVer1BackingInfo>"; }

inline std::string handle_obj(vw1__VirtualDiskFlatVer2BackingInfo obj)
	{ return "<vw1__VirtualDiskFlatVer2BackingInfo>"; }

inline std::string handle_obj(vw1__VirtualDiskId obj)
	{ return "<vw1__VirtualDiskId>"; }

inline std::string handle_obj(VirtualDiskManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__VirtualDiskRawDiskMappingVer1BackingInfo obj)
	{ return "<vw1__VirtualDiskRawDiskMappingVer1BackingInfo>"; }

inline std::string handle_obj(vw1__VirtualDiskSparseVer1BackingInfo obj)
	{ return "<vw1__VirtualDiskSparseVer1BackingInfo>"; }

inline std::string handle_obj(vw1__VirtualDiskSparseVer2BackingInfo obj)
	{ return "<vw1__VirtualDiskSparseVer2BackingInfo>"; }

inline std::string handle_obj(vw1__VirtualHardware obj)
	{ return "<vw1__VirtualHardware>"; }

inline std::string handle_obj(vw1__VirtualHardwareOption obj)
	{ return "<vw1__VirtualHardwareOption>"; }

inline std::string handle_obj(VirtualMachine obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__VirtualMachineAffinityInfo obj)
	{ return "<vw1__VirtualMachineAffinityInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineBootOptions obj)
	{ return "<vw1__VirtualMachineBootOptions>"; }

inline std::string handle_obj(vw1__VirtualMachineBootOptionsBootableDevice obj)
	{ return "<vw1__VirtualMachineBootOptionsBootableDevice>"; }

inline std::string handle_obj(vw1__VirtualMachineCapability obj)
	{ return "<vw1__VirtualMachineCapability>"; }

inline std::string handle_obj(vw1__VirtualMachineCdromInfo obj)
	{ return "<vw1__VirtualMachineCdromInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineCloneSpec obj)
	{ return "<vw1__VirtualMachineCloneSpec>"; }

inline std::string handle_obj(VirtualMachineCompatibilityChecker obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__VirtualMachineConfigInfo obj)
	{ return "<vw1__VirtualMachineConfigInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineConfigInfoDatastoreUrlPair obj)
	{ return "<vw1__VirtualMachineConfigInfoDatastoreUrlPair>"; }

inline std::string handle_obj(vw1__VirtualMachineConfigInfoOverheadInfo obj)
	{ return "<vw1__VirtualMachineConfigInfoOverheadInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineConfigSpec obj)
	{ return "<vw1__VirtualMachineConfigSpec>"; }

inline std::string handle_obj(vw1__VirtualMachineConfigSummary obj)
	{ return "<vw1__VirtualMachineConfigSummary>"; }

inline std::string handle_obj(vw1__VirtualMachineConsolePreferences obj)
	{ return "<vw1__VirtualMachineConsolePreferences>"; }

inline std::string handle_obj(vw1__VirtualMachineCpuIdInfoSpec obj)
	{ return "<vw1__VirtualMachineCpuIdInfoSpec>"; }

inline std::string handle_obj(vw1__VirtualMachineDatastoreInfo obj)
	{ return "<vw1__VirtualMachineDatastoreInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineDatastoreVolumeOption obj)
	{ return "<vw1__VirtualMachineDatastoreVolumeOption>"; }

inline std::string handle_obj(vw1__VirtualMachineDefaultPowerOpInfo obj)
	{ return "<vw1__VirtualMachineDefaultPowerOpInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineDeviceRuntimeInfo obj)
	{ return "<vw1__VirtualMachineDeviceRuntimeInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineDeviceRuntimeInfoDeviceRuntimeState obj)
	{ return "<vw1__VirtualMachineDeviceRuntimeInfoDeviceRuntimeState>"; }

inline std::string handle_obj(vw1__VirtualMachineFileInfo obj)
	{ return "<vw1__VirtualMachineFileInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineFileLayout obj)
	{ return "<vw1__VirtualMachineFileLayout>"; }

inline std::string handle_obj(vw1__VirtualMachineFileLayoutDiskLayout obj)
	{ return "<vw1__VirtualMachineFileLayoutDiskLayout>"; }

inline std::string handle_obj(vw1__VirtualMachineFileLayoutEx obj)
	{ return "<vw1__VirtualMachineFileLayoutEx>"; }

inline std::string handle_obj(vw1__VirtualMachineFileLayoutExDiskLayout obj)
	{ return "<vw1__VirtualMachineFileLayoutExDiskLayout>"; }

inline std::string handle_obj(vw1__VirtualMachineFileLayoutExDiskUnit obj)
	{ return "<vw1__VirtualMachineFileLayoutExDiskUnit>"; }

inline std::string handle_obj(vw1__VirtualMachineFileLayoutExFileInfo obj)
	{ return "<vw1__VirtualMachineFileLayoutExFileInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineFileLayoutExSnapshotLayout obj)
	{ return "<vw1__VirtualMachineFileLayoutExSnapshotLayout>"; }

inline std::string handle_obj(vw1__VirtualMachineFileLayoutSnapshotLayout obj)
	{ return "<vw1__VirtualMachineFileLayoutSnapshotLayout>"; }

inline std::string handle_obj(vw1__VirtualMachineFlagInfo obj)
	{ return "<vw1__VirtualMachineFlagInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineFloppyInfo obj)
	{ return "<vw1__VirtualMachineFloppyInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineGuestSummary obj)
	{ return "<vw1__VirtualMachineGuestSummary>"; }

inline std::string handle_obj(vw1__VirtualMachineIdeDiskDeviceInfo obj)
	{ return "<vw1__VirtualMachineIdeDiskDeviceInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineIdeDiskDevicePartitionInfo obj)
	{ return "<vw1__VirtualMachineIdeDiskDevicePartitionInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineLegacyNetworkSwitchInfo obj)
	{ return "<vw1__VirtualMachineLegacyNetworkSwitchInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineMemoryReservationInfo obj)
	{ return "<vw1__VirtualMachineMemoryReservationInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineMessage obj)
	{ return "<vw1__VirtualMachineMessage>"; }

inline std::string handle_obj(vw1__VirtualMachineNetworkInfo obj)
	{ return "<vw1__VirtualMachineNetworkInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineNetworkShaperInfo obj)
	{ return "<vw1__VirtualMachineNetworkShaperInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineParallelInfo obj)
	{ return "<vw1__VirtualMachineParallelInfo>"; }

inline std::string handle_obj(vw1__VirtualMachinePciPassthroughInfo obj)
	{ return "<vw1__VirtualMachinePciPassthroughInfo>"; }

inline std::string handle_obj(VirtualMachineProvisioningChecker obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__VirtualMachineQuestionInfo obj)
	{ return "<vw1__VirtualMachineQuestionInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineQuickStats obj)
	{ return "<vw1__VirtualMachineQuickStats>"; }

inline std::string handle_obj(vw1__VirtualMachineRelocateSpec obj)
	{ return "<vw1__VirtualMachineRelocateSpec>"; }

inline std::string handle_obj(vw1__VirtualMachineRelocateSpecDiskLocator obj)
	{ return "<vw1__VirtualMachineRelocateSpecDiskLocator>"; }

inline std::string handle_obj(vw1__VirtualMachineRuntimeInfo obj)
	{ return "<vw1__VirtualMachineRuntimeInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineRuntimeInfoDasProtectionState obj)
	{ return "<vw1__VirtualMachineRuntimeInfoDasProtectionState>"; }

inline std::string handle_obj(vw1__VirtualMachineScsiDiskDeviceInfo obj)
	{ return "<vw1__VirtualMachineScsiDiskDeviceInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineScsiPassthroughInfo obj)
	{ return "<vw1__VirtualMachineScsiPassthroughInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineSerialInfo obj)
	{ return "<vw1__VirtualMachineSerialInfo>"; }

inline std::string handle_obj(VirtualMachineSnapshot obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__VirtualMachineSnapshotInfo obj)
	{ return "<vw1__VirtualMachineSnapshotInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineSnapshotTree obj)
	{ return "<vw1__VirtualMachineSnapshotTree>"; }

inline std::string handle_obj(vw1__VirtualMachineSoundInfo obj)
	{ return "<vw1__VirtualMachineSoundInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineStorageInfo obj)
	{ return "<vw1__VirtualMachineStorageInfo>"; }

inline std::string handle_obj(vw1__VirtualMachineStorageSummary obj)
	{ return "<vw1__VirtualMachineStorageSummary>"; }

inline std::string handle_obj(vw1__VirtualMachineSummary obj)
	{ return "<vw1__VirtualMachineSummary>"; }

inline std::string handle_obj(vw1__VirtualMachineUsageOnDatastore obj)
	{ return "<vw1__VirtualMachineUsageOnDatastore>"; }

inline std::string handle_obj(vw1__VirtualMachineUsbInfo obj)
	{ return "<vw1__VirtualMachineUsbInfo>"; }

inline std::string handle_obj(vw1__VirtualNicManagerNetConfig obj)
	{ return "<vw1__VirtualNicManagerNetConfig>"; }

inline std::string handle_obj(vw1__VirtualSwitchProfile obj)
	{ return "<vw1__VirtualSwitchProfile>"; }

inline std::string handle_obj(vw1__VirtualSwitchSelectionProfile obj)
	{ return "<vw1__VirtualSwitchSelectionProfile>"; }

inline std::string handle_obj(VirtualizationManager obj)
	{ return obj? obj.present() : "_unset_"; }

inline std::string handle_obj(vw1__VlanProfile obj)
	{ return "<vw1__VlanProfile>"; }

inline std::string handle_obj(vw1__VmConfigFileQueryFilter obj)
	{ return "<vw1__VmConfigFileQueryFilter>"; }

inline std::string handle_obj(vw1__VmConfigFileQueryFlags obj)
	{ return "<vw1__VmConfigFileQueryFlags>"; }

inline std::string handle_obj(vw1__VmConfigInfo obj)
	{ return "<vw1__VmConfigInfo>"; }

inline std::string handle_obj(vw1__VmConfigSpec obj)
	{ return "<vw1__VmConfigSpec>"; }

inline std::string handle_obj(vw1__VmDiskFileQueryFilter obj)
	{ return "<vw1__VmDiskFileQueryFilter>"; }

inline std::string handle_obj(vw1__VmDiskFileQueryFlags obj)
	{ return "<vw1__VmDiskFileQueryFlags>"; }

inline std::string handle_obj(vw1__VmEventArgument obj)
	{ return "<vw1__VmEventArgument>"; }

inline std::string handle_obj(vw1__VmPodConfigForPlacement obj)
	{ return "<vw1__VmPodConfigForPlacement>"; }

inline std::string handle_obj(vw1__VmPortGroupProfile obj)
	{ return "<vw1__VmPortGroupProfile>"; }

inline std::string handle_obj(vw1__VmfsDatastoreBaseOption obj)
	{ return "<vw1__VmfsDatastoreBaseOption>"; }

inline std::string handle_obj(vw1__VmfsDatastoreSpec obj)
	{ return "<vw1__VmfsDatastoreSpec>"; }

inline std::string handle_obj(vw1__VmwareDistributedVirtualSwitchVlanSpec obj)
	{ return "<vw1__VmwareDistributedVirtualSwitchVlanSpec>"; }

inline std::string handle_obj(vw1__VmwareUplinkPortTeamingPolicy obj)
	{ return "<vw1__VmwareUplinkPortTeamingPolicy>"; }

inline std::string handle_obj(vw1__VnicPortArgument obj)
	{ return "<vw1__VnicPortArgument>"; }

inline std::string handle_obj(vw1__ArrayUpdateOperation obj)
{
	switch (obj)
	{
	case vw1__ArrayUpdateOperation__remove:
		return "remove";
	case vw1__ArrayUpdateOperation__add:
		return "add";
	case vw1__ArrayUpdateOperation__edit:
		return "edit";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__AutoStartWaitHeartbeatSetting obj)
{
	switch (obj)
	{
	case vw1__AutoStartWaitHeartbeatSetting__no:
		return "no";
	case vw1__AutoStartWaitHeartbeatSetting__yes:
		return "yes";
	case vw1__AutoStartWaitHeartbeatSetting__systemDefault:
		return "systemDefault";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState obj)
{
	switch (obj)
	{
	case vw1__ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState__unlicensed:
		return "unlicensed";
	case vw1__ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState__licensed:
		return "licensed";
	case vw1__ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState__unknown:
		return "unknown";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__CustomizationLicenseDataMode obj)
{
	switch (obj)
	{
	case vw1__CustomizationLicenseDataMode__perSeat:
		return "perSeat";
	case vw1__CustomizationLicenseDataMode__perServer:
		return "perServer";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__CustomizationNetBIOSMode obj)
{
	switch (obj)
	{
	case vw1__CustomizationNetBIOSMode__enableNetBIOS:
		return "enableNetBIOS";
	case vw1__CustomizationNetBIOSMode__enableNetBIOSViaDhcp:
		return "enableNetBIOSViaDhcp";
	case vw1__CustomizationNetBIOSMode__disableNetBIOS:
		return "disableNetBIOS";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__CustomizationSysprepRebootOption obj)
{
	switch (obj)
	{
	case vw1__CustomizationSysprepRebootOption__noreboot:
		return "noreboot";
	case vw1__CustomizationSysprepRebootOption__reboot:
		return "reboot";
	case vw1__CustomizationSysprepRebootOption__shutdown:
		return "shutdown";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__DasVmPriority obj)
{
	switch (obj)
	{
	case vw1__DasVmPriority__low:
		return "low";
	case vw1__DasVmPriority__disabled:
		return "disabled";
	case vw1__DasVmPriority__high:
		return "high";
	case vw1__DasVmPriority__medium:
		return "medium";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__DayOfWeek obj)
{
	switch (obj)
	{
	case vw1__DayOfWeek__saturday:
		return "saturday";
	case vw1__DayOfWeek__monday:
		return "monday";
	case vw1__DayOfWeek__thursday:
		return "thursday";
	case vw1__DayOfWeek__sunday:
		return "sunday";
	case vw1__DayOfWeek__wednesday:
		return "wednesday";
	case vw1__DayOfWeek__tuesday:
		return "tuesday";
	case vw1__DayOfWeek__friday:
		return "friday";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__DpmBehavior obj)
{
	switch (obj)
	{
	case vw1__DpmBehavior__automated:
		return "automated";
	case vw1__DpmBehavior__manual:
		return "manual";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__DrsBehavior obj)
{
	switch (obj)
	{
	case vw1__DrsBehavior__partiallyAutomated:
		return "partiallyAutomated";
	case vw1__DrsBehavior__manual:
		return "manual";
	case vw1__DrsBehavior__fullyAutomated:
		return "fullyAutomated";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__EventFilterSpecRecursionOption obj)
{
	switch (obj)
	{
	case vw1__EventFilterSpecRecursionOption__children:
		return "children";
	case vw1__EventFilterSpecRecursionOption__self:
		return "self";
	case vw1__EventFilterSpecRecursionOption__all:
		return "all";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__FibreChannelPortType obj)
{
	switch (obj)
	{
	case vw1__FibreChannelPortType__loop:
		return "loop";
	case vw1__FibreChannelPortType__fabric:
		return "fabric";
	case vw1__FibreChannelPortType__unknown:
		return "unknown";
	case vw1__FibreChannelPortType__pointToPoint:
		return "pointToPoint";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__FtIssuesOnHostHostSelectionType obj)
{
	switch (obj)
	{
	case vw1__FtIssuesOnHostHostSelectionType__vc:
		return "vc";
	case vw1__FtIssuesOnHostHostSelectionType__user:
		return "user";
	case vw1__FtIssuesOnHostHostSelectionType__drs:
		return "drs";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__HostFirewallRuleDirection obj)
{
	switch (obj)
	{
	case vw1__HostFirewallRuleDirection__outbound:
		return "outbound";
	case vw1__HostFirewallRuleDirection__inbound:
		return "inbound";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__HostFirewallRulePortType obj)
{
	switch (obj)
	{
	case vw1__HostFirewallRulePortType__dst:
		return "dst";
	case vw1__HostFirewallRulePortType__src:
		return "src";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__HostInternetScsiHbaNetworkBindingSupportType obj)
{
	switch (obj)
	{
	case vw1__HostInternetScsiHbaNetworkBindingSupportType__optional:
		return "optional";
	case vw1__HostInternetScsiHbaNetworkBindingSupportType__notsupported:
		return "notsupported";
	case vw1__HostInternetScsiHbaNetworkBindingSupportType__required:
		return "required";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__HostPowerOperationType obj)
{
	switch (obj)
	{
	case vw1__HostPowerOperationType__powerOff:
		return "powerOff";
	case vw1__HostPowerOperationType__powerOn:
		return "powerOn";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__HostSnmpAgentCapability obj)
{
	switch (obj)
	{
	case vw1__HostSnmpAgentCapability__DIAGNOSTICS:
		return "DIAGNOSTICS";
	case vw1__HostSnmpAgentCapability__COMPLETE:
		return "COMPLETE";
	case vw1__HostSnmpAgentCapability__CONFIGURATION:
		return "CONFIGURATION";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__HostSystemConnectionState obj)
{
	switch (obj)
	{
	case vw1__HostSystemConnectionState__notResponding:
		return "notResponding";
	case vw1__HostSystemConnectionState__connected:
		return "connected";
	case vw1__HostSystemConnectionState__disconnected:
		return "disconnected";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__HostSystemPowerState obj)
{
	switch (obj)
	{
	case vw1__HostSystemPowerState__poweredOff:
		return "poweredOff";
	case vw1__HostSystemPowerState__poweredOn:
		return "poweredOn";
	case vw1__HostSystemPowerState__unknown:
		return "unknown";
	case vw1__HostSystemPowerState__standBy:
		return "standBy";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__HttpNfcLeaseState obj)
{
	switch (obj)
	{
	case vw1__HttpNfcLeaseState__ready:
		return "ready";
	case vw1__HttpNfcLeaseState__initializing:
		return "initializing";
	case vw1__HttpNfcLeaseState__error:
		return "error";
	case vw1__HttpNfcLeaseState__done:
		return "done";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__LicenseFeatureInfoState obj)
{
	switch (obj)
	{
	case vw1__LicenseFeatureInfoState__disabled:
		return "disabled";
	case vw1__LicenseFeatureInfoState__enabled:
		return "enabled";
	case vw1__LicenseFeatureInfoState__optional:
		return "optional";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__LicenseManagerState obj)
{
	switch (obj)
	{
	case vw1__LicenseManagerState__normal:
		return "normal";
	case vw1__LicenseManagerState__initializing:
		return "initializing";
	case vw1__LicenseManagerState__fault:
		return "fault";
	case vw1__LicenseManagerState__marginal:
		return "marginal";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__LicenseReservationInfoState obj)
{
	switch (obj)
	{
	case vw1__LicenseReservationInfoState__noLicense:
		return "noLicense";
	case vw1__LicenseReservationInfoState__notUsed:
		return "notUsed";
	case vw1__LicenseReservationInfoState__licensed:
		return "licensed";
	case vw1__LicenseReservationInfoState__unlicensedUse:
		return "unlicensedUse";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__ManagedEntityStatus obj)
{
	switch (obj)
	{
	case vw1__ManagedEntityStatus__green:
		return "green";
	case vw1__ManagedEntityStatus__gray:
		return "gray";
	case vw1__ManagedEntityStatus__red:
		return "red";
	case vw1__ManagedEntityStatus__yellow:
		return "yellow";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__MetricAlarmOperator obj)
{
	switch (obj)
	{
	case vw1__MetricAlarmOperator__isBelow:
		return "isBelow";
	case vw1__MetricAlarmOperator__isAbove:
		return "isAbove";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__ObjectUpdateKind obj)
{
	switch (obj)
	{
	case vw1__ObjectUpdateKind__enter:
		return "enter";
	case vw1__ObjectUpdateKind__modify:
		return "modify";
	case vw1__ObjectUpdateKind__leave:
		return "leave";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__PerfStatsType obj)
{
	switch (obj)
	{
	case vw1__PerfStatsType__delta:
		return "delta";
	case vw1__PerfStatsType__absolute:
		return "absolute";
	case vw1__PerfStatsType__rate:
		return "rate";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__PerfSummaryType obj)
{
	switch (obj)
	{
	case vw1__PerfSummaryType__maximum:
		return "maximum";
	case vw1__PerfSummaryType__summation:
		return "summation";
	case vw1__PerfSummaryType__average:
		return "average";
	case vw1__PerfSummaryType__latest:
		return "latest";
	case vw1__PerfSummaryType__minimum:
		return "minimum";
	case vw1__PerfSummaryType__none:
		return "none";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__PropertyChangeOp obj)
{
	switch (obj)
	{
	case vw1__PropertyChangeOp__remove:
		return "remove";
	case vw1__PropertyChangeOp__add:
		return "add";
	case vw1__PropertyChangeOp__indirectRemove:
		return "indirectRemove";
	case vw1__PropertyChangeOp__assign:
		return "assign";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__SharesLevel obj)
{
	switch (obj)
	{
	case vw1__SharesLevel__normal:
		return "normal";
	case vw1__SharesLevel__low:
		return "low";
	case vw1__SharesLevel__custom:
		return "custom";
	case vw1__SharesLevel__high:
		return "high";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__StateAlarmOperator obj)
{
	switch (obj)
	{
	case vw1__StateAlarmOperator__isUnequal:
		return "isUnequal";
	case vw1__StateAlarmOperator__isEqual:
		return "isEqual";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__TaskFilterSpecRecursionOption obj)
{
	switch (obj)
	{
	case vw1__TaskFilterSpecRecursionOption__children:
		return "children";
	case vw1__TaskFilterSpecRecursionOption__self:
		return "self";
	case vw1__TaskFilterSpecRecursionOption__all:
		return "all";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__TaskFilterSpecTimeOption obj)
{
	switch (obj)
	{
	case vw1__TaskFilterSpecTimeOption__startedTime:
		return "startedTime";
	case vw1__TaskFilterSpecTimeOption__queuedTime:
		return "queuedTime";
	case vw1__TaskFilterSpecTimeOption__completedTime:
		return "completedTime";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__TaskInfoState obj)
{
	switch (obj)
	{
	case vw1__TaskInfoState__running:
		return "running";
	case vw1__TaskInfoState__queued:
		return "queued";
	case vw1__TaskInfoState__error:
		return "error";
	case vw1__TaskInfoState__success:
		return "success";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualAppVAppState obj)
{
	switch (obj)
	{
	case vw1__VirtualAppVAppState__stopped:
		return "stopped";
	case vw1__VirtualAppVAppState__started:
		return "started";
	case vw1__VirtualAppVAppState__stopping:
		return "stopping";
	case vw1__VirtualAppVAppState__starting:
		return "starting";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualDeviceConfigSpecFileOperation obj)
{
	switch (obj)
	{
	case vw1__VirtualDeviceConfigSpecFileOperation__destroy:
		return "destroy";
	case vw1__VirtualDeviceConfigSpecFileOperation__create:
		return "create";
	case vw1__VirtualDeviceConfigSpecFileOperation__replace:
		return "replace";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualDeviceConfigSpecOperation obj)
{
	switch (obj)
	{
	case vw1__VirtualDeviceConfigSpecOperation__remove:
		return "remove";
	case vw1__VirtualDeviceConfigSpecOperation__add:
		return "add";
	case vw1__VirtualDeviceConfigSpecOperation__edit:
		return "edit";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualMachineConnectionState obj)
{
	switch (obj)
	{
	case vw1__VirtualMachineConnectionState__disconnected:
		return "disconnected";
	case vw1__VirtualMachineConnectionState__invalid:
		return "invalid";
	case vw1__VirtualMachineConnectionState__connected:
		return "connected";
	case vw1__VirtualMachineConnectionState__inaccessible:
		return "inaccessible";
	case vw1__VirtualMachineConnectionState__orphaned:
		return "orphaned";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualMachineFaultToleranceState obj)
{
	switch (obj)
	{
	case vw1__VirtualMachineFaultToleranceState__disabled:
		return "disabled";
	case vw1__VirtualMachineFaultToleranceState__starting:
		return "starting";
	case vw1__VirtualMachineFaultToleranceState__notConfigured:
		return "notConfigured";
	case vw1__VirtualMachineFaultToleranceState__needSecondary:
		return "needSecondary";
	case vw1__VirtualMachineFaultToleranceState__enabled:
		return "enabled";
	case vw1__VirtualMachineFaultToleranceState__running:
		return "running";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualMachineMovePriority obj)
{
	switch (obj)
	{
	case vw1__VirtualMachineMovePriority__highPriority:
		return "highPriority";
	case vw1__VirtualMachineMovePriority__lowPriority:
		return "lowPriority";
	case vw1__VirtualMachineMovePriority__defaultPriority:
		return "defaultPriority";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualMachinePowerState obj)
{
	switch (obj)
	{
	case vw1__VirtualMachinePowerState__poweredOn:
		return "poweredOn";
	case vw1__VirtualMachinePowerState__poweredOff:
		return "poweredOff";
	case vw1__VirtualMachinePowerState__suspended:
		return "suspended";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualMachineRecordReplayState obj)
{
	switch (obj)
	{
	case vw1__VirtualMachineRecordReplayState__replaying:
		return "replaying";
	case vw1__VirtualMachineRecordReplayState__recording:
		return "recording";
	case vw1__VirtualMachineRecordReplayState__inactive:
		return "inactive";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualMachineRelocateTransformation obj)
{
	switch (obj)
	{
	case vw1__VirtualMachineRelocateTransformation__sparse:
		return "sparse";
	case vw1__VirtualMachineRelocateTransformation__flat:
		return "flat";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualMachineToolsStatus obj)
{
	switch (obj)
	{
	case vw1__VirtualMachineToolsStatus__toolsNotRunning:
		return "toolsNotRunning";
	case vw1__VirtualMachineToolsStatus__toolsNotInstalled:
		return "toolsNotInstalled";
	case vw1__VirtualMachineToolsStatus__toolsOk:
		return "toolsOk";
	case vw1__VirtualMachineToolsStatus__toolsOld:
		return "toolsOld";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__VirtualSCSISharing obj)
{
	switch (obj)
	{
	case vw1__VirtualSCSISharing__virtualSharing:
		return "virtualSharing";
	case vw1__VirtualSCSISharing__noSharing:
		return "noSharing";
	case vw1__VirtualSCSISharing__physicalSharing:
		return "physicalSharing";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

inline std::string handle_obj(vw1__WeekOfMonth obj)
{
	switch (obj)
	{
	case vw1__WeekOfMonth__second:
		return "second";
	case vw1__WeekOfMonth__last:
		return "last";
	case vw1__WeekOfMonth__first:
		return "first";
	case vw1__WeekOfMonth__fourth:
		return "fourth";
	case vw1__WeekOfMonth__third:
		return "third";
	default:
		assert(!"should not be here");
		return "<invalid_enum_value>";
	}
}

template<typename T>
std::string handle_obj_ptr(const T* value)
{
	return value? handle_obj(*value) : "_unset_";
}

closure* get_closure_from_mor(vw1__ManagedObjectReference* mor);
} // namespace vim_browser
#endif // VIM_BROWSER_H
