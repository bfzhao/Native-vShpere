/* soapVimBindingProxy.cpp
   Generated by gSOAP 2.8.7 from .gsoap_tmp.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapVimBindingProxy.h"

VimBindingProxy::VimBindingProxy()
{	VimBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

VimBindingProxy::VimBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

VimBindingProxy::VimBindingProxy(const char *url)
{	VimBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

VimBindingProxy::VimBindingProxy(soap_mode iomode)
{	VimBindingProxy_init(iomode, iomode);
}

VimBindingProxy::VimBindingProxy(const char *url, soap_mode iomode)
{	VimBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

VimBindingProxy::VimBindingProxy(soap_mode imode, soap_mode omode)
{	VimBindingProxy_init(imode, omode);
}

VimBindingProxy::~VimBindingProxy()
{ }

void VimBindingProxy::VimBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"vw1", "urn:vim25", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void VimBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void VimBindingProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *VimBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *VimBindingProxy::soap_fault()
{	return this->fault;
}

const char *VimBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *VimBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int VimBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int VimBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void VimBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void VimBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *VimBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int VimBindingProxy::DestroyPropertyFilter(const char *endpoint, const char *soap_action, vw1__DestroyPropertyFilterRequestType *vw1__DestroyPropertyFilter, _vw1__DestroyPropertyFilterResponse *vw1__DestroyPropertyFilterResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyPropertyFilter soap_tmp___vw1__DestroyPropertyFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyPropertyFilter.vw1__DestroyPropertyFilter = vw1__DestroyPropertyFilter;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyPropertyFilter(soap, &soap_tmp___vw1__DestroyPropertyFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyPropertyFilter(soap, &soap_tmp___vw1__DestroyPropertyFilter, "-vw1:DestroyPropertyFilter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyPropertyFilter(soap, &soap_tmp___vw1__DestroyPropertyFilter, "-vw1:DestroyPropertyFilter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyPropertyFilterResponse)
		return soap_closesock(soap);
	vw1__DestroyPropertyFilterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyPropertyFilterResponse->soap_get(soap, "vw1:DestroyPropertyFilterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateFilter(const char *endpoint, const char *soap_action, vw1__CreateFilterRequestType *vw1__CreateFilter, _vw1__CreateFilterResponse *vw1__CreateFilterResponse)
{	struct soap *soap = this;
	struct __vw1__CreateFilter soap_tmp___vw1__CreateFilter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateFilter.vw1__CreateFilter = vw1__CreateFilter;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateFilter(soap, &soap_tmp___vw1__CreateFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateFilter(soap, &soap_tmp___vw1__CreateFilter, "-vw1:CreateFilter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateFilter(soap, &soap_tmp___vw1__CreateFilter, "-vw1:CreateFilter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateFilterResponse)
		return soap_closesock(soap);
	vw1__CreateFilterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateFilterResponse->soap_get(soap, "vw1:CreateFilterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveProperties(const char *endpoint, const char *soap_action, vw1__RetrievePropertiesRequestType *vw1__RetrieveProperties, _vw1__RetrievePropertiesResponse *vw1__RetrievePropertiesResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveProperties soap_tmp___vw1__RetrieveProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveProperties.vw1__RetrieveProperties = vw1__RetrieveProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveProperties(soap, &soap_tmp___vw1__RetrieveProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveProperties(soap, &soap_tmp___vw1__RetrieveProperties, "-vw1:RetrieveProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveProperties(soap, &soap_tmp___vw1__RetrieveProperties, "-vw1:RetrieveProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrievePropertiesResponse)
		return soap_closesock(soap);
	vw1__RetrievePropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrievePropertiesResponse->soap_get(soap, "vw1:RetrievePropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckForUpdates(const char *endpoint, const char *soap_action, vw1__CheckForUpdatesRequestType *vw1__CheckForUpdates, _vw1__CheckForUpdatesResponse *vw1__CheckForUpdatesResponse)
{	struct soap *soap = this;
	struct __vw1__CheckForUpdates soap_tmp___vw1__CheckForUpdates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckForUpdates.vw1__CheckForUpdates = vw1__CheckForUpdates;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckForUpdates(soap, &soap_tmp___vw1__CheckForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckForUpdates(soap, &soap_tmp___vw1__CheckForUpdates, "-vw1:CheckForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckForUpdates(soap, &soap_tmp___vw1__CheckForUpdates, "-vw1:CheckForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckForUpdatesResponse)
		return soap_closesock(soap);
	vw1__CheckForUpdatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckForUpdatesResponse->soap_get(soap, "vw1:CheckForUpdatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::WaitForUpdates(const char *endpoint, const char *soap_action, vw1__WaitForUpdatesRequestType *vw1__WaitForUpdates, _vw1__WaitForUpdatesResponse *vw1__WaitForUpdatesResponse)
{	struct soap *soap = this;
	struct __vw1__WaitForUpdates soap_tmp___vw1__WaitForUpdates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__WaitForUpdates.vw1__WaitForUpdates = vw1__WaitForUpdates;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__WaitForUpdates(soap, &soap_tmp___vw1__WaitForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__WaitForUpdates(soap, &soap_tmp___vw1__WaitForUpdates, "-vw1:WaitForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__WaitForUpdates(soap, &soap_tmp___vw1__WaitForUpdates, "-vw1:WaitForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__WaitForUpdatesResponse)
		return soap_closesock(soap);
	vw1__WaitForUpdatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__WaitForUpdatesResponse->soap_get(soap, "vw1:WaitForUpdatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelWaitForUpdates(const char *endpoint, const char *soap_action, vw1__CancelWaitForUpdatesRequestType *vw1__CancelWaitForUpdates, _vw1__CancelWaitForUpdatesResponse *vw1__CancelWaitForUpdatesResponse)
{	struct soap *soap = this;
	struct __vw1__CancelWaitForUpdates soap_tmp___vw1__CancelWaitForUpdates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CancelWaitForUpdates.vw1__CancelWaitForUpdates = vw1__CancelWaitForUpdates;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CancelWaitForUpdates(soap, &soap_tmp___vw1__CancelWaitForUpdates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CancelWaitForUpdates(soap, &soap_tmp___vw1__CancelWaitForUpdates, "-vw1:CancelWaitForUpdates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CancelWaitForUpdates(soap, &soap_tmp___vw1__CancelWaitForUpdates, "-vw1:CancelWaitForUpdates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CancelWaitForUpdatesResponse)
		return soap_closesock(soap);
	vw1__CancelWaitForUpdatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CancelWaitForUpdatesResponse->soap_get(soap, "vw1:CancelWaitForUpdatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::WaitForUpdatesEx(const char *endpoint, const char *soap_action, vw1__WaitForUpdatesExRequestType *vw1__WaitForUpdatesEx, _vw1__WaitForUpdatesExResponse *vw1__WaitForUpdatesExResponse)
{	struct soap *soap = this;
	struct __vw1__WaitForUpdatesEx soap_tmp___vw1__WaitForUpdatesEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__WaitForUpdatesEx.vw1__WaitForUpdatesEx = vw1__WaitForUpdatesEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__WaitForUpdatesEx(soap, &soap_tmp___vw1__WaitForUpdatesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__WaitForUpdatesEx(soap, &soap_tmp___vw1__WaitForUpdatesEx, "-vw1:WaitForUpdatesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__WaitForUpdatesEx(soap, &soap_tmp___vw1__WaitForUpdatesEx, "-vw1:WaitForUpdatesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__WaitForUpdatesExResponse)
		return soap_closesock(soap);
	vw1__WaitForUpdatesExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__WaitForUpdatesExResponse->soap_get(soap, "vw1:WaitForUpdatesExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrievePropertiesEx(const char *endpoint, const char *soap_action, vw1__RetrievePropertiesExRequestType *vw1__RetrievePropertiesEx, _vw1__RetrievePropertiesExResponse *vw1__RetrievePropertiesExResponse)
{	struct soap *soap = this;
	struct __vw1__RetrievePropertiesEx soap_tmp___vw1__RetrievePropertiesEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrievePropertiesEx.vw1__RetrievePropertiesEx = vw1__RetrievePropertiesEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrievePropertiesEx(soap, &soap_tmp___vw1__RetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrievePropertiesEx(soap, &soap_tmp___vw1__RetrievePropertiesEx, "-vw1:RetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrievePropertiesEx(soap, &soap_tmp___vw1__RetrievePropertiesEx, "-vw1:RetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrievePropertiesExResponse)
		return soap_closesock(soap);
	vw1__RetrievePropertiesExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrievePropertiesExResponse->soap_get(soap, "vw1:RetrievePropertiesExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ContinueRetrievePropertiesEx(const char *endpoint, const char *soap_action, vw1__ContinueRetrievePropertiesExRequestType *vw1__ContinueRetrievePropertiesEx, _vw1__ContinueRetrievePropertiesExResponse *vw1__ContinueRetrievePropertiesExResponse)
{	struct soap *soap = this;
	struct __vw1__ContinueRetrievePropertiesEx soap_tmp___vw1__ContinueRetrievePropertiesEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ContinueRetrievePropertiesEx.vw1__ContinueRetrievePropertiesEx = vw1__ContinueRetrievePropertiesEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ContinueRetrievePropertiesEx(soap, &soap_tmp___vw1__ContinueRetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ContinueRetrievePropertiesEx(soap, &soap_tmp___vw1__ContinueRetrievePropertiesEx, "-vw1:ContinueRetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ContinueRetrievePropertiesEx(soap, &soap_tmp___vw1__ContinueRetrievePropertiesEx, "-vw1:ContinueRetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ContinueRetrievePropertiesExResponse)
		return soap_closesock(soap);
	vw1__ContinueRetrievePropertiesExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ContinueRetrievePropertiesExResponse->soap_get(soap, "vw1:ContinueRetrievePropertiesExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelRetrievePropertiesEx(const char *endpoint, const char *soap_action, vw1__CancelRetrievePropertiesExRequestType *vw1__CancelRetrievePropertiesEx, _vw1__CancelRetrievePropertiesExResponse *vw1__CancelRetrievePropertiesExResponse)
{	struct soap *soap = this;
	struct __vw1__CancelRetrievePropertiesEx soap_tmp___vw1__CancelRetrievePropertiesEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CancelRetrievePropertiesEx.vw1__CancelRetrievePropertiesEx = vw1__CancelRetrievePropertiesEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CancelRetrievePropertiesEx(soap, &soap_tmp___vw1__CancelRetrievePropertiesEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CancelRetrievePropertiesEx(soap, &soap_tmp___vw1__CancelRetrievePropertiesEx, "-vw1:CancelRetrievePropertiesEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CancelRetrievePropertiesEx(soap, &soap_tmp___vw1__CancelRetrievePropertiesEx, "-vw1:CancelRetrievePropertiesEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CancelRetrievePropertiesExResponse)
		return soap_closesock(soap);
	vw1__CancelRetrievePropertiesExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CancelRetrievePropertiesExResponse->soap_get(soap, "vw1:CancelRetrievePropertiesExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreatePropertyCollector(const char *endpoint, const char *soap_action, vw1__CreatePropertyCollectorRequestType *vw1__CreatePropertyCollector, _vw1__CreatePropertyCollectorResponse *vw1__CreatePropertyCollectorResponse)
{	struct soap *soap = this;
	struct __vw1__CreatePropertyCollector soap_tmp___vw1__CreatePropertyCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreatePropertyCollector.vw1__CreatePropertyCollector = vw1__CreatePropertyCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreatePropertyCollector(soap, &soap_tmp___vw1__CreatePropertyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreatePropertyCollector(soap, &soap_tmp___vw1__CreatePropertyCollector, "-vw1:CreatePropertyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreatePropertyCollector(soap, &soap_tmp___vw1__CreatePropertyCollector, "-vw1:CreatePropertyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreatePropertyCollectorResponse)
		return soap_closesock(soap);
	vw1__CreatePropertyCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreatePropertyCollectorResponse->soap_get(soap, "vw1:CreatePropertyCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyPropertyCollector(const char *endpoint, const char *soap_action, vw1__DestroyPropertyCollectorRequestType *vw1__DestroyPropertyCollector, _vw1__DestroyPropertyCollectorResponse *vw1__DestroyPropertyCollectorResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyPropertyCollector soap_tmp___vw1__DestroyPropertyCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyPropertyCollector.vw1__DestroyPropertyCollector = vw1__DestroyPropertyCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyPropertyCollector(soap, &soap_tmp___vw1__DestroyPropertyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyPropertyCollector(soap, &soap_tmp___vw1__DestroyPropertyCollector, "-vw1:DestroyPropertyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyPropertyCollector(soap, &soap_tmp___vw1__DestroyPropertyCollector, "-vw1:DestroyPropertyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyPropertyCollectorResponse)
		return soap_closesock(soap);
	vw1__DestroyPropertyCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyPropertyCollectorResponse->soap_get(soap, "vw1:DestroyPropertyCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddAuthorizationRole(const char *endpoint, const char *soap_action, vw1__AddAuthorizationRoleRequestType *vw1__AddAuthorizationRole, _vw1__AddAuthorizationRoleResponse *vw1__AddAuthorizationRoleResponse)
{	struct soap *soap = this;
	struct __vw1__AddAuthorizationRole soap_tmp___vw1__AddAuthorizationRole;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddAuthorizationRole.vw1__AddAuthorizationRole = vw1__AddAuthorizationRole;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddAuthorizationRole(soap, &soap_tmp___vw1__AddAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddAuthorizationRole(soap, &soap_tmp___vw1__AddAuthorizationRole, "-vw1:AddAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddAuthorizationRole(soap, &soap_tmp___vw1__AddAuthorizationRole, "-vw1:AddAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddAuthorizationRoleResponse)
		return soap_closesock(soap);
	vw1__AddAuthorizationRoleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddAuthorizationRoleResponse->soap_get(soap, "vw1:AddAuthorizationRoleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveAuthorizationRole(const char *endpoint, const char *soap_action, vw1__RemoveAuthorizationRoleRequestType *vw1__RemoveAuthorizationRole, _vw1__RemoveAuthorizationRoleResponse *vw1__RemoveAuthorizationRoleResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveAuthorizationRole soap_tmp___vw1__RemoveAuthorizationRole;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveAuthorizationRole.vw1__RemoveAuthorizationRole = vw1__RemoveAuthorizationRole;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveAuthorizationRole(soap, &soap_tmp___vw1__RemoveAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveAuthorizationRole(soap, &soap_tmp___vw1__RemoveAuthorizationRole, "-vw1:RemoveAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveAuthorizationRole(soap, &soap_tmp___vw1__RemoveAuthorizationRole, "-vw1:RemoveAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveAuthorizationRoleResponse)
		return soap_closesock(soap);
	vw1__RemoveAuthorizationRoleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveAuthorizationRoleResponse->soap_get(soap, "vw1:RemoveAuthorizationRoleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateAuthorizationRole(const char *endpoint, const char *soap_action, vw1__UpdateAuthorizationRoleRequestType *vw1__UpdateAuthorizationRole, _vw1__UpdateAuthorizationRoleResponse *vw1__UpdateAuthorizationRoleResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateAuthorizationRole soap_tmp___vw1__UpdateAuthorizationRole;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateAuthorizationRole.vw1__UpdateAuthorizationRole = vw1__UpdateAuthorizationRole;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateAuthorizationRole(soap, &soap_tmp___vw1__UpdateAuthorizationRole);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateAuthorizationRole(soap, &soap_tmp___vw1__UpdateAuthorizationRole, "-vw1:UpdateAuthorizationRole", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateAuthorizationRole(soap, &soap_tmp___vw1__UpdateAuthorizationRole, "-vw1:UpdateAuthorizationRole", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateAuthorizationRoleResponse)
		return soap_closesock(soap);
	vw1__UpdateAuthorizationRoleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateAuthorizationRoleResponse->soap_get(soap, "vw1:UpdateAuthorizationRoleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MergePermissions(const char *endpoint, const char *soap_action, vw1__MergePermissionsRequestType *vw1__MergePermissions, _vw1__MergePermissionsResponse *vw1__MergePermissionsResponse)
{	struct soap *soap = this;
	struct __vw1__MergePermissions soap_tmp___vw1__MergePermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MergePermissions.vw1__MergePermissions = vw1__MergePermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MergePermissions(soap, &soap_tmp___vw1__MergePermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MergePermissions(soap, &soap_tmp___vw1__MergePermissions, "-vw1:MergePermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MergePermissions(soap, &soap_tmp___vw1__MergePermissions, "-vw1:MergePermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MergePermissionsResponse)
		return soap_closesock(soap);
	vw1__MergePermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MergePermissionsResponse->soap_get(soap, "vw1:MergePermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveRolePermissions(const char *endpoint, const char *soap_action, vw1__RetrieveRolePermissionsRequestType *vw1__RetrieveRolePermissions, _vw1__RetrieveRolePermissionsResponse *vw1__RetrieveRolePermissionsResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveRolePermissions soap_tmp___vw1__RetrieveRolePermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveRolePermissions.vw1__RetrieveRolePermissions = vw1__RetrieveRolePermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveRolePermissions(soap, &soap_tmp___vw1__RetrieveRolePermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveRolePermissions(soap, &soap_tmp___vw1__RetrieveRolePermissions, "-vw1:RetrieveRolePermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveRolePermissions(soap, &soap_tmp___vw1__RetrieveRolePermissions, "-vw1:RetrieveRolePermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveRolePermissionsResponse)
		return soap_closesock(soap);
	vw1__RetrieveRolePermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveRolePermissionsResponse->soap_get(soap, "vw1:RetrieveRolePermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveEntityPermissions(const char *endpoint, const char *soap_action, vw1__RetrieveEntityPermissionsRequestType *vw1__RetrieveEntityPermissions, _vw1__RetrieveEntityPermissionsResponse *vw1__RetrieveEntityPermissionsResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveEntityPermissions soap_tmp___vw1__RetrieveEntityPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveEntityPermissions.vw1__RetrieveEntityPermissions = vw1__RetrieveEntityPermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveEntityPermissions(soap, &soap_tmp___vw1__RetrieveEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveEntityPermissions(soap, &soap_tmp___vw1__RetrieveEntityPermissions, "-vw1:RetrieveEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveEntityPermissions(soap, &soap_tmp___vw1__RetrieveEntityPermissions, "-vw1:RetrieveEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveEntityPermissionsResponse)
		return soap_closesock(soap);
	vw1__RetrieveEntityPermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveEntityPermissionsResponse->soap_get(soap, "vw1:RetrieveEntityPermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveAllPermissions(const char *endpoint, const char *soap_action, vw1__RetrieveAllPermissionsRequestType *vw1__RetrieveAllPermissions, _vw1__RetrieveAllPermissionsResponse *vw1__RetrieveAllPermissionsResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveAllPermissions soap_tmp___vw1__RetrieveAllPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveAllPermissions.vw1__RetrieveAllPermissions = vw1__RetrieveAllPermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveAllPermissions(soap, &soap_tmp___vw1__RetrieveAllPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveAllPermissions(soap, &soap_tmp___vw1__RetrieveAllPermissions, "-vw1:RetrieveAllPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveAllPermissions(soap, &soap_tmp___vw1__RetrieveAllPermissions, "-vw1:RetrieveAllPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveAllPermissionsResponse)
		return soap_closesock(soap);
	vw1__RetrieveAllPermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveAllPermissionsResponse->soap_get(soap, "vw1:RetrieveAllPermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetEntityPermissions(const char *endpoint, const char *soap_action, vw1__SetEntityPermissionsRequestType *vw1__SetEntityPermissions, _vw1__SetEntityPermissionsResponse *vw1__SetEntityPermissionsResponse)
{	struct soap *soap = this;
	struct __vw1__SetEntityPermissions soap_tmp___vw1__SetEntityPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetEntityPermissions.vw1__SetEntityPermissions = vw1__SetEntityPermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetEntityPermissions(soap, &soap_tmp___vw1__SetEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetEntityPermissions(soap, &soap_tmp___vw1__SetEntityPermissions, "-vw1:SetEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetEntityPermissions(soap, &soap_tmp___vw1__SetEntityPermissions, "-vw1:SetEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetEntityPermissionsResponse)
		return soap_closesock(soap);
	vw1__SetEntityPermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetEntityPermissionsResponse->soap_get(soap, "vw1:SetEntityPermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetEntityPermissions(const char *endpoint, const char *soap_action, vw1__ResetEntityPermissionsRequestType *vw1__ResetEntityPermissions, _vw1__ResetEntityPermissionsResponse *vw1__ResetEntityPermissionsResponse)
{	struct soap *soap = this;
	struct __vw1__ResetEntityPermissions soap_tmp___vw1__ResetEntityPermissions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetEntityPermissions.vw1__ResetEntityPermissions = vw1__ResetEntityPermissions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetEntityPermissions(soap, &soap_tmp___vw1__ResetEntityPermissions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetEntityPermissions(soap, &soap_tmp___vw1__ResetEntityPermissions, "-vw1:ResetEntityPermissions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetEntityPermissions(soap, &soap_tmp___vw1__ResetEntityPermissions, "-vw1:ResetEntityPermissions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetEntityPermissionsResponse)
		return soap_closesock(soap);
	vw1__ResetEntityPermissionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetEntityPermissionsResponse->soap_get(soap, "vw1:ResetEntityPermissionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveEntityPermission(const char *endpoint, const char *soap_action, vw1__RemoveEntityPermissionRequestType *vw1__RemoveEntityPermission, _vw1__RemoveEntityPermissionResponse *vw1__RemoveEntityPermissionResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveEntityPermission soap_tmp___vw1__RemoveEntityPermission;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveEntityPermission.vw1__RemoveEntityPermission = vw1__RemoveEntityPermission;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveEntityPermission(soap, &soap_tmp___vw1__RemoveEntityPermission);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveEntityPermission(soap, &soap_tmp___vw1__RemoveEntityPermission, "-vw1:RemoveEntityPermission", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveEntityPermission(soap, &soap_tmp___vw1__RemoveEntityPermission, "-vw1:RemoveEntityPermission", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveEntityPermissionResponse)
		return soap_closesock(soap);
	vw1__RemoveEntityPermissionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveEntityPermissionResponse->soap_get(soap, "vw1:RemoveEntityPermissionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HasPrivilegeOnEntity(const char *endpoint, const char *soap_action, vw1__HasPrivilegeOnEntityRequestType *vw1__HasPrivilegeOnEntity, _vw1__HasPrivilegeOnEntityResponse *vw1__HasPrivilegeOnEntityResponse)
{	struct soap *soap = this;
	struct __vw1__HasPrivilegeOnEntity soap_tmp___vw1__HasPrivilegeOnEntity;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__HasPrivilegeOnEntity.vw1__HasPrivilegeOnEntity = vw1__HasPrivilegeOnEntity;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__HasPrivilegeOnEntity(soap, &soap_tmp___vw1__HasPrivilegeOnEntity);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__HasPrivilegeOnEntity(soap, &soap_tmp___vw1__HasPrivilegeOnEntity, "-vw1:HasPrivilegeOnEntity", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__HasPrivilegeOnEntity(soap, &soap_tmp___vw1__HasPrivilegeOnEntity, "-vw1:HasPrivilegeOnEntity", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__HasPrivilegeOnEntityResponse)
		return soap_closesock(soap);
	vw1__HasPrivilegeOnEntityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__HasPrivilegeOnEntityResponse->soap_get(soap, "vw1:HasPrivilegeOnEntityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureCluster_USCORETask(const char *endpoint, const char *soap_action, vw1__ReconfigureClusterRequestType *vw1__ReconfigureCluster_USCORETask, _vw1__ReconfigureCluster_USCORETaskResponse *vw1__ReconfigureCluster_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureCluster_USCORETask soap_tmp___vw1__ReconfigureCluster_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureCluster_USCORETask.vw1__ReconfigureCluster_USCORETask = vw1__ReconfigureCluster_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureCluster_USCORETask(soap, &soap_tmp___vw1__ReconfigureCluster_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureCluster_USCORETask(soap, &soap_tmp___vw1__ReconfigureCluster_USCORETask, "-vw1:ReconfigureCluster_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureCluster_USCORETask(soap, &soap_tmp___vw1__ReconfigureCluster_USCORETask, "-vw1:ReconfigureCluster_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureCluster_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ReconfigureCluster_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureCluster_USCORETaskResponse->soap_get(soap, "vw1:ReconfigureCluster_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ApplyRecommendation(const char *endpoint, const char *soap_action, vw1__ApplyRecommendationRequestType *vw1__ApplyRecommendation, _vw1__ApplyRecommendationResponse *vw1__ApplyRecommendationResponse)
{	struct soap *soap = this;
	struct __vw1__ApplyRecommendation soap_tmp___vw1__ApplyRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ApplyRecommendation.vw1__ApplyRecommendation = vw1__ApplyRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ApplyRecommendation(soap, &soap_tmp___vw1__ApplyRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ApplyRecommendation(soap, &soap_tmp___vw1__ApplyRecommendation, "-vw1:ApplyRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ApplyRecommendation(soap, &soap_tmp___vw1__ApplyRecommendation, "-vw1:ApplyRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ApplyRecommendationResponse)
		return soap_closesock(soap);
	vw1__ApplyRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ApplyRecommendationResponse->soap_get(soap, "vw1:ApplyRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelRecommendation(const char *endpoint, const char *soap_action, vw1__CancelRecommendationRequestType *vw1__CancelRecommendation, _vw1__CancelRecommendationResponse *vw1__CancelRecommendationResponse)
{	struct soap *soap = this;
	struct __vw1__CancelRecommendation soap_tmp___vw1__CancelRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CancelRecommendation.vw1__CancelRecommendation = vw1__CancelRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CancelRecommendation(soap, &soap_tmp___vw1__CancelRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CancelRecommendation(soap, &soap_tmp___vw1__CancelRecommendation, "-vw1:CancelRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CancelRecommendation(soap, &soap_tmp___vw1__CancelRecommendation, "-vw1:CancelRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CancelRecommendationResponse)
		return soap_closesock(soap);
	vw1__CancelRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CancelRecommendationResponse->soap_get(soap, "vw1:CancelRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RecommendHostsForVm(const char *endpoint, const char *soap_action, vw1__RecommendHostsForVmRequestType *vw1__RecommendHostsForVm, _vw1__RecommendHostsForVmResponse *vw1__RecommendHostsForVmResponse)
{	struct soap *soap = this;
	struct __vw1__RecommendHostsForVm soap_tmp___vw1__RecommendHostsForVm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RecommendHostsForVm.vw1__RecommendHostsForVm = vw1__RecommendHostsForVm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RecommendHostsForVm(soap, &soap_tmp___vw1__RecommendHostsForVm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RecommendHostsForVm(soap, &soap_tmp___vw1__RecommendHostsForVm, "-vw1:RecommendHostsForVm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RecommendHostsForVm(soap, &soap_tmp___vw1__RecommendHostsForVm, "-vw1:RecommendHostsForVm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RecommendHostsForVmResponse)
		return soap_closesock(soap);
	vw1__RecommendHostsForVmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RecommendHostsForVmResponse->soap_get(soap, "vw1:RecommendHostsForVmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddHost_USCORETask(const char *endpoint, const char *soap_action, vw1__AddHostRequestType *vw1__AddHost_USCORETask, _vw1__AddHost_USCORETaskResponse *vw1__AddHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__AddHost_USCORETask soap_tmp___vw1__AddHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddHost_USCORETask.vw1__AddHost_USCORETask = vw1__AddHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddHost_USCORETask(soap, &soap_tmp___vw1__AddHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddHost_USCORETask(soap, &soap_tmp___vw1__AddHost_USCORETask, "-vw1:AddHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddHost_USCORETask(soap, &soap_tmp___vw1__AddHost_USCORETask, "-vw1:AddHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddHost_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__AddHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddHost_USCORETaskResponse->soap_get(soap, "vw1:AddHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveInto_USCORETask(const char *endpoint, const char *soap_action, vw1__MoveIntoRequestType *vw1__MoveInto_USCORETask, _vw1__MoveInto_USCORETaskResponse *vw1__MoveInto_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MoveInto_USCORETask soap_tmp___vw1__MoveInto_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveInto_USCORETask.vw1__MoveInto_USCORETask = vw1__MoveInto_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveInto_USCORETask(soap, &soap_tmp___vw1__MoveInto_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveInto_USCORETask(soap, &soap_tmp___vw1__MoveInto_USCORETask, "-vw1:MoveInto_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveInto_USCORETask(soap, &soap_tmp___vw1__MoveInto_USCORETask, "-vw1:MoveInto_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveInto_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MoveInto_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveInto_USCORETaskResponse->soap_get(soap, "vw1:MoveInto_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveHostInto_USCORETask(const char *endpoint, const char *soap_action, vw1__MoveHostIntoRequestType *vw1__MoveHostInto_USCORETask, _vw1__MoveHostInto_USCORETaskResponse *vw1__MoveHostInto_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MoveHostInto_USCORETask soap_tmp___vw1__MoveHostInto_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveHostInto_USCORETask.vw1__MoveHostInto_USCORETask = vw1__MoveHostInto_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveHostInto_USCORETask(soap, &soap_tmp___vw1__MoveHostInto_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveHostInto_USCORETask(soap, &soap_tmp___vw1__MoveHostInto_USCORETask, "-vw1:MoveHostInto_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveHostInto_USCORETask(soap, &soap_tmp___vw1__MoveHostInto_USCORETask, "-vw1:MoveHostInto_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveHostInto_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MoveHostInto_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveHostInto_USCORETaskResponse->soap_get(soap, "vw1:MoveHostInto_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshRecommendation(const char *endpoint, const char *soap_action, vw1__RefreshRecommendationRequestType *vw1__RefreshRecommendation, _vw1__RefreshRecommendationResponse *vw1__RefreshRecommendationResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshRecommendation soap_tmp___vw1__RefreshRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshRecommendation.vw1__RefreshRecommendation = vw1__RefreshRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshRecommendation(soap, &soap_tmp___vw1__RefreshRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshRecommendation(soap, &soap_tmp___vw1__RefreshRecommendation, "-vw1:RefreshRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshRecommendation(soap, &soap_tmp___vw1__RefreshRecommendation, "-vw1:RefreshRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshRecommendationResponse)
		return soap_closesock(soap);
	vw1__RefreshRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshRecommendationResponse->soap_get(soap, "vw1:RefreshRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveDasAdvancedRuntimeInfo(const char *endpoint, const char *soap_action, vw1__RetrieveDasAdvancedRuntimeInfoRequestType *vw1__RetrieveDasAdvancedRuntimeInfo, _vw1__RetrieveDasAdvancedRuntimeInfoResponse *vw1__RetrieveDasAdvancedRuntimeInfoResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveDasAdvancedRuntimeInfo soap_tmp___vw1__RetrieveDasAdvancedRuntimeInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveDasAdvancedRuntimeInfo.vw1__RetrieveDasAdvancedRuntimeInfo = vw1__RetrieveDasAdvancedRuntimeInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___vw1__RetrieveDasAdvancedRuntimeInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___vw1__RetrieveDasAdvancedRuntimeInfo, "-vw1:RetrieveDasAdvancedRuntimeInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveDasAdvancedRuntimeInfo(soap, &soap_tmp___vw1__RetrieveDasAdvancedRuntimeInfo, "-vw1:RetrieveDasAdvancedRuntimeInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveDasAdvancedRuntimeInfoResponse)
		return soap_closesock(soap);
	vw1__RetrieveDasAdvancedRuntimeInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveDasAdvancedRuntimeInfoResponse->soap_get(soap, "vw1:RetrieveDasAdvancedRuntimeInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ClusterEnterMaintenanceMode(const char *endpoint, const char *soap_action, vw1__ClusterEnterMaintenanceModeRequestType *vw1__ClusterEnterMaintenanceMode, _vw1__ClusterEnterMaintenanceModeResponse *vw1__ClusterEnterMaintenanceModeResponse)
{	struct soap *soap = this;
	struct __vw1__ClusterEnterMaintenanceMode soap_tmp___vw1__ClusterEnterMaintenanceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ClusterEnterMaintenanceMode.vw1__ClusterEnterMaintenanceMode = vw1__ClusterEnterMaintenanceMode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ClusterEnterMaintenanceMode(soap, &soap_tmp___vw1__ClusterEnterMaintenanceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ClusterEnterMaintenanceMode(soap, &soap_tmp___vw1__ClusterEnterMaintenanceMode, "-vw1:ClusterEnterMaintenanceMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ClusterEnterMaintenanceMode(soap, &soap_tmp___vw1__ClusterEnterMaintenanceMode, "-vw1:ClusterEnterMaintenanceMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ClusterEnterMaintenanceModeResponse)
		return soap_closesock(soap);
	vw1__ClusterEnterMaintenanceModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ClusterEnterMaintenanceModeResponse->soap_get(soap, "vw1:ClusterEnterMaintenanceModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureComputeResource_USCORETask(const char *endpoint, const char *soap_action, vw1__ReconfigureComputeResourceRequestType *vw1__ReconfigureComputeResource_USCORETask, _vw1__ReconfigureComputeResource_USCORETaskResponse *vw1__ReconfigureComputeResource_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureComputeResource_USCORETask soap_tmp___vw1__ReconfigureComputeResource_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureComputeResource_USCORETask.vw1__ReconfigureComputeResource_USCORETask = vw1__ReconfigureComputeResource_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___vw1__ReconfigureComputeResource_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___vw1__ReconfigureComputeResource_USCORETask, "-vw1:ReconfigureComputeResource_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureComputeResource_USCORETask(soap, &soap_tmp___vw1__ReconfigureComputeResource_USCORETask, "-vw1:ReconfigureComputeResource_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureComputeResource_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ReconfigureComputeResource_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureComputeResource_USCORETaskResponse->soap_get(soap, "vw1:ReconfigureComputeResource_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddCustomFieldDef(const char *endpoint, const char *soap_action, vw1__AddCustomFieldDefRequestType *vw1__AddCustomFieldDef, _vw1__AddCustomFieldDefResponse *vw1__AddCustomFieldDefResponse)
{	struct soap *soap = this;
	struct __vw1__AddCustomFieldDef soap_tmp___vw1__AddCustomFieldDef;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddCustomFieldDef.vw1__AddCustomFieldDef = vw1__AddCustomFieldDef;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddCustomFieldDef(soap, &soap_tmp___vw1__AddCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddCustomFieldDef(soap, &soap_tmp___vw1__AddCustomFieldDef, "-vw1:AddCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddCustomFieldDef(soap, &soap_tmp___vw1__AddCustomFieldDef, "-vw1:AddCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddCustomFieldDefResponse)
		return soap_closesock(soap);
	vw1__AddCustomFieldDefResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddCustomFieldDefResponse->soap_get(soap, "vw1:AddCustomFieldDefResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveCustomFieldDef(const char *endpoint, const char *soap_action, vw1__RemoveCustomFieldDefRequestType *vw1__RemoveCustomFieldDef, _vw1__RemoveCustomFieldDefResponse *vw1__RemoveCustomFieldDefResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveCustomFieldDef soap_tmp___vw1__RemoveCustomFieldDef;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveCustomFieldDef.vw1__RemoveCustomFieldDef = vw1__RemoveCustomFieldDef;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveCustomFieldDef(soap, &soap_tmp___vw1__RemoveCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveCustomFieldDef(soap, &soap_tmp___vw1__RemoveCustomFieldDef, "-vw1:RemoveCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveCustomFieldDef(soap, &soap_tmp___vw1__RemoveCustomFieldDef, "-vw1:RemoveCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveCustomFieldDefResponse)
		return soap_closesock(soap);
	vw1__RemoveCustomFieldDefResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveCustomFieldDefResponse->soap_get(soap, "vw1:RemoveCustomFieldDefResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RenameCustomFieldDef(const char *endpoint, const char *soap_action, vw1__RenameCustomFieldDefRequestType *vw1__RenameCustomFieldDef, _vw1__RenameCustomFieldDefResponse *vw1__RenameCustomFieldDefResponse)
{	struct soap *soap = this;
	struct __vw1__RenameCustomFieldDef soap_tmp___vw1__RenameCustomFieldDef;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RenameCustomFieldDef.vw1__RenameCustomFieldDef = vw1__RenameCustomFieldDef;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RenameCustomFieldDef(soap, &soap_tmp___vw1__RenameCustomFieldDef);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RenameCustomFieldDef(soap, &soap_tmp___vw1__RenameCustomFieldDef, "-vw1:RenameCustomFieldDef", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RenameCustomFieldDef(soap, &soap_tmp___vw1__RenameCustomFieldDef, "-vw1:RenameCustomFieldDef", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RenameCustomFieldDefResponse)
		return soap_closesock(soap);
	vw1__RenameCustomFieldDefResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RenameCustomFieldDefResponse->soap_get(soap, "vw1:RenameCustomFieldDefResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetField(const char *endpoint, const char *soap_action, vw1__SetFieldRequestType *vw1__SetField, _vw1__SetFieldResponse *vw1__SetFieldResponse)
{	struct soap *soap = this;
	struct __vw1__SetField soap_tmp___vw1__SetField;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetField.vw1__SetField = vw1__SetField;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetField(soap, &soap_tmp___vw1__SetField);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetField(soap, &soap_tmp___vw1__SetField, "-vw1:SetField", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetField(soap, &soap_tmp___vw1__SetField, "-vw1:SetField", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetFieldResponse)
		return soap_closesock(soap);
	vw1__SetFieldResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetFieldResponse->soap_get(soap, "vw1:SetFieldResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DoesCustomizationSpecExist(const char *endpoint, const char *soap_action, vw1__DoesCustomizationSpecExistRequestType *vw1__DoesCustomizationSpecExist, _vw1__DoesCustomizationSpecExistResponse *vw1__DoesCustomizationSpecExistResponse)
{	struct soap *soap = this;
	struct __vw1__DoesCustomizationSpecExist soap_tmp___vw1__DoesCustomizationSpecExist;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DoesCustomizationSpecExist.vw1__DoesCustomizationSpecExist = vw1__DoesCustomizationSpecExist;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DoesCustomizationSpecExist(soap, &soap_tmp___vw1__DoesCustomizationSpecExist);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DoesCustomizationSpecExist(soap, &soap_tmp___vw1__DoesCustomizationSpecExist, "-vw1:DoesCustomizationSpecExist", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DoesCustomizationSpecExist(soap, &soap_tmp___vw1__DoesCustomizationSpecExist, "-vw1:DoesCustomizationSpecExist", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DoesCustomizationSpecExistResponse)
		return soap_closesock(soap);
	vw1__DoesCustomizationSpecExistResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DoesCustomizationSpecExistResponse->soap_get(soap, "vw1:DoesCustomizationSpecExistResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetCustomizationSpec(const char *endpoint, const char *soap_action, vw1__GetCustomizationSpecRequestType *vw1__GetCustomizationSpec, _vw1__GetCustomizationSpecResponse *vw1__GetCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __vw1__GetCustomizationSpec soap_tmp___vw1__GetCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__GetCustomizationSpec.vw1__GetCustomizationSpec = vw1__GetCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__GetCustomizationSpec(soap, &soap_tmp___vw1__GetCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__GetCustomizationSpec(soap, &soap_tmp___vw1__GetCustomizationSpec, "-vw1:GetCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__GetCustomizationSpec(soap, &soap_tmp___vw1__GetCustomizationSpec, "-vw1:GetCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__GetCustomizationSpecResponse)
		return soap_closesock(soap);
	vw1__GetCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__GetCustomizationSpecResponse->soap_get(soap, "vw1:GetCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateCustomizationSpec(const char *endpoint, const char *soap_action, vw1__CreateCustomizationSpecRequestType *vw1__CreateCustomizationSpec, _vw1__CreateCustomizationSpecResponse *vw1__CreateCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __vw1__CreateCustomizationSpec soap_tmp___vw1__CreateCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateCustomizationSpec.vw1__CreateCustomizationSpec = vw1__CreateCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateCustomizationSpec(soap, &soap_tmp___vw1__CreateCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateCustomizationSpec(soap, &soap_tmp___vw1__CreateCustomizationSpec, "-vw1:CreateCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateCustomizationSpec(soap, &soap_tmp___vw1__CreateCustomizationSpec, "-vw1:CreateCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateCustomizationSpecResponse)
		return soap_closesock(soap);
	vw1__CreateCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateCustomizationSpecResponse->soap_get(soap, "vw1:CreateCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::OverwriteCustomizationSpec(const char *endpoint, const char *soap_action, vw1__OverwriteCustomizationSpecRequestType *vw1__OverwriteCustomizationSpec, _vw1__OverwriteCustomizationSpecResponse *vw1__OverwriteCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __vw1__OverwriteCustomizationSpec soap_tmp___vw1__OverwriteCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__OverwriteCustomizationSpec.vw1__OverwriteCustomizationSpec = vw1__OverwriteCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__OverwriteCustomizationSpec(soap, &soap_tmp___vw1__OverwriteCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__OverwriteCustomizationSpec(soap, &soap_tmp___vw1__OverwriteCustomizationSpec, "-vw1:OverwriteCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__OverwriteCustomizationSpec(soap, &soap_tmp___vw1__OverwriteCustomizationSpec, "-vw1:OverwriteCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__OverwriteCustomizationSpecResponse)
		return soap_closesock(soap);
	vw1__OverwriteCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__OverwriteCustomizationSpecResponse->soap_get(soap, "vw1:OverwriteCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteCustomizationSpec(const char *endpoint, const char *soap_action, vw1__DeleteCustomizationSpecRequestType *vw1__DeleteCustomizationSpec, _vw1__DeleteCustomizationSpecResponse *vw1__DeleteCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __vw1__DeleteCustomizationSpec soap_tmp___vw1__DeleteCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DeleteCustomizationSpec.vw1__DeleteCustomizationSpec = vw1__DeleteCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DeleteCustomizationSpec(soap, &soap_tmp___vw1__DeleteCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DeleteCustomizationSpec(soap, &soap_tmp___vw1__DeleteCustomizationSpec, "-vw1:DeleteCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DeleteCustomizationSpec(soap, &soap_tmp___vw1__DeleteCustomizationSpec, "-vw1:DeleteCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DeleteCustomizationSpecResponse)
		return soap_closesock(soap);
	vw1__DeleteCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DeleteCustomizationSpecResponse->soap_get(soap, "vw1:DeleteCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DuplicateCustomizationSpec(const char *endpoint, const char *soap_action, vw1__DuplicateCustomizationSpecRequestType *vw1__DuplicateCustomizationSpec, _vw1__DuplicateCustomizationSpecResponse *vw1__DuplicateCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __vw1__DuplicateCustomizationSpec soap_tmp___vw1__DuplicateCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DuplicateCustomizationSpec.vw1__DuplicateCustomizationSpec = vw1__DuplicateCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DuplicateCustomizationSpec(soap, &soap_tmp___vw1__DuplicateCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DuplicateCustomizationSpec(soap, &soap_tmp___vw1__DuplicateCustomizationSpec, "-vw1:DuplicateCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DuplicateCustomizationSpec(soap, &soap_tmp___vw1__DuplicateCustomizationSpec, "-vw1:DuplicateCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DuplicateCustomizationSpecResponse)
		return soap_closesock(soap);
	vw1__DuplicateCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DuplicateCustomizationSpecResponse->soap_get(soap, "vw1:DuplicateCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RenameCustomizationSpec(const char *endpoint, const char *soap_action, vw1__RenameCustomizationSpecRequestType *vw1__RenameCustomizationSpec, _vw1__RenameCustomizationSpecResponse *vw1__RenameCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __vw1__RenameCustomizationSpec soap_tmp___vw1__RenameCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RenameCustomizationSpec.vw1__RenameCustomizationSpec = vw1__RenameCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RenameCustomizationSpec(soap, &soap_tmp___vw1__RenameCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RenameCustomizationSpec(soap, &soap_tmp___vw1__RenameCustomizationSpec, "-vw1:RenameCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RenameCustomizationSpec(soap, &soap_tmp___vw1__RenameCustomizationSpec, "-vw1:RenameCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RenameCustomizationSpecResponse)
		return soap_closesock(soap);
	vw1__RenameCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RenameCustomizationSpecResponse->soap_get(soap, "vw1:RenameCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CustomizationSpecItemToXml(const char *endpoint, const char *soap_action, vw1__CustomizationSpecItemToXmlRequestType *vw1__CustomizationSpecItemToXml, _vw1__CustomizationSpecItemToXmlResponse *vw1__CustomizationSpecItemToXmlResponse)
{	struct soap *soap = this;
	struct __vw1__CustomizationSpecItemToXml soap_tmp___vw1__CustomizationSpecItemToXml;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CustomizationSpecItemToXml.vw1__CustomizationSpecItemToXml = vw1__CustomizationSpecItemToXml;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CustomizationSpecItemToXml(soap, &soap_tmp___vw1__CustomizationSpecItemToXml);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CustomizationSpecItemToXml(soap, &soap_tmp___vw1__CustomizationSpecItemToXml, "-vw1:CustomizationSpecItemToXml", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CustomizationSpecItemToXml(soap, &soap_tmp___vw1__CustomizationSpecItemToXml, "-vw1:CustomizationSpecItemToXml", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CustomizationSpecItemToXmlResponse)
		return soap_closesock(soap);
	vw1__CustomizationSpecItemToXmlResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CustomizationSpecItemToXmlResponse->soap_get(soap, "vw1:CustomizationSpecItemToXmlResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::XmlToCustomizationSpecItem(const char *endpoint, const char *soap_action, vw1__XmlToCustomizationSpecItemRequestType *vw1__XmlToCustomizationSpecItem, _vw1__XmlToCustomizationSpecItemResponse *vw1__XmlToCustomizationSpecItemResponse)
{	struct soap *soap = this;
	struct __vw1__XmlToCustomizationSpecItem soap_tmp___vw1__XmlToCustomizationSpecItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__XmlToCustomizationSpecItem.vw1__XmlToCustomizationSpecItem = vw1__XmlToCustomizationSpecItem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__XmlToCustomizationSpecItem(soap, &soap_tmp___vw1__XmlToCustomizationSpecItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__XmlToCustomizationSpecItem(soap, &soap_tmp___vw1__XmlToCustomizationSpecItem, "-vw1:XmlToCustomizationSpecItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__XmlToCustomizationSpecItem(soap, &soap_tmp___vw1__XmlToCustomizationSpecItem, "-vw1:XmlToCustomizationSpecItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__XmlToCustomizationSpecItemResponse)
		return soap_closesock(soap);
	vw1__XmlToCustomizationSpecItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__XmlToCustomizationSpecItemResponse->soap_get(soap, "vw1:XmlToCustomizationSpecItemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckCustomizationResources(const char *endpoint, const char *soap_action, vw1__CheckCustomizationResourcesRequestType *vw1__CheckCustomizationResources, _vw1__CheckCustomizationResourcesResponse *vw1__CheckCustomizationResourcesResponse)
{	struct soap *soap = this;
	struct __vw1__CheckCustomizationResources soap_tmp___vw1__CheckCustomizationResources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckCustomizationResources.vw1__CheckCustomizationResources = vw1__CheckCustomizationResources;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckCustomizationResources(soap, &soap_tmp___vw1__CheckCustomizationResources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckCustomizationResources(soap, &soap_tmp___vw1__CheckCustomizationResources, "-vw1:CheckCustomizationResources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckCustomizationResources(soap, &soap_tmp___vw1__CheckCustomizationResources, "-vw1:CheckCustomizationResources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckCustomizationResourcesResponse)
		return soap_closesock(soap);
	vw1__CheckCustomizationResourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckCustomizationResourcesResponse->soap_get(soap, "vw1:CheckCustomizationResourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConnectionInfo(const char *endpoint, const char *soap_action, vw1__QueryConnectionInfoRequestType *vw1__QueryConnectionInfo, _vw1__QueryConnectionInfoResponse *vw1__QueryConnectionInfoResponse)
{	struct soap *soap = this;
	struct __vw1__QueryConnectionInfo soap_tmp___vw1__QueryConnectionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryConnectionInfo.vw1__QueryConnectionInfo = vw1__QueryConnectionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryConnectionInfo(soap, &soap_tmp___vw1__QueryConnectionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryConnectionInfo(soap, &soap_tmp___vw1__QueryConnectionInfo, "-vw1:QueryConnectionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryConnectionInfo(soap, &soap_tmp___vw1__QueryConnectionInfo, "-vw1:QueryConnectionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryConnectionInfoResponse)
		return soap_closesock(soap);
	vw1__QueryConnectionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryConnectionInfoResponse->soap_get(soap, "vw1:QueryConnectionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOnMultiVM_USCORETask(const char *endpoint, const char *soap_action, vw1__PowerOnMultiVMRequestType *vw1__PowerOnMultiVM_USCORETask, _vw1__PowerOnMultiVM_USCORETaskResponse *vw1__PowerOnMultiVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PowerOnMultiVM_USCORETask soap_tmp___vw1__PowerOnMultiVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PowerOnMultiVM_USCORETask.vw1__PowerOnMultiVM_USCORETask = vw1__PowerOnMultiVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PowerOnMultiVM_USCORETask(soap, &soap_tmp___vw1__PowerOnMultiVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PowerOnMultiVM_USCORETask(soap, &soap_tmp___vw1__PowerOnMultiVM_USCORETask, "-vw1:PowerOnMultiVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PowerOnMultiVM_USCORETask(soap, &soap_tmp___vw1__PowerOnMultiVM_USCORETask, "-vw1:PowerOnMultiVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PowerOnMultiVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PowerOnMultiVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PowerOnMultiVM_USCORETaskResponse->soap_get(soap, "vw1:PowerOnMultiVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshDatastore(const char *endpoint, const char *soap_action, vw1__RefreshDatastoreRequestType *vw1__RefreshDatastore, _vw1__RefreshDatastoreResponse *vw1__RefreshDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshDatastore soap_tmp___vw1__RefreshDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshDatastore.vw1__RefreshDatastore = vw1__RefreshDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshDatastore(soap, &soap_tmp___vw1__RefreshDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshDatastore(soap, &soap_tmp___vw1__RefreshDatastore, "-vw1:RefreshDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshDatastore(soap, &soap_tmp___vw1__RefreshDatastore, "-vw1:RefreshDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshDatastoreResponse)
		return soap_closesock(soap);
	vw1__RefreshDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshDatastoreResponse->soap_get(soap, "vw1:RefreshDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshDatastoreStorageInfo(const char *endpoint, const char *soap_action, vw1__RefreshDatastoreStorageInfoRequestType *vw1__RefreshDatastoreStorageInfo, _vw1__RefreshDatastoreStorageInfoResponse *vw1__RefreshDatastoreStorageInfoResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshDatastoreStorageInfo soap_tmp___vw1__RefreshDatastoreStorageInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshDatastoreStorageInfo.vw1__RefreshDatastoreStorageInfo = vw1__RefreshDatastoreStorageInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshDatastoreStorageInfo(soap, &soap_tmp___vw1__RefreshDatastoreStorageInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshDatastoreStorageInfo(soap, &soap_tmp___vw1__RefreshDatastoreStorageInfo, "-vw1:RefreshDatastoreStorageInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshDatastoreStorageInfo(soap, &soap_tmp___vw1__RefreshDatastoreStorageInfo, "-vw1:RefreshDatastoreStorageInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshDatastoreStorageInfoResponse)
		return soap_closesock(soap);
	vw1__RefreshDatastoreStorageInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshDatastoreStorageInfoResponse->soap_get(soap, "vw1:RefreshDatastoreStorageInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVirtualMachineFiles_USCORETask(const char *endpoint, const char *soap_action, vw1__UpdateVirtualMachineFilesRequestType *vw1__UpdateVirtualMachineFiles_USCORETask, _vw1__UpdateVirtualMachineFiles_USCORETaskResponse *vw1__UpdateVirtualMachineFiles_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateVirtualMachineFiles_USCORETask soap_tmp___vw1__UpdateVirtualMachineFiles_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateVirtualMachineFiles_USCORETask.vw1__UpdateVirtualMachineFiles_USCORETask = vw1__UpdateVirtualMachineFiles_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___vw1__UpdateVirtualMachineFiles_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___vw1__UpdateVirtualMachineFiles_USCORETask, "-vw1:UpdateVirtualMachineFiles_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateVirtualMachineFiles_USCORETask(soap, &soap_tmp___vw1__UpdateVirtualMachineFiles_USCORETask, "-vw1:UpdateVirtualMachineFiles_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateVirtualMachineFiles_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__UpdateVirtualMachineFiles_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateVirtualMachineFiles_USCORETaskResponse->soap_get(soap, "vw1:UpdateVirtualMachineFiles_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RenameDatastore(const char *endpoint, const char *soap_action, vw1__RenameDatastoreRequestType *vw1__RenameDatastore, _vw1__RenameDatastoreResponse *vw1__RenameDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__RenameDatastore soap_tmp___vw1__RenameDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RenameDatastore.vw1__RenameDatastore = vw1__RenameDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RenameDatastore(soap, &soap_tmp___vw1__RenameDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RenameDatastore(soap, &soap_tmp___vw1__RenameDatastore, "-vw1:RenameDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RenameDatastore(soap, &soap_tmp___vw1__RenameDatastore, "-vw1:RenameDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RenameDatastoreResponse)
		return soap_closesock(soap);
	vw1__RenameDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RenameDatastoreResponse->soap_get(soap, "vw1:RenameDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyDatastore(const char *endpoint, const char *soap_action, vw1__DestroyDatastoreRequestType *vw1__DestroyDatastore, _vw1__DestroyDatastoreResponse *vw1__DestroyDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyDatastore soap_tmp___vw1__DestroyDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyDatastore.vw1__DestroyDatastore = vw1__DestroyDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyDatastore(soap, &soap_tmp___vw1__DestroyDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyDatastore(soap, &soap_tmp___vw1__DestroyDatastore, "-vw1:DestroyDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyDatastore(soap, &soap_tmp___vw1__DestroyDatastore, "-vw1:DestroyDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyDatastoreResponse)
		return soap_closesock(soap);
	vw1__DestroyDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyDatastoreResponse->soap_get(soap, "vw1:DestroyDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DatastoreEnterMaintenanceMode(const char *endpoint, const char *soap_action, vw1__DatastoreEnterMaintenanceModeRequestType *vw1__DatastoreEnterMaintenanceMode, _vw1__DatastoreEnterMaintenanceModeResponse *vw1__DatastoreEnterMaintenanceModeResponse)
{	struct soap *soap = this;
	struct __vw1__DatastoreEnterMaintenanceMode soap_tmp___vw1__DatastoreEnterMaintenanceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DatastoreEnterMaintenanceMode.vw1__DatastoreEnterMaintenanceMode = vw1__DatastoreEnterMaintenanceMode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DatastoreEnterMaintenanceMode(soap, &soap_tmp___vw1__DatastoreEnterMaintenanceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DatastoreEnterMaintenanceMode(soap, &soap_tmp___vw1__DatastoreEnterMaintenanceMode, "-vw1:DatastoreEnterMaintenanceMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DatastoreEnterMaintenanceMode(soap, &soap_tmp___vw1__DatastoreEnterMaintenanceMode, "-vw1:DatastoreEnterMaintenanceMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DatastoreEnterMaintenanceModeResponse)
		return soap_closesock(soap);
	vw1__DatastoreEnterMaintenanceModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DatastoreEnterMaintenanceModeResponse->soap_get(soap, "vw1:DatastoreEnterMaintenanceModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DatastoreExitMaintenanceMode_USCORETask(const char *endpoint, const char *soap_action, vw1__DatastoreExitMaintenanceModeRequestType *vw1__DatastoreExitMaintenanceMode_USCORETask, _vw1__DatastoreExitMaintenanceMode_USCORETaskResponse *vw1__DatastoreExitMaintenanceMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__DatastoreExitMaintenanceMode_USCORETask soap_tmp___vw1__DatastoreExitMaintenanceMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DatastoreExitMaintenanceMode_USCORETask.vw1__DatastoreExitMaintenanceMode_USCORETask = vw1__DatastoreExitMaintenanceMode_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__DatastoreExitMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__DatastoreExitMaintenanceMode_USCORETask, "-vw1:DatastoreExitMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DatastoreExitMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__DatastoreExitMaintenanceMode_USCORETask, "-vw1:DatastoreExitMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DatastoreExitMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__DatastoreExitMaintenanceMode_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DatastoreExitMaintenanceMode_USCORETaskResponse->soap_get(soap, "vw1:DatastoreExitMaintenanceMode_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDescriptions(const char *endpoint, const char *soap_action, vw1__QueryDescriptionsRequestType *vw1__QueryDescriptions, _vw1__QueryDescriptionsResponse *vw1__QueryDescriptionsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryDescriptions soap_tmp___vw1__QueryDescriptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryDescriptions.vw1__QueryDescriptions = vw1__QueryDescriptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryDescriptions(soap, &soap_tmp___vw1__QueryDescriptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryDescriptions(soap, &soap_tmp___vw1__QueryDescriptions, "-vw1:QueryDescriptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryDescriptions(soap, &soap_tmp___vw1__QueryDescriptions, "-vw1:QueryDescriptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryDescriptionsResponse)
		return soap_closesock(soap);
	vw1__QueryDescriptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryDescriptionsResponse->soap_get(soap, "vw1:QueryDescriptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::BrowseDiagnosticLog(const char *endpoint, const char *soap_action, vw1__BrowseDiagnosticLogRequestType *vw1__BrowseDiagnosticLog, _vw1__BrowseDiagnosticLogResponse *vw1__BrowseDiagnosticLogResponse)
{	struct soap *soap = this;
	struct __vw1__BrowseDiagnosticLog soap_tmp___vw1__BrowseDiagnosticLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__BrowseDiagnosticLog.vw1__BrowseDiagnosticLog = vw1__BrowseDiagnosticLog;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__BrowseDiagnosticLog(soap, &soap_tmp___vw1__BrowseDiagnosticLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__BrowseDiagnosticLog(soap, &soap_tmp___vw1__BrowseDiagnosticLog, "-vw1:BrowseDiagnosticLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__BrowseDiagnosticLog(soap, &soap_tmp___vw1__BrowseDiagnosticLog, "-vw1:BrowseDiagnosticLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__BrowseDiagnosticLogResponse)
		return soap_closesock(soap);
	vw1__BrowseDiagnosticLogResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__BrowseDiagnosticLogResponse->soap_get(soap, "vw1:BrowseDiagnosticLogResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GenerateLogBundles_USCORETask(const char *endpoint, const char *soap_action, vw1__GenerateLogBundlesRequestType *vw1__GenerateLogBundles_USCORETask, _vw1__GenerateLogBundles_USCORETaskResponse *vw1__GenerateLogBundles_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__GenerateLogBundles_USCORETask soap_tmp___vw1__GenerateLogBundles_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__GenerateLogBundles_USCORETask.vw1__GenerateLogBundles_USCORETask = vw1__GenerateLogBundles_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__GenerateLogBundles_USCORETask(soap, &soap_tmp___vw1__GenerateLogBundles_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__GenerateLogBundles_USCORETask(soap, &soap_tmp___vw1__GenerateLogBundles_USCORETask, "-vw1:GenerateLogBundles_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__GenerateLogBundles_USCORETask(soap, &soap_tmp___vw1__GenerateLogBundles_USCORETask, "-vw1:GenerateLogBundles_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__GenerateLogBundles_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__GenerateLogBundles_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__GenerateLogBundles_USCORETaskResponse->soap_get(soap, "vw1:GenerateLogBundles_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FetchDVPortKeys(const char *endpoint, const char *soap_action, vw1__FetchDVPortKeysRequestType *vw1__FetchDVPortKeys, _vw1__FetchDVPortKeysResponse *vw1__FetchDVPortKeysResponse)
{	struct soap *soap = this;
	struct __vw1__FetchDVPortKeys soap_tmp___vw1__FetchDVPortKeys;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FetchDVPortKeys.vw1__FetchDVPortKeys = vw1__FetchDVPortKeys;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FetchDVPortKeys(soap, &soap_tmp___vw1__FetchDVPortKeys);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FetchDVPortKeys(soap, &soap_tmp___vw1__FetchDVPortKeys, "-vw1:FetchDVPortKeys", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FetchDVPortKeys(soap, &soap_tmp___vw1__FetchDVPortKeys, "-vw1:FetchDVPortKeys", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FetchDVPortKeysResponse)
		return soap_closesock(soap);
	vw1__FetchDVPortKeysResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FetchDVPortKeysResponse->soap_get(soap, "vw1:FetchDVPortKeysResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FetchDVPorts(const char *endpoint, const char *soap_action, vw1__FetchDVPortsRequestType *vw1__FetchDVPorts, _vw1__FetchDVPortsResponse *vw1__FetchDVPortsResponse)
{	struct soap *soap = this;
	struct __vw1__FetchDVPorts soap_tmp___vw1__FetchDVPorts;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FetchDVPorts.vw1__FetchDVPorts = vw1__FetchDVPorts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FetchDVPorts(soap, &soap_tmp___vw1__FetchDVPorts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FetchDVPorts(soap, &soap_tmp___vw1__FetchDVPorts, "-vw1:FetchDVPorts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FetchDVPorts(soap, &soap_tmp___vw1__FetchDVPorts, "-vw1:FetchDVPorts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FetchDVPortsResponse)
		return soap_closesock(soap);
	vw1__FetchDVPortsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FetchDVPortsResponse->soap_get(soap, "vw1:FetchDVPortsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryUsedVlanIdInDvs(const char *endpoint, const char *soap_action, vw1__QueryUsedVlanIdInDvsRequestType *vw1__QueryUsedVlanIdInDvs, _vw1__QueryUsedVlanIdInDvsResponse *vw1__QueryUsedVlanIdInDvsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryUsedVlanIdInDvs soap_tmp___vw1__QueryUsedVlanIdInDvs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryUsedVlanIdInDvs.vw1__QueryUsedVlanIdInDvs = vw1__QueryUsedVlanIdInDvs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryUsedVlanIdInDvs(soap, &soap_tmp___vw1__QueryUsedVlanIdInDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryUsedVlanIdInDvs(soap, &soap_tmp___vw1__QueryUsedVlanIdInDvs, "-vw1:QueryUsedVlanIdInDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryUsedVlanIdInDvs(soap, &soap_tmp___vw1__QueryUsedVlanIdInDvs, "-vw1:QueryUsedVlanIdInDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryUsedVlanIdInDvsResponse)
		return soap_closesock(soap);
	vw1__QueryUsedVlanIdInDvsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryUsedVlanIdInDvsResponse->soap_get(soap, "vw1:QueryUsedVlanIdInDvsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureDvs_USCORETask(const char *endpoint, const char *soap_action, vw1__ReconfigureDvsRequestType *vw1__ReconfigureDvs_USCORETask, _vw1__ReconfigureDvs_USCORETaskResponse *vw1__ReconfigureDvs_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureDvs_USCORETask soap_tmp___vw1__ReconfigureDvs_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureDvs_USCORETask.vw1__ReconfigureDvs_USCORETask = vw1__ReconfigureDvs_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureDvs_USCORETask(soap, &soap_tmp___vw1__ReconfigureDvs_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureDvs_USCORETask(soap, &soap_tmp___vw1__ReconfigureDvs_USCORETask, "-vw1:ReconfigureDvs_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureDvs_USCORETask(soap, &soap_tmp___vw1__ReconfigureDvs_USCORETask, "-vw1:ReconfigureDvs_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureDvs_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ReconfigureDvs_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureDvs_USCORETaskResponse->soap_get(soap, "vw1:ReconfigureDvs_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PerformDvsProductSpecOperation_USCORETask(const char *endpoint, const char *soap_action, vw1__PerformDvsProductSpecOperationRequestType *vw1__PerformDvsProductSpecOperation_USCORETask, _vw1__PerformDvsProductSpecOperation_USCORETaskResponse *vw1__PerformDvsProductSpecOperation_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PerformDvsProductSpecOperation_USCORETask soap_tmp___vw1__PerformDvsProductSpecOperation_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PerformDvsProductSpecOperation_USCORETask.vw1__PerformDvsProductSpecOperation_USCORETask = vw1__PerformDvsProductSpecOperation_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___vw1__PerformDvsProductSpecOperation_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___vw1__PerformDvsProductSpecOperation_USCORETask, "-vw1:PerformDvsProductSpecOperation_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PerformDvsProductSpecOperation_USCORETask(soap, &soap_tmp___vw1__PerformDvsProductSpecOperation_USCORETask, "-vw1:PerformDvsProductSpecOperation_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PerformDvsProductSpecOperation_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PerformDvsProductSpecOperation_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PerformDvsProductSpecOperation_USCORETaskResponse->soap_get(soap, "vw1:PerformDvsProductSpecOperation_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MergeDvs_USCORETask(const char *endpoint, const char *soap_action, vw1__MergeDvsRequestType *vw1__MergeDvs_USCORETask, _vw1__MergeDvs_USCORETaskResponse *vw1__MergeDvs_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MergeDvs_USCORETask soap_tmp___vw1__MergeDvs_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MergeDvs_USCORETask.vw1__MergeDvs_USCORETask = vw1__MergeDvs_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MergeDvs_USCORETask(soap, &soap_tmp___vw1__MergeDvs_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MergeDvs_USCORETask(soap, &soap_tmp___vw1__MergeDvs_USCORETask, "-vw1:MergeDvs_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MergeDvs_USCORETask(soap, &soap_tmp___vw1__MergeDvs_USCORETask, "-vw1:MergeDvs_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MergeDvs_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MergeDvs_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MergeDvs_USCORETaskResponse->soap_get(soap, "vw1:MergeDvs_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddDVPortgroup_USCORETask(const char *endpoint, const char *soap_action, vw1__AddDVPortgroupRequestType *vw1__AddDVPortgroup_USCORETask, _vw1__AddDVPortgroup_USCORETaskResponse *vw1__AddDVPortgroup_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__AddDVPortgroup_USCORETask soap_tmp___vw1__AddDVPortgroup_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddDVPortgroup_USCORETask.vw1__AddDVPortgroup_USCORETask = vw1__AddDVPortgroup_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddDVPortgroup_USCORETask(soap, &soap_tmp___vw1__AddDVPortgroup_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddDVPortgroup_USCORETask(soap, &soap_tmp___vw1__AddDVPortgroup_USCORETask, "-vw1:AddDVPortgroup_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddDVPortgroup_USCORETask(soap, &soap_tmp___vw1__AddDVPortgroup_USCORETask, "-vw1:AddDVPortgroup_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddDVPortgroup_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__AddDVPortgroup_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddDVPortgroup_USCORETaskResponse->soap_get(soap, "vw1:AddDVPortgroup_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveDVPort_USCORETask(const char *endpoint, const char *soap_action, vw1__MoveDVPortRequestType *vw1__MoveDVPort_USCORETask, _vw1__MoveDVPort_USCORETaskResponse *vw1__MoveDVPort_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MoveDVPort_USCORETask soap_tmp___vw1__MoveDVPort_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveDVPort_USCORETask.vw1__MoveDVPort_USCORETask = vw1__MoveDVPort_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveDVPort_USCORETask(soap, &soap_tmp___vw1__MoveDVPort_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveDVPort_USCORETask(soap, &soap_tmp___vw1__MoveDVPort_USCORETask, "-vw1:MoveDVPort_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveDVPort_USCORETask(soap, &soap_tmp___vw1__MoveDVPort_USCORETask, "-vw1:MoveDVPort_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveDVPort_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MoveDVPort_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveDVPort_USCORETaskResponse->soap_get(soap, "vw1:MoveDVPort_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDvsCapability(const char *endpoint, const char *soap_action, vw1__UpdateDvsCapabilityRequestType *vw1__UpdateDvsCapability, _vw1__UpdateDvsCapabilityResponse *vw1__UpdateDvsCapabilityResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateDvsCapability soap_tmp___vw1__UpdateDvsCapability;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateDvsCapability.vw1__UpdateDvsCapability = vw1__UpdateDvsCapability;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateDvsCapability(soap, &soap_tmp___vw1__UpdateDvsCapability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateDvsCapability(soap, &soap_tmp___vw1__UpdateDvsCapability, "-vw1:UpdateDvsCapability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateDvsCapability(soap, &soap_tmp___vw1__UpdateDvsCapability, "-vw1:UpdateDvsCapability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateDvsCapabilityResponse)
		return soap_closesock(soap);
	vw1__UpdateDvsCapabilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateDvsCapabilityResponse->soap_get(soap, "vw1:UpdateDvsCapabilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureDVPort_USCORETask(const char *endpoint, const char *soap_action, vw1__ReconfigureDVPortRequestType *vw1__ReconfigureDVPort_USCORETask, _vw1__ReconfigureDVPort_USCORETaskResponse *vw1__ReconfigureDVPort_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureDVPort_USCORETask soap_tmp___vw1__ReconfigureDVPort_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureDVPort_USCORETask.vw1__ReconfigureDVPort_USCORETask = vw1__ReconfigureDVPort_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureDVPort_USCORETask(soap, &soap_tmp___vw1__ReconfigureDVPort_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureDVPort_USCORETask(soap, &soap_tmp___vw1__ReconfigureDVPort_USCORETask, "-vw1:ReconfigureDVPort_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureDVPort_USCORETask(soap, &soap_tmp___vw1__ReconfigureDVPort_USCORETask, "-vw1:ReconfigureDVPort_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureDVPort_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ReconfigureDVPort_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureDVPort_USCORETaskResponse->soap_get(soap, "vw1:ReconfigureDVPort_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshDVPortState(const char *endpoint, const char *soap_action, vw1__RefreshDVPortStateRequestType *vw1__RefreshDVPortState, _vw1__RefreshDVPortStateResponse *vw1__RefreshDVPortStateResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshDVPortState soap_tmp___vw1__RefreshDVPortState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshDVPortState.vw1__RefreshDVPortState = vw1__RefreshDVPortState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshDVPortState(soap, &soap_tmp___vw1__RefreshDVPortState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshDVPortState(soap, &soap_tmp___vw1__RefreshDVPortState, "-vw1:RefreshDVPortState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshDVPortState(soap, &soap_tmp___vw1__RefreshDVPortState, "-vw1:RefreshDVPortState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshDVPortStateResponse)
		return soap_closesock(soap);
	vw1__RefreshDVPortStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshDVPortStateResponse->soap_get(soap, "vw1:RefreshDVPortStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RectifyDvsHost_USCORETask(const char *endpoint, const char *soap_action, vw1__RectifyDvsHostRequestType *vw1__RectifyDvsHost_USCORETask, _vw1__RectifyDvsHost_USCORETaskResponse *vw1__RectifyDvsHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RectifyDvsHost_USCORETask soap_tmp___vw1__RectifyDvsHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RectifyDvsHost_USCORETask.vw1__RectifyDvsHost_USCORETask = vw1__RectifyDvsHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RectifyDvsHost_USCORETask(soap, &soap_tmp___vw1__RectifyDvsHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RectifyDvsHost_USCORETask(soap, &soap_tmp___vw1__RectifyDvsHost_USCORETask, "-vw1:RectifyDvsHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RectifyDvsHost_USCORETask(soap, &soap_tmp___vw1__RectifyDvsHost_USCORETask, "-vw1:RectifyDvsHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RectifyDvsHost_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RectifyDvsHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RectifyDvsHost_USCORETaskResponse->soap_get(soap, "vw1:RectifyDvsHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateNetworkResourcePool(const char *endpoint, const char *soap_action, vw1__UpdateNetworkResourcePoolRequestType *vw1__UpdateNetworkResourcePool, _vw1__UpdateNetworkResourcePoolResponse *vw1__UpdateNetworkResourcePoolResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateNetworkResourcePool soap_tmp___vw1__UpdateNetworkResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateNetworkResourcePool.vw1__UpdateNetworkResourcePool = vw1__UpdateNetworkResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateNetworkResourcePool(soap, &soap_tmp___vw1__UpdateNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateNetworkResourcePool(soap, &soap_tmp___vw1__UpdateNetworkResourcePool, "-vw1:UpdateNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateNetworkResourcePool(soap, &soap_tmp___vw1__UpdateNetworkResourcePool, "-vw1:UpdateNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateNetworkResourcePoolResponse)
		return soap_closesock(soap);
	vw1__UpdateNetworkResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateNetworkResourcePoolResponse->soap_get(soap, "vw1:UpdateNetworkResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddNetworkResourcePool(const char *endpoint, const char *soap_action, vw1__AddNetworkResourcePoolRequestType *vw1__AddNetworkResourcePool, _vw1__AddNetworkResourcePoolResponse *vw1__AddNetworkResourcePoolResponse)
{	struct soap *soap = this;
	struct __vw1__AddNetworkResourcePool soap_tmp___vw1__AddNetworkResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddNetworkResourcePool.vw1__AddNetworkResourcePool = vw1__AddNetworkResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddNetworkResourcePool(soap, &soap_tmp___vw1__AddNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddNetworkResourcePool(soap, &soap_tmp___vw1__AddNetworkResourcePool, "-vw1:AddNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddNetworkResourcePool(soap, &soap_tmp___vw1__AddNetworkResourcePool, "-vw1:AddNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddNetworkResourcePoolResponse)
		return soap_closesock(soap);
	vw1__AddNetworkResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddNetworkResourcePoolResponse->soap_get(soap, "vw1:AddNetworkResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveNetworkResourcePool(const char *endpoint, const char *soap_action, vw1__RemoveNetworkResourcePoolRequestType *vw1__RemoveNetworkResourcePool, _vw1__RemoveNetworkResourcePoolResponse *vw1__RemoveNetworkResourcePoolResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveNetworkResourcePool soap_tmp___vw1__RemoveNetworkResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveNetworkResourcePool.vw1__RemoveNetworkResourcePool = vw1__RemoveNetworkResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveNetworkResourcePool(soap, &soap_tmp___vw1__RemoveNetworkResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveNetworkResourcePool(soap, &soap_tmp___vw1__RemoveNetworkResourcePool, "-vw1:RemoveNetworkResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveNetworkResourcePool(soap, &soap_tmp___vw1__RemoveNetworkResourcePool, "-vw1:RemoveNetworkResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveNetworkResourcePoolResponse)
		return soap_closesock(soap);
	vw1__RemoveNetworkResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveNetworkResourcePoolResponse->soap_get(soap, "vw1:RemoveNetworkResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableNetworkResourceManagement(const char *endpoint, const char *soap_action, vw1__EnableNetworkResourceManagementRequestType *vw1__EnableNetworkResourceManagement, _vw1__EnableNetworkResourceManagementResponse *vw1__EnableNetworkResourceManagementResponse)
{	struct soap *soap = this;
	struct __vw1__EnableNetworkResourceManagement soap_tmp___vw1__EnableNetworkResourceManagement;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnableNetworkResourceManagement.vw1__EnableNetworkResourceManagement = vw1__EnableNetworkResourceManagement;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnableNetworkResourceManagement(soap, &soap_tmp___vw1__EnableNetworkResourceManagement);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnableNetworkResourceManagement(soap, &soap_tmp___vw1__EnableNetworkResourceManagement, "-vw1:EnableNetworkResourceManagement", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnableNetworkResourceManagement(soap, &soap_tmp___vw1__EnableNetworkResourceManagement, "-vw1:EnableNetworkResourceManagement", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnableNetworkResourceManagementResponse)
		return soap_closesock(soap);
	vw1__EnableNetworkResourceManagementResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnableNetworkResourceManagementResponse->soap_get(soap, "vw1:EnableNetworkResourceManagementResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfigOptionDescriptor(const char *endpoint, const char *soap_action, vw1__QueryConfigOptionDescriptorRequestType *vw1__QueryConfigOptionDescriptor, _vw1__QueryConfigOptionDescriptorResponse *vw1__QueryConfigOptionDescriptorResponse)
{	struct soap *soap = this;
	struct __vw1__QueryConfigOptionDescriptor soap_tmp___vw1__QueryConfigOptionDescriptor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryConfigOptionDescriptor.vw1__QueryConfigOptionDescriptor = vw1__QueryConfigOptionDescriptor;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryConfigOptionDescriptor(soap, &soap_tmp___vw1__QueryConfigOptionDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryConfigOptionDescriptor(soap, &soap_tmp___vw1__QueryConfigOptionDescriptor, "-vw1:QueryConfigOptionDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryConfigOptionDescriptor(soap, &soap_tmp___vw1__QueryConfigOptionDescriptor, "-vw1:QueryConfigOptionDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryConfigOptionDescriptorResponse)
		return soap_closesock(soap);
	vw1__QueryConfigOptionDescriptorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryConfigOptionDescriptorResponse->soap_get(soap, "vw1:QueryConfigOptionDescriptorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfigOption(const char *endpoint, const char *soap_action, vw1__QueryConfigOptionRequestType *vw1__QueryConfigOption, _vw1__QueryConfigOptionResponse *vw1__QueryConfigOptionResponse)
{	struct soap *soap = this;
	struct __vw1__QueryConfigOption soap_tmp___vw1__QueryConfigOption;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryConfigOption.vw1__QueryConfigOption = vw1__QueryConfigOption;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryConfigOption(soap, &soap_tmp___vw1__QueryConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryConfigOption(soap, &soap_tmp___vw1__QueryConfigOption, "-vw1:QueryConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryConfigOption(soap, &soap_tmp___vw1__QueryConfigOption, "-vw1:QueryConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryConfigOptionResponse)
		return soap_closesock(soap);
	vw1__QueryConfigOptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryConfigOptionResponse->soap_get(soap, "vw1:QueryConfigOptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfigTarget(const char *endpoint, const char *soap_action, vw1__QueryConfigTargetRequestType *vw1__QueryConfigTarget, _vw1__QueryConfigTargetResponse *vw1__QueryConfigTargetResponse)
{	struct soap *soap = this;
	struct __vw1__QueryConfigTarget soap_tmp___vw1__QueryConfigTarget;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryConfigTarget.vw1__QueryConfigTarget = vw1__QueryConfigTarget;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryConfigTarget(soap, &soap_tmp___vw1__QueryConfigTarget);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryConfigTarget(soap, &soap_tmp___vw1__QueryConfigTarget, "-vw1:QueryConfigTarget", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryConfigTarget(soap, &soap_tmp___vw1__QueryConfigTarget, "-vw1:QueryConfigTarget", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryConfigTargetResponse)
		return soap_closesock(soap);
	vw1__QueryConfigTargetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryConfigTargetResponse->soap_get(soap, "vw1:QueryConfigTargetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryTargetCapabilities(const char *endpoint, const char *soap_action, vw1__QueryTargetCapabilitiesRequestType *vw1__QueryTargetCapabilities, _vw1__QueryTargetCapabilitiesResponse *vw1__QueryTargetCapabilitiesResponse)
{	struct soap *soap = this;
	struct __vw1__QueryTargetCapabilities soap_tmp___vw1__QueryTargetCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryTargetCapabilities.vw1__QueryTargetCapabilities = vw1__QueryTargetCapabilities;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryTargetCapabilities(soap, &soap_tmp___vw1__QueryTargetCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryTargetCapabilities(soap, &soap_tmp___vw1__QueryTargetCapabilities, "-vw1:QueryTargetCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryTargetCapabilities(soap, &soap_tmp___vw1__QueryTargetCapabilities, "-vw1:QueryTargetCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryTargetCapabilitiesResponse)
		return soap_closesock(soap);
	vw1__QueryTargetCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryTargetCapabilitiesResponse->soap_get(soap, "vw1:QueryTargetCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::setCustomValue(const char *endpoint, const char *soap_action, vw1__setCustomValueRequestType *vw1__setCustomValue, _vw1__setCustomValueResponse *vw1__setCustomValueResponse)
{	struct soap *soap = this;
	struct __vw1__setCustomValue soap_tmp___vw1__setCustomValue;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__setCustomValue.vw1__setCustomValue = vw1__setCustomValue;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__setCustomValue(soap, &soap_tmp___vw1__setCustomValue);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__setCustomValue(soap, &soap_tmp___vw1__setCustomValue, "-vw1:setCustomValue", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__setCustomValue(soap, &soap_tmp___vw1__setCustomValue, "-vw1:setCustomValue", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__setCustomValueResponse)
		return soap_closesock(soap);
	vw1__setCustomValueResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__setCustomValueResponse->soap_get(soap, "vw1:setCustomValueResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnregisterExtension(const char *endpoint, const char *soap_action, vw1__UnregisterExtensionRequestType *vw1__UnregisterExtension, _vw1__UnregisterExtensionResponse *vw1__UnregisterExtensionResponse)
{	struct soap *soap = this;
	struct __vw1__UnregisterExtension soap_tmp___vw1__UnregisterExtension;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UnregisterExtension.vw1__UnregisterExtension = vw1__UnregisterExtension;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UnregisterExtension(soap, &soap_tmp___vw1__UnregisterExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UnregisterExtension(soap, &soap_tmp___vw1__UnregisterExtension, "-vw1:UnregisterExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UnregisterExtension(soap, &soap_tmp___vw1__UnregisterExtension, "-vw1:UnregisterExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UnregisterExtensionResponse)
		return soap_closesock(soap);
	vw1__UnregisterExtensionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UnregisterExtensionResponse->soap_get(soap, "vw1:UnregisterExtensionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindExtension(const char *endpoint, const char *soap_action, vw1__FindExtensionRequestType *vw1__FindExtension, _vw1__FindExtensionResponse *vw1__FindExtensionResponse)
{	struct soap *soap = this;
	struct __vw1__FindExtension soap_tmp___vw1__FindExtension;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindExtension.vw1__FindExtension = vw1__FindExtension;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindExtension(soap, &soap_tmp___vw1__FindExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindExtension(soap, &soap_tmp___vw1__FindExtension, "-vw1:FindExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindExtension(soap, &soap_tmp___vw1__FindExtension, "-vw1:FindExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindExtensionResponse)
		return soap_closesock(soap);
	vw1__FindExtensionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindExtensionResponse->soap_get(soap, "vw1:FindExtensionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RegisterExtension(const char *endpoint, const char *soap_action, vw1__RegisterExtensionRequestType *vw1__RegisterExtension, _vw1__RegisterExtensionResponse *vw1__RegisterExtensionResponse)
{	struct soap *soap = this;
	struct __vw1__RegisterExtension soap_tmp___vw1__RegisterExtension;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RegisterExtension.vw1__RegisterExtension = vw1__RegisterExtension;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RegisterExtension(soap, &soap_tmp___vw1__RegisterExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RegisterExtension(soap, &soap_tmp___vw1__RegisterExtension, "-vw1:RegisterExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RegisterExtension(soap, &soap_tmp___vw1__RegisterExtension, "-vw1:RegisterExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RegisterExtensionResponse)
		return soap_closesock(soap);
	vw1__RegisterExtensionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RegisterExtensionResponse->soap_get(soap, "vw1:RegisterExtensionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateExtension(const char *endpoint, const char *soap_action, vw1__UpdateExtensionRequestType *vw1__UpdateExtension, _vw1__UpdateExtensionResponse *vw1__UpdateExtensionResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateExtension soap_tmp___vw1__UpdateExtension;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateExtension.vw1__UpdateExtension = vw1__UpdateExtension;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateExtension(soap, &soap_tmp___vw1__UpdateExtension);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateExtension(soap, &soap_tmp___vw1__UpdateExtension, "-vw1:UpdateExtension", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateExtension(soap, &soap_tmp___vw1__UpdateExtension, "-vw1:UpdateExtension", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateExtensionResponse)
		return soap_closesock(soap);
	vw1__UpdateExtensionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateExtensionResponse->soap_get(soap, "vw1:UpdateExtensionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetPublicKey(const char *endpoint, const char *soap_action, vw1__GetPublicKeyRequestType *vw1__GetPublicKey, _vw1__GetPublicKeyResponse *vw1__GetPublicKeyResponse)
{	struct soap *soap = this;
	struct __vw1__GetPublicKey soap_tmp___vw1__GetPublicKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__GetPublicKey.vw1__GetPublicKey = vw1__GetPublicKey;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__GetPublicKey(soap, &soap_tmp___vw1__GetPublicKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__GetPublicKey(soap, &soap_tmp___vw1__GetPublicKey, "-vw1:GetPublicKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__GetPublicKey(soap, &soap_tmp___vw1__GetPublicKey, "-vw1:GetPublicKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__GetPublicKeyResponse)
		return soap_closesock(soap);
	vw1__GetPublicKeyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__GetPublicKeyResponse->soap_get(soap, "vw1:GetPublicKeyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetPublicKey(const char *endpoint, const char *soap_action, vw1__SetPublicKeyRequestType *vw1__SetPublicKey, _vw1__SetPublicKeyResponse *vw1__SetPublicKeyResponse)
{	struct soap *soap = this;
	struct __vw1__SetPublicKey soap_tmp___vw1__SetPublicKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetPublicKey.vw1__SetPublicKey = vw1__SetPublicKey;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetPublicKey(soap, &soap_tmp___vw1__SetPublicKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetPublicKey(soap, &soap_tmp___vw1__SetPublicKey, "-vw1:SetPublicKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetPublicKey(soap, &soap_tmp___vw1__SetPublicKey, "-vw1:SetPublicKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetPublicKeyResponse)
		return soap_closesock(soap);
	vw1__SetPublicKeyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetPublicKeyResponse->soap_get(soap, "vw1:SetPublicKeyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetExtensionCertificate(const char *endpoint, const char *soap_action, vw1__SetExtensionCertificateRequestType *vw1__SetExtensionCertificate, _vw1__SetExtensionCertificateResponse *vw1__SetExtensionCertificateResponse)
{	struct soap *soap = this;
	struct __vw1__SetExtensionCertificate soap_tmp___vw1__SetExtensionCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetExtensionCertificate.vw1__SetExtensionCertificate = vw1__SetExtensionCertificate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetExtensionCertificate(soap, &soap_tmp___vw1__SetExtensionCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetExtensionCertificate(soap, &soap_tmp___vw1__SetExtensionCertificate, "-vw1:SetExtensionCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetExtensionCertificate(soap, &soap_tmp___vw1__SetExtensionCertificate, "-vw1:SetExtensionCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetExtensionCertificateResponse)
		return soap_closesock(soap);
	vw1__SetExtensionCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetExtensionCertificateResponse->soap_get(soap, "vw1:SetExtensionCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryManagedBy(const char *endpoint, const char *soap_action, vw1__QueryManagedByRequestType *vw1__QueryManagedBy, _vw1__QueryManagedByResponse *vw1__QueryManagedByResponse)
{	struct soap *soap = this;
	struct __vw1__QueryManagedBy soap_tmp___vw1__QueryManagedBy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryManagedBy.vw1__QueryManagedBy = vw1__QueryManagedBy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryManagedBy(soap, &soap_tmp___vw1__QueryManagedBy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryManagedBy(soap, &soap_tmp___vw1__QueryManagedBy, "-vw1:QueryManagedBy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryManagedBy(soap, &soap_tmp___vw1__QueryManagedBy, "-vw1:QueryManagedBy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryManagedByResponse)
		return soap_closesock(soap);
	vw1__QueryManagedByResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryManagedByResponse->soap_get(soap, "vw1:QueryManagedByResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveDatastoreFile_USCORETask(const char *endpoint, const char *soap_action, vw1__MoveDatastoreFileRequestType *vw1__MoveDatastoreFile_USCORETask, _vw1__MoveDatastoreFile_USCORETaskResponse *vw1__MoveDatastoreFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MoveDatastoreFile_USCORETask soap_tmp___vw1__MoveDatastoreFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveDatastoreFile_USCORETask.vw1__MoveDatastoreFile_USCORETask = vw1__MoveDatastoreFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveDatastoreFile_USCORETask(soap, &soap_tmp___vw1__MoveDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveDatastoreFile_USCORETask(soap, &soap_tmp___vw1__MoveDatastoreFile_USCORETask, "-vw1:MoveDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveDatastoreFile_USCORETask(soap, &soap_tmp___vw1__MoveDatastoreFile_USCORETask, "-vw1:MoveDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MoveDatastoreFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveDatastoreFile_USCORETaskResponse->soap_get(soap, "vw1:MoveDatastoreFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CopyDatastoreFile_USCORETask(const char *endpoint, const char *soap_action, vw1__CopyDatastoreFileRequestType *vw1__CopyDatastoreFile_USCORETask, _vw1__CopyDatastoreFile_USCORETaskResponse *vw1__CopyDatastoreFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CopyDatastoreFile_USCORETask soap_tmp___vw1__CopyDatastoreFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CopyDatastoreFile_USCORETask.vw1__CopyDatastoreFile_USCORETask = vw1__CopyDatastoreFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CopyDatastoreFile_USCORETask(soap, &soap_tmp___vw1__CopyDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CopyDatastoreFile_USCORETask(soap, &soap_tmp___vw1__CopyDatastoreFile_USCORETask, "-vw1:CopyDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CopyDatastoreFile_USCORETask(soap, &soap_tmp___vw1__CopyDatastoreFile_USCORETask, "-vw1:CopyDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CopyDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CopyDatastoreFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CopyDatastoreFile_USCORETaskResponse->soap_get(soap, "vw1:CopyDatastoreFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteDatastoreFile_USCORETask(const char *endpoint, const char *soap_action, vw1__DeleteDatastoreFileRequestType *vw1__DeleteDatastoreFile_USCORETask, _vw1__DeleteDatastoreFile_USCORETaskResponse *vw1__DeleteDatastoreFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__DeleteDatastoreFile_USCORETask soap_tmp___vw1__DeleteDatastoreFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DeleteDatastoreFile_USCORETask.vw1__DeleteDatastoreFile_USCORETask = vw1__DeleteDatastoreFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___vw1__DeleteDatastoreFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___vw1__DeleteDatastoreFile_USCORETask, "-vw1:DeleteDatastoreFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DeleteDatastoreFile_USCORETask(soap, &soap_tmp___vw1__DeleteDatastoreFile_USCORETask, "-vw1:DeleteDatastoreFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DeleteDatastoreFile_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__DeleteDatastoreFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DeleteDatastoreFile_USCORETaskResponse->soap_get(soap, "vw1:DeleteDatastoreFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MakeDirectory(const char *endpoint, const char *soap_action, vw1__MakeDirectoryRequestType *vw1__MakeDirectory, _vw1__MakeDirectoryResponse *vw1__MakeDirectoryResponse)
{	struct soap *soap = this;
	struct __vw1__MakeDirectory soap_tmp___vw1__MakeDirectory;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MakeDirectory.vw1__MakeDirectory = vw1__MakeDirectory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MakeDirectory(soap, &soap_tmp___vw1__MakeDirectory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MakeDirectory(soap, &soap_tmp___vw1__MakeDirectory, "-vw1:MakeDirectory", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MakeDirectory(soap, &soap_tmp___vw1__MakeDirectory, "-vw1:MakeDirectory", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MakeDirectoryResponse)
		return soap_closesock(soap);
	vw1__MakeDirectoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MakeDirectoryResponse->soap_get(soap, "vw1:MakeDirectoryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ChangeOwner(const char *endpoint, const char *soap_action, vw1__ChangeOwnerRequestType *vw1__ChangeOwner, _vw1__ChangeOwnerResponse *vw1__ChangeOwnerResponse)
{	struct soap *soap = this;
	struct __vw1__ChangeOwner soap_tmp___vw1__ChangeOwner;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ChangeOwner.vw1__ChangeOwner = vw1__ChangeOwner;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ChangeOwner(soap, &soap_tmp___vw1__ChangeOwner);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ChangeOwner(soap, &soap_tmp___vw1__ChangeOwner, "-vw1:ChangeOwner", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ChangeOwner(soap, &soap_tmp___vw1__ChangeOwner, "-vw1:ChangeOwner", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ChangeOwnerResponse)
		return soap_closesock(soap);
	vw1__ChangeOwnerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ChangeOwnerResponse->soap_get(soap, "vw1:ChangeOwnerResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateFolder(const char *endpoint, const char *soap_action, vw1__CreateFolderRequestType *vw1__CreateFolder, _vw1__CreateFolderResponse *vw1__CreateFolderResponse)
{	struct soap *soap = this;
	struct __vw1__CreateFolder soap_tmp___vw1__CreateFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateFolder.vw1__CreateFolder = vw1__CreateFolder;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateFolder(soap, &soap_tmp___vw1__CreateFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateFolder(soap, &soap_tmp___vw1__CreateFolder, "-vw1:CreateFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateFolder(soap, &soap_tmp___vw1__CreateFolder, "-vw1:CreateFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateFolderResponse)
		return soap_closesock(soap);
	vw1__CreateFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateFolderResponse->soap_get(soap, "vw1:CreateFolderResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveIntoFolder_USCORETask(const char *endpoint, const char *soap_action, vw1__MoveIntoFolderRequestType *vw1__MoveIntoFolder_USCORETask, _vw1__MoveIntoFolder_USCORETaskResponse *vw1__MoveIntoFolder_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MoveIntoFolder_USCORETask soap_tmp___vw1__MoveIntoFolder_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveIntoFolder_USCORETask.vw1__MoveIntoFolder_USCORETask = vw1__MoveIntoFolder_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveIntoFolder_USCORETask(soap, &soap_tmp___vw1__MoveIntoFolder_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveIntoFolder_USCORETask(soap, &soap_tmp___vw1__MoveIntoFolder_USCORETask, "-vw1:MoveIntoFolder_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveIntoFolder_USCORETask(soap, &soap_tmp___vw1__MoveIntoFolder_USCORETask, "-vw1:MoveIntoFolder_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveIntoFolder_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MoveIntoFolder_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveIntoFolder_USCORETaskResponse->soap_get(soap, "vw1:MoveIntoFolder_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVM_USCORETask(const char *endpoint, const char *soap_action, vw1__CreateVMRequestType *vw1__CreateVM_USCORETask, _vw1__CreateVM_USCORETaskResponse *vw1__CreateVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateVM_USCORETask soap_tmp___vw1__CreateVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateVM_USCORETask.vw1__CreateVM_USCORETask = vw1__CreateVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateVM_USCORETask(soap, &soap_tmp___vw1__CreateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateVM_USCORETask(soap, &soap_tmp___vw1__CreateVM_USCORETask, "-vw1:CreateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateVM_USCORETask(soap, &soap_tmp___vw1__CreateVM_USCORETask, "-vw1:CreateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CreateVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateVM_USCORETaskResponse->soap_get(soap, "vw1:CreateVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RegisterVM_USCORETask(const char *endpoint, const char *soap_action, vw1__RegisterVMRequestType *vw1__RegisterVM_USCORETask, _vw1__RegisterVM_USCORETaskResponse *vw1__RegisterVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RegisterVM_USCORETask soap_tmp___vw1__RegisterVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RegisterVM_USCORETask.vw1__RegisterVM_USCORETask = vw1__RegisterVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RegisterVM_USCORETask(soap, &soap_tmp___vw1__RegisterVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RegisterVM_USCORETask(soap, &soap_tmp___vw1__RegisterVM_USCORETask, "-vw1:RegisterVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RegisterVM_USCORETask(soap, &soap_tmp___vw1__RegisterVM_USCORETask, "-vw1:RegisterVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RegisterVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RegisterVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RegisterVM_USCORETaskResponse->soap_get(soap, "vw1:RegisterVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateCluster(const char *endpoint, const char *soap_action, vw1__CreateClusterRequestType *vw1__CreateCluster, _vw1__CreateClusterResponse *vw1__CreateClusterResponse)
{	struct soap *soap = this;
	struct __vw1__CreateCluster soap_tmp___vw1__CreateCluster;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateCluster.vw1__CreateCluster = vw1__CreateCluster;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateCluster(soap, &soap_tmp___vw1__CreateCluster);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateCluster(soap, &soap_tmp___vw1__CreateCluster, "-vw1:CreateCluster", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateCluster(soap, &soap_tmp___vw1__CreateCluster, "-vw1:CreateCluster", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateClusterResponse)
		return soap_closesock(soap);
	vw1__CreateClusterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateClusterResponse->soap_get(soap, "vw1:CreateClusterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateClusterEx(const char *endpoint, const char *soap_action, vw1__CreateClusterExRequestType *vw1__CreateClusterEx, _vw1__CreateClusterExResponse *vw1__CreateClusterExResponse)
{	struct soap *soap = this;
	struct __vw1__CreateClusterEx soap_tmp___vw1__CreateClusterEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateClusterEx.vw1__CreateClusterEx = vw1__CreateClusterEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateClusterEx(soap, &soap_tmp___vw1__CreateClusterEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateClusterEx(soap, &soap_tmp___vw1__CreateClusterEx, "-vw1:CreateClusterEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateClusterEx(soap, &soap_tmp___vw1__CreateClusterEx, "-vw1:CreateClusterEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateClusterExResponse)
		return soap_closesock(soap);
	vw1__CreateClusterExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateClusterExResponse->soap_get(soap, "vw1:CreateClusterExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddStandaloneHost_USCORETask(const char *endpoint, const char *soap_action, vw1__AddStandaloneHostRequestType *vw1__AddStandaloneHost_USCORETask, _vw1__AddStandaloneHost_USCORETaskResponse *vw1__AddStandaloneHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__AddStandaloneHost_USCORETask soap_tmp___vw1__AddStandaloneHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddStandaloneHost_USCORETask.vw1__AddStandaloneHost_USCORETask = vw1__AddStandaloneHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddStandaloneHost_USCORETask(soap, &soap_tmp___vw1__AddStandaloneHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddStandaloneHost_USCORETask(soap, &soap_tmp___vw1__AddStandaloneHost_USCORETask, "-vw1:AddStandaloneHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddStandaloneHost_USCORETask(soap, &soap_tmp___vw1__AddStandaloneHost_USCORETask, "-vw1:AddStandaloneHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddStandaloneHost_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__AddStandaloneHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddStandaloneHost_USCORETaskResponse->soap_get(soap, "vw1:AddStandaloneHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDatacenter(const char *endpoint, const char *soap_action, vw1__CreateDatacenterRequestType *vw1__CreateDatacenter, _vw1__CreateDatacenterResponse *vw1__CreateDatacenterResponse)
{	struct soap *soap = this;
	struct __vw1__CreateDatacenter soap_tmp___vw1__CreateDatacenter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateDatacenter.vw1__CreateDatacenter = vw1__CreateDatacenter;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateDatacenter(soap, &soap_tmp___vw1__CreateDatacenter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateDatacenter(soap, &soap_tmp___vw1__CreateDatacenter, "-vw1:CreateDatacenter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateDatacenter(soap, &soap_tmp___vw1__CreateDatacenter, "-vw1:CreateDatacenter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateDatacenterResponse)
		return soap_closesock(soap);
	vw1__CreateDatacenterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateDatacenterResponse->soap_get(soap, "vw1:CreateDatacenterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnregisterAndDestroy_USCORETask(const char *endpoint, const char *soap_action, vw1__UnregisterAndDestroyRequestType *vw1__UnregisterAndDestroy_USCORETask, _vw1__UnregisterAndDestroy_USCORETaskResponse *vw1__UnregisterAndDestroy_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__UnregisterAndDestroy_USCORETask soap_tmp___vw1__UnregisterAndDestroy_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UnregisterAndDestroy_USCORETask.vw1__UnregisterAndDestroy_USCORETask = vw1__UnregisterAndDestroy_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___vw1__UnregisterAndDestroy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___vw1__UnregisterAndDestroy_USCORETask, "-vw1:UnregisterAndDestroy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UnregisterAndDestroy_USCORETask(soap, &soap_tmp___vw1__UnregisterAndDestroy_USCORETask, "-vw1:UnregisterAndDestroy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UnregisterAndDestroy_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__UnregisterAndDestroy_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UnregisterAndDestroy_USCORETaskResponse->soap_get(soap, "vw1:UnregisterAndDestroy_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDVS_USCORETask(const char *endpoint, const char *soap_action, vw1__CreateDVSRequestType *vw1__CreateDVS_USCORETask, _vw1__CreateDVS_USCORETaskResponse *vw1__CreateDVS_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateDVS_USCORETask soap_tmp___vw1__CreateDVS_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateDVS_USCORETask.vw1__CreateDVS_USCORETask = vw1__CreateDVS_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateDVS_USCORETask(soap, &soap_tmp___vw1__CreateDVS_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateDVS_USCORETask(soap, &soap_tmp___vw1__CreateDVS_USCORETask, "-vw1:CreateDVS_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateDVS_USCORETask(soap, &soap_tmp___vw1__CreateDVS_USCORETask, "-vw1:CreateDVS_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateDVS_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CreateDVS_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateDVS_USCORETaskResponse->soap_get(soap, "vw1:CreateDVS_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateStoragePod(const char *endpoint, const char *soap_action, vw1__CreateStoragePodRequestType *vw1__CreateStoragePod, _vw1__CreateStoragePodResponse *vw1__CreateStoragePodResponse)
{	struct soap *soap = this;
	struct __vw1__CreateStoragePod soap_tmp___vw1__CreateStoragePod;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateStoragePod.vw1__CreateStoragePod = vw1__CreateStoragePod;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateStoragePod(soap, &soap_tmp___vw1__CreateStoragePod);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateStoragePod(soap, &soap_tmp___vw1__CreateStoragePod, "-vw1:CreateStoragePod", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateStoragePod(soap, &soap_tmp___vw1__CreateStoragePod, "-vw1:CreateStoragePod", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateStoragePodResponse)
		return soap_closesock(soap);
	vw1__CreateStoragePodResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateStoragePodResponse->soap_get(soap, "vw1:CreateStoragePodResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetCollectorPageSize(const char *endpoint, const char *soap_action, vw1__SetCollectorPageSizeRequestType *vw1__SetCollectorPageSize, _vw1__SetCollectorPageSizeResponse *vw1__SetCollectorPageSizeResponse)
{	struct soap *soap = this;
	struct __vw1__SetCollectorPageSize soap_tmp___vw1__SetCollectorPageSize;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetCollectorPageSize.vw1__SetCollectorPageSize = vw1__SetCollectorPageSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetCollectorPageSize(soap, &soap_tmp___vw1__SetCollectorPageSize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetCollectorPageSize(soap, &soap_tmp___vw1__SetCollectorPageSize, "-vw1:SetCollectorPageSize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetCollectorPageSize(soap, &soap_tmp___vw1__SetCollectorPageSize, "-vw1:SetCollectorPageSize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetCollectorPageSizeResponse)
		return soap_closesock(soap);
	vw1__SetCollectorPageSizeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetCollectorPageSizeResponse->soap_get(soap, "vw1:SetCollectorPageSizeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RewindCollector(const char *endpoint, const char *soap_action, vw1__RewindCollectorRequestType *vw1__RewindCollector, _vw1__RewindCollectorResponse *vw1__RewindCollectorResponse)
{	struct soap *soap = this;
	struct __vw1__RewindCollector soap_tmp___vw1__RewindCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RewindCollector.vw1__RewindCollector = vw1__RewindCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RewindCollector(soap, &soap_tmp___vw1__RewindCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RewindCollector(soap, &soap_tmp___vw1__RewindCollector, "-vw1:RewindCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RewindCollector(soap, &soap_tmp___vw1__RewindCollector, "-vw1:RewindCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RewindCollectorResponse)
		return soap_closesock(soap);
	vw1__RewindCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RewindCollectorResponse->soap_get(soap, "vw1:RewindCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetCollector(const char *endpoint, const char *soap_action, vw1__ResetCollectorRequestType *vw1__ResetCollector, _vw1__ResetCollectorResponse *vw1__ResetCollectorResponse)
{	struct soap *soap = this;
	struct __vw1__ResetCollector soap_tmp___vw1__ResetCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetCollector.vw1__ResetCollector = vw1__ResetCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetCollector(soap, &soap_tmp___vw1__ResetCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetCollector(soap, &soap_tmp___vw1__ResetCollector, "-vw1:ResetCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetCollector(soap, &soap_tmp___vw1__ResetCollector, "-vw1:ResetCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetCollectorResponse)
		return soap_closesock(soap);
	vw1__ResetCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetCollectorResponse->soap_get(soap, "vw1:ResetCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyCollector(const char *endpoint, const char *soap_action, vw1__DestroyCollectorRequestType *vw1__DestroyCollector, _vw1__DestroyCollectorResponse *vw1__DestroyCollectorResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyCollector soap_tmp___vw1__DestroyCollector;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyCollector.vw1__DestroyCollector = vw1__DestroyCollector;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyCollector(soap, &soap_tmp___vw1__DestroyCollector);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyCollector(soap, &soap_tmp___vw1__DestroyCollector, "-vw1:DestroyCollector", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyCollector(soap, &soap_tmp___vw1__DestroyCollector, "-vw1:DestroyCollector", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyCollectorResponse)
		return soap_closesock(soap);
	vw1__DestroyCollectorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyCollectorResponse->soap_get(soap, "vw1:DestroyCollectorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryHostConnectionInfo(const char *endpoint, const char *soap_action, vw1__QueryHostConnectionInfoRequestType *vw1__QueryHostConnectionInfo, _vw1__QueryHostConnectionInfoResponse *vw1__QueryHostConnectionInfoResponse)
{	struct soap *soap = this;
	struct __vw1__QueryHostConnectionInfo soap_tmp___vw1__QueryHostConnectionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryHostConnectionInfo.vw1__QueryHostConnectionInfo = vw1__QueryHostConnectionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryHostConnectionInfo(soap, &soap_tmp___vw1__QueryHostConnectionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryHostConnectionInfo(soap, &soap_tmp___vw1__QueryHostConnectionInfo, "-vw1:QueryHostConnectionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryHostConnectionInfo(soap, &soap_tmp___vw1__QueryHostConnectionInfo, "-vw1:QueryHostConnectionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryHostConnectionInfoResponse)
		return soap_closesock(soap);
	vw1__QueryHostConnectionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryHostConnectionInfoResponse->soap_get(soap, "vw1:QueryHostConnectionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateSystemResources(const char *endpoint, const char *soap_action, vw1__UpdateSystemResourcesRequestType *vw1__UpdateSystemResources, _vw1__UpdateSystemResourcesResponse *vw1__UpdateSystemResourcesResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateSystemResources soap_tmp___vw1__UpdateSystemResources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateSystemResources.vw1__UpdateSystemResources = vw1__UpdateSystemResources;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateSystemResources(soap, &soap_tmp___vw1__UpdateSystemResources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateSystemResources(soap, &soap_tmp___vw1__UpdateSystemResources, "-vw1:UpdateSystemResources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateSystemResources(soap, &soap_tmp___vw1__UpdateSystemResources, "-vw1:UpdateSystemResources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateSystemResourcesResponse)
		return soap_closesock(soap);
	vw1__UpdateSystemResourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateSystemResourcesResponse->soap_get(soap, "vw1:UpdateSystemResourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconnectHost_USCORETask(const char *endpoint, const char *soap_action, vw1__ReconnectHostRequestType *vw1__ReconnectHost_USCORETask, _vw1__ReconnectHost_USCORETaskResponse *vw1__ReconnectHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconnectHost_USCORETask soap_tmp___vw1__ReconnectHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconnectHost_USCORETask.vw1__ReconnectHost_USCORETask = vw1__ReconnectHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconnectHost_USCORETask(soap, &soap_tmp___vw1__ReconnectHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconnectHost_USCORETask(soap, &soap_tmp___vw1__ReconnectHost_USCORETask, "-vw1:ReconnectHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconnectHost_USCORETask(soap, &soap_tmp___vw1__ReconnectHost_USCORETask, "-vw1:ReconnectHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconnectHost_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ReconnectHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconnectHost_USCORETaskResponse->soap_get(soap, "vw1:ReconnectHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisconnectHost_USCORETask(const char *endpoint, const char *soap_action, vw1__DisconnectHostRequestType *vw1__DisconnectHost_USCORETask, _vw1__DisconnectHost_USCORETaskResponse *vw1__DisconnectHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__DisconnectHost_USCORETask soap_tmp___vw1__DisconnectHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DisconnectHost_USCORETask.vw1__DisconnectHost_USCORETask = vw1__DisconnectHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DisconnectHost_USCORETask(soap, &soap_tmp___vw1__DisconnectHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DisconnectHost_USCORETask(soap, &soap_tmp___vw1__DisconnectHost_USCORETask, "-vw1:DisconnectHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DisconnectHost_USCORETask(soap, &soap_tmp___vw1__DisconnectHost_USCORETask, "-vw1:DisconnectHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DisconnectHost_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__DisconnectHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DisconnectHost_USCORETaskResponse->soap_get(soap, "vw1:DisconnectHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnterMaintenanceMode_USCORETask(const char *endpoint, const char *soap_action, vw1__EnterMaintenanceModeRequestType *vw1__EnterMaintenanceMode_USCORETask, _vw1__EnterMaintenanceMode_USCORETaskResponse *vw1__EnterMaintenanceMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__EnterMaintenanceMode_USCORETask soap_tmp___vw1__EnterMaintenanceMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnterMaintenanceMode_USCORETask.vw1__EnterMaintenanceMode_USCORETask = vw1__EnterMaintenanceMode_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__EnterMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__EnterMaintenanceMode_USCORETask, "-vw1:EnterMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnterMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__EnterMaintenanceMode_USCORETask, "-vw1:EnterMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnterMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__EnterMaintenanceMode_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnterMaintenanceMode_USCORETaskResponse->soap_get(soap, "vw1:EnterMaintenanceMode_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExitMaintenanceMode_USCORETask(const char *endpoint, const char *soap_action, vw1__ExitMaintenanceModeRequestType *vw1__ExitMaintenanceMode_USCORETask, _vw1__ExitMaintenanceMode_USCORETaskResponse *vw1__ExitMaintenanceMode_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ExitMaintenanceMode_USCORETask soap_tmp___vw1__ExitMaintenanceMode_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExitMaintenanceMode_USCORETask.vw1__ExitMaintenanceMode_USCORETask = vw1__ExitMaintenanceMode_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__ExitMaintenanceMode_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__ExitMaintenanceMode_USCORETask, "-vw1:ExitMaintenanceMode_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExitMaintenanceMode_USCORETask(soap, &soap_tmp___vw1__ExitMaintenanceMode_USCORETask, "-vw1:ExitMaintenanceMode_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExitMaintenanceMode_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ExitMaintenanceMode_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExitMaintenanceMode_USCORETaskResponse->soap_get(soap, "vw1:ExitMaintenanceMode_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RebootHost_USCORETask(const char *endpoint, const char *soap_action, vw1__RebootHostRequestType *vw1__RebootHost_USCORETask, _vw1__RebootHost_USCORETaskResponse *vw1__RebootHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RebootHost_USCORETask soap_tmp___vw1__RebootHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RebootHost_USCORETask.vw1__RebootHost_USCORETask = vw1__RebootHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RebootHost_USCORETask(soap, &soap_tmp___vw1__RebootHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RebootHost_USCORETask(soap, &soap_tmp___vw1__RebootHost_USCORETask, "-vw1:RebootHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RebootHost_USCORETask(soap, &soap_tmp___vw1__RebootHost_USCORETask, "-vw1:RebootHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RebootHost_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RebootHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RebootHost_USCORETaskResponse->soap_get(soap, "vw1:RebootHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ShutdownHost_USCORETask(const char *endpoint, const char *soap_action, vw1__ShutdownHostRequestType *vw1__ShutdownHost_USCORETask, _vw1__ShutdownHost_USCORETaskResponse *vw1__ShutdownHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ShutdownHost_USCORETask soap_tmp___vw1__ShutdownHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ShutdownHost_USCORETask.vw1__ShutdownHost_USCORETask = vw1__ShutdownHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ShutdownHost_USCORETask(soap, &soap_tmp___vw1__ShutdownHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ShutdownHost_USCORETask(soap, &soap_tmp___vw1__ShutdownHost_USCORETask, "-vw1:ShutdownHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ShutdownHost_USCORETask(soap, &soap_tmp___vw1__ShutdownHost_USCORETask, "-vw1:ShutdownHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ShutdownHost_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ShutdownHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ShutdownHost_USCORETaskResponse->soap_get(soap, "vw1:ShutdownHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerDownHostToStandBy_USCORETask(const char *endpoint, const char *soap_action, vw1__PowerDownHostToStandByRequestType *vw1__PowerDownHostToStandBy_USCORETask, _vw1__PowerDownHostToStandBy_USCORETaskResponse *vw1__PowerDownHostToStandBy_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PowerDownHostToStandBy_USCORETask soap_tmp___vw1__PowerDownHostToStandBy_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PowerDownHostToStandBy_USCORETask.vw1__PowerDownHostToStandBy_USCORETask = vw1__PowerDownHostToStandBy_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___vw1__PowerDownHostToStandBy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___vw1__PowerDownHostToStandBy_USCORETask, "-vw1:PowerDownHostToStandBy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PowerDownHostToStandBy_USCORETask(soap, &soap_tmp___vw1__PowerDownHostToStandBy_USCORETask, "-vw1:PowerDownHostToStandBy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PowerDownHostToStandBy_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PowerDownHostToStandBy_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PowerDownHostToStandBy_USCORETaskResponse->soap_get(soap, "vw1:PowerDownHostToStandBy_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerUpHostFromStandBy_USCORETask(const char *endpoint, const char *soap_action, vw1__PowerUpHostFromStandByRequestType *vw1__PowerUpHostFromStandBy_USCORETask, _vw1__PowerUpHostFromStandBy_USCORETaskResponse *vw1__PowerUpHostFromStandBy_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PowerUpHostFromStandBy_USCORETask soap_tmp___vw1__PowerUpHostFromStandBy_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PowerUpHostFromStandBy_USCORETask.vw1__PowerUpHostFromStandBy_USCORETask = vw1__PowerUpHostFromStandBy_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___vw1__PowerUpHostFromStandBy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___vw1__PowerUpHostFromStandBy_USCORETask, "-vw1:PowerUpHostFromStandBy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PowerUpHostFromStandBy_USCORETask(soap, &soap_tmp___vw1__PowerUpHostFromStandBy_USCORETask, "-vw1:PowerUpHostFromStandBy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PowerUpHostFromStandBy_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PowerUpHostFromStandBy_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PowerUpHostFromStandBy_USCORETaskResponse->soap_get(soap, "vw1:PowerUpHostFromStandBy_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryMemoryOverhead(const char *endpoint, const char *soap_action, vw1__QueryMemoryOverheadRequestType *vw1__QueryMemoryOverhead, _vw1__QueryMemoryOverheadResponse *vw1__QueryMemoryOverheadResponse)
{	struct soap *soap = this;
	struct __vw1__QueryMemoryOverhead soap_tmp___vw1__QueryMemoryOverhead;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryMemoryOverhead.vw1__QueryMemoryOverhead = vw1__QueryMemoryOverhead;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryMemoryOverhead(soap, &soap_tmp___vw1__QueryMemoryOverhead);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryMemoryOverhead(soap, &soap_tmp___vw1__QueryMemoryOverhead, "-vw1:QueryMemoryOverhead", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryMemoryOverhead(soap, &soap_tmp___vw1__QueryMemoryOverhead, "-vw1:QueryMemoryOverhead", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryMemoryOverheadResponse)
		return soap_closesock(soap);
	vw1__QueryMemoryOverheadResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryMemoryOverheadResponse->soap_get(soap, "vw1:QueryMemoryOverheadResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryMemoryOverheadEx(const char *endpoint, const char *soap_action, vw1__QueryMemoryOverheadExRequestType *vw1__QueryMemoryOverheadEx, _vw1__QueryMemoryOverheadExResponse *vw1__QueryMemoryOverheadExResponse)
{	struct soap *soap = this;
	struct __vw1__QueryMemoryOverheadEx soap_tmp___vw1__QueryMemoryOverheadEx;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryMemoryOverheadEx.vw1__QueryMemoryOverheadEx = vw1__QueryMemoryOverheadEx;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryMemoryOverheadEx(soap, &soap_tmp___vw1__QueryMemoryOverheadEx);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryMemoryOverheadEx(soap, &soap_tmp___vw1__QueryMemoryOverheadEx, "-vw1:QueryMemoryOverheadEx", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryMemoryOverheadEx(soap, &soap_tmp___vw1__QueryMemoryOverheadEx, "-vw1:QueryMemoryOverheadEx", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryMemoryOverheadExResponse)
		return soap_closesock(soap);
	vw1__QueryMemoryOverheadExResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryMemoryOverheadExResponse->soap_get(soap, "vw1:QueryMemoryOverheadExResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureHostForDAS_USCORETask(const char *endpoint, const char *soap_action, vw1__ReconfigureHostForDASRequestType *vw1__ReconfigureHostForDAS_USCORETask, _vw1__ReconfigureHostForDAS_USCORETaskResponse *vw1__ReconfigureHostForDAS_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureHostForDAS_USCORETask soap_tmp___vw1__ReconfigureHostForDAS_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureHostForDAS_USCORETask.vw1__ReconfigureHostForDAS_USCORETask = vw1__ReconfigureHostForDAS_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___vw1__ReconfigureHostForDAS_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___vw1__ReconfigureHostForDAS_USCORETask, "-vw1:ReconfigureHostForDAS_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureHostForDAS_USCORETask(soap, &soap_tmp___vw1__ReconfigureHostForDAS_USCORETask, "-vw1:ReconfigureHostForDAS_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureHostForDAS_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ReconfigureHostForDAS_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureHostForDAS_USCORETaskResponse->soap_get(soap, "vw1:ReconfigureHostForDAS_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateFlags(const char *endpoint, const char *soap_action, vw1__UpdateFlagsRequestType *vw1__UpdateFlags, _vw1__UpdateFlagsResponse *vw1__UpdateFlagsResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateFlags soap_tmp___vw1__UpdateFlags;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateFlags.vw1__UpdateFlags = vw1__UpdateFlags;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateFlags(soap, &soap_tmp___vw1__UpdateFlags);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateFlags(soap, &soap_tmp___vw1__UpdateFlags, "-vw1:UpdateFlags", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateFlags(soap, &soap_tmp___vw1__UpdateFlags, "-vw1:UpdateFlags", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateFlagsResponse)
		return soap_closesock(soap);
	vw1__UpdateFlagsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateFlagsResponse->soap_get(soap, "vw1:UpdateFlagsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnterLockdownMode(const char *endpoint, const char *soap_action, vw1__EnterLockdownModeRequestType *vw1__EnterLockdownMode, _vw1__EnterLockdownModeResponse *vw1__EnterLockdownModeResponse)
{	struct soap *soap = this;
	struct __vw1__EnterLockdownMode soap_tmp___vw1__EnterLockdownMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnterLockdownMode.vw1__EnterLockdownMode = vw1__EnterLockdownMode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnterLockdownMode(soap, &soap_tmp___vw1__EnterLockdownMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnterLockdownMode(soap, &soap_tmp___vw1__EnterLockdownMode, "-vw1:EnterLockdownMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnterLockdownMode(soap, &soap_tmp___vw1__EnterLockdownMode, "-vw1:EnterLockdownMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnterLockdownModeResponse)
		return soap_closesock(soap);
	vw1__EnterLockdownModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnterLockdownModeResponse->soap_get(soap, "vw1:EnterLockdownModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExitLockdownMode(const char *endpoint, const char *soap_action, vw1__ExitLockdownModeRequestType *vw1__ExitLockdownMode, _vw1__ExitLockdownModeResponse *vw1__ExitLockdownModeResponse)
{	struct soap *soap = this;
	struct __vw1__ExitLockdownMode soap_tmp___vw1__ExitLockdownMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExitLockdownMode.vw1__ExitLockdownMode = vw1__ExitLockdownMode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExitLockdownMode(soap, &soap_tmp___vw1__ExitLockdownMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExitLockdownMode(soap, &soap_tmp___vw1__ExitLockdownMode, "-vw1:ExitLockdownMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExitLockdownMode(soap, &soap_tmp___vw1__ExitLockdownMode, "-vw1:ExitLockdownMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExitLockdownModeResponse)
		return soap_closesock(soap);
	vw1__ExitLockdownModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExitLockdownModeResponse->soap_get(soap, "vw1:ExitLockdownModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireCimServicesTicket(const char *endpoint, const char *soap_action, vw1__AcquireCimServicesTicketRequestType *vw1__AcquireCimServicesTicket, _vw1__AcquireCimServicesTicketResponse *vw1__AcquireCimServicesTicketResponse)
{	struct soap *soap = this;
	struct __vw1__AcquireCimServicesTicket soap_tmp___vw1__AcquireCimServicesTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AcquireCimServicesTicket.vw1__AcquireCimServicesTicket = vw1__AcquireCimServicesTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AcquireCimServicesTicket(soap, &soap_tmp___vw1__AcquireCimServicesTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AcquireCimServicesTicket(soap, &soap_tmp___vw1__AcquireCimServicesTicket, "-vw1:AcquireCimServicesTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AcquireCimServicesTicket(soap, &soap_tmp___vw1__AcquireCimServicesTicket, "-vw1:AcquireCimServicesTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AcquireCimServicesTicketResponse)
		return soap_closesock(soap);
	vw1__AcquireCimServicesTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AcquireCimServicesTicketResponse->soap_get(soap, "vw1:AcquireCimServicesTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpmi(const char *endpoint, const char *soap_action, vw1__UpdateIpmiRequestType *vw1__UpdateIpmi, _vw1__UpdateIpmiResponse *vw1__UpdateIpmiResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateIpmi soap_tmp___vw1__UpdateIpmi;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateIpmi.vw1__UpdateIpmi = vw1__UpdateIpmi;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateIpmi(soap, &soap_tmp___vw1__UpdateIpmi);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateIpmi(soap, &soap_tmp___vw1__UpdateIpmi, "-vw1:UpdateIpmi", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateIpmi(soap, &soap_tmp___vw1__UpdateIpmi, "-vw1:UpdateIpmi", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateIpmiResponse)
		return soap_closesock(soap);
	vw1__UpdateIpmiResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateIpmiResponse->soap_get(soap, "vw1:UpdateIpmiResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveHardwareUptime(const char *endpoint, const char *soap_action, vw1__RetrieveHardwareUptimeRequestType *vw1__RetrieveHardwareUptime, _vw1__RetrieveHardwareUptimeResponse *vw1__RetrieveHardwareUptimeResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveHardwareUptime soap_tmp___vw1__RetrieveHardwareUptime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveHardwareUptime.vw1__RetrieveHardwareUptime = vw1__RetrieveHardwareUptime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveHardwareUptime(soap, &soap_tmp___vw1__RetrieveHardwareUptime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveHardwareUptime(soap, &soap_tmp___vw1__RetrieveHardwareUptime, "-vw1:RetrieveHardwareUptime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveHardwareUptime(soap, &soap_tmp___vw1__RetrieveHardwareUptime, "-vw1:RetrieveHardwareUptime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveHardwareUptimeResponse)
		return soap_closesock(soap);
	vw1__RetrieveHardwareUptimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveHardwareUptimeResponse->soap_get(soap, "vw1:RetrieveHardwareUptimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HttpNfcLeaseGetManifest(const char *endpoint, const char *soap_action, vw1__HttpNfcLeaseGetManifestRequestType *vw1__HttpNfcLeaseGetManifest, _vw1__HttpNfcLeaseGetManifestResponse *vw1__HttpNfcLeaseGetManifestResponse)
{	struct soap *soap = this;
	struct __vw1__HttpNfcLeaseGetManifest soap_tmp___vw1__HttpNfcLeaseGetManifest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__HttpNfcLeaseGetManifest.vw1__HttpNfcLeaseGetManifest = vw1__HttpNfcLeaseGetManifest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__HttpNfcLeaseGetManifest(soap, &soap_tmp___vw1__HttpNfcLeaseGetManifest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__HttpNfcLeaseGetManifest(soap, &soap_tmp___vw1__HttpNfcLeaseGetManifest, "-vw1:HttpNfcLeaseGetManifest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__HttpNfcLeaseGetManifest(soap, &soap_tmp___vw1__HttpNfcLeaseGetManifest, "-vw1:HttpNfcLeaseGetManifest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__HttpNfcLeaseGetManifestResponse)
		return soap_closesock(soap);
	vw1__HttpNfcLeaseGetManifestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__HttpNfcLeaseGetManifestResponse->soap_get(soap, "vw1:HttpNfcLeaseGetManifestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HttpNfcLeaseComplete(const char *endpoint, const char *soap_action, vw1__HttpNfcLeaseCompleteRequestType *vw1__HttpNfcLeaseComplete, _vw1__HttpNfcLeaseCompleteResponse *vw1__HttpNfcLeaseCompleteResponse)
{	struct soap *soap = this;
	struct __vw1__HttpNfcLeaseComplete soap_tmp___vw1__HttpNfcLeaseComplete;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__HttpNfcLeaseComplete.vw1__HttpNfcLeaseComplete = vw1__HttpNfcLeaseComplete;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__HttpNfcLeaseComplete(soap, &soap_tmp___vw1__HttpNfcLeaseComplete);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__HttpNfcLeaseComplete(soap, &soap_tmp___vw1__HttpNfcLeaseComplete, "-vw1:HttpNfcLeaseComplete", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__HttpNfcLeaseComplete(soap, &soap_tmp___vw1__HttpNfcLeaseComplete, "-vw1:HttpNfcLeaseComplete", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__HttpNfcLeaseCompleteResponse)
		return soap_closesock(soap);
	vw1__HttpNfcLeaseCompleteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__HttpNfcLeaseCompleteResponse->soap_get(soap, "vw1:HttpNfcLeaseCompleteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HttpNfcLeaseAbort(const char *endpoint, const char *soap_action, vw1__HttpNfcLeaseAbortRequestType *vw1__HttpNfcLeaseAbort, _vw1__HttpNfcLeaseAbortResponse *vw1__HttpNfcLeaseAbortResponse)
{	struct soap *soap = this;
	struct __vw1__HttpNfcLeaseAbort soap_tmp___vw1__HttpNfcLeaseAbort;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__HttpNfcLeaseAbort.vw1__HttpNfcLeaseAbort = vw1__HttpNfcLeaseAbort;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__HttpNfcLeaseAbort(soap, &soap_tmp___vw1__HttpNfcLeaseAbort);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__HttpNfcLeaseAbort(soap, &soap_tmp___vw1__HttpNfcLeaseAbort, "-vw1:HttpNfcLeaseAbort", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__HttpNfcLeaseAbort(soap, &soap_tmp___vw1__HttpNfcLeaseAbort, "-vw1:HttpNfcLeaseAbort", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__HttpNfcLeaseAbortResponse)
		return soap_closesock(soap);
	vw1__HttpNfcLeaseAbortResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__HttpNfcLeaseAbortResponse->soap_get(soap, "vw1:HttpNfcLeaseAbortResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HttpNfcLeaseProgress(const char *endpoint, const char *soap_action, vw1__HttpNfcLeaseProgressRequestType *vw1__HttpNfcLeaseProgress, _vw1__HttpNfcLeaseProgressResponse *vw1__HttpNfcLeaseProgressResponse)
{	struct soap *soap = this;
	struct __vw1__HttpNfcLeaseProgress soap_tmp___vw1__HttpNfcLeaseProgress;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__HttpNfcLeaseProgress.vw1__HttpNfcLeaseProgress = vw1__HttpNfcLeaseProgress;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__HttpNfcLeaseProgress(soap, &soap_tmp___vw1__HttpNfcLeaseProgress);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__HttpNfcLeaseProgress(soap, &soap_tmp___vw1__HttpNfcLeaseProgress, "-vw1:HttpNfcLeaseProgress", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__HttpNfcLeaseProgress(soap, &soap_tmp___vw1__HttpNfcLeaseProgress, "-vw1:HttpNfcLeaseProgress", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__HttpNfcLeaseProgressResponse)
		return soap_closesock(soap);
	vw1__HttpNfcLeaseProgressResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__HttpNfcLeaseProgressResponse->soap_get(soap, "vw1:HttpNfcLeaseProgressResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryIpPools(const char *endpoint, const char *soap_action, vw1__QueryIpPoolsRequestType *vw1__QueryIpPools, _vw1__QueryIpPoolsResponse *vw1__QueryIpPoolsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryIpPools soap_tmp___vw1__QueryIpPools;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryIpPools.vw1__QueryIpPools = vw1__QueryIpPools;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryIpPools(soap, &soap_tmp___vw1__QueryIpPools);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryIpPools(soap, &soap_tmp___vw1__QueryIpPools, "-vw1:QueryIpPools", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryIpPools(soap, &soap_tmp___vw1__QueryIpPools, "-vw1:QueryIpPools", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryIpPoolsResponse)
		return soap_closesock(soap);
	vw1__QueryIpPoolsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryIpPoolsResponse->soap_get(soap, "vw1:QueryIpPoolsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateIpPool(const char *endpoint, const char *soap_action, vw1__CreateIpPoolRequestType *vw1__CreateIpPool, _vw1__CreateIpPoolResponse *vw1__CreateIpPoolResponse)
{	struct soap *soap = this;
	struct __vw1__CreateIpPool soap_tmp___vw1__CreateIpPool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateIpPool.vw1__CreateIpPool = vw1__CreateIpPool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateIpPool(soap, &soap_tmp___vw1__CreateIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateIpPool(soap, &soap_tmp___vw1__CreateIpPool, "-vw1:CreateIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateIpPool(soap, &soap_tmp___vw1__CreateIpPool, "-vw1:CreateIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateIpPoolResponse)
		return soap_closesock(soap);
	vw1__CreateIpPoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateIpPoolResponse->soap_get(soap, "vw1:CreateIpPoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpPool(const char *endpoint, const char *soap_action, vw1__UpdateIpPoolRequestType *vw1__UpdateIpPool, _vw1__UpdateIpPoolResponse *vw1__UpdateIpPoolResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateIpPool soap_tmp___vw1__UpdateIpPool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateIpPool.vw1__UpdateIpPool = vw1__UpdateIpPool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateIpPool(soap, &soap_tmp___vw1__UpdateIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateIpPool(soap, &soap_tmp___vw1__UpdateIpPool, "-vw1:UpdateIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateIpPool(soap, &soap_tmp___vw1__UpdateIpPool, "-vw1:UpdateIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateIpPoolResponse)
		return soap_closesock(soap);
	vw1__UpdateIpPoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateIpPoolResponse->soap_get(soap, "vw1:UpdateIpPoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyIpPool(const char *endpoint, const char *soap_action, vw1__DestroyIpPoolRequestType *vw1__DestroyIpPool, _vw1__DestroyIpPoolResponse *vw1__DestroyIpPoolResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyIpPool soap_tmp___vw1__DestroyIpPool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyIpPool.vw1__DestroyIpPool = vw1__DestroyIpPool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyIpPool(soap, &soap_tmp___vw1__DestroyIpPool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyIpPool(soap, &soap_tmp___vw1__DestroyIpPool, "-vw1:DestroyIpPool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyIpPool(soap, &soap_tmp___vw1__DestroyIpPool, "-vw1:DestroyIpPool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyIpPoolResponse)
		return soap_closesock(soap);
	vw1__DestroyIpPoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyIpPoolResponse->soap_get(soap, "vw1:DestroyIpPoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateAssignedLicense(const char *endpoint, const char *soap_action, vw1__UpdateAssignedLicenseRequestType *vw1__UpdateAssignedLicense, _vw1__UpdateAssignedLicenseResponse *vw1__UpdateAssignedLicenseResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateAssignedLicense soap_tmp___vw1__UpdateAssignedLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateAssignedLicense.vw1__UpdateAssignedLicense = vw1__UpdateAssignedLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateAssignedLicense(soap, &soap_tmp___vw1__UpdateAssignedLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateAssignedLicense(soap, &soap_tmp___vw1__UpdateAssignedLicense, "-vw1:UpdateAssignedLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateAssignedLicense(soap, &soap_tmp___vw1__UpdateAssignedLicense, "-vw1:UpdateAssignedLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateAssignedLicenseResponse)
		return soap_closesock(soap);
	vw1__UpdateAssignedLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateAssignedLicenseResponse->soap_get(soap, "vw1:UpdateAssignedLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveAssignedLicense(const char *endpoint, const char *soap_action, vw1__RemoveAssignedLicenseRequestType *vw1__RemoveAssignedLicense, _vw1__RemoveAssignedLicenseResponse *vw1__RemoveAssignedLicenseResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveAssignedLicense soap_tmp___vw1__RemoveAssignedLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveAssignedLicense.vw1__RemoveAssignedLicense = vw1__RemoveAssignedLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveAssignedLicense(soap, &soap_tmp___vw1__RemoveAssignedLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveAssignedLicense(soap, &soap_tmp___vw1__RemoveAssignedLicense, "-vw1:RemoveAssignedLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveAssignedLicense(soap, &soap_tmp___vw1__RemoveAssignedLicense, "-vw1:RemoveAssignedLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveAssignedLicenseResponse)
		return soap_closesock(soap);
	vw1__RemoveAssignedLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveAssignedLicenseResponse->soap_get(soap, "vw1:RemoveAssignedLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAssignedLicenses(const char *endpoint, const char *soap_action, vw1__QueryAssignedLicensesRequestType *vw1__QueryAssignedLicenses, _vw1__QueryAssignedLicensesResponse *vw1__QueryAssignedLicensesResponse)
{	struct soap *soap = this;
	struct __vw1__QueryAssignedLicenses soap_tmp___vw1__QueryAssignedLicenses;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryAssignedLicenses.vw1__QueryAssignedLicenses = vw1__QueryAssignedLicenses;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryAssignedLicenses(soap, &soap_tmp___vw1__QueryAssignedLicenses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryAssignedLicenses(soap, &soap_tmp___vw1__QueryAssignedLicenses, "-vw1:QueryAssignedLicenses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryAssignedLicenses(soap, &soap_tmp___vw1__QueryAssignedLicenses, "-vw1:QueryAssignedLicenses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryAssignedLicensesResponse)
		return soap_closesock(soap);
	vw1__QueryAssignedLicensesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryAssignedLicensesResponse->soap_get(soap, "vw1:QueryAssignedLicensesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QuerySupportedFeatures(const char *endpoint, const char *soap_action, vw1__QuerySupportedFeaturesRequestType *vw1__QuerySupportedFeatures, _vw1__QuerySupportedFeaturesResponse *vw1__QuerySupportedFeaturesResponse)
{	struct soap *soap = this;
	struct __vw1__QuerySupportedFeatures soap_tmp___vw1__QuerySupportedFeatures;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QuerySupportedFeatures.vw1__QuerySupportedFeatures = vw1__QuerySupportedFeatures;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QuerySupportedFeatures(soap, &soap_tmp___vw1__QuerySupportedFeatures);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QuerySupportedFeatures(soap, &soap_tmp___vw1__QuerySupportedFeatures, "-vw1:QuerySupportedFeatures", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QuerySupportedFeatures(soap, &soap_tmp___vw1__QuerySupportedFeatures, "-vw1:QuerySupportedFeatures", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QuerySupportedFeaturesResponse)
		return soap_closesock(soap);
	vw1__QuerySupportedFeaturesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QuerySupportedFeaturesResponse->soap_get(soap, "vw1:QuerySupportedFeaturesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryLicenseSourceAvailability(const char *endpoint, const char *soap_action, vw1__QueryLicenseSourceAvailabilityRequestType *vw1__QueryLicenseSourceAvailability, _vw1__QueryLicenseSourceAvailabilityResponse *vw1__QueryLicenseSourceAvailabilityResponse)
{	struct soap *soap = this;
	struct __vw1__QueryLicenseSourceAvailability soap_tmp___vw1__QueryLicenseSourceAvailability;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryLicenseSourceAvailability.vw1__QueryLicenseSourceAvailability = vw1__QueryLicenseSourceAvailability;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryLicenseSourceAvailability(soap, &soap_tmp___vw1__QueryLicenseSourceAvailability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryLicenseSourceAvailability(soap, &soap_tmp___vw1__QueryLicenseSourceAvailability, "-vw1:QueryLicenseSourceAvailability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryLicenseSourceAvailability(soap, &soap_tmp___vw1__QueryLicenseSourceAvailability, "-vw1:QueryLicenseSourceAvailability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryLicenseSourceAvailabilityResponse)
		return soap_closesock(soap);
	vw1__QueryLicenseSourceAvailabilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryLicenseSourceAvailabilityResponse->soap_get(soap, "vw1:QueryLicenseSourceAvailabilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryLicenseUsage(const char *endpoint, const char *soap_action, vw1__QueryLicenseUsageRequestType *vw1__QueryLicenseUsage, _vw1__QueryLicenseUsageResponse *vw1__QueryLicenseUsageResponse)
{	struct soap *soap = this;
	struct __vw1__QueryLicenseUsage soap_tmp___vw1__QueryLicenseUsage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryLicenseUsage.vw1__QueryLicenseUsage = vw1__QueryLicenseUsage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryLicenseUsage(soap, &soap_tmp___vw1__QueryLicenseUsage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryLicenseUsage(soap, &soap_tmp___vw1__QueryLicenseUsage, "-vw1:QueryLicenseUsage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryLicenseUsage(soap, &soap_tmp___vw1__QueryLicenseUsage, "-vw1:QueryLicenseUsage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryLicenseUsageResponse)
		return soap_closesock(soap);
	vw1__QueryLicenseUsageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryLicenseUsageResponse->soap_get(soap, "vw1:QueryLicenseUsageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetLicenseEdition(const char *endpoint, const char *soap_action, vw1__SetLicenseEditionRequestType *vw1__SetLicenseEdition, _vw1__SetLicenseEditionResponse *vw1__SetLicenseEditionResponse)
{	struct soap *soap = this;
	struct __vw1__SetLicenseEdition soap_tmp___vw1__SetLicenseEdition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetLicenseEdition.vw1__SetLicenseEdition = vw1__SetLicenseEdition;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetLicenseEdition(soap, &soap_tmp___vw1__SetLicenseEdition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetLicenseEdition(soap, &soap_tmp___vw1__SetLicenseEdition, "-vw1:SetLicenseEdition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetLicenseEdition(soap, &soap_tmp___vw1__SetLicenseEdition, "-vw1:SetLicenseEdition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetLicenseEditionResponse)
		return soap_closesock(soap);
	vw1__SetLicenseEditionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetLicenseEditionResponse->soap_get(soap, "vw1:SetLicenseEditionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckLicenseFeature(const char *endpoint, const char *soap_action, vw1__CheckLicenseFeatureRequestType *vw1__CheckLicenseFeature, _vw1__CheckLicenseFeatureResponse *vw1__CheckLicenseFeatureResponse)
{	struct soap *soap = this;
	struct __vw1__CheckLicenseFeature soap_tmp___vw1__CheckLicenseFeature;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckLicenseFeature.vw1__CheckLicenseFeature = vw1__CheckLicenseFeature;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckLicenseFeature(soap, &soap_tmp___vw1__CheckLicenseFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckLicenseFeature(soap, &soap_tmp___vw1__CheckLicenseFeature, "-vw1:CheckLicenseFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckLicenseFeature(soap, &soap_tmp___vw1__CheckLicenseFeature, "-vw1:CheckLicenseFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckLicenseFeatureResponse)
		return soap_closesock(soap);
	vw1__CheckLicenseFeatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckLicenseFeatureResponse->soap_get(soap, "vw1:CheckLicenseFeatureResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableFeature(const char *endpoint, const char *soap_action, vw1__EnableFeatureRequestType *vw1__EnableFeature, _vw1__EnableFeatureResponse *vw1__EnableFeatureResponse)
{	struct soap *soap = this;
	struct __vw1__EnableFeature soap_tmp___vw1__EnableFeature;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnableFeature.vw1__EnableFeature = vw1__EnableFeature;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnableFeature(soap, &soap_tmp___vw1__EnableFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnableFeature(soap, &soap_tmp___vw1__EnableFeature, "-vw1:EnableFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnableFeature(soap, &soap_tmp___vw1__EnableFeature, "-vw1:EnableFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnableFeatureResponse)
		return soap_closesock(soap);
	vw1__EnableFeatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnableFeatureResponse->soap_get(soap, "vw1:EnableFeatureResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableFeature(const char *endpoint, const char *soap_action, vw1__DisableFeatureRequestType *vw1__DisableFeature, _vw1__DisableFeatureResponse *vw1__DisableFeatureResponse)
{	struct soap *soap = this;
	struct __vw1__DisableFeature soap_tmp___vw1__DisableFeature;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DisableFeature.vw1__DisableFeature = vw1__DisableFeature;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DisableFeature(soap, &soap_tmp___vw1__DisableFeature);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DisableFeature(soap, &soap_tmp___vw1__DisableFeature, "-vw1:DisableFeature", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DisableFeature(soap, &soap_tmp___vw1__DisableFeature, "-vw1:DisableFeature", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DisableFeatureResponse)
		return soap_closesock(soap);
	vw1__DisableFeatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DisableFeatureResponse->soap_get(soap, "vw1:DisableFeatureResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureLicenseSource(const char *endpoint, const char *soap_action, vw1__ConfigureLicenseSourceRequestType *vw1__ConfigureLicenseSource, _vw1__ConfigureLicenseSourceResponse *vw1__ConfigureLicenseSourceResponse)
{	struct soap *soap = this;
	struct __vw1__ConfigureLicenseSource soap_tmp___vw1__ConfigureLicenseSource;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ConfigureLicenseSource.vw1__ConfigureLicenseSource = vw1__ConfigureLicenseSource;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ConfigureLicenseSource(soap, &soap_tmp___vw1__ConfigureLicenseSource);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ConfigureLicenseSource(soap, &soap_tmp___vw1__ConfigureLicenseSource, "-vw1:ConfigureLicenseSource", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ConfigureLicenseSource(soap, &soap_tmp___vw1__ConfigureLicenseSource, "-vw1:ConfigureLicenseSource", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ConfigureLicenseSourceResponse)
		return soap_closesock(soap);
	vw1__ConfigureLicenseSourceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ConfigureLicenseSourceResponse->soap_get(soap, "vw1:ConfigureLicenseSourceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLicense(const char *endpoint, const char *soap_action, vw1__UpdateLicenseRequestType *vw1__UpdateLicense, _vw1__UpdateLicenseResponse *vw1__UpdateLicenseResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateLicense soap_tmp___vw1__UpdateLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateLicense.vw1__UpdateLicense = vw1__UpdateLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateLicense(soap, &soap_tmp___vw1__UpdateLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateLicense(soap, &soap_tmp___vw1__UpdateLicense, "-vw1:UpdateLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateLicense(soap, &soap_tmp___vw1__UpdateLicense, "-vw1:UpdateLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateLicenseResponse)
		return soap_closesock(soap);
	vw1__UpdateLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateLicenseResponse->soap_get(soap, "vw1:UpdateLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddLicense(const char *endpoint, const char *soap_action, vw1__AddLicenseRequestType *vw1__AddLicense, _vw1__AddLicenseResponse *vw1__AddLicenseResponse)
{	struct soap *soap = this;
	struct __vw1__AddLicense soap_tmp___vw1__AddLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddLicense.vw1__AddLicense = vw1__AddLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddLicense(soap, &soap_tmp___vw1__AddLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddLicense(soap, &soap_tmp___vw1__AddLicense, "-vw1:AddLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddLicense(soap, &soap_tmp___vw1__AddLicense, "-vw1:AddLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddLicenseResponse)
		return soap_closesock(soap);
	vw1__AddLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddLicenseResponse->soap_get(soap, "vw1:AddLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveLicense(const char *endpoint, const char *soap_action, vw1__RemoveLicenseRequestType *vw1__RemoveLicense, _vw1__RemoveLicenseResponse *vw1__RemoveLicenseResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveLicense soap_tmp___vw1__RemoveLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveLicense.vw1__RemoveLicense = vw1__RemoveLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveLicense(soap, &soap_tmp___vw1__RemoveLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveLicense(soap, &soap_tmp___vw1__RemoveLicense, "-vw1:RemoveLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveLicense(soap, &soap_tmp___vw1__RemoveLicense, "-vw1:RemoveLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveLicenseResponse)
		return soap_closesock(soap);
	vw1__RemoveLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveLicenseResponse->soap_get(soap, "vw1:RemoveLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DecodeLicense(const char *endpoint, const char *soap_action, vw1__DecodeLicenseRequestType *vw1__DecodeLicense, _vw1__DecodeLicenseResponse *vw1__DecodeLicenseResponse)
{	struct soap *soap = this;
	struct __vw1__DecodeLicense soap_tmp___vw1__DecodeLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DecodeLicense.vw1__DecodeLicense = vw1__DecodeLicense;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DecodeLicense(soap, &soap_tmp___vw1__DecodeLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DecodeLicense(soap, &soap_tmp___vw1__DecodeLicense, "-vw1:DecodeLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DecodeLicense(soap, &soap_tmp___vw1__DecodeLicense, "-vw1:DecodeLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DecodeLicenseResponse)
		return soap_closesock(soap);
	vw1__DecodeLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DecodeLicenseResponse->soap_get(soap, "vw1:DecodeLicenseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLicenseLabel(const char *endpoint, const char *soap_action, vw1__UpdateLicenseLabelRequestType *vw1__UpdateLicenseLabel, _vw1__UpdateLicenseLabelResponse *vw1__UpdateLicenseLabelResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateLicenseLabel soap_tmp___vw1__UpdateLicenseLabel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateLicenseLabel.vw1__UpdateLicenseLabel = vw1__UpdateLicenseLabel;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateLicenseLabel(soap, &soap_tmp___vw1__UpdateLicenseLabel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateLicenseLabel(soap, &soap_tmp___vw1__UpdateLicenseLabel, "-vw1:UpdateLicenseLabel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateLicenseLabel(soap, &soap_tmp___vw1__UpdateLicenseLabel, "-vw1:UpdateLicenseLabel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateLicenseLabelResponse)
		return soap_closesock(soap);
	vw1__UpdateLicenseLabelResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateLicenseLabelResponse->soap_get(soap, "vw1:UpdateLicenseLabelResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveLicenseLabel(const char *endpoint, const char *soap_action, vw1__RemoveLicenseLabelRequestType *vw1__RemoveLicenseLabel, _vw1__RemoveLicenseLabelResponse *vw1__RemoveLicenseLabelResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveLicenseLabel soap_tmp___vw1__RemoveLicenseLabel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveLicenseLabel.vw1__RemoveLicenseLabel = vw1__RemoveLicenseLabel;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveLicenseLabel(soap, &soap_tmp___vw1__RemoveLicenseLabel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveLicenseLabel(soap, &soap_tmp___vw1__RemoveLicenseLabel, "-vw1:RemoveLicenseLabel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveLicenseLabel(soap, &soap_tmp___vw1__RemoveLicenseLabel, "-vw1:RemoveLicenseLabel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveLicenseLabelResponse)
		return soap_closesock(soap);
	vw1__RemoveLicenseLabelResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveLicenseLabelResponse->soap_get(soap, "vw1:RemoveLicenseLabelResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Reload(const char *endpoint, const char *soap_action, vw1__ReloadRequestType *vw1__Reload, _vw1__ReloadResponse *vw1__ReloadResponse)
{	struct soap *soap = this;
	struct __vw1__Reload soap_tmp___vw1__Reload;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__Reload.vw1__Reload = vw1__Reload;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__Reload(soap, &soap_tmp___vw1__Reload);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__Reload(soap, &soap_tmp___vw1__Reload, "-vw1:Reload", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__Reload(soap, &soap_tmp___vw1__Reload, "-vw1:Reload", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReloadResponse)
		return soap_closesock(soap);
	vw1__ReloadResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReloadResponse->soap_get(soap, "vw1:ReloadResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Rename_USCORETask(const char *endpoint, const char *soap_action, vw1__RenameRequestType *vw1__Rename_USCORETask, _vw1__Rename_USCORETaskResponse *vw1__Rename_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__Rename_USCORETask soap_tmp___vw1__Rename_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__Rename_USCORETask.vw1__Rename_USCORETask = vw1__Rename_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__Rename_USCORETask(soap, &soap_tmp___vw1__Rename_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__Rename_USCORETask(soap, &soap_tmp___vw1__Rename_USCORETask, "-vw1:Rename_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__Rename_USCORETask(soap, &soap_tmp___vw1__Rename_USCORETask, "-vw1:Rename_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__Rename_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__Rename_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__Rename_USCORETaskResponse->soap_get(soap, "vw1:Rename_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Destroy_USCORETask(const char *endpoint, const char *soap_action, vw1__DestroyRequestType *vw1__Destroy_USCORETask, _vw1__Destroy_USCORETaskResponse *vw1__Destroy_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__Destroy_USCORETask soap_tmp___vw1__Destroy_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__Destroy_USCORETask.vw1__Destroy_USCORETask = vw1__Destroy_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__Destroy_USCORETask(soap, &soap_tmp___vw1__Destroy_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__Destroy_USCORETask(soap, &soap_tmp___vw1__Destroy_USCORETask, "-vw1:Destroy_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__Destroy_USCORETask(soap, &soap_tmp___vw1__Destroy_USCORETask, "-vw1:Destroy_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__Destroy_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__Destroy_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__Destroy_USCORETaskResponse->soap_get(soap, "vw1:Destroy_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyNetwork(const char *endpoint, const char *soap_action, vw1__DestroyNetworkRequestType *vw1__DestroyNetwork, _vw1__DestroyNetworkResponse *vw1__DestroyNetworkResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyNetwork soap_tmp___vw1__DestroyNetwork;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyNetwork.vw1__DestroyNetwork = vw1__DestroyNetwork;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyNetwork(soap, &soap_tmp___vw1__DestroyNetwork);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyNetwork(soap, &soap_tmp___vw1__DestroyNetwork, "-vw1:DestroyNetwork", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyNetwork(soap, &soap_tmp___vw1__DestroyNetwork, "-vw1:DestroyNetwork", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyNetworkResponse)
		return soap_closesock(soap);
	vw1__DestroyNetworkResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyNetworkResponse->soap_get(soap, "vw1:DestroyNetworkResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ValidateHost(const char *endpoint, const char *soap_action, vw1__ValidateHostRequestType *vw1__ValidateHost, _vw1__ValidateHostResponse *vw1__ValidateHostResponse)
{	struct soap *soap = this;
	struct __vw1__ValidateHost soap_tmp___vw1__ValidateHost;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ValidateHost.vw1__ValidateHost = vw1__ValidateHost;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ValidateHost(soap, &soap_tmp___vw1__ValidateHost);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ValidateHost(soap, &soap_tmp___vw1__ValidateHost, "-vw1:ValidateHost", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ValidateHost(soap, &soap_tmp___vw1__ValidateHost, "-vw1:ValidateHost", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ValidateHostResponse)
		return soap_closesock(soap);
	vw1__ValidateHostResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ValidateHostResponse->soap_get(soap, "vw1:ValidateHostResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ParseDescriptor(const char *endpoint, const char *soap_action, vw1__ParseDescriptorRequestType *vw1__ParseDescriptor, _vw1__ParseDescriptorResponse *vw1__ParseDescriptorResponse)
{	struct soap *soap = this;
	struct __vw1__ParseDescriptor soap_tmp___vw1__ParseDescriptor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ParseDescriptor.vw1__ParseDescriptor = vw1__ParseDescriptor;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ParseDescriptor(soap, &soap_tmp___vw1__ParseDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ParseDescriptor(soap, &soap_tmp___vw1__ParseDescriptor, "-vw1:ParseDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ParseDescriptor(soap, &soap_tmp___vw1__ParseDescriptor, "-vw1:ParseDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ParseDescriptorResponse)
		return soap_closesock(soap);
	vw1__ParseDescriptorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ParseDescriptorResponse->soap_get(soap, "vw1:ParseDescriptorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateImportSpec(const char *endpoint, const char *soap_action, vw1__CreateImportSpecRequestType *vw1__CreateImportSpec, _vw1__CreateImportSpecResponse *vw1__CreateImportSpecResponse)
{	struct soap *soap = this;
	struct __vw1__CreateImportSpec soap_tmp___vw1__CreateImportSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateImportSpec.vw1__CreateImportSpec = vw1__CreateImportSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateImportSpec(soap, &soap_tmp___vw1__CreateImportSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateImportSpec(soap, &soap_tmp___vw1__CreateImportSpec, "-vw1:CreateImportSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateImportSpec(soap, &soap_tmp___vw1__CreateImportSpec, "-vw1:CreateImportSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateImportSpecResponse)
		return soap_closesock(soap);
	vw1__CreateImportSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateImportSpecResponse->soap_get(soap, "vw1:CreateImportSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDescriptor(const char *endpoint, const char *soap_action, vw1__CreateDescriptorRequestType *vw1__CreateDescriptor, _vw1__CreateDescriptorResponse *vw1__CreateDescriptorResponse)
{	struct soap *soap = this;
	struct __vw1__CreateDescriptor soap_tmp___vw1__CreateDescriptor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateDescriptor.vw1__CreateDescriptor = vw1__CreateDescriptor;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateDescriptor(soap, &soap_tmp___vw1__CreateDescriptor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateDescriptor(soap, &soap_tmp___vw1__CreateDescriptor, "-vw1:CreateDescriptor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateDescriptor(soap, &soap_tmp___vw1__CreateDescriptor, "-vw1:CreateDescriptor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateDescriptorResponse)
		return soap_closesock(soap);
	vw1__CreateDescriptorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateDescriptorResponse->soap_get(soap, "vw1:CreateDescriptorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerfProviderSummary(const char *endpoint, const char *soap_action, vw1__QueryPerfProviderSummaryRequestType *vw1__QueryPerfProviderSummary, _vw1__QueryPerfProviderSummaryResponse *vw1__QueryPerfProviderSummaryResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPerfProviderSummary soap_tmp___vw1__QueryPerfProviderSummary;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPerfProviderSummary.vw1__QueryPerfProviderSummary = vw1__QueryPerfProviderSummary;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPerfProviderSummary(soap, &soap_tmp___vw1__QueryPerfProviderSummary);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPerfProviderSummary(soap, &soap_tmp___vw1__QueryPerfProviderSummary, "-vw1:QueryPerfProviderSummary", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPerfProviderSummary(soap, &soap_tmp___vw1__QueryPerfProviderSummary, "-vw1:QueryPerfProviderSummary", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPerfProviderSummaryResponse)
		return soap_closesock(soap);
	vw1__QueryPerfProviderSummaryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPerfProviderSummaryResponse->soap_get(soap, "vw1:QueryPerfProviderSummaryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailablePerfMetric(const char *endpoint, const char *soap_action, vw1__QueryAvailablePerfMetricRequestType *vw1__QueryAvailablePerfMetric, _vw1__QueryAvailablePerfMetricResponse *vw1__QueryAvailablePerfMetricResponse)
{	struct soap *soap = this;
	struct __vw1__QueryAvailablePerfMetric soap_tmp___vw1__QueryAvailablePerfMetric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryAvailablePerfMetric.vw1__QueryAvailablePerfMetric = vw1__QueryAvailablePerfMetric;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryAvailablePerfMetric(soap, &soap_tmp___vw1__QueryAvailablePerfMetric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryAvailablePerfMetric(soap, &soap_tmp___vw1__QueryAvailablePerfMetric, "-vw1:QueryAvailablePerfMetric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryAvailablePerfMetric(soap, &soap_tmp___vw1__QueryAvailablePerfMetric, "-vw1:QueryAvailablePerfMetric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryAvailablePerfMetricResponse)
		return soap_closesock(soap);
	vw1__QueryAvailablePerfMetricResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryAvailablePerfMetricResponse->soap_get(soap, "vw1:QueryAvailablePerfMetricResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerfCounter(const char *endpoint, const char *soap_action, vw1__QueryPerfCounterRequestType *vw1__QueryPerfCounter, _vw1__QueryPerfCounterResponse *vw1__QueryPerfCounterResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPerfCounter soap_tmp___vw1__QueryPerfCounter;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPerfCounter.vw1__QueryPerfCounter = vw1__QueryPerfCounter;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPerfCounter(soap, &soap_tmp___vw1__QueryPerfCounter);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPerfCounter(soap, &soap_tmp___vw1__QueryPerfCounter, "-vw1:QueryPerfCounter", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPerfCounter(soap, &soap_tmp___vw1__QueryPerfCounter, "-vw1:QueryPerfCounter", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPerfCounterResponse)
		return soap_closesock(soap);
	vw1__QueryPerfCounterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPerfCounterResponse->soap_get(soap, "vw1:QueryPerfCounterResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerfCounterByLevel(const char *endpoint, const char *soap_action, vw1__QueryPerfCounterByLevelRequestType *vw1__QueryPerfCounterByLevel, _vw1__QueryPerfCounterByLevelResponse *vw1__QueryPerfCounterByLevelResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPerfCounterByLevel soap_tmp___vw1__QueryPerfCounterByLevel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPerfCounterByLevel.vw1__QueryPerfCounterByLevel = vw1__QueryPerfCounterByLevel;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPerfCounterByLevel(soap, &soap_tmp___vw1__QueryPerfCounterByLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPerfCounterByLevel(soap, &soap_tmp___vw1__QueryPerfCounterByLevel, "-vw1:QueryPerfCounterByLevel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPerfCounterByLevel(soap, &soap_tmp___vw1__QueryPerfCounterByLevel, "-vw1:QueryPerfCounterByLevel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPerfCounterByLevelResponse)
		return soap_closesock(soap);
	vw1__QueryPerfCounterByLevelResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPerfCounterByLevelResponse->soap_get(soap, "vw1:QueryPerfCounterByLevelResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerf(const char *endpoint, const char *soap_action, vw1__QueryPerfRequestType *vw1__QueryPerf, _vw1__QueryPerfResponse *vw1__QueryPerfResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPerf soap_tmp___vw1__QueryPerf;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPerf.vw1__QueryPerf = vw1__QueryPerf;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPerf(soap, &soap_tmp___vw1__QueryPerf);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPerf(soap, &soap_tmp___vw1__QueryPerf, "-vw1:QueryPerf", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPerf(soap, &soap_tmp___vw1__QueryPerf, "-vw1:QueryPerf", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPerfResponse)
		return soap_closesock(soap);
	vw1__QueryPerfResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPerfResponse->soap_get(soap, "vw1:QueryPerfResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPerfComposite(const char *endpoint, const char *soap_action, vw1__QueryPerfCompositeRequestType *vw1__QueryPerfComposite, _vw1__QueryPerfCompositeResponse *vw1__QueryPerfCompositeResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPerfComposite soap_tmp___vw1__QueryPerfComposite;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPerfComposite.vw1__QueryPerfComposite = vw1__QueryPerfComposite;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPerfComposite(soap, &soap_tmp___vw1__QueryPerfComposite);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPerfComposite(soap, &soap_tmp___vw1__QueryPerfComposite, "-vw1:QueryPerfComposite", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPerfComposite(soap, &soap_tmp___vw1__QueryPerfComposite, "-vw1:QueryPerfComposite", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPerfCompositeResponse)
		return soap_closesock(soap);
	vw1__QueryPerfCompositeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPerfCompositeResponse->soap_get(soap, "vw1:QueryPerfCompositeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreatePerfInterval(const char *endpoint, const char *soap_action, vw1__CreatePerfIntervalRequestType *vw1__CreatePerfInterval, _vw1__CreatePerfIntervalResponse *vw1__CreatePerfIntervalResponse)
{	struct soap *soap = this;
	struct __vw1__CreatePerfInterval soap_tmp___vw1__CreatePerfInterval;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreatePerfInterval.vw1__CreatePerfInterval = vw1__CreatePerfInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreatePerfInterval(soap, &soap_tmp___vw1__CreatePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreatePerfInterval(soap, &soap_tmp___vw1__CreatePerfInterval, "-vw1:CreatePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreatePerfInterval(soap, &soap_tmp___vw1__CreatePerfInterval, "-vw1:CreatePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreatePerfIntervalResponse)
		return soap_closesock(soap);
	vw1__CreatePerfIntervalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreatePerfIntervalResponse->soap_get(soap, "vw1:CreatePerfIntervalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemovePerfInterval(const char *endpoint, const char *soap_action, vw1__RemovePerfIntervalRequestType *vw1__RemovePerfInterval, _vw1__RemovePerfIntervalResponse *vw1__RemovePerfIntervalResponse)
{	struct soap *soap = this;
	struct __vw1__RemovePerfInterval soap_tmp___vw1__RemovePerfInterval;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemovePerfInterval.vw1__RemovePerfInterval = vw1__RemovePerfInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemovePerfInterval(soap, &soap_tmp___vw1__RemovePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemovePerfInterval(soap, &soap_tmp___vw1__RemovePerfInterval, "-vw1:RemovePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemovePerfInterval(soap, &soap_tmp___vw1__RemovePerfInterval, "-vw1:RemovePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemovePerfIntervalResponse)
		return soap_closesock(soap);
	vw1__RemovePerfIntervalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemovePerfIntervalResponse->soap_get(soap, "vw1:RemovePerfIntervalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdatePerfInterval(const char *endpoint, const char *soap_action, vw1__UpdatePerfIntervalRequestType *vw1__UpdatePerfInterval, _vw1__UpdatePerfIntervalResponse *vw1__UpdatePerfIntervalResponse)
{	struct soap *soap = this;
	struct __vw1__UpdatePerfInterval soap_tmp___vw1__UpdatePerfInterval;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdatePerfInterval.vw1__UpdatePerfInterval = vw1__UpdatePerfInterval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdatePerfInterval(soap, &soap_tmp___vw1__UpdatePerfInterval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdatePerfInterval(soap, &soap_tmp___vw1__UpdatePerfInterval, "-vw1:UpdatePerfInterval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdatePerfInterval(soap, &soap_tmp___vw1__UpdatePerfInterval, "-vw1:UpdatePerfInterval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdatePerfIntervalResponse)
		return soap_closesock(soap);
	vw1__UpdatePerfIntervalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdatePerfIntervalResponse->soap_get(soap, "vw1:UpdatePerfIntervalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateCounterLevelMapping(const char *endpoint, const char *soap_action, vw1__UpdateCounterLevelMappingRequestType *vw1__UpdateCounterLevelMapping, _vw1__UpdateCounterLevelMappingResponse *vw1__UpdateCounterLevelMappingResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateCounterLevelMapping soap_tmp___vw1__UpdateCounterLevelMapping;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateCounterLevelMapping.vw1__UpdateCounterLevelMapping = vw1__UpdateCounterLevelMapping;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateCounterLevelMapping(soap, &soap_tmp___vw1__UpdateCounterLevelMapping);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateCounterLevelMapping(soap, &soap_tmp___vw1__UpdateCounterLevelMapping, "-vw1:UpdateCounterLevelMapping", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateCounterLevelMapping(soap, &soap_tmp___vw1__UpdateCounterLevelMapping, "-vw1:UpdateCounterLevelMapping", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateCounterLevelMappingResponse)
		return soap_closesock(soap);
	vw1__UpdateCounterLevelMappingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateCounterLevelMappingResponse->soap_get(soap, "vw1:UpdateCounterLevelMappingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetCounterLevelMapping(const char *endpoint, const char *soap_action, vw1__ResetCounterLevelMappingRequestType *vw1__ResetCounterLevelMapping, _vw1__ResetCounterLevelMappingResponse *vw1__ResetCounterLevelMappingResponse)
{	struct soap *soap = this;
	struct __vw1__ResetCounterLevelMapping soap_tmp___vw1__ResetCounterLevelMapping;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetCounterLevelMapping.vw1__ResetCounterLevelMapping = vw1__ResetCounterLevelMapping;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetCounterLevelMapping(soap, &soap_tmp___vw1__ResetCounterLevelMapping);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetCounterLevelMapping(soap, &soap_tmp___vw1__ResetCounterLevelMapping, "-vw1:ResetCounterLevelMapping", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetCounterLevelMapping(soap, &soap_tmp___vw1__ResetCounterLevelMapping, "-vw1:ResetCounterLevelMapping", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetCounterLevelMappingResponse)
		return soap_closesock(soap);
	vw1__ResetCounterLevelMappingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetCounterLevelMappingResponse->soap_get(soap, "vw1:ResetCounterLevelMappingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EstimateDatabaseSize(const char *endpoint, const char *soap_action, vw1__EstimateDatabaseSizeRequestType *vw1__EstimateDatabaseSize, _vw1__EstimateDatabaseSizeResponse *vw1__EstimateDatabaseSizeResponse)
{	struct soap *soap = this;
	struct __vw1__EstimateDatabaseSize soap_tmp___vw1__EstimateDatabaseSize;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EstimateDatabaseSize.vw1__EstimateDatabaseSize = vw1__EstimateDatabaseSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EstimateDatabaseSize(soap, &soap_tmp___vw1__EstimateDatabaseSize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EstimateDatabaseSize(soap, &soap_tmp___vw1__EstimateDatabaseSize, "-vw1:EstimateDatabaseSize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EstimateDatabaseSize(soap, &soap_tmp___vw1__EstimateDatabaseSize, "-vw1:EstimateDatabaseSize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EstimateDatabaseSizeResponse)
		return soap_closesock(soap);
	vw1__EstimateDatabaseSizeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EstimateDatabaseSizeResponse->soap_get(soap, "vw1:EstimateDatabaseSizeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateConfig(const char *endpoint, const char *soap_action, vw1__UpdateConfigRequestType *vw1__UpdateConfig, _vw1__UpdateConfigResponse *vw1__UpdateConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateConfig soap_tmp___vw1__UpdateConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateConfig.vw1__UpdateConfig = vw1__UpdateConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateConfig(soap, &soap_tmp___vw1__UpdateConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateConfig(soap, &soap_tmp___vw1__UpdateConfig, "-vw1:UpdateConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateConfig(soap, &soap_tmp___vw1__UpdateConfig, "-vw1:UpdateConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateConfigResponse->soap_get(soap, "vw1:UpdateConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveIntoResourcePool(const char *endpoint, const char *soap_action, vw1__MoveIntoResourcePoolRequestType *vw1__MoveIntoResourcePool, _vw1__MoveIntoResourcePoolResponse *vw1__MoveIntoResourcePoolResponse)
{	struct soap *soap = this;
	struct __vw1__MoveIntoResourcePool soap_tmp___vw1__MoveIntoResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveIntoResourcePool.vw1__MoveIntoResourcePool = vw1__MoveIntoResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveIntoResourcePool(soap, &soap_tmp___vw1__MoveIntoResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveIntoResourcePool(soap, &soap_tmp___vw1__MoveIntoResourcePool, "-vw1:MoveIntoResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveIntoResourcePool(soap, &soap_tmp___vw1__MoveIntoResourcePool, "-vw1:MoveIntoResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveIntoResourcePoolResponse)
		return soap_closesock(soap);
	vw1__MoveIntoResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveIntoResourcePoolResponse->soap_get(soap, "vw1:MoveIntoResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateChildResourceConfiguration(const char *endpoint, const char *soap_action, vw1__UpdateChildResourceConfigurationRequestType *vw1__UpdateChildResourceConfiguration, _vw1__UpdateChildResourceConfigurationResponse *vw1__UpdateChildResourceConfigurationResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateChildResourceConfiguration soap_tmp___vw1__UpdateChildResourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateChildResourceConfiguration.vw1__UpdateChildResourceConfiguration = vw1__UpdateChildResourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateChildResourceConfiguration(soap, &soap_tmp___vw1__UpdateChildResourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateChildResourceConfiguration(soap, &soap_tmp___vw1__UpdateChildResourceConfiguration, "-vw1:UpdateChildResourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateChildResourceConfiguration(soap, &soap_tmp___vw1__UpdateChildResourceConfiguration, "-vw1:UpdateChildResourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateChildResourceConfigurationResponse)
		return soap_closesock(soap);
	vw1__UpdateChildResourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateChildResourceConfigurationResponse->soap_get(soap, "vw1:UpdateChildResourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateResourcePool(const char *endpoint, const char *soap_action, vw1__CreateResourcePoolRequestType *vw1__CreateResourcePool, _vw1__CreateResourcePoolResponse *vw1__CreateResourcePoolResponse)
{	struct soap *soap = this;
	struct __vw1__CreateResourcePool soap_tmp___vw1__CreateResourcePool;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateResourcePool.vw1__CreateResourcePool = vw1__CreateResourcePool;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateResourcePool(soap, &soap_tmp___vw1__CreateResourcePool);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateResourcePool(soap, &soap_tmp___vw1__CreateResourcePool, "-vw1:CreateResourcePool", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateResourcePool(soap, &soap_tmp___vw1__CreateResourcePool, "-vw1:CreateResourcePool", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateResourcePoolResponse)
		return soap_closesock(soap);
	vw1__CreateResourcePoolResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateResourcePoolResponse->soap_get(soap, "vw1:CreateResourcePoolResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyChildren(const char *endpoint, const char *soap_action, vw1__DestroyChildrenRequestType *vw1__DestroyChildren, _vw1__DestroyChildrenResponse *vw1__DestroyChildrenResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyChildren soap_tmp___vw1__DestroyChildren;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyChildren.vw1__DestroyChildren = vw1__DestroyChildren;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyChildren(soap, &soap_tmp___vw1__DestroyChildren);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyChildren(soap, &soap_tmp___vw1__DestroyChildren, "-vw1:DestroyChildren", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyChildren(soap, &soap_tmp___vw1__DestroyChildren, "-vw1:DestroyChildren", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyChildrenResponse)
		return soap_closesock(soap);
	vw1__DestroyChildrenResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyChildrenResponse->soap_get(soap, "vw1:DestroyChildrenResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVApp(const char *endpoint, const char *soap_action, vw1__CreateVAppRequestType *vw1__CreateVApp, _vw1__CreateVAppResponse *vw1__CreateVAppResponse)
{	struct soap *soap = this;
	struct __vw1__CreateVApp soap_tmp___vw1__CreateVApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateVApp.vw1__CreateVApp = vw1__CreateVApp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateVApp(soap, &soap_tmp___vw1__CreateVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateVApp(soap, &soap_tmp___vw1__CreateVApp, "-vw1:CreateVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateVApp(soap, &soap_tmp___vw1__CreateVApp, "-vw1:CreateVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateVAppResponse)
		return soap_closesock(soap);
	vw1__CreateVAppResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateVAppResponse->soap_get(soap, "vw1:CreateVAppResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateChildVM_USCORETask(const char *endpoint, const char *soap_action, vw1__CreateChildVMRequestType *vw1__CreateChildVM_USCORETask, _vw1__CreateChildVM_USCORETaskResponse *vw1__CreateChildVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateChildVM_USCORETask soap_tmp___vw1__CreateChildVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateChildVM_USCORETask.vw1__CreateChildVM_USCORETask = vw1__CreateChildVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateChildVM_USCORETask(soap, &soap_tmp___vw1__CreateChildVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateChildVM_USCORETask(soap, &soap_tmp___vw1__CreateChildVM_USCORETask, "-vw1:CreateChildVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateChildVM_USCORETask(soap, &soap_tmp___vw1__CreateChildVM_USCORETask, "-vw1:CreateChildVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateChildVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CreateChildVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateChildVM_USCORETaskResponse->soap_get(soap, "vw1:CreateChildVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RegisterChildVM_USCORETask(const char *endpoint, const char *soap_action, vw1__RegisterChildVMRequestType *vw1__RegisterChildVM_USCORETask, _vw1__RegisterChildVM_USCORETaskResponse *vw1__RegisterChildVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RegisterChildVM_USCORETask soap_tmp___vw1__RegisterChildVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RegisterChildVM_USCORETask.vw1__RegisterChildVM_USCORETask = vw1__RegisterChildVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RegisterChildVM_USCORETask(soap, &soap_tmp___vw1__RegisterChildVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RegisterChildVM_USCORETask(soap, &soap_tmp___vw1__RegisterChildVM_USCORETask, "-vw1:RegisterChildVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RegisterChildVM_USCORETask(soap, &soap_tmp___vw1__RegisterChildVM_USCORETask, "-vw1:RegisterChildVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RegisterChildVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RegisterChildVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RegisterChildVM_USCORETaskResponse->soap_get(soap, "vw1:RegisterChildVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ImportVApp(const char *endpoint, const char *soap_action, vw1__ImportVAppRequestType *vw1__ImportVApp, _vw1__ImportVAppResponse *vw1__ImportVAppResponse)
{	struct soap *soap = this;
	struct __vw1__ImportVApp soap_tmp___vw1__ImportVApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ImportVApp.vw1__ImportVApp = vw1__ImportVApp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ImportVApp(soap, &soap_tmp___vw1__ImportVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ImportVApp(soap, &soap_tmp___vw1__ImportVApp, "-vw1:ImportVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ImportVApp(soap, &soap_tmp___vw1__ImportVApp, "-vw1:ImportVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ImportVAppResponse)
		return soap_closesock(soap);
	vw1__ImportVAppResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ImportVAppResponse->soap_get(soap, "vw1:ImportVAppResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryResourceConfigOption(const char *endpoint, const char *soap_action, vw1__QueryResourceConfigOptionRequestType *vw1__QueryResourceConfigOption, _vw1__QueryResourceConfigOptionResponse *vw1__QueryResourceConfigOptionResponse)
{	struct soap *soap = this;
	struct __vw1__QueryResourceConfigOption soap_tmp___vw1__QueryResourceConfigOption;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryResourceConfigOption.vw1__QueryResourceConfigOption = vw1__QueryResourceConfigOption;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryResourceConfigOption(soap, &soap_tmp___vw1__QueryResourceConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryResourceConfigOption(soap, &soap_tmp___vw1__QueryResourceConfigOption, "-vw1:QueryResourceConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryResourceConfigOption(soap, &soap_tmp___vw1__QueryResourceConfigOption, "-vw1:QueryResourceConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryResourceConfigOptionResponse)
		return soap_closesock(soap);
	vw1__QueryResourceConfigOptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryResourceConfigOptionResponse->soap_get(soap, "vw1:QueryResourceConfigOptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshRuntime(const char *endpoint, const char *soap_action, vw1__RefreshRuntimeRequestType *vw1__RefreshRuntime, _vw1__RefreshRuntimeResponse *vw1__RefreshRuntimeResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshRuntime soap_tmp___vw1__RefreshRuntime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshRuntime.vw1__RefreshRuntime = vw1__RefreshRuntime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshRuntime(soap, &soap_tmp___vw1__RefreshRuntime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshRuntime(soap, &soap_tmp___vw1__RefreshRuntime, "-vw1:RefreshRuntime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshRuntime(soap, &soap_tmp___vw1__RefreshRuntime, "-vw1:RefreshRuntime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshRuntimeResponse)
		return soap_closesock(soap);
	vw1__RefreshRuntimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshRuntimeResponse->soap_get(soap, "vw1:RefreshRuntimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByUuid(const char *endpoint, const char *soap_action, vw1__FindByUuidRequestType *vw1__FindByUuid, _vw1__FindByUuidResponse *vw1__FindByUuidResponse)
{	struct soap *soap = this;
	struct __vw1__FindByUuid soap_tmp___vw1__FindByUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindByUuid.vw1__FindByUuid = vw1__FindByUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindByUuid(soap, &soap_tmp___vw1__FindByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindByUuid(soap, &soap_tmp___vw1__FindByUuid, "-vw1:FindByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindByUuid(soap, &soap_tmp___vw1__FindByUuid, "-vw1:FindByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindByUuidResponse)
		return soap_closesock(soap);
	vw1__FindByUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindByUuidResponse->soap_get(soap, "vw1:FindByUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByDatastorePath(const char *endpoint, const char *soap_action, vw1__FindByDatastorePathRequestType *vw1__FindByDatastorePath, _vw1__FindByDatastorePathResponse *vw1__FindByDatastorePathResponse)
{	struct soap *soap = this;
	struct __vw1__FindByDatastorePath soap_tmp___vw1__FindByDatastorePath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindByDatastorePath.vw1__FindByDatastorePath = vw1__FindByDatastorePath;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindByDatastorePath(soap, &soap_tmp___vw1__FindByDatastorePath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindByDatastorePath(soap, &soap_tmp___vw1__FindByDatastorePath, "-vw1:FindByDatastorePath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindByDatastorePath(soap, &soap_tmp___vw1__FindByDatastorePath, "-vw1:FindByDatastorePath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindByDatastorePathResponse)
		return soap_closesock(soap);
	vw1__FindByDatastorePathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindByDatastorePathResponse->soap_get(soap, "vw1:FindByDatastorePathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByDnsName(const char *endpoint, const char *soap_action, vw1__FindByDnsNameRequestType *vw1__FindByDnsName, _vw1__FindByDnsNameResponse *vw1__FindByDnsNameResponse)
{	struct soap *soap = this;
	struct __vw1__FindByDnsName soap_tmp___vw1__FindByDnsName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindByDnsName.vw1__FindByDnsName = vw1__FindByDnsName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindByDnsName(soap, &soap_tmp___vw1__FindByDnsName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindByDnsName(soap, &soap_tmp___vw1__FindByDnsName, "-vw1:FindByDnsName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindByDnsName(soap, &soap_tmp___vw1__FindByDnsName, "-vw1:FindByDnsName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindByDnsNameResponse)
		return soap_closesock(soap);
	vw1__FindByDnsNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindByDnsNameResponse->soap_get(soap, "vw1:FindByDnsNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByIp(const char *endpoint, const char *soap_action, vw1__FindByIpRequestType *vw1__FindByIp, _vw1__FindByIpResponse *vw1__FindByIpResponse)
{	struct soap *soap = this;
	struct __vw1__FindByIp soap_tmp___vw1__FindByIp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindByIp.vw1__FindByIp = vw1__FindByIp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindByIp(soap, &soap_tmp___vw1__FindByIp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindByIp(soap, &soap_tmp___vw1__FindByIp, "-vw1:FindByIp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindByIp(soap, &soap_tmp___vw1__FindByIp, "-vw1:FindByIp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindByIpResponse)
		return soap_closesock(soap);
	vw1__FindByIpResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindByIpResponse->soap_get(soap, "vw1:FindByIpResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindByInventoryPath(const char *endpoint, const char *soap_action, vw1__FindByInventoryPathRequestType *vw1__FindByInventoryPath, _vw1__FindByInventoryPathResponse *vw1__FindByInventoryPathResponse)
{	struct soap *soap = this;
	struct __vw1__FindByInventoryPath soap_tmp___vw1__FindByInventoryPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindByInventoryPath.vw1__FindByInventoryPath = vw1__FindByInventoryPath;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindByInventoryPath(soap, &soap_tmp___vw1__FindByInventoryPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindByInventoryPath(soap, &soap_tmp___vw1__FindByInventoryPath, "-vw1:FindByInventoryPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindByInventoryPath(soap, &soap_tmp___vw1__FindByInventoryPath, "-vw1:FindByInventoryPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindByInventoryPathResponse)
		return soap_closesock(soap);
	vw1__FindByInventoryPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindByInventoryPathResponse->soap_get(soap, "vw1:FindByInventoryPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindChild(const char *endpoint, const char *soap_action, vw1__FindChildRequestType *vw1__FindChild, _vw1__FindChildResponse *vw1__FindChildResponse)
{	struct soap *soap = this;
	struct __vw1__FindChild soap_tmp___vw1__FindChild;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindChild.vw1__FindChild = vw1__FindChild;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindChild(soap, &soap_tmp___vw1__FindChild);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindChild(soap, &soap_tmp___vw1__FindChild, "-vw1:FindChild", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindChild(soap, &soap_tmp___vw1__FindChild, "-vw1:FindChild", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindChildResponse)
		return soap_closesock(soap);
	vw1__FindChildResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindChildResponse->soap_get(soap, "vw1:FindChildResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindAllByUuid(const char *endpoint, const char *soap_action, vw1__FindAllByUuidRequestType *vw1__FindAllByUuid, _vw1__FindAllByUuidResponse *vw1__FindAllByUuidResponse)
{	struct soap *soap = this;
	struct __vw1__FindAllByUuid soap_tmp___vw1__FindAllByUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindAllByUuid.vw1__FindAllByUuid = vw1__FindAllByUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindAllByUuid(soap, &soap_tmp___vw1__FindAllByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindAllByUuid(soap, &soap_tmp___vw1__FindAllByUuid, "-vw1:FindAllByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindAllByUuid(soap, &soap_tmp___vw1__FindAllByUuid, "-vw1:FindAllByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindAllByUuidResponse)
		return soap_closesock(soap);
	vw1__FindAllByUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindAllByUuidResponse->soap_get(soap, "vw1:FindAllByUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindAllByDnsName(const char *endpoint, const char *soap_action, vw1__FindAllByDnsNameRequestType *vw1__FindAllByDnsName, _vw1__FindAllByDnsNameResponse *vw1__FindAllByDnsNameResponse)
{	struct soap *soap = this;
	struct __vw1__FindAllByDnsName soap_tmp___vw1__FindAllByDnsName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindAllByDnsName.vw1__FindAllByDnsName = vw1__FindAllByDnsName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindAllByDnsName(soap, &soap_tmp___vw1__FindAllByDnsName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindAllByDnsName(soap, &soap_tmp___vw1__FindAllByDnsName, "-vw1:FindAllByDnsName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindAllByDnsName(soap, &soap_tmp___vw1__FindAllByDnsName, "-vw1:FindAllByDnsName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindAllByDnsNameResponse)
		return soap_closesock(soap);
	vw1__FindAllByDnsNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindAllByDnsNameResponse->soap_get(soap, "vw1:FindAllByDnsNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindAllByIp(const char *endpoint, const char *soap_action, vw1__FindAllByIpRequestType *vw1__FindAllByIp, _vw1__FindAllByIpResponse *vw1__FindAllByIpResponse)
{	struct soap *soap = this;
	struct __vw1__FindAllByIp soap_tmp___vw1__FindAllByIp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindAllByIp.vw1__FindAllByIp = vw1__FindAllByIp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindAllByIp(soap, &soap_tmp___vw1__FindAllByIp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindAllByIp(soap, &soap_tmp___vw1__FindAllByIp, "-vw1:FindAllByIp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindAllByIp(soap, &soap_tmp___vw1__FindAllByIp, "-vw1:FindAllByIp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindAllByIpResponse)
		return soap_closesock(soap);
	vw1__FindAllByIpResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindAllByIpResponse->soap_get(soap, "vw1:FindAllByIpResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CurrentTime(const char *endpoint, const char *soap_action, vw1__CurrentTimeRequestType *vw1__CurrentTime, _vw1__CurrentTimeResponse *vw1__CurrentTimeResponse)
{	struct soap *soap = this;
	struct __vw1__CurrentTime soap_tmp___vw1__CurrentTime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CurrentTime.vw1__CurrentTime = vw1__CurrentTime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CurrentTime(soap, &soap_tmp___vw1__CurrentTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CurrentTime(soap, &soap_tmp___vw1__CurrentTime, "-vw1:CurrentTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CurrentTime(soap, &soap_tmp___vw1__CurrentTime, "-vw1:CurrentTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CurrentTimeResponse)
		return soap_closesock(soap);
	vw1__CurrentTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CurrentTimeResponse->soap_get(soap, "vw1:CurrentTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveServiceContent(const char *endpoint, const char *soap_action, vw1__RetrieveServiceContentRequestType *vw1__RetrieveServiceContent, _vw1__RetrieveServiceContentResponse *vw1__RetrieveServiceContentResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveServiceContent soap_tmp___vw1__RetrieveServiceContent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveServiceContent.vw1__RetrieveServiceContent = vw1__RetrieveServiceContent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveServiceContent(soap, &soap_tmp___vw1__RetrieveServiceContent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveServiceContent(soap, &soap_tmp___vw1__RetrieveServiceContent, "-vw1:RetrieveServiceContent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveServiceContent(soap, &soap_tmp___vw1__RetrieveServiceContent, "-vw1:RetrieveServiceContent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveServiceContentResponse)
		return soap_closesock(soap);
	vw1__RetrieveServiceContentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveServiceContentResponse->soap_get(soap, "vw1:RetrieveServiceContentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ValidateMigration(const char *endpoint, const char *soap_action, vw1__ValidateMigrationRequestType *vw1__ValidateMigration, _vw1__ValidateMigrationResponse *vw1__ValidateMigrationResponse)
{	struct soap *soap = this;
	struct __vw1__ValidateMigration soap_tmp___vw1__ValidateMigration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ValidateMigration.vw1__ValidateMigration = vw1__ValidateMigration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ValidateMigration(soap, &soap_tmp___vw1__ValidateMigration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ValidateMigration(soap, &soap_tmp___vw1__ValidateMigration, "-vw1:ValidateMigration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ValidateMigration(soap, &soap_tmp___vw1__ValidateMigration, "-vw1:ValidateMigration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ValidateMigrationResponse)
		return soap_closesock(soap);
	vw1__ValidateMigrationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ValidateMigrationResponse->soap_get(soap, "vw1:ValidateMigrationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVMotionCompatibility(const char *endpoint, const char *soap_action, vw1__QueryVMotionCompatibilityRequestType *vw1__QueryVMotionCompatibility, _vw1__QueryVMotionCompatibilityResponse *vw1__QueryVMotionCompatibilityResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVMotionCompatibility soap_tmp___vw1__QueryVMotionCompatibility;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVMotionCompatibility.vw1__QueryVMotionCompatibility = vw1__QueryVMotionCompatibility;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVMotionCompatibility(soap, &soap_tmp___vw1__QueryVMotionCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVMotionCompatibility(soap, &soap_tmp___vw1__QueryVMotionCompatibility, "-vw1:QueryVMotionCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVMotionCompatibility(soap, &soap_tmp___vw1__QueryVMotionCompatibility, "-vw1:QueryVMotionCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVMotionCompatibilityResponse)
		return soap_closesock(soap);
	vw1__QueryVMotionCompatibilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVMotionCompatibilityResponse->soap_get(soap, "vw1:QueryVMotionCompatibilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveProductComponents(const char *endpoint, const char *soap_action, vw1__RetrieveProductComponentsRequestType *vw1__RetrieveProductComponents, _vw1__RetrieveProductComponentsResponse *vw1__RetrieveProductComponentsResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveProductComponents soap_tmp___vw1__RetrieveProductComponents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveProductComponents.vw1__RetrieveProductComponents = vw1__RetrieveProductComponents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveProductComponents(soap, &soap_tmp___vw1__RetrieveProductComponents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveProductComponents(soap, &soap_tmp___vw1__RetrieveProductComponents, "-vw1:RetrieveProductComponents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveProductComponents(soap, &soap_tmp___vw1__RetrieveProductComponents, "-vw1:RetrieveProductComponents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveProductComponentsResponse)
		return soap_closesock(soap);
	vw1__RetrieveProductComponentsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveProductComponentsResponse->soap_get(soap, "vw1:RetrieveProductComponentsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateServiceMessage(const char *endpoint, const char *soap_action, vw1__UpdateServiceMessageRequestType *vw1__UpdateServiceMessage, _vw1__UpdateServiceMessageResponse *vw1__UpdateServiceMessageResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateServiceMessage soap_tmp___vw1__UpdateServiceMessage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateServiceMessage.vw1__UpdateServiceMessage = vw1__UpdateServiceMessage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateServiceMessage(soap, &soap_tmp___vw1__UpdateServiceMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateServiceMessage(soap, &soap_tmp___vw1__UpdateServiceMessage, "-vw1:UpdateServiceMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateServiceMessage(soap, &soap_tmp___vw1__UpdateServiceMessage, "-vw1:UpdateServiceMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateServiceMessageResponse)
		return soap_closesock(soap);
	vw1__UpdateServiceMessageResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateServiceMessageResponse->soap_get(soap, "vw1:UpdateServiceMessageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Login(const char *endpoint, const char *soap_action, vw1__LoginRequestType *vw1__Login, _vw1__LoginResponse *vw1__LoginResponse)
{	struct soap *soap = this;
	struct __vw1__Login soap_tmp___vw1__Login;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__Login.vw1__Login = vw1__Login;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__Login(soap, &soap_tmp___vw1__Login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__Login(soap, &soap_tmp___vw1__Login, "-vw1:Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__Login(soap, &soap_tmp___vw1__Login, "-vw1:Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__LoginResponse)
		return soap_closesock(soap);
	vw1__LoginResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__LoginResponse->soap_get(soap, "vw1:LoginResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LoginBySSPI(const char *endpoint, const char *soap_action, vw1__LoginBySSPIRequestType *vw1__LoginBySSPI, _vw1__LoginBySSPIResponse *vw1__LoginBySSPIResponse)
{	struct soap *soap = this;
	struct __vw1__LoginBySSPI soap_tmp___vw1__LoginBySSPI;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__LoginBySSPI.vw1__LoginBySSPI = vw1__LoginBySSPI;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__LoginBySSPI(soap, &soap_tmp___vw1__LoginBySSPI);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__LoginBySSPI(soap, &soap_tmp___vw1__LoginBySSPI, "-vw1:LoginBySSPI", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__LoginBySSPI(soap, &soap_tmp___vw1__LoginBySSPI, "-vw1:LoginBySSPI", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__LoginBySSPIResponse)
		return soap_closesock(soap);
	vw1__LoginBySSPIResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__LoginBySSPIResponse->soap_get(soap, "vw1:LoginBySSPIResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Logout(const char *endpoint, const char *soap_action, vw1__LogoutRequestType *vw1__Logout, _vw1__LogoutResponse *vw1__LogoutResponse)
{	struct soap *soap = this;
	struct __vw1__Logout soap_tmp___vw1__Logout;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__Logout.vw1__Logout = vw1__Logout;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__Logout(soap, &soap_tmp___vw1__Logout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__Logout(soap, &soap_tmp___vw1__Logout, "-vw1:Logout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__Logout(soap, &soap_tmp___vw1__Logout, "-vw1:Logout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__LogoutResponse)
		return soap_closesock(soap);
	vw1__LogoutResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__LogoutResponse->soap_get(soap, "vw1:LogoutResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireLocalTicket(const char *endpoint, const char *soap_action, vw1__AcquireLocalTicketRequestType *vw1__AcquireLocalTicket, _vw1__AcquireLocalTicketResponse *vw1__AcquireLocalTicketResponse)
{	struct soap *soap = this;
	struct __vw1__AcquireLocalTicket soap_tmp___vw1__AcquireLocalTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AcquireLocalTicket.vw1__AcquireLocalTicket = vw1__AcquireLocalTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AcquireLocalTicket(soap, &soap_tmp___vw1__AcquireLocalTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AcquireLocalTicket(soap, &soap_tmp___vw1__AcquireLocalTicket, "-vw1:AcquireLocalTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AcquireLocalTicket(soap, &soap_tmp___vw1__AcquireLocalTicket, "-vw1:AcquireLocalTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AcquireLocalTicketResponse)
		return soap_closesock(soap);
	vw1__AcquireLocalTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AcquireLocalTicketResponse->soap_get(soap, "vw1:AcquireLocalTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireGenericServiceTicket(const char *endpoint, const char *soap_action, vw1__AcquireGenericServiceTicketRequestType *vw1__AcquireGenericServiceTicket, _vw1__AcquireGenericServiceTicketResponse *vw1__AcquireGenericServiceTicketResponse)
{	struct soap *soap = this;
	struct __vw1__AcquireGenericServiceTicket soap_tmp___vw1__AcquireGenericServiceTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AcquireGenericServiceTicket.vw1__AcquireGenericServiceTicket = vw1__AcquireGenericServiceTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AcquireGenericServiceTicket(soap, &soap_tmp___vw1__AcquireGenericServiceTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AcquireGenericServiceTicket(soap, &soap_tmp___vw1__AcquireGenericServiceTicket, "-vw1:AcquireGenericServiceTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AcquireGenericServiceTicket(soap, &soap_tmp___vw1__AcquireGenericServiceTicket, "-vw1:AcquireGenericServiceTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AcquireGenericServiceTicketResponse)
		return soap_closesock(soap);
	vw1__AcquireGenericServiceTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AcquireGenericServiceTicketResponse->soap_get(soap, "vw1:AcquireGenericServiceTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TerminateSession(const char *endpoint, const char *soap_action, vw1__TerminateSessionRequestType *vw1__TerminateSession, _vw1__TerminateSessionResponse *vw1__TerminateSessionResponse)
{	struct soap *soap = this;
	struct __vw1__TerminateSession soap_tmp___vw1__TerminateSession;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__TerminateSession.vw1__TerminateSession = vw1__TerminateSession;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__TerminateSession(soap, &soap_tmp___vw1__TerminateSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__TerminateSession(soap, &soap_tmp___vw1__TerminateSession, "-vw1:TerminateSession", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__TerminateSession(soap, &soap_tmp___vw1__TerminateSession, "-vw1:TerminateSession", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__TerminateSessionResponse)
		return soap_closesock(soap);
	vw1__TerminateSessionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__TerminateSessionResponse->soap_get(soap, "vw1:TerminateSessionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetLocale(const char *endpoint, const char *soap_action, vw1__SetLocaleRequestType *vw1__SetLocale, _vw1__SetLocaleResponse *vw1__SetLocaleResponse)
{	struct soap *soap = this;
	struct __vw1__SetLocale soap_tmp___vw1__SetLocale;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetLocale.vw1__SetLocale = vw1__SetLocale;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetLocale(soap, &soap_tmp___vw1__SetLocale);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetLocale(soap, &soap_tmp___vw1__SetLocale, "-vw1:SetLocale", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetLocale(soap, &soap_tmp___vw1__SetLocale, "-vw1:SetLocale", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetLocaleResponse)
		return soap_closesock(soap);
	vw1__SetLocaleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetLocaleResponse->soap_get(soap, "vw1:SetLocaleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LoginExtensionBySubjectName(const char *endpoint, const char *soap_action, vw1__LoginExtensionBySubjectNameRequestType *vw1__LoginExtensionBySubjectName, _vw1__LoginExtensionBySubjectNameResponse *vw1__LoginExtensionBySubjectNameResponse)
{	struct soap *soap = this;
	struct __vw1__LoginExtensionBySubjectName soap_tmp___vw1__LoginExtensionBySubjectName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__LoginExtensionBySubjectName.vw1__LoginExtensionBySubjectName = vw1__LoginExtensionBySubjectName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__LoginExtensionBySubjectName(soap, &soap_tmp___vw1__LoginExtensionBySubjectName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__LoginExtensionBySubjectName(soap, &soap_tmp___vw1__LoginExtensionBySubjectName, "-vw1:LoginExtensionBySubjectName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__LoginExtensionBySubjectName(soap, &soap_tmp___vw1__LoginExtensionBySubjectName, "-vw1:LoginExtensionBySubjectName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__LoginExtensionBySubjectNameResponse)
		return soap_closesock(soap);
	vw1__LoginExtensionBySubjectNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__LoginExtensionBySubjectNameResponse->soap_get(soap, "vw1:LoginExtensionBySubjectNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LoginExtensionByCertificate(const char *endpoint, const char *soap_action, vw1__LoginExtensionByCertificateRequestType *vw1__LoginExtensionByCertificate, _vw1__LoginExtensionByCertificateResponse *vw1__LoginExtensionByCertificateResponse)
{	struct soap *soap = this;
	struct __vw1__LoginExtensionByCertificate soap_tmp___vw1__LoginExtensionByCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__LoginExtensionByCertificate.vw1__LoginExtensionByCertificate = vw1__LoginExtensionByCertificate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__LoginExtensionByCertificate(soap, &soap_tmp___vw1__LoginExtensionByCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__LoginExtensionByCertificate(soap, &soap_tmp___vw1__LoginExtensionByCertificate, "-vw1:LoginExtensionByCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__LoginExtensionByCertificate(soap, &soap_tmp___vw1__LoginExtensionByCertificate, "-vw1:LoginExtensionByCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__LoginExtensionByCertificateResponse)
		return soap_closesock(soap);
	vw1__LoginExtensionByCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__LoginExtensionByCertificateResponse->soap_get(soap, "vw1:LoginExtensionByCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ImpersonateUser(const char *endpoint, const char *soap_action, vw1__ImpersonateUserRequestType *vw1__ImpersonateUser, _vw1__ImpersonateUserResponse *vw1__ImpersonateUserResponse)
{	struct soap *soap = this;
	struct __vw1__ImpersonateUser soap_tmp___vw1__ImpersonateUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ImpersonateUser.vw1__ImpersonateUser = vw1__ImpersonateUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ImpersonateUser(soap, &soap_tmp___vw1__ImpersonateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ImpersonateUser(soap, &soap_tmp___vw1__ImpersonateUser, "-vw1:ImpersonateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ImpersonateUser(soap, &soap_tmp___vw1__ImpersonateUser, "-vw1:ImpersonateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ImpersonateUserResponse)
		return soap_closesock(soap);
	vw1__ImpersonateUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ImpersonateUserResponse->soap_get(soap, "vw1:ImpersonateUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SessionIsActive(const char *endpoint, const char *soap_action, vw1__SessionIsActiveRequestType *vw1__SessionIsActive, _vw1__SessionIsActiveResponse *vw1__SessionIsActiveResponse)
{	struct soap *soap = this;
	struct __vw1__SessionIsActive soap_tmp___vw1__SessionIsActive;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SessionIsActive.vw1__SessionIsActive = vw1__SessionIsActive;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SessionIsActive(soap, &soap_tmp___vw1__SessionIsActive);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SessionIsActive(soap, &soap_tmp___vw1__SessionIsActive, "-vw1:SessionIsActive", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SessionIsActive(soap, &soap_tmp___vw1__SessionIsActive, "-vw1:SessionIsActive", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SessionIsActiveResponse)
		return soap_closesock(soap);
	vw1__SessionIsActiveResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SessionIsActiveResponse->soap_get(soap, "vw1:SessionIsActiveResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireCloneTicket(const char *endpoint, const char *soap_action, vw1__AcquireCloneTicketRequestType *vw1__AcquireCloneTicket, _vw1__AcquireCloneTicketResponse *vw1__AcquireCloneTicketResponse)
{	struct soap *soap = this;
	struct __vw1__AcquireCloneTicket soap_tmp___vw1__AcquireCloneTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AcquireCloneTicket.vw1__AcquireCloneTicket = vw1__AcquireCloneTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AcquireCloneTicket(soap, &soap_tmp___vw1__AcquireCloneTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AcquireCloneTicket(soap, &soap_tmp___vw1__AcquireCloneTicket, "-vw1:AcquireCloneTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AcquireCloneTicket(soap, &soap_tmp___vw1__AcquireCloneTicket, "-vw1:AcquireCloneTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AcquireCloneTicketResponse)
		return soap_closesock(soap);
	vw1__AcquireCloneTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AcquireCloneTicketResponse->soap_get(soap, "vw1:AcquireCloneTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CloneSession(const char *endpoint, const char *soap_action, vw1__CloneSessionRequestType *vw1__CloneSession, _vw1__CloneSessionResponse *vw1__CloneSessionResponse)
{	struct soap *soap = this;
	struct __vw1__CloneSession soap_tmp___vw1__CloneSession;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CloneSession.vw1__CloneSession = vw1__CloneSession;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CloneSession(soap, &soap_tmp___vw1__CloneSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CloneSession(soap, &soap_tmp___vw1__CloneSession, "-vw1:CloneSession", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CloneSession(soap, &soap_tmp___vw1__CloneSession, "-vw1:CloneSession", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CloneSessionResponse)
		return soap_closesock(soap);
	vw1__CloneSessionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CloneSessionResponse->soap_get(soap, "vw1:CloneSessionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureDatastoreIORM_USCORETask(const char *endpoint, const char *soap_action, vw1__ConfigureDatastoreIORMRequestType *vw1__ConfigureDatastoreIORM_USCORETask, _vw1__ConfigureDatastoreIORM_USCORETaskResponse *vw1__ConfigureDatastoreIORM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ConfigureDatastoreIORM_USCORETask soap_tmp___vw1__ConfigureDatastoreIORM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ConfigureDatastoreIORM_USCORETask.vw1__ConfigureDatastoreIORM_USCORETask = vw1__ConfigureDatastoreIORM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___vw1__ConfigureDatastoreIORM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___vw1__ConfigureDatastoreIORM_USCORETask, "-vw1:ConfigureDatastoreIORM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ConfigureDatastoreIORM_USCORETask(soap, &soap_tmp___vw1__ConfigureDatastoreIORM_USCORETask, "-vw1:ConfigureDatastoreIORM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ConfigureDatastoreIORM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ConfigureDatastoreIORM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ConfigureDatastoreIORM_USCORETaskResponse->soap_get(soap, "vw1:ConfigureDatastoreIORM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryIORMConfigOption(const char *endpoint, const char *soap_action, vw1__QueryIORMConfigOptionRequestType *vw1__QueryIORMConfigOption, _vw1__QueryIORMConfigOptionResponse *vw1__QueryIORMConfigOptionResponse)
{	struct soap *soap = this;
	struct __vw1__QueryIORMConfigOption soap_tmp___vw1__QueryIORMConfigOption;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryIORMConfigOption.vw1__QueryIORMConfigOption = vw1__QueryIORMConfigOption;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryIORMConfigOption(soap, &soap_tmp___vw1__QueryIORMConfigOption);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryIORMConfigOption(soap, &soap_tmp___vw1__QueryIORMConfigOption, "-vw1:QueryIORMConfigOption", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryIORMConfigOption(soap, &soap_tmp___vw1__QueryIORMConfigOption, "-vw1:QueryIORMConfigOption", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryIORMConfigOptionResponse)
		return soap_closesock(soap);
	vw1__QueryIORMConfigOptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryIORMConfigOptionResponse->soap_get(soap, "vw1:QueryIORMConfigOptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ApplyStorageDrsRecommendationToPod_USCORETask(const char *endpoint, const char *soap_action, vw1__ApplyStorageDrsRecommendationToPodRequestType *vw1__ApplyStorageDrsRecommendationToPod_USCORETask, _vw1__ApplyStorageDrsRecommendationToPod_USCORETaskResponse *vw1__ApplyStorageDrsRecommendationToPod_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ApplyStorageDrsRecommendationToPod_USCORETask soap_tmp___vw1__ApplyStorageDrsRecommendationToPod_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ApplyStorageDrsRecommendationToPod_USCORETask.vw1__ApplyStorageDrsRecommendationToPod_USCORETask = vw1__ApplyStorageDrsRecommendationToPod_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___vw1__ApplyStorageDrsRecommendationToPod_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___vw1__ApplyStorageDrsRecommendationToPod_USCORETask, "-vw1:ApplyStorageDrsRecommendationToPod_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ApplyStorageDrsRecommendationToPod_USCORETask(soap, &soap_tmp___vw1__ApplyStorageDrsRecommendationToPod_USCORETask, "-vw1:ApplyStorageDrsRecommendationToPod_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ApplyStorageDrsRecommendationToPod_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ApplyStorageDrsRecommendationToPod_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ApplyStorageDrsRecommendationToPod_USCORETaskResponse->soap_get(soap, "vw1:ApplyStorageDrsRecommendationToPod_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ApplyStorageDrsRecommendation_USCORETask(const char *endpoint, const char *soap_action, vw1__ApplyStorageDrsRecommendationRequestType *vw1__ApplyStorageDrsRecommendation_USCORETask, _vw1__ApplyStorageDrsRecommendation_USCORETaskResponse *vw1__ApplyStorageDrsRecommendation_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ApplyStorageDrsRecommendation_USCORETask soap_tmp___vw1__ApplyStorageDrsRecommendation_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ApplyStorageDrsRecommendation_USCORETask.vw1__ApplyStorageDrsRecommendation_USCORETask = vw1__ApplyStorageDrsRecommendation_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___vw1__ApplyStorageDrsRecommendation_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___vw1__ApplyStorageDrsRecommendation_USCORETask, "-vw1:ApplyStorageDrsRecommendation_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ApplyStorageDrsRecommendation_USCORETask(soap, &soap_tmp___vw1__ApplyStorageDrsRecommendation_USCORETask, "-vw1:ApplyStorageDrsRecommendation_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ApplyStorageDrsRecommendation_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ApplyStorageDrsRecommendation_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ApplyStorageDrsRecommendation_USCORETaskResponse->soap_get(soap, "vw1:ApplyStorageDrsRecommendation_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelStorageDrsRecommendation(const char *endpoint, const char *soap_action, vw1__CancelStorageDrsRecommendationRequestType *vw1__CancelStorageDrsRecommendation, _vw1__CancelStorageDrsRecommendationResponse *vw1__CancelStorageDrsRecommendationResponse)
{	struct soap *soap = this;
	struct __vw1__CancelStorageDrsRecommendation soap_tmp___vw1__CancelStorageDrsRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CancelStorageDrsRecommendation.vw1__CancelStorageDrsRecommendation = vw1__CancelStorageDrsRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CancelStorageDrsRecommendation(soap, &soap_tmp___vw1__CancelStorageDrsRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CancelStorageDrsRecommendation(soap, &soap_tmp___vw1__CancelStorageDrsRecommendation, "-vw1:CancelStorageDrsRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CancelStorageDrsRecommendation(soap, &soap_tmp___vw1__CancelStorageDrsRecommendation, "-vw1:CancelStorageDrsRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CancelStorageDrsRecommendationResponse)
		return soap_closesock(soap);
	vw1__CancelStorageDrsRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CancelStorageDrsRecommendationResponse->soap_get(soap, "vw1:CancelStorageDrsRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshStorageDrsRecommendation(const char *endpoint, const char *soap_action, vw1__RefreshStorageDrsRecommendationRequestType *vw1__RefreshStorageDrsRecommendation, _vw1__RefreshStorageDrsRecommendationResponse *vw1__RefreshStorageDrsRecommendationResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshStorageDrsRecommendation soap_tmp___vw1__RefreshStorageDrsRecommendation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshStorageDrsRecommendation.vw1__RefreshStorageDrsRecommendation = vw1__RefreshStorageDrsRecommendation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshStorageDrsRecommendation(soap, &soap_tmp___vw1__RefreshStorageDrsRecommendation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshStorageDrsRecommendation(soap, &soap_tmp___vw1__RefreshStorageDrsRecommendation, "-vw1:RefreshStorageDrsRecommendation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshStorageDrsRecommendation(soap, &soap_tmp___vw1__RefreshStorageDrsRecommendation, "-vw1:RefreshStorageDrsRecommendation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshStorageDrsRecommendationResponse)
		return soap_closesock(soap);
	vw1__RefreshStorageDrsRecommendationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshStorageDrsRecommendationResponse->soap_get(soap, "vw1:RefreshStorageDrsRecommendationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureStorageDrsForPod_USCORETask(const char *endpoint, const char *soap_action, vw1__ConfigureStorageDrsForPodRequestType *vw1__ConfigureStorageDrsForPod_USCORETask, _vw1__ConfigureStorageDrsForPod_USCORETaskResponse *vw1__ConfigureStorageDrsForPod_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ConfigureStorageDrsForPod_USCORETask soap_tmp___vw1__ConfigureStorageDrsForPod_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ConfigureStorageDrsForPod_USCORETask.vw1__ConfigureStorageDrsForPod_USCORETask = vw1__ConfigureStorageDrsForPod_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___vw1__ConfigureStorageDrsForPod_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___vw1__ConfigureStorageDrsForPod_USCORETask, "-vw1:ConfigureStorageDrsForPod_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ConfigureStorageDrsForPod_USCORETask(soap, &soap_tmp___vw1__ConfigureStorageDrsForPod_USCORETask, "-vw1:ConfigureStorageDrsForPod_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ConfigureStorageDrsForPod_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ConfigureStorageDrsForPod_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ConfigureStorageDrsForPod_USCORETaskResponse->soap_get(soap, "vw1:ConfigureStorageDrsForPod_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RecommendDatastores(const char *endpoint, const char *soap_action, vw1__RecommendDatastoresRequestType *vw1__RecommendDatastores, _vw1__RecommendDatastoresResponse *vw1__RecommendDatastoresResponse)
{	struct soap *soap = this;
	struct __vw1__RecommendDatastores soap_tmp___vw1__RecommendDatastores;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RecommendDatastores.vw1__RecommendDatastores = vw1__RecommendDatastores;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RecommendDatastores(soap, &soap_tmp___vw1__RecommendDatastores);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RecommendDatastores(soap, &soap_tmp___vw1__RecommendDatastores, "-vw1:RecommendDatastores", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RecommendDatastores(soap, &soap_tmp___vw1__RecommendDatastores, "-vw1:RecommendDatastores", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RecommendDatastoresResponse)
		return soap_closesock(soap);
	vw1__RecommendDatastoresResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RecommendDatastoresResponse->soap_get(soap, "vw1:RecommendDatastoresResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CancelTask(const char *endpoint, const char *soap_action, vw1__CancelTaskRequestType *vw1__CancelTask, _vw1__CancelTaskResponse *vw1__CancelTaskResponse)
{	struct soap *soap = this;
	struct __vw1__CancelTask soap_tmp___vw1__CancelTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CancelTask.vw1__CancelTask = vw1__CancelTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CancelTask(soap, &soap_tmp___vw1__CancelTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CancelTask(soap, &soap_tmp___vw1__CancelTask, "-vw1:CancelTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CancelTask(soap, &soap_tmp___vw1__CancelTask, "-vw1:CancelTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CancelTaskResponse)
		return soap_closesock(soap);
	vw1__CancelTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CancelTaskResponse->soap_get(soap, "vw1:CancelTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateProgress(const char *endpoint, const char *soap_action, vw1__UpdateProgressRequestType *vw1__UpdateProgress, _vw1__UpdateProgressResponse *vw1__UpdateProgressResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateProgress soap_tmp___vw1__UpdateProgress;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateProgress.vw1__UpdateProgress = vw1__UpdateProgress;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateProgress(soap, &soap_tmp___vw1__UpdateProgress);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateProgress(soap, &soap_tmp___vw1__UpdateProgress, "-vw1:UpdateProgress", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateProgress(soap, &soap_tmp___vw1__UpdateProgress, "-vw1:UpdateProgress", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateProgressResponse)
		return soap_closesock(soap);
	vw1__UpdateProgressResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateProgressResponse->soap_get(soap, "vw1:UpdateProgressResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetTaskState(const char *endpoint, const char *soap_action, vw1__SetTaskStateRequestType *vw1__SetTaskState, _vw1__SetTaskStateResponse *vw1__SetTaskStateResponse)
{	struct soap *soap = this;
	struct __vw1__SetTaskState soap_tmp___vw1__SetTaskState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetTaskState.vw1__SetTaskState = vw1__SetTaskState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetTaskState(soap, &soap_tmp___vw1__SetTaskState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetTaskState(soap, &soap_tmp___vw1__SetTaskState, "-vw1:SetTaskState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetTaskState(soap, &soap_tmp___vw1__SetTaskState, "-vw1:SetTaskState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetTaskStateResponse)
		return soap_closesock(soap);
	vw1__SetTaskStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetTaskStateResponse->soap_get(soap, "vw1:SetTaskStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetTaskDescription(const char *endpoint, const char *soap_action, vw1__SetTaskDescriptionRequestType *vw1__SetTaskDescription, _vw1__SetTaskDescriptionResponse *vw1__SetTaskDescriptionResponse)
{	struct soap *soap = this;
	struct __vw1__SetTaskDescription soap_tmp___vw1__SetTaskDescription;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetTaskDescription.vw1__SetTaskDescription = vw1__SetTaskDescription;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetTaskDescription(soap, &soap_tmp___vw1__SetTaskDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetTaskDescription(soap, &soap_tmp___vw1__SetTaskDescription, "-vw1:SetTaskDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetTaskDescription(soap, &soap_tmp___vw1__SetTaskDescription, "-vw1:SetTaskDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetTaskDescriptionResponse)
		return soap_closesock(soap);
	vw1__SetTaskDescriptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetTaskDescriptionResponse->soap_get(soap, "vw1:SetTaskDescriptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadNextTasks(const char *endpoint, const char *soap_action, vw1__ReadNextTasksRequestType *vw1__ReadNextTasks, _vw1__ReadNextTasksResponse *vw1__ReadNextTasksResponse)
{	struct soap *soap = this;
	struct __vw1__ReadNextTasks soap_tmp___vw1__ReadNextTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReadNextTasks.vw1__ReadNextTasks = vw1__ReadNextTasks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReadNextTasks(soap, &soap_tmp___vw1__ReadNextTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReadNextTasks(soap, &soap_tmp___vw1__ReadNextTasks, "-vw1:ReadNextTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReadNextTasks(soap, &soap_tmp___vw1__ReadNextTasks, "-vw1:ReadNextTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReadNextTasksResponse)
		return soap_closesock(soap);
	vw1__ReadNextTasksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReadNextTasksResponse->soap_get(soap, "vw1:ReadNextTasksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadPreviousTasks(const char *endpoint, const char *soap_action, vw1__ReadPreviousTasksRequestType *vw1__ReadPreviousTasks, _vw1__ReadPreviousTasksResponse *vw1__ReadPreviousTasksResponse)
{	struct soap *soap = this;
	struct __vw1__ReadPreviousTasks soap_tmp___vw1__ReadPreviousTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReadPreviousTasks.vw1__ReadPreviousTasks = vw1__ReadPreviousTasks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReadPreviousTasks(soap, &soap_tmp___vw1__ReadPreviousTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReadPreviousTasks(soap, &soap_tmp___vw1__ReadPreviousTasks, "-vw1:ReadPreviousTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReadPreviousTasks(soap, &soap_tmp___vw1__ReadPreviousTasks, "-vw1:ReadPreviousTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReadPreviousTasksResponse)
		return soap_closesock(soap);
	vw1__ReadPreviousTasksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReadPreviousTasksResponse->soap_get(soap, "vw1:ReadPreviousTasksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateCollectorForTasks(const char *endpoint, const char *soap_action, vw1__CreateCollectorForTasksRequestType *vw1__CreateCollectorForTasks, _vw1__CreateCollectorForTasksResponse *vw1__CreateCollectorForTasksResponse)
{	struct soap *soap = this;
	struct __vw1__CreateCollectorForTasks soap_tmp___vw1__CreateCollectorForTasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateCollectorForTasks.vw1__CreateCollectorForTasks = vw1__CreateCollectorForTasks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateCollectorForTasks(soap, &soap_tmp___vw1__CreateCollectorForTasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateCollectorForTasks(soap, &soap_tmp___vw1__CreateCollectorForTasks, "-vw1:CreateCollectorForTasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateCollectorForTasks(soap, &soap_tmp___vw1__CreateCollectorForTasks, "-vw1:CreateCollectorForTasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateCollectorForTasksResponse)
		return soap_closesock(soap);
	vw1__CreateCollectorForTasksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateCollectorForTasksResponse->soap_get(soap, "vw1:CreateCollectorForTasksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateTask(const char *endpoint, const char *soap_action, vw1__CreateTaskRequestType *vw1__CreateTask, _vw1__CreateTaskResponse *vw1__CreateTaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateTask soap_tmp___vw1__CreateTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateTask.vw1__CreateTask = vw1__CreateTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateTask(soap, &soap_tmp___vw1__CreateTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateTask(soap, &soap_tmp___vw1__CreateTask, "-vw1:CreateTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateTask(soap, &soap_tmp___vw1__CreateTask, "-vw1:CreateTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateTaskResponse)
		return soap_closesock(soap);
	vw1__CreateTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateTaskResponse->soap_get(soap, "vw1:CreateTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveUserGroups(const char *endpoint, const char *soap_action, vw1__RetrieveUserGroupsRequestType *vw1__RetrieveUserGroups, _vw1__RetrieveUserGroupsResponse *vw1__RetrieveUserGroupsResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveUserGroups soap_tmp___vw1__RetrieveUserGroups;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveUserGroups.vw1__RetrieveUserGroups = vw1__RetrieveUserGroups;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveUserGroups(soap, &soap_tmp___vw1__RetrieveUserGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveUserGroups(soap, &soap_tmp___vw1__RetrieveUserGroups, "-vw1:RetrieveUserGroups", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveUserGroups(soap, &soap_tmp___vw1__RetrieveUserGroups, "-vw1:RetrieveUserGroups", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveUserGroupsResponse)
		return soap_closesock(soap);
	vw1__RetrieveUserGroupsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveUserGroupsResponse->soap_get(soap, "vw1:RetrieveUserGroupsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVAppConfig(const char *endpoint, const char *soap_action, vw1__UpdateVAppConfigRequestType *vw1__UpdateVAppConfig, _vw1__UpdateVAppConfigResponse *vw1__UpdateVAppConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateVAppConfig soap_tmp___vw1__UpdateVAppConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateVAppConfig.vw1__UpdateVAppConfig = vw1__UpdateVAppConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateVAppConfig(soap, &soap_tmp___vw1__UpdateVAppConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateVAppConfig(soap, &soap_tmp___vw1__UpdateVAppConfig, "-vw1:UpdateVAppConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateVAppConfig(soap, &soap_tmp___vw1__UpdateVAppConfig, "-vw1:UpdateVAppConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateVAppConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateVAppConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateVAppConfigResponse->soap_get(soap, "vw1:UpdateVAppConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLinkedChildren(const char *endpoint, const char *soap_action, vw1__UpdateLinkedChildrenRequestType *vw1__UpdateLinkedChildren, _vw1__UpdateLinkedChildrenResponse *vw1__UpdateLinkedChildrenResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateLinkedChildren soap_tmp___vw1__UpdateLinkedChildren;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateLinkedChildren.vw1__UpdateLinkedChildren = vw1__UpdateLinkedChildren;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateLinkedChildren(soap, &soap_tmp___vw1__UpdateLinkedChildren);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateLinkedChildren(soap, &soap_tmp___vw1__UpdateLinkedChildren, "-vw1:UpdateLinkedChildren", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateLinkedChildren(soap, &soap_tmp___vw1__UpdateLinkedChildren, "-vw1:UpdateLinkedChildren", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateLinkedChildrenResponse)
		return soap_closesock(soap);
	vw1__UpdateLinkedChildrenResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateLinkedChildrenResponse->soap_get(soap, "vw1:UpdateLinkedChildrenResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CloneVApp_USCORETask(const char *endpoint, const char *soap_action, vw1__CloneVAppRequestType *vw1__CloneVApp_USCORETask, _vw1__CloneVApp_USCORETaskResponse *vw1__CloneVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CloneVApp_USCORETask soap_tmp___vw1__CloneVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CloneVApp_USCORETask.vw1__CloneVApp_USCORETask = vw1__CloneVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CloneVApp_USCORETask(soap, &soap_tmp___vw1__CloneVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CloneVApp_USCORETask(soap, &soap_tmp___vw1__CloneVApp_USCORETask, "-vw1:CloneVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CloneVApp_USCORETask(soap, &soap_tmp___vw1__CloneVApp_USCORETask, "-vw1:CloneVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CloneVApp_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CloneVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CloneVApp_USCORETaskResponse->soap_get(soap, "vw1:CloneVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportVApp(const char *endpoint, const char *soap_action, vw1__ExportVAppRequestType *vw1__ExportVApp, _vw1__ExportVAppResponse *vw1__ExportVAppResponse)
{	struct soap *soap = this;
	struct __vw1__ExportVApp soap_tmp___vw1__ExportVApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExportVApp.vw1__ExportVApp = vw1__ExportVApp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExportVApp(soap, &soap_tmp___vw1__ExportVApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExportVApp(soap, &soap_tmp___vw1__ExportVApp, "-vw1:ExportVApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExportVApp(soap, &soap_tmp___vw1__ExportVApp, "-vw1:ExportVApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExportVAppResponse)
		return soap_closesock(soap);
	vw1__ExportVAppResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExportVAppResponse->soap_get(soap, "vw1:ExportVAppResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOnVApp_USCORETask(const char *endpoint, const char *soap_action, vw1__PowerOnVAppRequestType *vw1__PowerOnVApp_USCORETask, _vw1__PowerOnVApp_USCORETaskResponse *vw1__PowerOnVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PowerOnVApp_USCORETask soap_tmp___vw1__PowerOnVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PowerOnVApp_USCORETask.vw1__PowerOnVApp_USCORETask = vw1__PowerOnVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PowerOnVApp_USCORETask(soap, &soap_tmp___vw1__PowerOnVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PowerOnVApp_USCORETask(soap, &soap_tmp___vw1__PowerOnVApp_USCORETask, "-vw1:PowerOnVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PowerOnVApp_USCORETask(soap, &soap_tmp___vw1__PowerOnVApp_USCORETask, "-vw1:PowerOnVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PowerOnVApp_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PowerOnVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PowerOnVApp_USCORETaskResponse->soap_get(soap, "vw1:PowerOnVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOffVApp_USCORETask(const char *endpoint, const char *soap_action, vw1__PowerOffVAppRequestType *vw1__PowerOffVApp_USCORETask, _vw1__PowerOffVApp_USCORETaskResponse *vw1__PowerOffVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PowerOffVApp_USCORETask soap_tmp___vw1__PowerOffVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PowerOffVApp_USCORETask.vw1__PowerOffVApp_USCORETask = vw1__PowerOffVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PowerOffVApp_USCORETask(soap, &soap_tmp___vw1__PowerOffVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PowerOffVApp_USCORETask(soap, &soap_tmp___vw1__PowerOffVApp_USCORETask, "-vw1:PowerOffVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PowerOffVApp_USCORETask(soap, &soap_tmp___vw1__PowerOffVApp_USCORETask, "-vw1:PowerOffVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PowerOffVApp_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PowerOffVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PowerOffVApp_USCORETaskResponse->soap_get(soap, "vw1:PowerOffVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SuspendVApp_USCORETask(const char *endpoint, const char *soap_action, vw1__SuspendVAppRequestType *vw1__SuspendVApp_USCORETask, _vw1__SuspendVApp_USCORETaskResponse *vw1__SuspendVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__SuspendVApp_USCORETask soap_tmp___vw1__SuspendVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SuspendVApp_USCORETask.vw1__SuspendVApp_USCORETask = vw1__SuspendVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SuspendVApp_USCORETask(soap, &soap_tmp___vw1__SuspendVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SuspendVApp_USCORETask(soap, &soap_tmp___vw1__SuspendVApp_USCORETask, "-vw1:SuspendVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SuspendVApp_USCORETask(soap, &soap_tmp___vw1__SuspendVApp_USCORETask, "-vw1:SuspendVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SuspendVApp_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__SuspendVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SuspendVApp_USCORETaskResponse->soap_get(soap, "vw1:SuspendVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::unregisterVApp_USCORETask(const char *endpoint, const char *soap_action, vw1__unregisterVAppRequestType *vw1__unregisterVApp_USCORETask, _vw1__unregisterVApp_USCORETaskResponse *vw1__unregisterVApp_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__unregisterVApp_USCORETask soap_tmp___vw1__unregisterVApp_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__unregisterVApp_USCORETask.vw1__unregisterVApp_USCORETask = vw1__unregisterVApp_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__unregisterVApp_USCORETask(soap, &soap_tmp___vw1__unregisterVApp_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__unregisterVApp_USCORETask(soap, &soap_tmp___vw1__unregisterVApp_USCORETask, "-vw1:unregisterVApp_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__unregisterVApp_USCORETask(soap, &soap_tmp___vw1__unregisterVApp_USCORETask, "-vw1:unregisterVApp_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__unregisterVApp_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__unregisterVApp_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__unregisterVApp_USCORETaskResponse->soap_get(soap, "vw1:unregisterVApp_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__CreateVirtualDiskRequestType *vw1__CreateVirtualDisk_USCORETask, _vw1__CreateVirtualDisk_USCORETaskResponse *vw1__CreateVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateVirtualDisk_USCORETask soap_tmp___vw1__CreateVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateVirtualDisk_USCORETask.vw1__CreateVirtualDisk_USCORETask = vw1__CreateVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateVirtualDisk_USCORETask(soap, &soap_tmp___vw1__CreateVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateVirtualDisk_USCORETask(soap, &soap_tmp___vw1__CreateVirtualDisk_USCORETask, "-vw1:CreateVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateVirtualDisk_USCORETask(soap, &soap_tmp___vw1__CreateVirtualDisk_USCORETask, "-vw1:CreateVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CreateVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:CreateVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__DeleteVirtualDiskRequestType *vw1__DeleteVirtualDisk_USCORETask, _vw1__DeleteVirtualDisk_USCORETaskResponse *vw1__DeleteVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__DeleteVirtualDisk_USCORETask soap_tmp___vw1__DeleteVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DeleteVirtualDisk_USCORETask.vw1__DeleteVirtualDisk_USCORETask = vw1__DeleteVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___vw1__DeleteVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___vw1__DeleteVirtualDisk_USCORETask, "-vw1:DeleteVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DeleteVirtualDisk_USCORETask(soap, &soap_tmp___vw1__DeleteVirtualDisk_USCORETask, "-vw1:DeleteVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DeleteVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__DeleteVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DeleteVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:DeleteVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__MoveVirtualDiskRequestType *vw1__MoveVirtualDisk_USCORETask, _vw1__MoveVirtualDisk_USCORETaskResponse *vw1__MoveVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MoveVirtualDisk_USCORETask soap_tmp___vw1__MoveVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveVirtualDisk_USCORETask.vw1__MoveVirtualDisk_USCORETask = vw1__MoveVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveVirtualDisk_USCORETask(soap, &soap_tmp___vw1__MoveVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveVirtualDisk_USCORETask(soap, &soap_tmp___vw1__MoveVirtualDisk_USCORETask, "-vw1:MoveVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveVirtualDisk_USCORETask(soap, &soap_tmp___vw1__MoveVirtualDisk_USCORETask, "-vw1:MoveVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MoveVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:MoveVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CopyVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__CopyVirtualDiskRequestType *vw1__CopyVirtualDisk_USCORETask, _vw1__CopyVirtualDisk_USCORETaskResponse *vw1__CopyVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CopyVirtualDisk_USCORETask soap_tmp___vw1__CopyVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CopyVirtualDisk_USCORETask.vw1__CopyVirtualDisk_USCORETask = vw1__CopyVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CopyVirtualDisk_USCORETask(soap, &soap_tmp___vw1__CopyVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CopyVirtualDisk_USCORETask(soap, &soap_tmp___vw1__CopyVirtualDisk_USCORETask, "-vw1:CopyVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CopyVirtualDisk_USCORETask(soap, &soap_tmp___vw1__CopyVirtualDisk_USCORETask, "-vw1:CopyVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CopyVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CopyVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CopyVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:CopyVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExtendVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__ExtendVirtualDiskRequestType *vw1__ExtendVirtualDisk_USCORETask, _vw1__ExtendVirtualDisk_USCORETaskResponse *vw1__ExtendVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ExtendVirtualDisk_USCORETask soap_tmp___vw1__ExtendVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExtendVirtualDisk_USCORETask.vw1__ExtendVirtualDisk_USCORETask = vw1__ExtendVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ExtendVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ExtendVirtualDisk_USCORETask, "-vw1:ExtendVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExtendVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ExtendVirtualDisk_USCORETask, "-vw1:ExtendVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExtendVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ExtendVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExtendVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:ExtendVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVirtualDiskFragmentation(const char *endpoint, const char *soap_action, vw1__QueryVirtualDiskFragmentationRequestType *vw1__QueryVirtualDiskFragmentation, _vw1__QueryVirtualDiskFragmentationResponse *vw1__QueryVirtualDiskFragmentationResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVirtualDiskFragmentation soap_tmp___vw1__QueryVirtualDiskFragmentation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVirtualDiskFragmentation.vw1__QueryVirtualDiskFragmentation = vw1__QueryVirtualDiskFragmentation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVirtualDiskFragmentation(soap, &soap_tmp___vw1__QueryVirtualDiskFragmentation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVirtualDiskFragmentation(soap, &soap_tmp___vw1__QueryVirtualDiskFragmentation, "-vw1:QueryVirtualDiskFragmentation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVirtualDiskFragmentation(soap, &soap_tmp___vw1__QueryVirtualDiskFragmentation, "-vw1:QueryVirtualDiskFragmentation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVirtualDiskFragmentationResponse)
		return soap_closesock(soap);
	vw1__QueryVirtualDiskFragmentationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVirtualDiskFragmentationResponse->soap_get(soap, "vw1:QueryVirtualDiskFragmentationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DefragmentVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__DefragmentVirtualDiskRequestType *vw1__DefragmentVirtualDisk_USCORETask, _vw1__DefragmentVirtualDisk_USCORETaskResponse *vw1__DefragmentVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__DefragmentVirtualDisk_USCORETask soap_tmp___vw1__DefragmentVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DefragmentVirtualDisk_USCORETask.vw1__DefragmentVirtualDisk_USCORETask = vw1__DefragmentVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___vw1__DefragmentVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___vw1__DefragmentVirtualDisk_USCORETask, "-vw1:DefragmentVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DefragmentVirtualDisk_USCORETask(soap, &soap_tmp___vw1__DefragmentVirtualDisk_USCORETask, "-vw1:DefragmentVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DefragmentVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__DefragmentVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DefragmentVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:DefragmentVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ShrinkVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__ShrinkVirtualDiskRequestType *vw1__ShrinkVirtualDisk_USCORETask, _vw1__ShrinkVirtualDisk_USCORETaskResponse *vw1__ShrinkVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ShrinkVirtualDisk_USCORETask soap_tmp___vw1__ShrinkVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ShrinkVirtualDisk_USCORETask.vw1__ShrinkVirtualDisk_USCORETask = vw1__ShrinkVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ShrinkVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ShrinkVirtualDisk_USCORETask, "-vw1:ShrinkVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ShrinkVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ShrinkVirtualDisk_USCORETask, "-vw1:ShrinkVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ShrinkVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ShrinkVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ShrinkVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:ShrinkVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InflateVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__InflateVirtualDiskRequestType *vw1__InflateVirtualDisk_USCORETask, _vw1__InflateVirtualDisk_USCORETaskResponse *vw1__InflateVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__InflateVirtualDisk_USCORETask soap_tmp___vw1__InflateVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__InflateVirtualDisk_USCORETask.vw1__InflateVirtualDisk_USCORETask = vw1__InflateVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__InflateVirtualDisk_USCORETask(soap, &soap_tmp___vw1__InflateVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__InflateVirtualDisk_USCORETask(soap, &soap_tmp___vw1__InflateVirtualDisk_USCORETask, "-vw1:InflateVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__InflateVirtualDisk_USCORETask(soap, &soap_tmp___vw1__InflateVirtualDisk_USCORETask, "-vw1:InflateVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__InflateVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__InflateVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__InflateVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:InflateVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EagerZeroVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__EagerZeroVirtualDiskRequestType *vw1__EagerZeroVirtualDisk_USCORETask, _vw1__EagerZeroVirtualDisk_USCORETaskResponse *vw1__EagerZeroVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__EagerZeroVirtualDisk_USCORETask soap_tmp___vw1__EagerZeroVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EagerZeroVirtualDisk_USCORETask.vw1__EagerZeroVirtualDisk_USCORETask = vw1__EagerZeroVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___vw1__EagerZeroVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___vw1__EagerZeroVirtualDisk_USCORETask, "-vw1:EagerZeroVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EagerZeroVirtualDisk_USCORETask(soap, &soap_tmp___vw1__EagerZeroVirtualDisk_USCORETask, "-vw1:EagerZeroVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EagerZeroVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__EagerZeroVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EagerZeroVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:EagerZeroVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ZeroFillVirtualDisk_USCORETask(const char *endpoint, const char *soap_action, vw1__ZeroFillVirtualDiskRequestType *vw1__ZeroFillVirtualDisk_USCORETask, _vw1__ZeroFillVirtualDisk_USCORETaskResponse *vw1__ZeroFillVirtualDisk_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ZeroFillVirtualDisk_USCORETask soap_tmp___vw1__ZeroFillVirtualDisk_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ZeroFillVirtualDisk_USCORETask.vw1__ZeroFillVirtualDisk_USCORETask = vw1__ZeroFillVirtualDisk_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ZeroFillVirtualDisk_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ZeroFillVirtualDisk_USCORETask, "-vw1:ZeroFillVirtualDisk_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ZeroFillVirtualDisk_USCORETask(soap, &soap_tmp___vw1__ZeroFillVirtualDisk_USCORETask, "-vw1:ZeroFillVirtualDisk_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ZeroFillVirtualDisk_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ZeroFillVirtualDisk_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ZeroFillVirtualDisk_USCORETaskResponse->soap_get(soap, "vw1:ZeroFillVirtualDisk_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetVirtualDiskUuid(const char *endpoint, const char *soap_action, vw1__SetVirtualDiskUuidRequestType *vw1__SetVirtualDiskUuid, _vw1__SetVirtualDiskUuidResponse *vw1__SetVirtualDiskUuidResponse)
{	struct soap *soap = this;
	struct __vw1__SetVirtualDiskUuid soap_tmp___vw1__SetVirtualDiskUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetVirtualDiskUuid.vw1__SetVirtualDiskUuid = vw1__SetVirtualDiskUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetVirtualDiskUuid(soap, &soap_tmp___vw1__SetVirtualDiskUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetVirtualDiskUuid(soap, &soap_tmp___vw1__SetVirtualDiskUuid, "-vw1:SetVirtualDiskUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetVirtualDiskUuid(soap, &soap_tmp___vw1__SetVirtualDiskUuid, "-vw1:SetVirtualDiskUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetVirtualDiskUuidResponse)
		return soap_closesock(soap);
	vw1__SetVirtualDiskUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetVirtualDiskUuidResponse->soap_get(soap, "vw1:SetVirtualDiskUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVirtualDiskUuid(const char *endpoint, const char *soap_action, vw1__QueryVirtualDiskUuidRequestType *vw1__QueryVirtualDiskUuid, _vw1__QueryVirtualDiskUuidResponse *vw1__QueryVirtualDiskUuidResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVirtualDiskUuid soap_tmp___vw1__QueryVirtualDiskUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVirtualDiskUuid.vw1__QueryVirtualDiskUuid = vw1__QueryVirtualDiskUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVirtualDiskUuid(soap, &soap_tmp___vw1__QueryVirtualDiskUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVirtualDiskUuid(soap, &soap_tmp___vw1__QueryVirtualDiskUuid, "-vw1:QueryVirtualDiskUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVirtualDiskUuid(soap, &soap_tmp___vw1__QueryVirtualDiskUuid, "-vw1:QueryVirtualDiskUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVirtualDiskUuidResponse)
		return soap_closesock(soap);
	vw1__QueryVirtualDiskUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVirtualDiskUuidResponse->soap_get(soap, "vw1:QueryVirtualDiskUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVirtualDiskGeometry(const char *endpoint, const char *soap_action, vw1__QueryVirtualDiskGeometryRequestType *vw1__QueryVirtualDiskGeometry, _vw1__QueryVirtualDiskGeometryResponse *vw1__QueryVirtualDiskGeometryResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVirtualDiskGeometry soap_tmp___vw1__QueryVirtualDiskGeometry;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVirtualDiskGeometry.vw1__QueryVirtualDiskGeometry = vw1__QueryVirtualDiskGeometry;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVirtualDiskGeometry(soap, &soap_tmp___vw1__QueryVirtualDiskGeometry);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVirtualDiskGeometry(soap, &soap_tmp___vw1__QueryVirtualDiskGeometry, "-vw1:QueryVirtualDiskGeometry", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVirtualDiskGeometry(soap, &soap_tmp___vw1__QueryVirtualDiskGeometry, "-vw1:QueryVirtualDiskGeometry", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVirtualDiskGeometryResponse)
		return soap_closesock(soap);
	vw1__QueryVirtualDiskGeometryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVirtualDiskGeometryResponse->soap_get(soap, "vw1:QueryVirtualDiskGeometryResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshStorageInfo(const char *endpoint, const char *soap_action, vw1__RefreshStorageInfoRequestType *vw1__RefreshStorageInfo, _vw1__RefreshStorageInfoResponse *vw1__RefreshStorageInfoResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshStorageInfo soap_tmp___vw1__RefreshStorageInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshStorageInfo.vw1__RefreshStorageInfo = vw1__RefreshStorageInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshStorageInfo(soap, &soap_tmp___vw1__RefreshStorageInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshStorageInfo(soap, &soap_tmp___vw1__RefreshStorageInfo, "-vw1:RefreshStorageInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshStorageInfo(soap, &soap_tmp___vw1__RefreshStorageInfo, "-vw1:RefreshStorageInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshStorageInfoResponse)
		return soap_closesock(soap);
	vw1__RefreshStorageInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshStorageInfoResponse->soap_get(soap, "vw1:RefreshStorageInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateSnapshot_USCORETask(const char *endpoint, const char *soap_action, vw1__CreateSnapshotRequestType *vw1__CreateSnapshot_USCORETask, _vw1__CreateSnapshot_USCORETaskResponse *vw1__CreateSnapshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateSnapshot_USCORETask soap_tmp___vw1__CreateSnapshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateSnapshot_USCORETask.vw1__CreateSnapshot_USCORETask = vw1__CreateSnapshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateSnapshot_USCORETask(soap, &soap_tmp___vw1__CreateSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateSnapshot_USCORETask(soap, &soap_tmp___vw1__CreateSnapshot_USCORETask, "-vw1:CreateSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateSnapshot_USCORETask(soap, &soap_tmp___vw1__CreateSnapshot_USCORETask, "-vw1:CreateSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CreateSnapshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateSnapshot_USCORETaskResponse->soap_get(soap, "vw1:CreateSnapshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RevertToCurrentSnapshot_USCORETask(const char *endpoint, const char *soap_action, vw1__RevertToCurrentSnapshotRequestType *vw1__RevertToCurrentSnapshot_USCORETask, _vw1__RevertToCurrentSnapshot_USCORETaskResponse *vw1__RevertToCurrentSnapshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RevertToCurrentSnapshot_USCORETask soap_tmp___vw1__RevertToCurrentSnapshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RevertToCurrentSnapshot_USCORETask.vw1__RevertToCurrentSnapshot_USCORETask = vw1__RevertToCurrentSnapshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___vw1__RevertToCurrentSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___vw1__RevertToCurrentSnapshot_USCORETask, "-vw1:RevertToCurrentSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RevertToCurrentSnapshot_USCORETask(soap, &soap_tmp___vw1__RevertToCurrentSnapshot_USCORETask, "-vw1:RevertToCurrentSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RevertToCurrentSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RevertToCurrentSnapshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RevertToCurrentSnapshot_USCORETaskResponse->soap_get(soap, "vw1:RevertToCurrentSnapshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveAllSnapshots_USCORETask(const char *endpoint, const char *soap_action, vw1__RemoveAllSnapshotsRequestType *vw1__RemoveAllSnapshots_USCORETask, _vw1__RemoveAllSnapshots_USCORETaskResponse *vw1__RemoveAllSnapshots_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveAllSnapshots_USCORETask soap_tmp___vw1__RemoveAllSnapshots_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveAllSnapshots_USCORETask.vw1__RemoveAllSnapshots_USCORETask = vw1__RemoveAllSnapshots_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___vw1__RemoveAllSnapshots_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___vw1__RemoveAllSnapshots_USCORETask, "-vw1:RemoveAllSnapshots_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveAllSnapshots_USCORETask(soap, &soap_tmp___vw1__RemoveAllSnapshots_USCORETask, "-vw1:RemoveAllSnapshots_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveAllSnapshots_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RemoveAllSnapshots_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveAllSnapshots_USCORETaskResponse->soap_get(soap, "vw1:RemoveAllSnapshots_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConsolidateVMDisks_USCORETask(const char *endpoint, const char *soap_action, vw1__ConsolidateVMDisksRequestType *vw1__ConsolidateVMDisks_USCORETask, _vw1__ConsolidateVMDisks_USCORETaskResponse *vw1__ConsolidateVMDisks_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ConsolidateVMDisks_USCORETask soap_tmp___vw1__ConsolidateVMDisks_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ConsolidateVMDisks_USCORETask.vw1__ConsolidateVMDisks_USCORETask = vw1__ConsolidateVMDisks_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___vw1__ConsolidateVMDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___vw1__ConsolidateVMDisks_USCORETask, "-vw1:ConsolidateVMDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ConsolidateVMDisks_USCORETask(soap, &soap_tmp___vw1__ConsolidateVMDisks_USCORETask, "-vw1:ConsolidateVMDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ConsolidateVMDisks_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ConsolidateVMDisks_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ConsolidateVMDisks_USCORETaskResponse->soap_get(soap, "vw1:ConsolidateVMDisks_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EstimateStorageForConsolidateSnapshots_USCORETask(const char *endpoint, const char *soap_action, vw1__EstimateStorageForConsolidateSnapshotsRequestType *vw1__EstimateStorageForConsolidateSnapshots_USCORETask, _vw1__EstimateStorageForConsolidateSnapshots_USCORETaskResponse *vw1__EstimateStorageForConsolidateSnapshots_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__EstimateStorageForConsolidateSnapshots_USCORETask soap_tmp___vw1__EstimateStorageForConsolidateSnapshots_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EstimateStorageForConsolidateSnapshots_USCORETask.vw1__EstimateStorageForConsolidateSnapshots_USCORETask = vw1__EstimateStorageForConsolidateSnapshots_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___vw1__EstimateStorageForConsolidateSnapshots_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___vw1__EstimateStorageForConsolidateSnapshots_USCORETask, "-vw1:EstimateStorageForConsolidateSnapshots_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EstimateStorageForConsolidateSnapshots_USCORETask(soap, &soap_tmp___vw1__EstimateStorageForConsolidateSnapshots_USCORETask, "-vw1:EstimateStorageForConsolidateSnapshots_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EstimateStorageForConsolidateSnapshots_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__EstimateStorageForConsolidateSnapshots_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EstimateStorageForConsolidateSnapshots_USCORETaskResponse->soap_get(soap, "vw1:EstimateStorageForConsolidateSnapshots_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigVM_USCORETask(const char *endpoint, const char *soap_action, vw1__ReconfigVMRequestType *vw1__ReconfigVM_USCORETask, _vw1__ReconfigVM_USCORETaskResponse *vw1__ReconfigVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigVM_USCORETask soap_tmp___vw1__ReconfigVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigVM_USCORETask.vw1__ReconfigVM_USCORETask = vw1__ReconfigVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigVM_USCORETask(soap, &soap_tmp___vw1__ReconfigVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigVM_USCORETask(soap, &soap_tmp___vw1__ReconfigVM_USCORETask, "-vw1:ReconfigVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigVM_USCORETask(soap, &soap_tmp___vw1__ReconfigVM_USCORETask, "-vw1:ReconfigVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ReconfigVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigVM_USCORETaskResponse->soap_get(soap, "vw1:ReconfigVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeVM_USCORETask(const char *endpoint, const char *soap_action, vw1__UpgradeVMRequestType *vw1__UpgradeVM_USCORETask, _vw1__UpgradeVM_USCORETaskResponse *vw1__UpgradeVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__UpgradeVM_USCORETask soap_tmp___vw1__UpgradeVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpgradeVM_USCORETask.vw1__UpgradeVM_USCORETask = vw1__UpgradeVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpgradeVM_USCORETask(soap, &soap_tmp___vw1__UpgradeVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpgradeVM_USCORETask(soap, &soap_tmp___vw1__UpgradeVM_USCORETask, "-vw1:UpgradeVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpgradeVM_USCORETask(soap, &soap_tmp___vw1__UpgradeVM_USCORETask, "-vw1:UpgradeVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpgradeVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__UpgradeVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpgradeVM_USCORETaskResponse->soap_get(soap, "vw1:UpgradeVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExtractOvfEnvironment(const char *endpoint, const char *soap_action, vw1__ExtractOvfEnvironmentRequestType *vw1__ExtractOvfEnvironment, _vw1__ExtractOvfEnvironmentResponse *vw1__ExtractOvfEnvironmentResponse)
{	struct soap *soap = this;
	struct __vw1__ExtractOvfEnvironment soap_tmp___vw1__ExtractOvfEnvironment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExtractOvfEnvironment.vw1__ExtractOvfEnvironment = vw1__ExtractOvfEnvironment;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExtractOvfEnvironment(soap, &soap_tmp___vw1__ExtractOvfEnvironment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExtractOvfEnvironment(soap, &soap_tmp___vw1__ExtractOvfEnvironment, "-vw1:ExtractOvfEnvironment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExtractOvfEnvironment(soap, &soap_tmp___vw1__ExtractOvfEnvironment, "-vw1:ExtractOvfEnvironment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExtractOvfEnvironmentResponse)
		return soap_closesock(soap);
	vw1__ExtractOvfEnvironmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExtractOvfEnvironmentResponse->soap_get(soap, "vw1:ExtractOvfEnvironmentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOnVM_USCORETask(const char *endpoint, const char *soap_action, vw1__PowerOnVMRequestType *vw1__PowerOnVM_USCORETask, _vw1__PowerOnVM_USCORETaskResponse *vw1__PowerOnVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PowerOnVM_USCORETask soap_tmp___vw1__PowerOnVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PowerOnVM_USCORETask.vw1__PowerOnVM_USCORETask = vw1__PowerOnVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PowerOnVM_USCORETask(soap, &soap_tmp___vw1__PowerOnVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PowerOnVM_USCORETask(soap, &soap_tmp___vw1__PowerOnVM_USCORETask, "-vw1:PowerOnVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PowerOnVM_USCORETask(soap, &soap_tmp___vw1__PowerOnVM_USCORETask, "-vw1:PowerOnVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PowerOnVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PowerOnVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PowerOnVM_USCORETaskResponse->soap_get(soap, "vw1:PowerOnVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PowerOffVM_USCORETask(const char *endpoint, const char *soap_action, vw1__PowerOffVMRequestType *vw1__PowerOffVM_USCORETask, _vw1__PowerOffVM_USCORETaskResponse *vw1__PowerOffVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PowerOffVM_USCORETask soap_tmp___vw1__PowerOffVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PowerOffVM_USCORETask.vw1__PowerOffVM_USCORETask = vw1__PowerOffVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PowerOffVM_USCORETask(soap, &soap_tmp___vw1__PowerOffVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PowerOffVM_USCORETask(soap, &soap_tmp___vw1__PowerOffVM_USCORETask, "-vw1:PowerOffVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PowerOffVM_USCORETask(soap, &soap_tmp___vw1__PowerOffVM_USCORETask, "-vw1:PowerOffVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PowerOffVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PowerOffVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PowerOffVM_USCORETaskResponse->soap_get(soap, "vw1:PowerOffVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SuspendVM_USCORETask(const char *endpoint, const char *soap_action, vw1__SuspendVMRequestType *vw1__SuspendVM_USCORETask, _vw1__SuspendVM_USCORETaskResponse *vw1__SuspendVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__SuspendVM_USCORETask soap_tmp___vw1__SuspendVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SuspendVM_USCORETask.vw1__SuspendVM_USCORETask = vw1__SuspendVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SuspendVM_USCORETask(soap, &soap_tmp___vw1__SuspendVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SuspendVM_USCORETask(soap, &soap_tmp___vw1__SuspendVM_USCORETask, "-vw1:SuspendVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SuspendVM_USCORETask(soap, &soap_tmp___vw1__SuspendVM_USCORETask, "-vw1:SuspendVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SuspendVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__SuspendVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SuspendVM_USCORETaskResponse->soap_get(soap, "vw1:SuspendVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetVM_USCORETask(const char *endpoint, const char *soap_action, vw1__ResetVMRequestType *vw1__ResetVM_USCORETask, _vw1__ResetVM_USCORETaskResponse *vw1__ResetVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ResetVM_USCORETask soap_tmp___vw1__ResetVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetVM_USCORETask.vw1__ResetVM_USCORETask = vw1__ResetVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetVM_USCORETask(soap, &soap_tmp___vw1__ResetVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetVM_USCORETask(soap, &soap_tmp___vw1__ResetVM_USCORETask, "-vw1:ResetVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetVM_USCORETask(soap, &soap_tmp___vw1__ResetVM_USCORETask, "-vw1:ResetVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ResetVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetVM_USCORETaskResponse->soap_get(soap, "vw1:ResetVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ShutdownGuest(const char *endpoint, const char *soap_action, vw1__ShutdownGuestRequestType *vw1__ShutdownGuest, _vw1__ShutdownGuestResponse *vw1__ShutdownGuestResponse)
{	struct soap *soap = this;
	struct __vw1__ShutdownGuest soap_tmp___vw1__ShutdownGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ShutdownGuest.vw1__ShutdownGuest = vw1__ShutdownGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ShutdownGuest(soap, &soap_tmp___vw1__ShutdownGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ShutdownGuest(soap, &soap_tmp___vw1__ShutdownGuest, "-vw1:ShutdownGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ShutdownGuest(soap, &soap_tmp___vw1__ShutdownGuest, "-vw1:ShutdownGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ShutdownGuestResponse)
		return soap_closesock(soap);
	vw1__ShutdownGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ShutdownGuestResponse->soap_get(soap, "vw1:ShutdownGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RebootGuest(const char *endpoint, const char *soap_action, vw1__RebootGuestRequestType *vw1__RebootGuest, _vw1__RebootGuestResponse *vw1__RebootGuestResponse)
{	struct soap *soap = this;
	struct __vw1__RebootGuest soap_tmp___vw1__RebootGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RebootGuest.vw1__RebootGuest = vw1__RebootGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RebootGuest(soap, &soap_tmp___vw1__RebootGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RebootGuest(soap, &soap_tmp___vw1__RebootGuest, "-vw1:RebootGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RebootGuest(soap, &soap_tmp___vw1__RebootGuest, "-vw1:RebootGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RebootGuestResponse)
		return soap_closesock(soap);
	vw1__RebootGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RebootGuestResponse->soap_get(soap, "vw1:RebootGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StandbyGuest(const char *endpoint, const char *soap_action, vw1__StandbyGuestRequestType *vw1__StandbyGuest, _vw1__StandbyGuestResponse *vw1__StandbyGuestResponse)
{	struct soap *soap = this;
	struct __vw1__StandbyGuest soap_tmp___vw1__StandbyGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StandbyGuest.vw1__StandbyGuest = vw1__StandbyGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StandbyGuest(soap, &soap_tmp___vw1__StandbyGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StandbyGuest(soap, &soap_tmp___vw1__StandbyGuest, "-vw1:StandbyGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StandbyGuest(soap, &soap_tmp___vw1__StandbyGuest, "-vw1:StandbyGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StandbyGuestResponse)
		return soap_closesock(soap);
	vw1__StandbyGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StandbyGuestResponse->soap_get(soap, "vw1:StandbyGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AnswerVM(const char *endpoint, const char *soap_action, vw1__AnswerVMRequestType *vw1__AnswerVM, _vw1__AnswerVMResponse *vw1__AnswerVMResponse)
{	struct soap *soap = this;
	struct __vw1__AnswerVM soap_tmp___vw1__AnswerVM;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AnswerVM.vw1__AnswerVM = vw1__AnswerVM;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AnswerVM(soap, &soap_tmp___vw1__AnswerVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AnswerVM(soap, &soap_tmp___vw1__AnswerVM, "-vw1:AnswerVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AnswerVM(soap, &soap_tmp___vw1__AnswerVM, "-vw1:AnswerVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AnswerVMResponse)
		return soap_closesock(soap);
	vw1__AnswerVMResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AnswerVMResponse->soap_get(soap, "vw1:AnswerVMResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CustomizeVM_USCORETask(const char *endpoint, const char *soap_action, vw1__CustomizeVMRequestType *vw1__CustomizeVM_USCORETask, _vw1__CustomizeVM_USCORETaskResponse *vw1__CustomizeVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CustomizeVM_USCORETask soap_tmp___vw1__CustomizeVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CustomizeVM_USCORETask.vw1__CustomizeVM_USCORETask = vw1__CustomizeVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CustomizeVM_USCORETask(soap, &soap_tmp___vw1__CustomizeVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CustomizeVM_USCORETask(soap, &soap_tmp___vw1__CustomizeVM_USCORETask, "-vw1:CustomizeVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CustomizeVM_USCORETask(soap, &soap_tmp___vw1__CustomizeVM_USCORETask, "-vw1:CustomizeVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CustomizeVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CustomizeVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CustomizeVM_USCORETaskResponse->soap_get(soap, "vw1:CustomizeVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckCustomizationSpec(const char *endpoint, const char *soap_action, vw1__CheckCustomizationSpecRequestType *vw1__CheckCustomizationSpec, _vw1__CheckCustomizationSpecResponse *vw1__CheckCustomizationSpecResponse)
{	struct soap *soap = this;
	struct __vw1__CheckCustomizationSpec soap_tmp___vw1__CheckCustomizationSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckCustomizationSpec.vw1__CheckCustomizationSpec = vw1__CheckCustomizationSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckCustomizationSpec(soap, &soap_tmp___vw1__CheckCustomizationSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckCustomizationSpec(soap, &soap_tmp___vw1__CheckCustomizationSpec, "-vw1:CheckCustomizationSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckCustomizationSpec(soap, &soap_tmp___vw1__CheckCustomizationSpec, "-vw1:CheckCustomizationSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckCustomizationSpecResponse)
		return soap_closesock(soap);
	vw1__CheckCustomizationSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckCustomizationSpecResponse->soap_get(soap, "vw1:CheckCustomizationSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MigrateVM_USCORETask(const char *endpoint, const char *soap_action, vw1__MigrateVMRequestType *vw1__MigrateVM_USCORETask, _vw1__MigrateVM_USCORETaskResponse *vw1__MigrateVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MigrateVM_USCORETask soap_tmp___vw1__MigrateVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MigrateVM_USCORETask.vw1__MigrateVM_USCORETask = vw1__MigrateVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MigrateVM_USCORETask(soap, &soap_tmp___vw1__MigrateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MigrateVM_USCORETask(soap, &soap_tmp___vw1__MigrateVM_USCORETask, "-vw1:MigrateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MigrateVM_USCORETask(soap, &soap_tmp___vw1__MigrateVM_USCORETask, "-vw1:MigrateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MigrateVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MigrateVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MigrateVM_USCORETaskResponse->soap_get(soap, "vw1:MigrateVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RelocateVM_USCORETask(const char *endpoint, const char *soap_action, vw1__RelocateVMRequestType *vw1__RelocateVM_USCORETask, _vw1__RelocateVM_USCORETaskResponse *vw1__RelocateVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RelocateVM_USCORETask soap_tmp___vw1__RelocateVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RelocateVM_USCORETask.vw1__RelocateVM_USCORETask = vw1__RelocateVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RelocateVM_USCORETask(soap, &soap_tmp___vw1__RelocateVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RelocateVM_USCORETask(soap, &soap_tmp___vw1__RelocateVM_USCORETask, "-vw1:RelocateVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RelocateVM_USCORETask(soap, &soap_tmp___vw1__RelocateVM_USCORETask, "-vw1:RelocateVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RelocateVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RelocateVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RelocateVM_USCORETaskResponse->soap_get(soap, "vw1:RelocateVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CloneVM_USCORETask(const char *endpoint, const char *soap_action, vw1__CloneVMRequestType *vw1__CloneVM_USCORETask, _vw1__CloneVM_USCORETaskResponse *vw1__CloneVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CloneVM_USCORETask soap_tmp___vw1__CloneVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CloneVM_USCORETask.vw1__CloneVM_USCORETask = vw1__CloneVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CloneVM_USCORETask(soap, &soap_tmp___vw1__CloneVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CloneVM_USCORETask(soap, &soap_tmp___vw1__CloneVM_USCORETask, "-vw1:CloneVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CloneVM_USCORETask(soap, &soap_tmp___vw1__CloneVM_USCORETask, "-vw1:CloneVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CloneVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CloneVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CloneVM_USCORETaskResponse->soap_get(soap, "vw1:CloneVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportVm(const char *endpoint, const char *soap_action, vw1__ExportVmRequestType *vw1__ExportVm, _vw1__ExportVmResponse *vw1__ExportVmResponse)
{	struct soap *soap = this;
	struct __vw1__ExportVm soap_tmp___vw1__ExportVm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExportVm.vw1__ExportVm = vw1__ExportVm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExportVm(soap, &soap_tmp___vw1__ExportVm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExportVm(soap, &soap_tmp___vw1__ExportVm, "-vw1:ExportVm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExportVm(soap, &soap_tmp___vw1__ExportVm, "-vw1:ExportVm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExportVmResponse)
		return soap_closesock(soap);
	vw1__ExportVmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExportVmResponse->soap_get(soap, "vw1:ExportVmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkAsTemplate(const char *endpoint, const char *soap_action, vw1__MarkAsTemplateRequestType *vw1__MarkAsTemplate, _vw1__MarkAsTemplateResponse *vw1__MarkAsTemplateResponse)
{	struct soap *soap = this;
	struct __vw1__MarkAsTemplate soap_tmp___vw1__MarkAsTemplate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MarkAsTemplate.vw1__MarkAsTemplate = vw1__MarkAsTemplate;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MarkAsTemplate(soap, &soap_tmp___vw1__MarkAsTemplate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MarkAsTemplate(soap, &soap_tmp___vw1__MarkAsTemplate, "-vw1:MarkAsTemplate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MarkAsTemplate(soap, &soap_tmp___vw1__MarkAsTemplate, "-vw1:MarkAsTemplate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MarkAsTemplateResponse)
		return soap_closesock(soap);
	vw1__MarkAsTemplateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MarkAsTemplateResponse->soap_get(soap, "vw1:MarkAsTemplateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkAsVirtualMachine(const char *endpoint, const char *soap_action, vw1__MarkAsVirtualMachineRequestType *vw1__MarkAsVirtualMachine, _vw1__MarkAsVirtualMachineResponse *vw1__MarkAsVirtualMachineResponse)
{	struct soap *soap = this;
	struct __vw1__MarkAsVirtualMachine soap_tmp___vw1__MarkAsVirtualMachine;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MarkAsVirtualMachine.vw1__MarkAsVirtualMachine = vw1__MarkAsVirtualMachine;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MarkAsVirtualMachine(soap, &soap_tmp___vw1__MarkAsVirtualMachine);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MarkAsVirtualMachine(soap, &soap_tmp___vw1__MarkAsVirtualMachine, "-vw1:MarkAsVirtualMachine", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MarkAsVirtualMachine(soap, &soap_tmp___vw1__MarkAsVirtualMachine, "-vw1:MarkAsVirtualMachine", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MarkAsVirtualMachineResponse)
		return soap_closesock(soap);
	vw1__MarkAsVirtualMachineResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MarkAsVirtualMachineResponse->soap_get(soap, "vw1:MarkAsVirtualMachineResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnregisterVM(const char *endpoint, const char *soap_action, vw1__UnregisterVMRequestType *vw1__UnregisterVM, _vw1__UnregisterVMResponse *vw1__UnregisterVMResponse)
{	struct soap *soap = this;
	struct __vw1__UnregisterVM soap_tmp___vw1__UnregisterVM;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UnregisterVM.vw1__UnregisterVM = vw1__UnregisterVM;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UnregisterVM(soap, &soap_tmp___vw1__UnregisterVM);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UnregisterVM(soap, &soap_tmp___vw1__UnregisterVM, "-vw1:UnregisterVM", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UnregisterVM(soap, &soap_tmp___vw1__UnregisterVM, "-vw1:UnregisterVM", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UnregisterVMResponse)
		return soap_closesock(soap);
	vw1__UnregisterVMResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UnregisterVMResponse->soap_get(soap, "vw1:UnregisterVMResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetGuestInformation(const char *endpoint, const char *soap_action, vw1__ResetGuestInformationRequestType *vw1__ResetGuestInformation, _vw1__ResetGuestInformationResponse *vw1__ResetGuestInformationResponse)
{	struct soap *soap = this;
	struct __vw1__ResetGuestInformation soap_tmp___vw1__ResetGuestInformation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetGuestInformation.vw1__ResetGuestInformation = vw1__ResetGuestInformation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetGuestInformation(soap, &soap_tmp___vw1__ResetGuestInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetGuestInformation(soap, &soap_tmp___vw1__ResetGuestInformation, "-vw1:ResetGuestInformation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetGuestInformation(soap, &soap_tmp___vw1__ResetGuestInformation, "-vw1:ResetGuestInformation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetGuestInformationResponse)
		return soap_closesock(soap);
	vw1__ResetGuestInformationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetGuestInformationResponse->soap_get(soap, "vw1:ResetGuestInformationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MountToolsInstaller(const char *endpoint, const char *soap_action, vw1__MountToolsInstallerRequestType *vw1__MountToolsInstaller, _vw1__MountToolsInstallerResponse *vw1__MountToolsInstallerResponse)
{	struct soap *soap = this;
	struct __vw1__MountToolsInstaller soap_tmp___vw1__MountToolsInstaller;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MountToolsInstaller.vw1__MountToolsInstaller = vw1__MountToolsInstaller;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MountToolsInstaller(soap, &soap_tmp___vw1__MountToolsInstaller);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MountToolsInstaller(soap, &soap_tmp___vw1__MountToolsInstaller, "-vw1:MountToolsInstaller", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MountToolsInstaller(soap, &soap_tmp___vw1__MountToolsInstaller, "-vw1:MountToolsInstaller", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MountToolsInstallerResponse)
		return soap_closesock(soap);
	vw1__MountToolsInstallerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MountToolsInstallerResponse->soap_get(soap, "vw1:MountToolsInstallerResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountToolsInstaller(const char *endpoint, const char *soap_action, vw1__UnmountToolsInstallerRequestType *vw1__UnmountToolsInstaller, _vw1__UnmountToolsInstallerResponse *vw1__UnmountToolsInstallerResponse)
{	struct soap *soap = this;
	struct __vw1__UnmountToolsInstaller soap_tmp___vw1__UnmountToolsInstaller;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UnmountToolsInstaller.vw1__UnmountToolsInstaller = vw1__UnmountToolsInstaller;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UnmountToolsInstaller(soap, &soap_tmp___vw1__UnmountToolsInstaller);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UnmountToolsInstaller(soap, &soap_tmp___vw1__UnmountToolsInstaller, "-vw1:UnmountToolsInstaller", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UnmountToolsInstaller(soap, &soap_tmp___vw1__UnmountToolsInstaller, "-vw1:UnmountToolsInstaller", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UnmountToolsInstallerResponse)
		return soap_closesock(soap);
	vw1__UnmountToolsInstallerResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UnmountToolsInstallerResponse->soap_get(soap, "vw1:UnmountToolsInstallerResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeTools_USCORETask(const char *endpoint, const char *soap_action, vw1__UpgradeToolsRequestType *vw1__UpgradeTools_USCORETask, _vw1__UpgradeTools_USCORETaskResponse *vw1__UpgradeTools_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__UpgradeTools_USCORETask soap_tmp___vw1__UpgradeTools_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpgradeTools_USCORETask.vw1__UpgradeTools_USCORETask = vw1__UpgradeTools_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpgradeTools_USCORETask(soap, &soap_tmp___vw1__UpgradeTools_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpgradeTools_USCORETask(soap, &soap_tmp___vw1__UpgradeTools_USCORETask, "-vw1:UpgradeTools_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpgradeTools_USCORETask(soap, &soap_tmp___vw1__UpgradeTools_USCORETask, "-vw1:UpgradeTools_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpgradeTools_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__UpgradeTools_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpgradeTools_USCORETaskResponse->soap_get(soap, "vw1:UpgradeTools_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireMksTicket(const char *endpoint, const char *soap_action, vw1__AcquireMksTicketRequestType *vw1__AcquireMksTicket, _vw1__AcquireMksTicketResponse *vw1__AcquireMksTicketResponse)
{	struct soap *soap = this;
	struct __vw1__AcquireMksTicket soap_tmp___vw1__AcquireMksTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AcquireMksTicket.vw1__AcquireMksTicket = vw1__AcquireMksTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AcquireMksTicket(soap, &soap_tmp___vw1__AcquireMksTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AcquireMksTicket(soap, &soap_tmp___vw1__AcquireMksTicket, "-vw1:AcquireMksTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AcquireMksTicket(soap, &soap_tmp___vw1__AcquireMksTicket, "-vw1:AcquireMksTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AcquireMksTicketResponse)
		return soap_closesock(soap);
	vw1__AcquireMksTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AcquireMksTicketResponse->soap_get(soap, "vw1:AcquireMksTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireTicket(const char *endpoint, const char *soap_action, vw1__AcquireTicketRequestType *vw1__AcquireTicket, _vw1__AcquireTicketResponse *vw1__AcquireTicketResponse)
{	struct soap *soap = this;
	struct __vw1__AcquireTicket soap_tmp___vw1__AcquireTicket;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AcquireTicket.vw1__AcquireTicket = vw1__AcquireTicket;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AcquireTicket(soap, &soap_tmp___vw1__AcquireTicket);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AcquireTicket(soap, &soap_tmp___vw1__AcquireTicket, "-vw1:AcquireTicket", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AcquireTicket(soap, &soap_tmp___vw1__AcquireTicket, "-vw1:AcquireTicket", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AcquireTicketResponse)
		return soap_closesock(soap);
	vw1__AcquireTicketResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AcquireTicketResponse->soap_get(soap, "vw1:AcquireTicketResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetScreenResolution(const char *endpoint, const char *soap_action, vw1__SetScreenResolutionRequestType *vw1__SetScreenResolution, _vw1__SetScreenResolutionResponse *vw1__SetScreenResolutionResponse)
{	struct soap *soap = this;
	struct __vw1__SetScreenResolution soap_tmp___vw1__SetScreenResolution;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetScreenResolution.vw1__SetScreenResolution = vw1__SetScreenResolution;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetScreenResolution(soap, &soap_tmp___vw1__SetScreenResolution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetScreenResolution(soap, &soap_tmp___vw1__SetScreenResolution, "-vw1:SetScreenResolution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetScreenResolution(soap, &soap_tmp___vw1__SetScreenResolution, "-vw1:SetScreenResolution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetScreenResolutionResponse)
		return soap_closesock(soap);
	vw1__SetScreenResolutionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetScreenResolutionResponse->soap_get(soap, "vw1:SetScreenResolutionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DefragmentAllDisks(const char *endpoint, const char *soap_action, vw1__DefragmentAllDisksRequestType *vw1__DefragmentAllDisks, _vw1__DefragmentAllDisksResponse *vw1__DefragmentAllDisksResponse)
{	struct soap *soap = this;
	struct __vw1__DefragmentAllDisks soap_tmp___vw1__DefragmentAllDisks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DefragmentAllDisks.vw1__DefragmentAllDisks = vw1__DefragmentAllDisks;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DefragmentAllDisks(soap, &soap_tmp___vw1__DefragmentAllDisks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DefragmentAllDisks(soap, &soap_tmp___vw1__DefragmentAllDisks, "-vw1:DefragmentAllDisks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DefragmentAllDisks(soap, &soap_tmp___vw1__DefragmentAllDisks, "-vw1:DefragmentAllDisks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DefragmentAllDisksResponse)
		return soap_closesock(soap);
	vw1__DefragmentAllDisksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DefragmentAllDisksResponse->soap_get(soap, "vw1:DefragmentAllDisksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateSecondaryVM_USCORETask(const char *endpoint, const char *soap_action, vw1__CreateSecondaryVMRequestType *vw1__CreateSecondaryVM_USCORETask, _vw1__CreateSecondaryVM_USCORETaskResponse *vw1__CreateSecondaryVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateSecondaryVM_USCORETask soap_tmp___vw1__CreateSecondaryVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateSecondaryVM_USCORETask.vw1__CreateSecondaryVM_USCORETask = vw1__CreateSecondaryVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateSecondaryVM_USCORETask(soap, &soap_tmp___vw1__CreateSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateSecondaryVM_USCORETask(soap, &soap_tmp___vw1__CreateSecondaryVM_USCORETask, "-vw1:CreateSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateSecondaryVM_USCORETask(soap, &soap_tmp___vw1__CreateSecondaryVM_USCORETask, "-vw1:CreateSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CreateSecondaryVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateSecondaryVM_USCORETaskResponse->soap_get(soap, "vw1:CreateSecondaryVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TurnOffFaultToleranceForVM_USCORETask(const char *endpoint, const char *soap_action, vw1__TurnOffFaultToleranceForVMRequestType *vw1__TurnOffFaultToleranceForVM_USCORETask, _vw1__TurnOffFaultToleranceForVM_USCORETaskResponse *vw1__TurnOffFaultToleranceForVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__TurnOffFaultToleranceForVM_USCORETask soap_tmp___vw1__TurnOffFaultToleranceForVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__TurnOffFaultToleranceForVM_USCORETask.vw1__TurnOffFaultToleranceForVM_USCORETask = vw1__TurnOffFaultToleranceForVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___vw1__TurnOffFaultToleranceForVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___vw1__TurnOffFaultToleranceForVM_USCORETask, "-vw1:TurnOffFaultToleranceForVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__TurnOffFaultToleranceForVM_USCORETask(soap, &soap_tmp___vw1__TurnOffFaultToleranceForVM_USCORETask, "-vw1:TurnOffFaultToleranceForVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__TurnOffFaultToleranceForVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__TurnOffFaultToleranceForVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__TurnOffFaultToleranceForVM_USCORETaskResponse->soap_get(soap, "vw1:TurnOffFaultToleranceForVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MakePrimaryVM_USCORETask(const char *endpoint, const char *soap_action, vw1__MakePrimaryVMRequestType *vw1__MakePrimaryVM_USCORETask, _vw1__MakePrimaryVM_USCORETaskResponse *vw1__MakePrimaryVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__MakePrimaryVM_USCORETask soap_tmp___vw1__MakePrimaryVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MakePrimaryVM_USCORETask.vw1__MakePrimaryVM_USCORETask = vw1__MakePrimaryVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MakePrimaryVM_USCORETask(soap, &soap_tmp___vw1__MakePrimaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MakePrimaryVM_USCORETask(soap, &soap_tmp___vw1__MakePrimaryVM_USCORETask, "-vw1:MakePrimaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MakePrimaryVM_USCORETask(soap, &soap_tmp___vw1__MakePrimaryVM_USCORETask, "-vw1:MakePrimaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MakePrimaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__MakePrimaryVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MakePrimaryVM_USCORETaskResponse->soap_get(soap, "vw1:MakePrimaryVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TerminateFaultTolerantVM_USCORETask(const char *endpoint, const char *soap_action, vw1__TerminateFaultTolerantVMRequestType *vw1__TerminateFaultTolerantVM_USCORETask, _vw1__TerminateFaultTolerantVM_USCORETaskResponse *vw1__TerminateFaultTolerantVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__TerminateFaultTolerantVM_USCORETask soap_tmp___vw1__TerminateFaultTolerantVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__TerminateFaultTolerantVM_USCORETask.vw1__TerminateFaultTolerantVM_USCORETask = vw1__TerminateFaultTolerantVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___vw1__TerminateFaultTolerantVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___vw1__TerminateFaultTolerantVM_USCORETask, "-vw1:TerminateFaultTolerantVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__TerminateFaultTolerantVM_USCORETask(soap, &soap_tmp___vw1__TerminateFaultTolerantVM_USCORETask, "-vw1:TerminateFaultTolerantVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__TerminateFaultTolerantVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__TerminateFaultTolerantVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__TerminateFaultTolerantVM_USCORETaskResponse->soap_get(soap, "vw1:TerminateFaultTolerantVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableSecondaryVM_USCORETask(const char *endpoint, const char *soap_action, vw1__DisableSecondaryVMRequestType *vw1__DisableSecondaryVM_USCORETask, _vw1__DisableSecondaryVM_USCORETaskResponse *vw1__DisableSecondaryVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__DisableSecondaryVM_USCORETask soap_tmp___vw1__DisableSecondaryVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DisableSecondaryVM_USCORETask.vw1__DisableSecondaryVM_USCORETask = vw1__DisableSecondaryVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DisableSecondaryVM_USCORETask(soap, &soap_tmp___vw1__DisableSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DisableSecondaryVM_USCORETask(soap, &soap_tmp___vw1__DisableSecondaryVM_USCORETask, "-vw1:DisableSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DisableSecondaryVM_USCORETask(soap, &soap_tmp___vw1__DisableSecondaryVM_USCORETask, "-vw1:DisableSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DisableSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__DisableSecondaryVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DisableSecondaryVM_USCORETaskResponse->soap_get(soap, "vw1:DisableSecondaryVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableSecondaryVM_USCORETask(const char *endpoint, const char *soap_action, vw1__EnableSecondaryVMRequestType *vw1__EnableSecondaryVM_USCORETask, _vw1__EnableSecondaryVM_USCORETaskResponse *vw1__EnableSecondaryVM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__EnableSecondaryVM_USCORETask soap_tmp___vw1__EnableSecondaryVM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnableSecondaryVM_USCORETask.vw1__EnableSecondaryVM_USCORETask = vw1__EnableSecondaryVM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnableSecondaryVM_USCORETask(soap, &soap_tmp___vw1__EnableSecondaryVM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnableSecondaryVM_USCORETask(soap, &soap_tmp___vw1__EnableSecondaryVM_USCORETask, "-vw1:EnableSecondaryVM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnableSecondaryVM_USCORETask(soap, &soap_tmp___vw1__EnableSecondaryVM_USCORETask, "-vw1:EnableSecondaryVM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnableSecondaryVM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__EnableSecondaryVM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnableSecondaryVM_USCORETaskResponse->soap_get(soap, "vw1:EnableSecondaryVM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetDisplayTopology(const char *endpoint, const char *soap_action, vw1__SetDisplayTopologyRequestType *vw1__SetDisplayTopology, _vw1__SetDisplayTopologyResponse *vw1__SetDisplayTopologyResponse)
{	struct soap *soap = this;
	struct __vw1__SetDisplayTopology soap_tmp___vw1__SetDisplayTopology;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetDisplayTopology.vw1__SetDisplayTopology = vw1__SetDisplayTopology;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetDisplayTopology(soap, &soap_tmp___vw1__SetDisplayTopology);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetDisplayTopology(soap, &soap_tmp___vw1__SetDisplayTopology, "-vw1:SetDisplayTopology", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetDisplayTopology(soap, &soap_tmp___vw1__SetDisplayTopology, "-vw1:SetDisplayTopology", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetDisplayTopologyResponse)
		return soap_closesock(soap);
	vw1__SetDisplayTopologyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetDisplayTopologyResponse->soap_get(soap, "vw1:SetDisplayTopologyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StartRecording_USCORETask(const char *endpoint, const char *soap_action, vw1__StartRecordingRequestType *vw1__StartRecording_USCORETask, _vw1__StartRecording_USCORETaskResponse *vw1__StartRecording_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__StartRecording_USCORETask soap_tmp___vw1__StartRecording_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StartRecording_USCORETask.vw1__StartRecording_USCORETask = vw1__StartRecording_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StartRecording_USCORETask(soap, &soap_tmp___vw1__StartRecording_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StartRecording_USCORETask(soap, &soap_tmp___vw1__StartRecording_USCORETask, "-vw1:StartRecording_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StartRecording_USCORETask(soap, &soap_tmp___vw1__StartRecording_USCORETask, "-vw1:StartRecording_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StartRecording_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__StartRecording_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StartRecording_USCORETaskResponse->soap_get(soap, "vw1:StartRecording_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StopRecording_USCORETask(const char *endpoint, const char *soap_action, vw1__StopRecordingRequestType *vw1__StopRecording_USCORETask, _vw1__StopRecording_USCORETaskResponse *vw1__StopRecording_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__StopRecording_USCORETask soap_tmp___vw1__StopRecording_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StopRecording_USCORETask.vw1__StopRecording_USCORETask = vw1__StopRecording_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StopRecording_USCORETask(soap, &soap_tmp___vw1__StopRecording_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StopRecording_USCORETask(soap, &soap_tmp___vw1__StopRecording_USCORETask, "-vw1:StopRecording_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StopRecording_USCORETask(soap, &soap_tmp___vw1__StopRecording_USCORETask, "-vw1:StopRecording_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StopRecording_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__StopRecording_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StopRecording_USCORETaskResponse->soap_get(soap, "vw1:StopRecording_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StartReplaying_USCORETask(const char *endpoint, const char *soap_action, vw1__StartReplayingRequestType *vw1__StartReplaying_USCORETask, _vw1__StartReplaying_USCORETaskResponse *vw1__StartReplaying_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__StartReplaying_USCORETask soap_tmp___vw1__StartReplaying_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StartReplaying_USCORETask.vw1__StartReplaying_USCORETask = vw1__StartReplaying_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StartReplaying_USCORETask(soap, &soap_tmp___vw1__StartReplaying_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StartReplaying_USCORETask(soap, &soap_tmp___vw1__StartReplaying_USCORETask, "-vw1:StartReplaying_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StartReplaying_USCORETask(soap, &soap_tmp___vw1__StartReplaying_USCORETask, "-vw1:StartReplaying_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StartReplaying_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__StartReplaying_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StartReplaying_USCORETaskResponse->soap_get(soap, "vw1:StartReplaying_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StopReplaying_USCORETask(const char *endpoint, const char *soap_action, vw1__StopReplayingRequestType *vw1__StopReplaying_USCORETask, _vw1__StopReplaying_USCORETaskResponse *vw1__StopReplaying_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__StopReplaying_USCORETask soap_tmp___vw1__StopReplaying_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StopReplaying_USCORETask.vw1__StopReplaying_USCORETask = vw1__StopReplaying_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StopReplaying_USCORETask(soap, &soap_tmp___vw1__StopReplaying_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StopReplaying_USCORETask(soap, &soap_tmp___vw1__StopReplaying_USCORETask, "-vw1:StopReplaying_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StopReplaying_USCORETask(soap, &soap_tmp___vw1__StopReplaying_USCORETask, "-vw1:StopReplaying_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StopReplaying_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__StopReplaying_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StopReplaying_USCORETaskResponse->soap_get(soap, "vw1:StopReplaying_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PromoteDisks_USCORETask(const char *endpoint, const char *soap_action, vw1__PromoteDisksRequestType *vw1__PromoteDisks_USCORETask, _vw1__PromoteDisks_USCORETaskResponse *vw1__PromoteDisks_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__PromoteDisks_USCORETask soap_tmp___vw1__PromoteDisks_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PromoteDisks_USCORETask.vw1__PromoteDisks_USCORETask = vw1__PromoteDisks_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PromoteDisks_USCORETask(soap, &soap_tmp___vw1__PromoteDisks_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PromoteDisks_USCORETask(soap, &soap_tmp___vw1__PromoteDisks_USCORETask, "-vw1:PromoteDisks_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PromoteDisks_USCORETask(soap, &soap_tmp___vw1__PromoteDisks_USCORETask, "-vw1:PromoteDisks_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PromoteDisks_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__PromoteDisks_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PromoteDisks_USCORETaskResponse->soap_get(soap, "vw1:PromoteDisks_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateScreenshot_USCORETask(const char *endpoint, const char *soap_action, vw1__CreateScreenshotRequestType *vw1__CreateScreenshot_USCORETask, _vw1__CreateScreenshot_USCORETaskResponse *vw1__CreateScreenshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateScreenshot_USCORETask soap_tmp___vw1__CreateScreenshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateScreenshot_USCORETask.vw1__CreateScreenshot_USCORETask = vw1__CreateScreenshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateScreenshot_USCORETask(soap, &soap_tmp___vw1__CreateScreenshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateScreenshot_USCORETask(soap, &soap_tmp___vw1__CreateScreenshot_USCORETask, "-vw1:CreateScreenshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateScreenshot_USCORETask(soap, &soap_tmp___vw1__CreateScreenshot_USCORETask, "-vw1:CreateScreenshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateScreenshot_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CreateScreenshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateScreenshot_USCORETaskResponse->soap_get(soap, "vw1:CreateScreenshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryChangedDiskAreas(const char *endpoint, const char *soap_action, vw1__QueryChangedDiskAreasRequestType *vw1__QueryChangedDiskAreas, _vw1__QueryChangedDiskAreasResponse *vw1__QueryChangedDiskAreasResponse)
{	struct soap *soap = this;
	struct __vw1__QueryChangedDiskAreas soap_tmp___vw1__QueryChangedDiskAreas;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryChangedDiskAreas.vw1__QueryChangedDiskAreas = vw1__QueryChangedDiskAreas;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryChangedDiskAreas(soap, &soap_tmp___vw1__QueryChangedDiskAreas);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryChangedDiskAreas(soap, &soap_tmp___vw1__QueryChangedDiskAreas, "-vw1:QueryChangedDiskAreas", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryChangedDiskAreas(soap, &soap_tmp___vw1__QueryChangedDiskAreas, "-vw1:QueryChangedDiskAreas", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryChangedDiskAreasResponse)
		return soap_closesock(soap);
	vw1__QueryChangedDiskAreasResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryChangedDiskAreasResponse->soap_get(soap, "vw1:QueryChangedDiskAreasResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryUnownedFiles(const char *endpoint, const char *soap_action, vw1__QueryUnownedFilesRequestType *vw1__QueryUnownedFiles, _vw1__QueryUnownedFilesResponse *vw1__QueryUnownedFilesResponse)
{	struct soap *soap = this;
	struct __vw1__QueryUnownedFiles soap_tmp___vw1__QueryUnownedFiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryUnownedFiles.vw1__QueryUnownedFiles = vw1__QueryUnownedFiles;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryUnownedFiles(soap, &soap_tmp___vw1__QueryUnownedFiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryUnownedFiles(soap, &soap_tmp___vw1__QueryUnownedFiles, "-vw1:QueryUnownedFiles", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryUnownedFiles(soap, &soap_tmp___vw1__QueryUnownedFiles, "-vw1:QueryUnownedFiles", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryUnownedFilesResponse)
		return soap_closesock(soap);
	vw1__QueryUnownedFilesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryUnownedFilesResponse->soap_get(soap, "vw1:QueryUnownedFilesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::reloadVirtualMachineFromPath_USCORETask(const char *endpoint, const char *soap_action, vw1__reloadVirtualMachineFromPathRequestType *vw1__reloadVirtualMachineFromPath_USCORETask, _vw1__reloadVirtualMachineFromPath_USCORETaskResponse *vw1__reloadVirtualMachineFromPath_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__reloadVirtualMachineFromPath_USCORETask soap_tmp___vw1__reloadVirtualMachineFromPath_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__reloadVirtualMachineFromPath_USCORETask.vw1__reloadVirtualMachineFromPath_USCORETask = vw1__reloadVirtualMachineFromPath_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___vw1__reloadVirtualMachineFromPath_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___vw1__reloadVirtualMachineFromPath_USCORETask, "-vw1:reloadVirtualMachineFromPath_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__reloadVirtualMachineFromPath_USCORETask(soap, &soap_tmp___vw1__reloadVirtualMachineFromPath_USCORETask, "-vw1:reloadVirtualMachineFromPath_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__reloadVirtualMachineFromPath_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__reloadVirtualMachineFromPath_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__reloadVirtualMachineFromPath_USCORETaskResponse->soap_get(soap, "vw1:reloadVirtualMachineFromPath_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryFaultToleranceCompatibility(const char *endpoint, const char *soap_action, vw1__QueryFaultToleranceCompatibilityRequestType *vw1__QueryFaultToleranceCompatibility, _vw1__QueryFaultToleranceCompatibilityResponse *vw1__QueryFaultToleranceCompatibilityResponse)
{	struct soap *soap = this;
	struct __vw1__QueryFaultToleranceCompatibility soap_tmp___vw1__QueryFaultToleranceCompatibility;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryFaultToleranceCompatibility.vw1__QueryFaultToleranceCompatibility = vw1__QueryFaultToleranceCompatibility;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryFaultToleranceCompatibility(soap, &soap_tmp___vw1__QueryFaultToleranceCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryFaultToleranceCompatibility(soap, &soap_tmp___vw1__QueryFaultToleranceCompatibility, "-vw1:QueryFaultToleranceCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryFaultToleranceCompatibility(soap, &soap_tmp___vw1__QueryFaultToleranceCompatibility, "-vw1:QueryFaultToleranceCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryFaultToleranceCompatibilityResponse)
		return soap_closesock(soap);
	vw1__QueryFaultToleranceCompatibilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryFaultToleranceCompatibilityResponse->soap_get(soap, "vw1:QueryFaultToleranceCompatibilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveAlarm(const char *endpoint, const char *soap_action, vw1__RemoveAlarmRequestType *vw1__RemoveAlarm, _vw1__RemoveAlarmResponse *vw1__RemoveAlarmResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveAlarm soap_tmp___vw1__RemoveAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveAlarm.vw1__RemoveAlarm = vw1__RemoveAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveAlarm(soap, &soap_tmp___vw1__RemoveAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveAlarm(soap, &soap_tmp___vw1__RemoveAlarm, "-vw1:RemoveAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveAlarm(soap, &soap_tmp___vw1__RemoveAlarm, "-vw1:RemoveAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveAlarmResponse)
		return soap_closesock(soap);
	vw1__RemoveAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveAlarmResponse->soap_get(soap, "vw1:RemoveAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureAlarm(const char *endpoint, const char *soap_action, vw1__ReconfigureAlarmRequestType *vw1__ReconfigureAlarm, _vw1__ReconfigureAlarmResponse *vw1__ReconfigureAlarmResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureAlarm soap_tmp___vw1__ReconfigureAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureAlarm.vw1__ReconfigureAlarm = vw1__ReconfigureAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureAlarm(soap, &soap_tmp___vw1__ReconfigureAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureAlarm(soap, &soap_tmp___vw1__ReconfigureAlarm, "-vw1:ReconfigureAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureAlarm(soap, &soap_tmp___vw1__ReconfigureAlarm, "-vw1:ReconfigureAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureAlarmResponse)
		return soap_closesock(soap);
	vw1__ReconfigureAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureAlarmResponse->soap_get(soap, "vw1:ReconfigureAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateAlarm(const char *endpoint, const char *soap_action, vw1__CreateAlarmRequestType *vw1__CreateAlarm, _vw1__CreateAlarmResponse *vw1__CreateAlarmResponse)
{	struct soap *soap = this;
	struct __vw1__CreateAlarm soap_tmp___vw1__CreateAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateAlarm.vw1__CreateAlarm = vw1__CreateAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateAlarm(soap, &soap_tmp___vw1__CreateAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateAlarm(soap, &soap_tmp___vw1__CreateAlarm, "-vw1:CreateAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateAlarm(soap, &soap_tmp___vw1__CreateAlarm, "-vw1:CreateAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateAlarmResponse)
		return soap_closesock(soap);
	vw1__CreateAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateAlarmResponse->soap_get(soap, "vw1:CreateAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetAlarm(const char *endpoint, const char *soap_action, vw1__GetAlarmRequestType *vw1__GetAlarm, _vw1__GetAlarmResponse *vw1__GetAlarmResponse)
{	struct soap *soap = this;
	struct __vw1__GetAlarm soap_tmp___vw1__GetAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__GetAlarm.vw1__GetAlarm = vw1__GetAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__GetAlarm(soap, &soap_tmp___vw1__GetAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__GetAlarm(soap, &soap_tmp___vw1__GetAlarm, "-vw1:GetAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__GetAlarm(soap, &soap_tmp___vw1__GetAlarm, "-vw1:GetAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__GetAlarmResponse)
		return soap_closesock(soap);
	vw1__GetAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__GetAlarmResponse->soap_get(soap, "vw1:GetAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AreAlarmActionsEnabled(const char *endpoint, const char *soap_action, vw1__AreAlarmActionsEnabledRequestType *vw1__AreAlarmActionsEnabled, _vw1__AreAlarmActionsEnabledResponse *vw1__AreAlarmActionsEnabledResponse)
{	struct soap *soap = this;
	struct __vw1__AreAlarmActionsEnabled soap_tmp___vw1__AreAlarmActionsEnabled;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AreAlarmActionsEnabled.vw1__AreAlarmActionsEnabled = vw1__AreAlarmActionsEnabled;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AreAlarmActionsEnabled(soap, &soap_tmp___vw1__AreAlarmActionsEnabled);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AreAlarmActionsEnabled(soap, &soap_tmp___vw1__AreAlarmActionsEnabled, "-vw1:AreAlarmActionsEnabled", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AreAlarmActionsEnabled(soap, &soap_tmp___vw1__AreAlarmActionsEnabled, "-vw1:AreAlarmActionsEnabled", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AreAlarmActionsEnabledResponse)
		return soap_closesock(soap);
	vw1__AreAlarmActionsEnabledResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AreAlarmActionsEnabledResponse->soap_get(soap, "vw1:AreAlarmActionsEnabledResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableAlarmActions(const char *endpoint, const char *soap_action, vw1__EnableAlarmActionsRequestType *vw1__EnableAlarmActions, _vw1__EnableAlarmActionsResponse *vw1__EnableAlarmActionsResponse)
{	struct soap *soap = this;
	struct __vw1__EnableAlarmActions soap_tmp___vw1__EnableAlarmActions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnableAlarmActions.vw1__EnableAlarmActions = vw1__EnableAlarmActions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnableAlarmActions(soap, &soap_tmp___vw1__EnableAlarmActions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnableAlarmActions(soap, &soap_tmp___vw1__EnableAlarmActions, "-vw1:EnableAlarmActions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnableAlarmActions(soap, &soap_tmp___vw1__EnableAlarmActions, "-vw1:EnableAlarmActions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnableAlarmActionsResponse)
		return soap_closesock(soap);
	vw1__EnableAlarmActionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnableAlarmActionsResponse->soap_get(soap, "vw1:EnableAlarmActionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GetAlarmState(const char *endpoint, const char *soap_action, vw1__GetAlarmStateRequestType *vw1__GetAlarmState, _vw1__GetAlarmStateResponse *vw1__GetAlarmStateResponse)
{	struct soap *soap = this;
	struct __vw1__GetAlarmState soap_tmp___vw1__GetAlarmState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__GetAlarmState.vw1__GetAlarmState = vw1__GetAlarmState;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__GetAlarmState(soap, &soap_tmp___vw1__GetAlarmState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__GetAlarmState(soap, &soap_tmp___vw1__GetAlarmState, "-vw1:GetAlarmState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__GetAlarmState(soap, &soap_tmp___vw1__GetAlarmState, "-vw1:GetAlarmState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__GetAlarmStateResponse)
		return soap_closesock(soap);
	vw1__GetAlarmStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__GetAlarmStateResponse->soap_get(soap, "vw1:GetAlarmStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcknowledgeAlarm(const char *endpoint, const char *soap_action, vw1__AcknowledgeAlarmRequestType *vw1__AcknowledgeAlarm, _vw1__AcknowledgeAlarmResponse *vw1__AcknowledgeAlarmResponse)
{	struct soap *soap = this;
	struct __vw1__AcknowledgeAlarm soap_tmp___vw1__AcknowledgeAlarm;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AcknowledgeAlarm.vw1__AcknowledgeAlarm = vw1__AcknowledgeAlarm;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AcknowledgeAlarm(soap, &soap_tmp___vw1__AcknowledgeAlarm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AcknowledgeAlarm(soap, &soap_tmp___vw1__AcknowledgeAlarm, "-vw1:AcknowledgeAlarm", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AcknowledgeAlarm(soap, &soap_tmp___vw1__AcknowledgeAlarm, "-vw1:AcknowledgeAlarm", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AcknowledgeAlarmResponse)
		return soap_closesock(soap);
	vw1__AcknowledgeAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AcknowledgeAlarmResponse->soap_get(soap, "vw1:AcknowledgeAlarmResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureDVPortgroup_USCORETask(const char *endpoint, const char *soap_action, vw1__ReconfigureDVPortgroupRequestType *vw1__ReconfigureDVPortgroup_USCORETask, _vw1__ReconfigureDVPortgroup_USCORETaskResponse *vw1__ReconfigureDVPortgroup_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureDVPortgroup_USCORETask soap_tmp___vw1__ReconfigureDVPortgroup_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureDVPortgroup_USCORETask.vw1__ReconfigureDVPortgroup_USCORETask = vw1__ReconfigureDVPortgroup_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___vw1__ReconfigureDVPortgroup_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___vw1__ReconfigureDVPortgroup_USCORETask, "-vw1:ReconfigureDVPortgroup_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureDVPortgroup_USCORETask(soap, &soap_tmp___vw1__ReconfigureDVPortgroup_USCORETask, "-vw1:ReconfigureDVPortgroup_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureDVPortgroup_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ReconfigureDVPortgroup_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureDVPortgroup_USCORETaskResponse->soap_get(soap, "vw1:ReconfigureDVPortgroup_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailableDvsSpec(const char *endpoint, const char *soap_action, vw1__QueryAvailableDvsSpecRequestType *vw1__QueryAvailableDvsSpec, _vw1__QueryAvailableDvsSpecResponse *vw1__QueryAvailableDvsSpecResponse)
{	struct soap *soap = this;
	struct __vw1__QueryAvailableDvsSpec soap_tmp___vw1__QueryAvailableDvsSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryAvailableDvsSpec.vw1__QueryAvailableDvsSpec = vw1__QueryAvailableDvsSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryAvailableDvsSpec(soap, &soap_tmp___vw1__QueryAvailableDvsSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryAvailableDvsSpec(soap, &soap_tmp___vw1__QueryAvailableDvsSpec, "-vw1:QueryAvailableDvsSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryAvailableDvsSpec(soap, &soap_tmp___vw1__QueryAvailableDvsSpec, "-vw1:QueryAvailableDvsSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryAvailableDvsSpecResponse)
		return soap_closesock(soap);
	vw1__QueryAvailableDvsSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryAvailableDvsSpecResponse->soap_get(soap, "vw1:QueryAvailableDvsSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryCompatibleHostForNewDvs(const char *endpoint, const char *soap_action, vw1__QueryCompatibleHostForNewDvsRequestType *vw1__QueryCompatibleHostForNewDvs, _vw1__QueryCompatibleHostForNewDvsResponse *vw1__QueryCompatibleHostForNewDvsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryCompatibleHostForNewDvs soap_tmp___vw1__QueryCompatibleHostForNewDvs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryCompatibleHostForNewDvs.vw1__QueryCompatibleHostForNewDvs = vw1__QueryCompatibleHostForNewDvs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryCompatibleHostForNewDvs(soap, &soap_tmp___vw1__QueryCompatibleHostForNewDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryCompatibleHostForNewDvs(soap, &soap_tmp___vw1__QueryCompatibleHostForNewDvs, "-vw1:QueryCompatibleHostForNewDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryCompatibleHostForNewDvs(soap, &soap_tmp___vw1__QueryCompatibleHostForNewDvs, "-vw1:QueryCompatibleHostForNewDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryCompatibleHostForNewDvsResponse)
		return soap_closesock(soap);
	vw1__QueryCompatibleHostForNewDvsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryCompatibleHostForNewDvsResponse->soap_get(soap, "vw1:QueryCompatibleHostForNewDvsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryCompatibleHostForExistingDvs(const char *endpoint, const char *soap_action, vw1__QueryCompatibleHostForExistingDvsRequestType *vw1__QueryCompatibleHostForExistingDvs, _vw1__QueryCompatibleHostForExistingDvsResponse *vw1__QueryCompatibleHostForExistingDvsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryCompatibleHostForExistingDvs soap_tmp___vw1__QueryCompatibleHostForExistingDvs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryCompatibleHostForExistingDvs.vw1__QueryCompatibleHostForExistingDvs = vw1__QueryCompatibleHostForExistingDvs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___vw1__QueryCompatibleHostForExistingDvs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___vw1__QueryCompatibleHostForExistingDvs, "-vw1:QueryCompatibleHostForExistingDvs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryCompatibleHostForExistingDvs(soap, &soap_tmp___vw1__QueryCompatibleHostForExistingDvs, "-vw1:QueryCompatibleHostForExistingDvs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryCompatibleHostForExistingDvsResponse)
		return soap_closesock(soap);
	vw1__QueryCompatibleHostForExistingDvsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryCompatibleHostForExistingDvsResponse->soap_get(soap, "vw1:QueryCompatibleHostForExistingDvsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsCompatibleHostSpec(const char *endpoint, const char *soap_action, vw1__QueryDvsCompatibleHostSpecRequestType *vw1__QueryDvsCompatibleHostSpec, _vw1__QueryDvsCompatibleHostSpecResponse *vw1__QueryDvsCompatibleHostSpecResponse)
{	struct soap *soap = this;
	struct __vw1__QueryDvsCompatibleHostSpec soap_tmp___vw1__QueryDvsCompatibleHostSpec;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryDvsCompatibleHostSpec.vw1__QueryDvsCompatibleHostSpec = vw1__QueryDvsCompatibleHostSpec;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryDvsCompatibleHostSpec(soap, &soap_tmp___vw1__QueryDvsCompatibleHostSpec);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryDvsCompatibleHostSpec(soap, &soap_tmp___vw1__QueryDvsCompatibleHostSpec, "-vw1:QueryDvsCompatibleHostSpec", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryDvsCompatibleHostSpec(soap, &soap_tmp___vw1__QueryDvsCompatibleHostSpec, "-vw1:QueryDvsCompatibleHostSpec", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryDvsCompatibleHostSpecResponse)
		return soap_closesock(soap);
	vw1__QueryDvsCompatibleHostSpecResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryDvsCompatibleHostSpecResponse->soap_get(soap, "vw1:QueryDvsCompatibleHostSpecResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsFeatureCapability(const char *endpoint, const char *soap_action, vw1__QueryDvsFeatureCapabilityRequestType *vw1__QueryDvsFeatureCapability, _vw1__QueryDvsFeatureCapabilityResponse *vw1__QueryDvsFeatureCapabilityResponse)
{	struct soap *soap = this;
	struct __vw1__QueryDvsFeatureCapability soap_tmp___vw1__QueryDvsFeatureCapability;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryDvsFeatureCapability.vw1__QueryDvsFeatureCapability = vw1__QueryDvsFeatureCapability;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryDvsFeatureCapability(soap, &soap_tmp___vw1__QueryDvsFeatureCapability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryDvsFeatureCapability(soap, &soap_tmp___vw1__QueryDvsFeatureCapability, "-vw1:QueryDvsFeatureCapability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryDvsFeatureCapability(soap, &soap_tmp___vw1__QueryDvsFeatureCapability, "-vw1:QueryDvsFeatureCapability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryDvsFeatureCapabilityResponse)
		return soap_closesock(soap);
	vw1__QueryDvsFeatureCapabilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryDvsFeatureCapabilityResponse->soap_get(soap, "vw1:QueryDvsFeatureCapabilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsByUuid(const char *endpoint, const char *soap_action, vw1__QueryDvsByUuidRequestType *vw1__QueryDvsByUuid, _vw1__QueryDvsByUuidResponse *vw1__QueryDvsByUuidResponse)
{	struct soap *soap = this;
	struct __vw1__QueryDvsByUuid soap_tmp___vw1__QueryDvsByUuid;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryDvsByUuid.vw1__QueryDvsByUuid = vw1__QueryDvsByUuid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryDvsByUuid(soap, &soap_tmp___vw1__QueryDvsByUuid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryDvsByUuid(soap, &soap_tmp___vw1__QueryDvsByUuid, "-vw1:QueryDvsByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryDvsByUuid(soap, &soap_tmp___vw1__QueryDvsByUuid, "-vw1:QueryDvsByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryDvsByUuidResponse)
		return soap_closesock(soap);
	vw1__QueryDvsByUuidResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryDvsByUuidResponse->soap_get(soap, "vw1:QueryDvsByUuidResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsConfigTarget(const char *endpoint, const char *soap_action, vw1__QueryDvsConfigTargetRequestType *vw1__QueryDvsConfigTarget, _vw1__QueryDvsConfigTargetResponse *vw1__QueryDvsConfigTargetResponse)
{	struct soap *soap = this;
	struct __vw1__QueryDvsConfigTarget soap_tmp___vw1__QueryDvsConfigTarget;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryDvsConfigTarget.vw1__QueryDvsConfigTarget = vw1__QueryDvsConfigTarget;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryDvsConfigTarget(soap, &soap_tmp___vw1__QueryDvsConfigTarget);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryDvsConfigTarget(soap, &soap_tmp___vw1__QueryDvsConfigTarget, "-vw1:QueryDvsConfigTarget", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryDvsConfigTarget(soap, &soap_tmp___vw1__QueryDvsConfigTarget, "-vw1:QueryDvsConfigTarget", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryDvsConfigTargetResponse)
		return soap_closesock(soap);
	vw1__QueryDvsConfigTargetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryDvsConfigTargetResponse->soap_get(soap, "vw1:QueryDvsConfigTargetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDvsCheckCompatibility(const char *endpoint, const char *soap_action, vw1__QueryDvsCheckCompatibilityRequestType *vw1__QueryDvsCheckCompatibility, _vw1__QueryDvsCheckCompatibilityResponse *vw1__QueryDvsCheckCompatibilityResponse)
{	struct soap *soap = this;
	struct __vw1__QueryDvsCheckCompatibility soap_tmp___vw1__QueryDvsCheckCompatibility;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryDvsCheckCompatibility.vw1__QueryDvsCheckCompatibility = vw1__QueryDvsCheckCompatibility;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryDvsCheckCompatibility(soap, &soap_tmp___vw1__QueryDvsCheckCompatibility);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryDvsCheckCompatibility(soap, &soap_tmp___vw1__QueryDvsCheckCompatibility, "-vw1:QueryDvsCheckCompatibility", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryDvsCheckCompatibility(soap, &soap_tmp___vw1__QueryDvsCheckCompatibility, "-vw1:QueryDvsCheckCompatibility", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryDvsCheckCompatibilityResponse)
		return soap_closesock(soap);
	vw1__QueryDvsCheckCompatibilityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryDvsCheckCompatibilityResponse->soap_get(soap, "vw1:QueryDvsCheckCompatibilityResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RectifyDvsOnHost_USCORETask(const char *endpoint, const char *soap_action, vw1__RectifyDvsOnHostRequestType *vw1__RectifyDvsOnHost_USCORETask, _vw1__RectifyDvsOnHost_USCORETaskResponse *vw1__RectifyDvsOnHost_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RectifyDvsOnHost_USCORETask soap_tmp___vw1__RectifyDvsOnHost_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RectifyDvsOnHost_USCORETask.vw1__RectifyDvsOnHost_USCORETask = vw1__RectifyDvsOnHost_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___vw1__RectifyDvsOnHost_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___vw1__RectifyDvsOnHost_USCORETask, "-vw1:RectifyDvsOnHost_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RectifyDvsOnHost_USCORETask(soap, &soap_tmp___vw1__RectifyDvsOnHost_USCORETask, "-vw1:RectifyDvsOnHost_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RectifyDvsOnHost_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RectifyDvsOnHost_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RectifyDvsOnHost_USCORETaskResponse->soap_get(soap, "vw1:RectifyDvsOnHost_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadNextEvents(const char *endpoint, const char *soap_action, vw1__ReadNextEventsRequestType *vw1__ReadNextEvents, _vw1__ReadNextEventsResponse *vw1__ReadNextEventsResponse)
{	struct soap *soap = this;
	struct __vw1__ReadNextEvents soap_tmp___vw1__ReadNextEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReadNextEvents.vw1__ReadNextEvents = vw1__ReadNextEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReadNextEvents(soap, &soap_tmp___vw1__ReadNextEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReadNextEvents(soap, &soap_tmp___vw1__ReadNextEvents, "-vw1:ReadNextEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReadNextEvents(soap, &soap_tmp___vw1__ReadNextEvents, "-vw1:ReadNextEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReadNextEventsResponse)
		return soap_closesock(soap);
	vw1__ReadNextEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReadNextEventsResponse->soap_get(soap, "vw1:ReadNextEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadPreviousEvents(const char *endpoint, const char *soap_action, vw1__ReadPreviousEventsRequestType *vw1__ReadPreviousEvents, _vw1__ReadPreviousEventsResponse *vw1__ReadPreviousEventsResponse)
{	struct soap *soap = this;
	struct __vw1__ReadPreviousEvents soap_tmp___vw1__ReadPreviousEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReadPreviousEvents.vw1__ReadPreviousEvents = vw1__ReadPreviousEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReadPreviousEvents(soap, &soap_tmp___vw1__ReadPreviousEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReadPreviousEvents(soap, &soap_tmp___vw1__ReadPreviousEvents, "-vw1:ReadPreviousEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReadPreviousEvents(soap, &soap_tmp___vw1__ReadPreviousEvents, "-vw1:ReadPreviousEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReadPreviousEventsResponse)
		return soap_closesock(soap);
	vw1__ReadPreviousEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReadPreviousEventsResponse->soap_get(soap, "vw1:ReadPreviousEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveArgumentDescription(const char *endpoint, const char *soap_action, vw1__RetrieveArgumentDescriptionRequestType *vw1__RetrieveArgumentDescription, _vw1__RetrieveArgumentDescriptionResponse *vw1__RetrieveArgumentDescriptionResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveArgumentDescription soap_tmp___vw1__RetrieveArgumentDescription;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveArgumentDescription.vw1__RetrieveArgumentDescription = vw1__RetrieveArgumentDescription;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveArgumentDescription(soap, &soap_tmp___vw1__RetrieveArgumentDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveArgumentDescription(soap, &soap_tmp___vw1__RetrieveArgumentDescription, "-vw1:RetrieveArgumentDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveArgumentDescription(soap, &soap_tmp___vw1__RetrieveArgumentDescription, "-vw1:RetrieveArgumentDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveArgumentDescriptionResponse)
		return soap_closesock(soap);
	vw1__RetrieveArgumentDescriptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveArgumentDescriptionResponse->soap_get(soap, "vw1:RetrieveArgumentDescriptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateCollectorForEvents(const char *endpoint, const char *soap_action, vw1__CreateCollectorForEventsRequestType *vw1__CreateCollectorForEvents, _vw1__CreateCollectorForEventsResponse *vw1__CreateCollectorForEventsResponse)
{	struct soap *soap = this;
	struct __vw1__CreateCollectorForEvents soap_tmp___vw1__CreateCollectorForEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateCollectorForEvents.vw1__CreateCollectorForEvents = vw1__CreateCollectorForEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateCollectorForEvents(soap, &soap_tmp___vw1__CreateCollectorForEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateCollectorForEvents(soap, &soap_tmp___vw1__CreateCollectorForEvents, "-vw1:CreateCollectorForEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateCollectorForEvents(soap, &soap_tmp___vw1__CreateCollectorForEvents, "-vw1:CreateCollectorForEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateCollectorForEventsResponse)
		return soap_closesock(soap);
	vw1__CreateCollectorForEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateCollectorForEventsResponse->soap_get(soap, "vw1:CreateCollectorForEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LogUserEvent(const char *endpoint, const char *soap_action, vw1__LogUserEventRequestType *vw1__LogUserEvent, _vw1__LogUserEventResponse *vw1__LogUserEventResponse)
{	struct soap *soap = this;
	struct __vw1__LogUserEvent soap_tmp___vw1__LogUserEvent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__LogUserEvent.vw1__LogUserEvent = vw1__LogUserEvent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__LogUserEvent(soap, &soap_tmp___vw1__LogUserEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__LogUserEvent(soap, &soap_tmp___vw1__LogUserEvent, "-vw1:LogUserEvent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__LogUserEvent(soap, &soap_tmp___vw1__LogUserEvent, "-vw1:LogUserEvent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__LogUserEventResponse)
		return soap_closesock(soap);
	vw1__LogUserEventResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__LogUserEventResponse->soap_get(soap, "vw1:LogUserEventResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryEvents(const char *endpoint, const char *soap_action, vw1__QueryEventsRequestType *vw1__QueryEvents, _vw1__QueryEventsResponse *vw1__QueryEventsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryEvents soap_tmp___vw1__QueryEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryEvents.vw1__QueryEvents = vw1__QueryEvents;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryEvents(soap, &soap_tmp___vw1__QueryEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryEvents(soap, &soap_tmp___vw1__QueryEvents, "-vw1:QueryEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryEvents(soap, &soap_tmp___vw1__QueryEvents, "-vw1:QueryEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryEventsResponse)
		return soap_closesock(soap);
	vw1__QueryEventsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryEventsResponse->soap_get(soap, "vw1:QueryEventsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::PostEvent(const char *endpoint, const char *soap_action, vw1__PostEventRequestType *vw1__PostEvent, _vw1__PostEventResponse *vw1__PostEventResponse)
{	struct soap *soap = this;
	struct __vw1__PostEvent soap_tmp___vw1__PostEvent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__PostEvent.vw1__PostEvent = vw1__PostEvent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__PostEvent(soap, &soap_tmp___vw1__PostEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__PostEvent(soap, &soap_tmp___vw1__PostEvent, "-vw1:PostEvent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__PostEvent(soap, &soap_tmp___vw1__PostEvent, "-vw1:PostEvent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__PostEventResponse)
		return soap_closesock(soap);
	vw1__PostEventResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__PostEventResponse->soap_get(soap, "vw1:PostEventResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::JoinDomain_USCORETask(const char *endpoint, const char *soap_action, vw1__JoinDomainRequestType *vw1__JoinDomain_USCORETask, _vw1__JoinDomain_USCORETaskResponse *vw1__JoinDomain_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__JoinDomain_USCORETask soap_tmp___vw1__JoinDomain_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__JoinDomain_USCORETask.vw1__JoinDomain_USCORETask = vw1__JoinDomain_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__JoinDomain_USCORETask(soap, &soap_tmp___vw1__JoinDomain_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__JoinDomain_USCORETask(soap, &soap_tmp___vw1__JoinDomain_USCORETask, "-vw1:JoinDomain_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__JoinDomain_USCORETask(soap, &soap_tmp___vw1__JoinDomain_USCORETask, "-vw1:JoinDomain_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__JoinDomain_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__JoinDomain_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__JoinDomain_USCORETaskResponse->soap_get(soap, "vw1:JoinDomain_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::JoinDomainWithCAM_USCORETask(const char *endpoint, const char *soap_action, vw1__JoinDomainWithCAMRequestType *vw1__JoinDomainWithCAM_USCORETask, _vw1__JoinDomainWithCAM_USCORETaskResponse *vw1__JoinDomainWithCAM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__JoinDomainWithCAM_USCORETask soap_tmp___vw1__JoinDomainWithCAM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__JoinDomainWithCAM_USCORETask.vw1__JoinDomainWithCAM_USCORETask = vw1__JoinDomainWithCAM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___vw1__JoinDomainWithCAM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___vw1__JoinDomainWithCAM_USCORETask, "-vw1:JoinDomainWithCAM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__JoinDomainWithCAM_USCORETask(soap, &soap_tmp___vw1__JoinDomainWithCAM_USCORETask, "-vw1:JoinDomainWithCAM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__JoinDomainWithCAM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__JoinDomainWithCAM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__JoinDomainWithCAM_USCORETaskResponse->soap_get(soap, "vw1:JoinDomainWithCAM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ImportCertificateForCAM_USCORETask(const char *endpoint, const char *soap_action, vw1__ImportCertificateForCAMRequestType *vw1__ImportCertificateForCAM_USCORETask, _vw1__ImportCertificateForCAM_USCORETaskResponse *vw1__ImportCertificateForCAM_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ImportCertificateForCAM_USCORETask soap_tmp___vw1__ImportCertificateForCAM_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ImportCertificateForCAM_USCORETask.vw1__ImportCertificateForCAM_USCORETask = vw1__ImportCertificateForCAM_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___vw1__ImportCertificateForCAM_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___vw1__ImportCertificateForCAM_USCORETask, "-vw1:ImportCertificateForCAM_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ImportCertificateForCAM_USCORETask(soap, &soap_tmp___vw1__ImportCertificateForCAM_USCORETask, "-vw1:ImportCertificateForCAM_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ImportCertificateForCAM_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ImportCertificateForCAM_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ImportCertificateForCAM_USCORETaskResponse->soap_get(soap, "vw1:ImportCertificateForCAM_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::LeaveCurrentDomain_USCORETask(const char *endpoint, const char *soap_action, vw1__LeaveCurrentDomainRequestType *vw1__LeaveCurrentDomain_USCORETask, _vw1__LeaveCurrentDomain_USCORETaskResponse *vw1__LeaveCurrentDomain_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__LeaveCurrentDomain_USCORETask soap_tmp___vw1__LeaveCurrentDomain_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__LeaveCurrentDomain_USCORETask.vw1__LeaveCurrentDomain_USCORETask = vw1__LeaveCurrentDomain_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___vw1__LeaveCurrentDomain_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___vw1__LeaveCurrentDomain_USCORETask, "-vw1:LeaveCurrentDomain_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__LeaveCurrentDomain_USCORETask(soap, &soap_tmp___vw1__LeaveCurrentDomain_USCORETask, "-vw1:LeaveCurrentDomain_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__LeaveCurrentDomain_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__LeaveCurrentDomain_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__LeaveCurrentDomain_USCORETaskResponse->soap_get(soap, "vw1:LeaveCurrentDomain_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureAutostart(const char *endpoint, const char *soap_action, vw1__ReconfigureAutostartRequestType *vw1__ReconfigureAutostart, _vw1__ReconfigureAutostartResponse *vw1__ReconfigureAutostartResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureAutostart soap_tmp___vw1__ReconfigureAutostart;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureAutostart.vw1__ReconfigureAutostart = vw1__ReconfigureAutostart;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureAutostart(soap, &soap_tmp___vw1__ReconfigureAutostart);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureAutostart(soap, &soap_tmp___vw1__ReconfigureAutostart, "-vw1:ReconfigureAutostart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureAutostart(soap, &soap_tmp___vw1__ReconfigureAutostart, "-vw1:ReconfigureAutostart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureAutostartResponse)
		return soap_closesock(soap);
	vw1__ReconfigureAutostartResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureAutostartResponse->soap_get(soap, "vw1:ReconfigureAutostartResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AutoStartPowerOn(const char *endpoint, const char *soap_action, vw1__AutoStartPowerOnRequestType *vw1__AutoStartPowerOn, _vw1__AutoStartPowerOnResponse *vw1__AutoStartPowerOnResponse)
{	struct soap *soap = this;
	struct __vw1__AutoStartPowerOn soap_tmp___vw1__AutoStartPowerOn;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AutoStartPowerOn.vw1__AutoStartPowerOn = vw1__AutoStartPowerOn;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AutoStartPowerOn(soap, &soap_tmp___vw1__AutoStartPowerOn);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AutoStartPowerOn(soap, &soap_tmp___vw1__AutoStartPowerOn, "-vw1:AutoStartPowerOn", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AutoStartPowerOn(soap, &soap_tmp___vw1__AutoStartPowerOn, "-vw1:AutoStartPowerOn", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AutoStartPowerOnResponse)
		return soap_closesock(soap);
	vw1__AutoStartPowerOnResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AutoStartPowerOnResponse->soap_get(soap, "vw1:AutoStartPowerOnResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AutoStartPowerOff(const char *endpoint, const char *soap_action, vw1__AutoStartPowerOffRequestType *vw1__AutoStartPowerOff, _vw1__AutoStartPowerOffResponse *vw1__AutoStartPowerOffResponse)
{	struct soap *soap = this;
	struct __vw1__AutoStartPowerOff soap_tmp___vw1__AutoStartPowerOff;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AutoStartPowerOff.vw1__AutoStartPowerOff = vw1__AutoStartPowerOff;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AutoStartPowerOff(soap, &soap_tmp___vw1__AutoStartPowerOff);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AutoStartPowerOff(soap, &soap_tmp___vw1__AutoStartPowerOff, "-vw1:AutoStartPowerOff", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AutoStartPowerOff(soap, &soap_tmp___vw1__AutoStartPowerOff, "-vw1:AutoStartPowerOff", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AutoStartPowerOffResponse)
		return soap_closesock(soap);
	vw1__AutoStartPowerOffResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AutoStartPowerOffResponse->soap_get(soap, "vw1:AutoStartPowerOffResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryBootDevices(const char *endpoint, const char *soap_action, vw1__QueryBootDevicesRequestType *vw1__QueryBootDevices, _vw1__QueryBootDevicesResponse *vw1__QueryBootDevicesResponse)
{	struct soap *soap = this;
	struct __vw1__QueryBootDevices soap_tmp___vw1__QueryBootDevices;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryBootDevices.vw1__QueryBootDevices = vw1__QueryBootDevices;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryBootDevices(soap, &soap_tmp___vw1__QueryBootDevices);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryBootDevices(soap, &soap_tmp___vw1__QueryBootDevices, "-vw1:QueryBootDevices", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryBootDevices(soap, &soap_tmp___vw1__QueryBootDevices, "-vw1:QueryBootDevices", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryBootDevicesResponse)
		return soap_closesock(soap);
	vw1__QueryBootDevicesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryBootDevicesResponse->soap_get(soap, "vw1:QueryBootDevicesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateBootDevice(const char *endpoint, const char *soap_action, vw1__UpdateBootDeviceRequestType *vw1__UpdateBootDevice, _vw1__UpdateBootDeviceResponse *vw1__UpdateBootDeviceResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateBootDevice soap_tmp___vw1__UpdateBootDevice;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateBootDevice.vw1__UpdateBootDevice = vw1__UpdateBootDevice;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateBootDevice(soap, &soap_tmp___vw1__UpdateBootDevice);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateBootDevice(soap, &soap_tmp___vw1__UpdateBootDevice, "-vw1:UpdateBootDevice", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateBootDevice(soap, &soap_tmp___vw1__UpdateBootDevice, "-vw1:UpdateBootDevice", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateBootDeviceResponse)
		return soap_closesock(soap);
	vw1__UpdateBootDeviceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateBootDeviceResponse->soap_get(soap, "vw1:UpdateBootDeviceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureHostCache_USCORETask(const char *endpoint, const char *soap_action, vw1__ConfigureHostCacheRequestType *vw1__ConfigureHostCache_USCORETask, _vw1__ConfigureHostCache_USCORETaskResponse *vw1__ConfigureHostCache_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ConfigureHostCache_USCORETask soap_tmp___vw1__ConfigureHostCache_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ConfigureHostCache_USCORETask.vw1__ConfigureHostCache_USCORETask = vw1__ConfigureHostCache_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ConfigureHostCache_USCORETask(soap, &soap_tmp___vw1__ConfigureHostCache_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ConfigureHostCache_USCORETask(soap, &soap_tmp___vw1__ConfigureHostCache_USCORETask, "-vw1:ConfigureHostCache_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ConfigureHostCache_USCORETask(soap, &soap_tmp___vw1__ConfigureHostCache_USCORETask, "-vw1:ConfigureHostCache_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ConfigureHostCache_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ConfigureHostCache_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ConfigureHostCache_USCORETaskResponse->soap_get(soap, "vw1:ConfigureHostCache_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableHyperThreading(const char *endpoint, const char *soap_action, vw1__EnableHyperThreadingRequestType *vw1__EnableHyperThreading, _vw1__EnableHyperThreadingResponse *vw1__EnableHyperThreadingResponse)
{	struct soap *soap = this;
	struct __vw1__EnableHyperThreading soap_tmp___vw1__EnableHyperThreading;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnableHyperThreading.vw1__EnableHyperThreading = vw1__EnableHyperThreading;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnableHyperThreading(soap, &soap_tmp___vw1__EnableHyperThreading);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnableHyperThreading(soap, &soap_tmp___vw1__EnableHyperThreading, "-vw1:EnableHyperThreading", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnableHyperThreading(soap, &soap_tmp___vw1__EnableHyperThreading, "-vw1:EnableHyperThreading", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnableHyperThreadingResponse)
		return soap_closesock(soap);
	vw1__EnableHyperThreadingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnableHyperThreadingResponse->soap_get(soap, "vw1:EnableHyperThreadingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableHyperThreading(const char *endpoint, const char *soap_action, vw1__DisableHyperThreadingRequestType *vw1__DisableHyperThreading, _vw1__DisableHyperThreadingResponse *vw1__DisableHyperThreadingResponse)
{	struct soap *soap = this;
	struct __vw1__DisableHyperThreading soap_tmp___vw1__DisableHyperThreading;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DisableHyperThreading.vw1__DisableHyperThreading = vw1__DisableHyperThreading;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DisableHyperThreading(soap, &soap_tmp___vw1__DisableHyperThreading);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DisableHyperThreading(soap, &soap_tmp___vw1__DisableHyperThreading, "-vw1:DisableHyperThreading", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DisableHyperThreading(soap, &soap_tmp___vw1__DisableHyperThreading, "-vw1:DisableHyperThreading", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DisableHyperThreadingResponse)
		return soap_closesock(soap);
	vw1__DisableHyperThreadingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DisableHyperThreadingResponse->soap_get(soap, "vw1:DisableHyperThreadingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SearchDatastore_USCORETask(const char *endpoint, const char *soap_action, vw1__SearchDatastoreRequestType *vw1__SearchDatastore_USCORETask, _vw1__SearchDatastore_USCORETaskResponse *vw1__SearchDatastore_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__SearchDatastore_USCORETask soap_tmp___vw1__SearchDatastore_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SearchDatastore_USCORETask.vw1__SearchDatastore_USCORETask = vw1__SearchDatastore_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SearchDatastore_USCORETask(soap, &soap_tmp___vw1__SearchDatastore_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SearchDatastore_USCORETask(soap, &soap_tmp___vw1__SearchDatastore_USCORETask, "-vw1:SearchDatastore_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SearchDatastore_USCORETask(soap, &soap_tmp___vw1__SearchDatastore_USCORETask, "-vw1:SearchDatastore_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SearchDatastore_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__SearchDatastore_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SearchDatastore_USCORETaskResponse->soap_get(soap, "vw1:SearchDatastore_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SearchDatastoreSubFolders_USCORETask(const char *endpoint, const char *soap_action, vw1__SearchDatastoreSubFoldersRequestType *vw1__SearchDatastoreSubFolders_USCORETask, _vw1__SearchDatastoreSubFolders_USCORETaskResponse *vw1__SearchDatastoreSubFolders_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__SearchDatastoreSubFolders_USCORETask soap_tmp___vw1__SearchDatastoreSubFolders_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SearchDatastoreSubFolders_USCORETask.vw1__SearchDatastoreSubFolders_USCORETask = vw1__SearchDatastoreSubFolders_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___vw1__SearchDatastoreSubFolders_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___vw1__SearchDatastoreSubFolders_USCORETask, "-vw1:SearchDatastoreSubFolders_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SearchDatastoreSubFolders_USCORETask(soap, &soap_tmp___vw1__SearchDatastoreSubFolders_USCORETask, "-vw1:SearchDatastoreSubFolders_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SearchDatastoreSubFolders_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__SearchDatastoreSubFolders_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SearchDatastoreSubFolders_USCORETaskResponse->soap_get(soap, "vw1:SearchDatastoreSubFolders_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteFile(const char *endpoint, const char *soap_action, vw1__DeleteFileRequestType *vw1__DeleteFile, _vw1__DeleteFileResponse *vw1__DeleteFileResponse)
{	struct soap *soap = this;
	struct __vw1__DeleteFile soap_tmp___vw1__DeleteFile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DeleteFile.vw1__DeleteFile = vw1__DeleteFile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DeleteFile(soap, &soap_tmp___vw1__DeleteFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DeleteFile(soap, &soap_tmp___vw1__DeleteFile, "-vw1:DeleteFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DeleteFile(soap, &soap_tmp___vw1__DeleteFile, "-vw1:DeleteFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DeleteFileResponse)
		return soap_closesock(soap);
	vw1__DeleteFileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DeleteFileResponse->soap_get(soap, "vw1:DeleteFileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateLocalSwapDatastore(const char *endpoint, const char *soap_action, vw1__UpdateLocalSwapDatastoreRequestType *vw1__UpdateLocalSwapDatastore, _vw1__UpdateLocalSwapDatastoreResponse *vw1__UpdateLocalSwapDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateLocalSwapDatastore soap_tmp___vw1__UpdateLocalSwapDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateLocalSwapDatastore.vw1__UpdateLocalSwapDatastore = vw1__UpdateLocalSwapDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateLocalSwapDatastore(soap, &soap_tmp___vw1__UpdateLocalSwapDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateLocalSwapDatastore(soap, &soap_tmp___vw1__UpdateLocalSwapDatastore, "-vw1:UpdateLocalSwapDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateLocalSwapDatastore(soap, &soap_tmp___vw1__UpdateLocalSwapDatastore, "-vw1:UpdateLocalSwapDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateLocalSwapDatastoreResponse)
		return soap_closesock(soap);
	vw1__UpdateLocalSwapDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateLocalSwapDatastoreResponse->soap_get(soap, "vw1:UpdateLocalSwapDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailableDisksForVmfs(const char *endpoint, const char *soap_action, vw1__QueryAvailableDisksForVmfsRequestType *vw1__QueryAvailableDisksForVmfs, _vw1__QueryAvailableDisksForVmfsResponse *vw1__QueryAvailableDisksForVmfsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryAvailableDisksForVmfs soap_tmp___vw1__QueryAvailableDisksForVmfs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryAvailableDisksForVmfs.vw1__QueryAvailableDisksForVmfs = vw1__QueryAvailableDisksForVmfs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryAvailableDisksForVmfs(soap, &soap_tmp___vw1__QueryAvailableDisksForVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryAvailableDisksForVmfs(soap, &soap_tmp___vw1__QueryAvailableDisksForVmfs, "-vw1:QueryAvailableDisksForVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryAvailableDisksForVmfs(soap, &soap_tmp___vw1__QueryAvailableDisksForVmfs, "-vw1:QueryAvailableDisksForVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryAvailableDisksForVmfsResponse)
		return soap_closesock(soap);
	vw1__QueryAvailableDisksForVmfsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryAvailableDisksForVmfsResponse->soap_get(soap, "vw1:QueryAvailableDisksForVmfsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVmfsDatastoreCreateOptions(const char *endpoint, const char *soap_action, vw1__QueryVmfsDatastoreCreateOptionsRequestType *vw1__QueryVmfsDatastoreCreateOptions, _vw1__QueryVmfsDatastoreCreateOptionsResponse *vw1__QueryVmfsDatastoreCreateOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVmfsDatastoreCreateOptions soap_tmp___vw1__QueryVmfsDatastoreCreateOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVmfsDatastoreCreateOptions.vw1__QueryVmfsDatastoreCreateOptions = vw1__QueryVmfsDatastoreCreateOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreCreateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreCreateOptions, "-vw1:QueryVmfsDatastoreCreateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVmfsDatastoreCreateOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreCreateOptions, "-vw1:QueryVmfsDatastoreCreateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVmfsDatastoreCreateOptionsResponse)
		return soap_closesock(soap);
	vw1__QueryVmfsDatastoreCreateOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVmfsDatastoreCreateOptionsResponse->soap_get(soap, "vw1:QueryVmfsDatastoreCreateOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateVmfsDatastore(const char *endpoint, const char *soap_action, vw1__CreateVmfsDatastoreRequestType *vw1__CreateVmfsDatastore, _vw1__CreateVmfsDatastoreResponse *vw1__CreateVmfsDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__CreateVmfsDatastore soap_tmp___vw1__CreateVmfsDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateVmfsDatastore.vw1__CreateVmfsDatastore = vw1__CreateVmfsDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateVmfsDatastore(soap, &soap_tmp___vw1__CreateVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateVmfsDatastore(soap, &soap_tmp___vw1__CreateVmfsDatastore, "-vw1:CreateVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateVmfsDatastore(soap, &soap_tmp___vw1__CreateVmfsDatastore, "-vw1:CreateVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateVmfsDatastoreResponse)
		return soap_closesock(soap);
	vw1__CreateVmfsDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateVmfsDatastoreResponse->soap_get(soap, "vw1:CreateVmfsDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVmfsDatastoreExtendOptions(const char *endpoint, const char *soap_action, vw1__QueryVmfsDatastoreExtendOptionsRequestType *vw1__QueryVmfsDatastoreExtendOptions, _vw1__QueryVmfsDatastoreExtendOptionsResponse *vw1__QueryVmfsDatastoreExtendOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVmfsDatastoreExtendOptions soap_tmp___vw1__QueryVmfsDatastoreExtendOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVmfsDatastoreExtendOptions.vw1__QueryVmfsDatastoreExtendOptions = vw1__QueryVmfsDatastoreExtendOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreExtendOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreExtendOptions, "-vw1:QueryVmfsDatastoreExtendOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVmfsDatastoreExtendOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreExtendOptions, "-vw1:QueryVmfsDatastoreExtendOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVmfsDatastoreExtendOptionsResponse)
		return soap_closesock(soap);
	vw1__QueryVmfsDatastoreExtendOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVmfsDatastoreExtendOptionsResponse->soap_get(soap, "vw1:QueryVmfsDatastoreExtendOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVmfsDatastoreExpandOptions(const char *endpoint, const char *soap_action, vw1__QueryVmfsDatastoreExpandOptionsRequestType *vw1__QueryVmfsDatastoreExpandOptions, _vw1__QueryVmfsDatastoreExpandOptionsResponse *vw1__QueryVmfsDatastoreExpandOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVmfsDatastoreExpandOptions soap_tmp___vw1__QueryVmfsDatastoreExpandOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVmfsDatastoreExpandOptions.vw1__QueryVmfsDatastoreExpandOptions = vw1__QueryVmfsDatastoreExpandOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreExpandOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreExpandOptions, "-vw1:QueryVmfsDatastoreExpandOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVmfsDatastoreExpandOptions(soap, &soap_tmp___vw1__QueryVmfsDatastoreExpandOptions, "-vw1:QueryVmfsDatastoreExpandOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVmfsDatastoreExpandOptionsResponse)
		return soap_closesock(soap);
	vw1__QueryVmfsDatastoreExpandOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVmfsDatastoreExpandOptionsResponse->soap_get(soap, "vw1:QueryVmfsDatastoreExpandOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExtendVmfsDatastore(const char *endpoint, const char *soap_action, vw1__ExtendVmfsDatastoreRequestType *vw1__ExtendVmfsDatastore, _vw1__ExtendVmfsDatastoreResponse *vw1__ExtendVmfsDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__ExtendVmfsDatastore soap_tmp___vw1__ExtendVmfsDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExtendVmfsDatastore.vw1__ExtendVmfsDatastore = vw1__ExtendVmfsDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExtendVmfsDatastore(soap, &soap_tmp___vw1__ExtendVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExtendVmfsDatastore(soap, &soap_tmp___vw1__ExtendVmfsDatastore, "-vw1:ExtendVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExtendVmfsDatastore(soap, &soap_tmp___vw1__ExtendVmfsDatastore, "-vw1:ExtendVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExtendVmfsDatastoreResponse)
		return soap_closesock(soap);
	vw1__ExtendVmfsDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExtendVmfsDatastoreResponse->soap_get(soap, "vw1:ExtendVmfsDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExpandVmfsDatastore(const char *endpoint, const char *soap_action, vw1__ExpandVmfsDatastoreRequestType *vw1__ExpandVmfsDatastore, _vw1__ExpandVmfsDatastoreResponse *vw1__ExpandVmfsDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__ExpandVmfsDatastore soap_tmp___vw1__ExpandVmfsDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExpandVmfsDatastore.vw1__ExpandVmfsDatastore = vw1__ExpandVmfsDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExpandVmfsDatastore(soap, &soap_tmp___vw1__ExpandVmfsDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExpandVmfsDatastore(soap, &soap_tmp___vw1__ExpandVmfsDatastore, "-vw1:ExpandVmfsDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExpandVmfsDatastore(soap, &soap_tmp___vw1__ExpandVmfsDatastore, "-vw1:ExpandVmfsDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExpandVmfsDatastoreResponse)
		return soap_closesock(soap);
	vw1__ExpandVmfsDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExpandVmfsDatastoreResponse->soap_get(soap, "vw1:ExpandVmfsDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateNasDatastore(const char *endpoint, const char *soap_action, vw1__CreateNasDatastoreRequestType *vw1__CreateNasDatastore, _vw1__CreateNasDatastoreResponse *vw1__CreateNasDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__CreateNasDatastore soap_tmp___vw1__CreateNasDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateNasDatastore.vw1__CreateNasDatastore = vw1__CreateNasDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateNasDatastore(soap, &soap_tmp___vw1__CreateNasDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateNasDatastore(soap, &soap_tmp___vw1__CreateNasDatastore, "-vw1:CreateNasDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateNasDatastore(soap, &soap_tmp___vw1__CreateNasDatastore, "-vw1:CreateNasDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateNasDatastoreResponse)
		return soap_closesock(soap);
	vw1__CreateNasDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateNasDatastoreResponse->soap_get(soap, "vw1:CreateNasDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateLocalDatastore(const char *endpoint, const char *soap_action, vw1__CreateLocalDatastoreRequestType *vw1__CreateLocalDatastore, _vw1__CreateLocalDatastoreResponse *vw1__CreateLocalDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__CreateLocalDatastore soap_tmp___vw1__CreateLocalDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateLocalDatastore.vw1__CreateLocalDatastore = vw1__CreateLocalDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateLocalDatastore(soap, &soap_tmp___vw1__CreateLocalDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateLocalDatastore(soap, &soap_tmp___vw1__CreateLocalDatastore, "-vw1:CreateLocalDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateLocalDatastore(soap, &soap_tmp___vw1__CreateLocalDatastore, "-vw1:CreateLocalDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateLocalDatastoreResponse)
		return soap_closesock(soap);
	vw1__CreateLocalDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateLocalDatastoreResponse->soap_get(soap, "vw1:CreateLocalDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveDatastore(const char *endpoint, const char *soap_action, vw1__RemoveDatastoreRequestType *vw1__RemoveDatastore, _vw1__RemoveDatastoreResponse *vw1__RemoveDatastoreResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveDatastore soap_tmp___vw1__RemoveDatastore;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveDatastore.vw1__RemoveDatastore = vw1__RemoveDatastore;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveDatastore(soap, &soap_tmp___vw1__RemoveDatastore);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveDatastore(soap, &soap_tmp___vw1__RemoveDatastore, "-vw1:RemoveDatastore", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveDatastore(soap, &soap_tmp___vw1__RemoveDatastore, "-vw1:RemoveDatastore", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveDatastoreResponse)
		return soap_closesock(soap);
	vw1__RemoveDatastoreResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveDatastoreResponse->soap_get(soap, "vw1:RemoveDatastoreResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigureDatastorePrincipal(const char *endpoint, const char *soap_action, vw1__ConfigureDatastorePrincipalRequestType *vw1__ConfigureDatastorePrincipal, _vw1__ConfigureDatastorePrincipalResponse *vw1__ConfigureDatastorePrincipalResponse)
{	struct soap *soap = this;
	struct __vw1__ConfigureDatastorePrincipal soap_tmp___vw1__ConfigureDatastorePrincipal;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ConfigureDatastorePrincipal.vw1__ConfigureDatastorePrincipal = vw1__ConfigureDatastorePrincipal;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ConfigureDatastorePrincipal(soap, &soap_tmp___vw1__ConfigureDatastorePrincipal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ConfigureDatastorePrincipal(soap, &soap_tmp___vw1__ConfigureDatastorePrincipal, "-vw1:ConfigureDatastorePrincipal", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ConfigureDatastorePrincipal(soap, &soap_tmp___vw1__ConfigureDatastorePrincipal, "-vw1:ConfigureDatastorePrincipal", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ConfigureDatastorePrincipalResponse)
		return soap_closesock(soap);
	vw1__ConfigureDatastorePrincipalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ConfigureDatastorePrincipalResponse->soap_get(soap, "vw1:ConfigureDatastorePrincipalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryUnresolvedVmfsVolumes(const char *endpoint, const char *soap_action, vw1__QueryUnresolvedVmfsVolumesRequestType *vw1__QueryUnresolvedVmfsVolumes, _vw1__QueryUnresolvedVmfsVolumesResponse *vw1__QueryUnresolvedVmfsVolumesResponse)
{	struct soap *soap = this;
	struct __vw1__QueryUnresolvedVmfsVolumes soap_tmp___vw1__QueryUnresolvedVmfsVolumes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryUnresolvedVmfsVolumes.vw1__QueryUnresolvedVmfsVolumes = vw1__QueryUnresolvedVmfsVolumes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___vw1__QueryUnresolvedVmfsVolumes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___vw1__QueryUnresolvedVmfsVolumes, "-vw1:QueryUnresolvedVmfsVolumes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryUnresolvedVmfsVolumes(soap, &soap_tmp___vw1__QueryUnresolvedVmfsVolumes, "-vw1:QueryUnresolvedVmfsVolumes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryUnresolvedVmfsVolumesResponse)
		return soap_closesock(soap);
	vw1__QueryUnresolvedVmfsVolumesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryUnresolvedVmfsVolumesResponse->soap_get(soap, "vw1:QueryUnresolvedVmfsVolumesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResignatureUnresolvedVmfsVolume_USCORETask(const char *endpoint, const char *soap_action, vw1__ResignatureUnresolvedVmfsVolumeRequestType *vw1__ResignatureUnresolvedVmfsVolume_USCORETask, _vw1__ResignatureUnresolvedVmfsVolume_USCORETaskResponse *vw1__ResignatureUnresolvedVmfsVolume_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ResignatureUnresolvedVmfsVolume_USCORETask soap_tmp___vw1__ResignatureUnresolvedVmfsVolume_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResignatureUnresolvedVmfsVolume_USCORETask.vw1__ResignatureUnresolvedVmfsVolume_USCORETask = vw1__ResignatureUnresolvedVmfsVolume_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___vw1__ResignatureUnresolvedVmfsVolume_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___vw1__ResignatureUnresolvedVmfsVolume_USCORETask, "-vw1:ResignatureUnresolvedVmfsVolume_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResignatureUnresolvedVmfsVolume_USCORETask(soap, &soap_tmp___vw1__ResignatureUnresolvedVmfsVolume_USCORETask, "-vw1:ResignatureUnresolvedVmfsVolume_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResignatureUnresolvedVmfsVolume_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ResignatureUnresolvedVmfsVolume_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResignatureUnresolvedVmfsVolume_USCORETaskResponse->soap_get(soap, "vw1:ResignatureUnresolvedVmfsVolume_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDateTimeConfig(const char *endpoint, const char *soap_action, vw1__UpdateDateTimeConfigRequestType *vw1__UpdateDateTimeConfig, _vw1__UpdateDateTimeConfigResponse *vw1__UpdateDateTimeConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateDateTimeConfig soap_tmp___vw1__UpdateDateTimeConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateDateTimeConfig.vw1__UpdateDateTimeConfig = vw1__UpdateDateTimeConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateDateTimeConfig(soap, &soap_tmp___vw1__UpdateDateTimeConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateDateTimeConfig(soap, &soap_tmp___vw1__UpdateDateTimeConfig, "-vw1:UpdateDateTimeConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateDateTimeConfig(soap, &soap_tmp___vw1__UpdateDateTimeConfig, "-vw1:UpdateDateTimeConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateDateTimeConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateDateTimeConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateDateTimeConfigResponse->soap_get(soap, "vw1:UpdateDateTimeConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailableTimeZones(const char *endpoint, const char *soap_action, vw1__QueryAvailableTimeZonesRequestType *vw1__QueryAvailableTimeZones, _vw1__QueryAvailableTimeZonesResponse *vw1__QueryAvailableTimeZonesResponse)
{	struct soap *soap = this;
	struct __vw1__QueryAvailableTimeZones soap_tmp___vw1__QueryAvailableTimeZones;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryAvailableTimeZones.vw1__QueryAvailableTimeZones = vw1__QueryAvailableTimeZones;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryAvailableTimeZones(soap, &soap_tmp___vw1__QueryAvailableTimeZones);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryAvailableTimeZones(soap, &soap_tmp___vw1__QueryAvailableTimeZones, "-vw1:QueryAvailableTimeZones", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryAvailableTimeZones(soap, &soap_tmp___vw1__QueryAvailableTimeZones, "-vw1:QueryAvailableTimeZones", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryAvailableTimeZonesResponse)
		return soap_closesock(soap);
	vw1__QueryAvailableTimeZonesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryAvailableTimeZonesResponse->soap_get(soap, "vw1:QueryAvailableTimeZonesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryDateTime(const char *endpoint, const char *soap_action, vw1__QueryDateTimeRequestType *vw1__QueryDateTime, _vw1__QueryDateTimeResponse *vw1__QueryDateTimeResponse)
{	struct soap *soap = this;
	struct __vw1__QueryDateTime soap_tmp___vw1__QueryDateTime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryDateTime.vw1__QueryDateTime = vw1__QueryDateTime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryDateTime(soap, &soap_tmp___vw1__QueryDateTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryDateTime(soap, &soap_tmp___vw1__QueryDateTime, "-vw1:QueryDateTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryDateTime(soap, &soap_tmp___vw1__QueryDateTime, "-vw1:QueryDateTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryDateTimeResponse)
		return soap_closesock(soap);
	vw1__QueryDateTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryDateTimeResponse->soap_get(soap, "vw1:QueryDateTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDateTime(const char *endpoint, const char *soap_action, vw1__UpdateDateTimeRequestType *vw1__UpdateDateTime, _vw1__UpdateDateTimeResponse *vw1__UpdateDateTimeResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateDateTime soap_tmp___vw1__UpdateDateTime;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateDateTime.vw1__UpdateDateTime = vw1__UpdateDateTime;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateDateTime(soap, &soap_tmp___vw1__UpdateDateTime);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateDateTime(soap, &soap_tmp___vw1__UpdateDateTime, "-vw1:UpdateDateTime", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateDateTime(soap, &soap_tmp___vw1__UpdateDateTime, "-vw1:UpdateDateTime", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateDateTimeResponse)
		return soap_closesock(soap);
	vw1__UpdateDateTimeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateDateTimeResponse->soap_get(soap, "vw1:UpdateDateTimeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshDateTimeSystem(const char *endpoint, const char *soap_action, vw1__RefreshDateTimeSystemRequestType *vw1__RefreshDateTimeSystem, _vw1__RefreshDateTimeSystemResponse *vw1__RefreshDateTimeSystemResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshDateTimeSystem soap_tmp___vw1__RefreshDateTimeSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshDateTimeSystem.vw1__RefreshDateTimeSystem = vw1__RefreshDateTimeSystem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshDateTimeSystem(soap, &soap_tmp___vw1__RefreshDateTimeSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshDateTimeSystem(soap, &soap_tmp___vw1__RefreshDateTimeSystem, "-vw1:RefreshDateTimeSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshDateTimeSystem(soap, &soap_tmp___vw1__RefreshDateTimeSystem, "-vw1:RefreshDateTimeSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshDateTimeSystemResponse)
		return soap_closesock(soap);
	vw1__RefreshDateTimeSystemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshDateTimeSystemResponse->soap_get(soap, "vw1:RefreshDateTimeSystemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAvailablePartition(const char *endpoint, const char *soap_action, vw1__QueryAvailablePartitionRequestType *vw1__QueryAvailablePartition, _vw1__QueryAvailablePartitionResponse *vw1__QueryAvailablePartitionResponse)
{	struct soap *soap = this;
	struct __vw1__QueryAvailablePartition soap_tmp___vw1__QueryAvailablePartition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryAvailablePartition.vw1__QueryAvailablePartition = vw1__QueryAvailablePartition;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryAvailablePartition(soap, &soap_tmp___vw1__QueryAvailablePartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryAvailablePartition(soap, &soap_tmp___vw1__QueryAvailablePartition, "-vw1:QueryAvailablePartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryAvailablePartition(soap, &soap_tmp___vw1__QueryAvailablePartition, "-vw1:QueryAvailablePartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryAvailablePartitionResponse)
		return soap_closesock(soap);
	vw1__QueryAvailablePartitionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryAvailablePartitionResponse->soap_get(soap, "vw1:QueryAvailablePartitionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SelectActivePartition(const char *endpoint, const char *soap_action, vw1__SelectActivePartitionRequestType *vw1__SelectActivePartition, _vw1__SelectActivePartitionResponse *vw1__SelectActivePartitionResponse)
{	struct soap *soap = this;
	struct __vw1__SelectActivePartition soap_tmp___vw1__SelectActivePartition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SelectActivePartition.vw1__SelectActivePartition = vw1__SelectActivePartition;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SelectActivePartition(soap, &soap_tmp___vw1__SelectActivePartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SelectActivePartition(soap, &soap_tmp___vw1__SelectActivePartition, "-vw1:SelectActivePartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SelectActivePartition(soap, &soap_tmp___vw1__SelectActivePartition, "-vw1:SelectActivePartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SelectActivePartitionResponse)
		return soap_closesock(soap);
	vw1__SelectActivePartitionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SelectActivePartitionResponse->soap_get(soap, "vw1:SelectActivePartitionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPartitionCreateOptions(const char *endpoint, const char *soap_action, vw1__QueryPartitionCreateOptionsRequestType *vw1__QueryPartitionCreateOptions, _vw1__QueryPartitionCreateOptionsResponse *vw1__QueryPartitionCreateOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPartitionCreateOptions soap_tmp___vw1__QueryPartitionCreateOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPartitionCreateOptions.vw1__QueryPartitionCreateOptions = vw1__QueryPartitionCreateOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPartitionCreateOptions(soap, &soap_tmp___vw1__QueryPartitionCreateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPartitionCreateOptions(soap, &soap_tmp___vw1__QueryPartitionCreateOptions, "-vw1:QueryPartitionCreateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPartitionCreateOptions(soap, &soap_tmp___vw1__QueryPartitionCreateOptions, "-vw1:QueryPartitionCreateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPartitionCreateOptionsResponse)
		return soap_closesock(soap);
	vw1__QueryPartitionCreateOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPartitionCreateOptionsResponse->soap_get(soap, "vw1:QueryPartitionCreateOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPartitionCreateDesc(const char *endpoint, const char *soap_action, vw1__QueryPartitionCreateDescRequestType *vw1__QueryPartitionCreateDesc, _vw1__QueryPartitionCreateDescResponse *vw1__QueryPartitionCreateDescResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPartitionCreateDesc soap_tmp___vw1__QueryPartitionCreateDesc;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPartitionCreateDesc.vw1__QueryPartitionCreateDesc = vw1__QueryPartitionCreateDesc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPartitionCreateDesc(soap, &soap_tmp___vw1__QueryPartitionCreateDesc);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPartitionCreateDesc(soap, &soap_tmp___vw1__QueryPartitionCreateDesc, "-vw1:QueryPartitionCreateDesc", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPartitionCreateDesc(soap, &soap_tmp___vw1__QueryPartitionCreateDesc, "-vw1:QueryPartitionCreateDesc", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPartitionCreateDescResponse)
		return soap_closesock(soap);
	vw1__QueryPartitionCreateDescResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPartitionCreateDescResponse->soap_get(soap, "vw1:QueryPartitionCreateDescResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDiagnosticPartition(const char *endpoint, const char *soap_action, vw1__CreateDiagnosticPartitionRequestType *vw1__CreateDiagnosticPartition, _vw1__CreateDiagnosticPartitionResponse *vw1__CreateDiagnosticPartitionResponse)
{	struct soap *soap = this;
	struct __vw1__CreateDiagnosticPartition soap_tmp___vw1__CreateDiagnosticPartition;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateDiagnosticPartition.vw1__CreateDiagnosticPartition = vw1__CreateDiagnosticPartition;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateDiagnosticPartition(soap, &soap_tmp___vw1__CreateDiagnosticPartition);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateDiagnosticPartition(soap, &soap_tmp___vw1__CreateDiagnosticPartition, "-vw1:CreateDiagnosticPartition", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateDiagnosticPartition(soap, &soap_tmp___vw1__CreateDiagnosticPartition, "-vw1:CreateDiagnosticPartition", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateDiagnosticPartitionResponse)
		return soap_closesock(soap);
	vw1__CreateDiagnosticPartitionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateDiagnosticPartitionResponse->soap_get(soap, "vw1:CreateDiagnosticPartitionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EsxAgentHostManagerUpdateConfig(const char *endpoint, const char *soap_action, vw1__EsxAgentHostManagerUpdateConfigRequestType *vw1__EsxAgentHostManagerUpdateConfig, _vw1__EsxAgentHostManagerUpdateConfigResponse *vw1__EsxAgentHostManagerUpdateConfigResponse)
{	struct soap *soap = this;
	struct __vw1__EsxAgentHostManagerUpdateConfig soap_tmp___vw1__EsxAgentHostManagerUpdateConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EsxAgentHostManagerUpdateConfig.vw1__EsxAgentHostManagerUpdateConfig = vw1__EsxAgentHostManagerUpdateConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___vw1__EsxAgentHostManagerUpdateConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___vw1__EsxAgentHostManagerUpdateConfig, "-vw1:EsxAgentHostManagerUpdateConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EsxAgentHostManagerUpdateConfig(soap, &soap_tmp___vw1__EsxAgentHostManagerUpdateConfig, "-vw1:EsxAgentHostManagerUpdateConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EsxAgentHostManagerUpdateConfigResponse)
		return soap_closesock(soap);
	vw1__EsxAgentHostManagerUpdateConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EsxAgentHostManagerUpdateConfigResponse->soap_get(soap, "vw1:EsxAgentHostManagerUpdateConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDefaultPolicy(const char *endpoint, const char *soap_action, vw1__UpdateDefaultPolicyRequestType *vw1__UpdateDefaultPolicy, _vw1__UpdateDefaultPolicyResponse *vw1__UpdateDefaultPolicyResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateDefaultPolicy soap_tmp___vw1__UpdateDefaultPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateDefaultPolicy.vw1__UpdateDefaultPolicy = vw1__UpdateDefaultPolicy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateDefaultPolicy(soap, &soap_tmp___vw1__UpdateDefaultPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateDefaultPolicy(soap, &soap_tmp___vw1__UpdateDefaultPolicy, "-vw1:UpdateDefaultPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateDefaultPolicy(soap, &soap_tmp___vw1__UpdateDefaultPolicy, "-vw1:UpdateDefaultPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateDefaultPolicyResponse)
		return soap_closesock(soap);
	vw1__UpdateDefaultPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateDefaultPolicyResponse->soap_get(soap, "vw1:UpdateDefaultPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableRuleset(const char *endpoint, const char *soap_action, vw1__EnableRulesetRequestType *vw1__EnableRuleset, _vw1__EnableRulesetResponse *vw1__EnableRulesetResponse)
{	struct soap *soap = this;
	struct __vw1__EnableRuleset soap_tmp___vw1__EnableRuleset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnableRuleset.vw1__EnableRuleset = vw1__EnableRuleset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnableRuleset(soap, &soap_tmp___vw1__EnableRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnableRuleset(soap, &soap_tmp___vw1__EnableRuleset, "-vw1:EnableRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnableRuleset(soap, &soap_tmp___vw1__EnableRuleset, "-vw1:EnableRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnableRulesetResponse)
		return soap_closesock(soap);
	vw1__EnableRulesetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnableRulesetResponse->soap_get(soap, "vw1:EnableRulesetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableRuleset(const char *endpoint, const char *soap_action, vw1__DisableRulesetRequestType *vw1__DisableRuleset, _vw1__DisableRulesetResponse *vw1__DisableRulesetResponse)
{	struct soap *soap = this;
	struct __vw1__DisableRuleset soap_tmp___vw1__DisableRuleset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DisableRuleset.vw1__DisableRuleset = vw1__DisableRuleset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DisableRuleset(soap, &soap_tmp___vw1__DisableRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DisableRuleset(soap, &soap_tmp___vw1__DisableRuleset, "-vw1:DisableRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DisableRuleset(soap, &soap_tmp___vw1__DisableRuleset, "-vw1:DisableRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DisableRulesetResponse)
		return soap_closesock(soap);
	vw1__DisableRulesetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DisableRulesetResponse->soap_get(soap, "vw1:DisableRulesetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateRuleset(const char *endpoint, const char *soap_action, vw1__UpdateRulesetRequestType *vw1__UpdateRuleset, _vw1__UpdateRulesetResponse *vw1__UpdateRulesetResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateRuleset soap_tmp___vw1__UpdateRuleset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateRuleset.vw1__UpdateRuleset = vw1__UpdateRuleset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateRuleset(soap, &soap_tmp___vw1__UpdateRuleset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateRuleset(soap, &soap_tmp___vw1__UpdateRuleset, "-vw1:UpdateRuleset", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateRuleset(soap, &soap_tmp___vw1__UpdateRuleset, "-vw1:UpdateRuleset", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateRulesetResponse)
		return soap_closesock(soap);
	vw1__UpdateRulesetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateRulesetResponse->soap_get(soap, "vw1:UpdateRulesetResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshFirewall(const char *endpoint, const char *soap_action, vw1__RefreshFirewallRequestType *vw1__RefreshFirewall, _vw1__RefreshFirewallResponse *vw1__RefreshFirewallResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshFirewall soap_tmp___vw1__RefreshFirewall;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshFirewall.vw1__RefreshFirewall = vw1__RefreshFirewall;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshFirewall(soap, &soap_tmp___vw1__RefreshFirewall);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshFirewall(soap, &soap_tmp___vw1__RefreshFirewall, "-vw1:RefreshFirewall", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshFirewall(soap, &soap_tmp___vw1__RefreshFirewall, "-vw1:RefreshFirewall", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshFirewallResponse)
		return soap_closesock(soap);
	vw1__RefreshFirewallResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshFirewallResponse->soap_get(soap, "vw1:RefreshFirewallResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetFirmwareToFactoryDefaults(const char *endpoint, const char *soap_action, vw1__ResetFirmwareToFactoryDefaultsRequestType *vw1__ResetFirmwareToFactoryDefaults, _vw1__ResetFirmwareToFactoryDefaultsResponse *vw1__ResetFirmwareToFactoryDefaultsResponse)
{	struct soap *soap = this;
	struct __vw1__ResetFirmwareToFactoryDefaults soap_tmp___vw1__ResetFirmwareToFactoryDefaults;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetFirmwareToFactoryDefaults.vw1__ResetFirmwareToFactoryDefaults = vw1__ResetFirmwareToFactoryDefaults;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___vw1__ResetFirmwareToFactoryDefaults);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___vw1__ResetFirmwareToFactoryDefaults, "-vw1:ResetFirmwareToFactoryDefaults", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetFirmwareToFactoryDefaults(soap, &soap_tmp___vw1__ResetFirmwareToFactoryDefaults, "-vw1:ResetFirmwareToFactoryDefaults", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetFirmwareToFactoryDefaultsResponse)
		return soap_closesock(soap);
	vw1__ResetFirmwareToFactoryDefaultsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetFirmwareToFactoryDefaultsResponse->soap_get(soap, "vw1:ResetFirmwareToFactoryDefaultsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::BackupFirmwareConfiguration(const char *endpoint, const char *soap_action, vw1__BackupFirmwareConfigurationRequestType *vw1__BackupFirmwareConfiguration, _vw1__BackupFirmwareConfigurationResponse *vw1__BackupFirmwareConfigurationResponse)
{	struct soap *soap = this;
	struct __vw1__BackupFirmwareConfiguration soap_tmp___vw1__BackupFirmwareConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__BackupFirmwareConfiguration.vw1__BackupFirmwareConfiguration = vw1__BackupFirmwareConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__BackupFirmwareConfiguration(soap, &soap_tmp___vw1__BackupFirmwareConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__BackupFirmwareConfiguration(soap, &soap_tmp___vw1__BackupFirmwareConfiguration, "-vw1:BackupFirmwareConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__BackupFirmwareConfiguration(soap, &soap_tmp___vw1__BackupFirmwareConfiguration, "-vw1:BackupFirmwareConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__BackupFirmwareConfigurationResponse)
		return soap_closesock(soap);
	vw1__BackupFirmwareConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__BackupFirmwareConfigurationResponse->soap_get(soap, "vw1:BackupFirmwareConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryFirmwareConfigUploadURL(const char *endpoint, const char *soap_action, vw1__QueryFirmwareConfigUploadURLRequestType *vw1__QueryFirmwareConfigUploadURL, _vw1__QueryFirmwareConfigUploadURLResponse *vw1__QueryFirmwareConfigUploadURLResponse)
{	struct soap *soap = this;
	struct __vw1__QueryFirmwareConfigUploadURL soap_tmp___vw1__QueryFirmwareConfigUploadURL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryFirmwareConfigUploadURL.vw1__QueryFirmwareConfigUploadURL = vw1__QueryFirmwareConfigUploadURL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryFirmwareConfigUploadURL(soap, &soap_tmp___vw1__QueryFirmwareConfigUploadURL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryFirmwareConfigUploadURL(soap, &soap_tmp___vw1__QueryFirmwareConfigUploadURL, "-vw1:QueryFirmwareConfigUploadURL", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryFirmwareConfigUploadURL(soap, &soap_tmp___vw1__QueryFirmwareConfigUploadURL, "-vw1:QueryFirmwareConfigUploadURL", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryFirmwareConfigUploadURLResponse)
		return soap_closesock(soap);
	vw1__QueryFirmwareConfigUploadURLResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryFirmwareConfigUploadURLResponse->soap_get(soap, "vw1:QueryFirmwareConfigUploadURLResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RestoreFirmwareConfiguration(const char *endpoint, const char *soap_action, vw1__RestoreFirmwareConfigurationRequestType *vw1__RestoreFirmwareConfiguration, _vw1__RestoreFirmwareConfigurationResponse *vw1__RestoreFirmwareConfigurationResponse)
{	struct soap *soap = this;
	struct __vw1__RestoreFirmwareConfiguration soap_tmp___vw1__RestoreFirmwareConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RestoreFirmwareConfiguration.vw1__RestoreFirmwareConfiguration = vw1__RestoreFirmwareConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RestoreFirmwareConfiguration(soap, &soap_tmp___vw1__RestoreFirmwareConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RestoreFirmwareConfiguration(soap, &soap_tmp___vw1__RestoreFirmwareConfiguration, "-vw1:RestoreFirmwareConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RestoreFirmwareConfiguration(soap, &soap_tmp___vw1__RestoreFirmwareConfiguration, "-vw1:RestoreFirmwareConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RestoreFirmwareConfigurationResponse)
		return soap_closesock(soap);
	vw1__RestoreFirmwareConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RestoreFirmwareConfigurationResponse->soap_get(soap, "vw1:RestoreFirmwareConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshHealthStatusSystem(const char *endpoint, const char *soap_action, vw1__RefreshHealthStatusSystemRequestType *vw1__RefreshHealthStatusSystem, _vw1__RefreshHealthStatusSystemResponse *vw1__RefreshHealthStatusSystemResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshHealthStatusSystem soap_tmp___vw1__RefreshHealthStatusSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshHealthStatusSystem.vw1__RefreshHealthStatusSystem = vw1__RefreshHealthStatusSystem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshHealthStatusSystem(soap, &soap_tmp___vw1__RefreshHealthStatusSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshHealthStatusSystem(soap, &soap_tmp___vw1__RefreshHealthStatusSystem, "-vw1:RefreshHealthStatusSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshHealthStatusSystem(soap, &soap_tmp___vw1__RefreshHealthStatusSystem, "-vw1:RefreshHealthStatusSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshHealthStatusSystemResponse)
		return soap_closesock(soap);
	vw1__RefreshHealthStatusSystemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshHealthStatusSystemResponse->soap_get(soap, "vw1:RefreshHealthStatusSystemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetSystemHealthInfo(const char *endpoint, const char *soap_action, vw1__ResetSystemHealthInfoRequestType *vw1__ResetSystemHealthInfo, _vw1__ResetSystemHealthInfoResponse *vw1__ResetSystemHealthInfoResponse)
{	struct soap *soap = this;
	struct __vw1__ResetSystemHealthInfo soap_tmp___vw1__ResetSystemHealthInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetSystemHealthInfo.vw1__ResetSystemHealthInfo = vw1__ResetSystemHealthInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetSystemHealthInfo(soap, &soap_tmp___vw1__ResetSystemHealthInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetSystemHealthInfo(soap, &soap_tmp___vw1__ResetSystemHealthInfo, "-vw1:ResetSystemHealthInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetSystemHealthInfo(soap, &soap_tmp___vw1__ResetSystemHealthInfo, "-vw1:ResetSystemHealthInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetSystemHealthInfoResponse)
		return soap_closesock(soap);
	vw1__ResetSystemHealthInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetSystemHealthInfoResponse->soap_get(soap, "vw1:ResetSystemHealthInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HostImageConfigGetAcceptance(const char *endpoint, const char *soap_action, vw1__HostImageConfigGetAcceptanceRequestType *vw1__HostImageConfigGetAcceptance, _vw1__HostImageConfigGetAcceptanceResponse *vw1__HostImageConfigGetAcceptanceResponse)
{	struct soap *soap = this;
	struct __vw1__HostImageConfigGetAcceptance soap_tmp___vw1__HostImageConfigGetAcceptance;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__HostImageConfigGetAcceptance.vw1__HostImageConfigGetAcceptance = vw1__HostImageConfigGetAcceptance;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__HostImageConfigGetAcceptance(soap, &soap_tmp___vw1__HostImageConfigGetAcceptance);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__HostImageConfigGetAcceptance(soap, &soap_tmp___vw1__HostImageConfigGetAcceptance, "-vw1:HostImageConfigGetAcceptance", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__HostImageConfigGetAcceptance(soap, &soap_tmp___vw1__HostImageConfigGetAcceptance, "-vw1:HostImageConfigGetAcceptance", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__HostImageConfigGetAcceptanceResponse)
		return soap_closesock(soap);
	vw1__HostImageConfigGetAcceptanceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__HostImageConfigGetAcceptanceResponse->soap_get(soap, "vw1:HostImageConfigGetAcceptanceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::HostImageConfigGetProfile(const char *endpoint, const char *soap_action, vw1__HostImageConfigGetProfileRequestType *vw1__HostImageConfigGetProfile, _vw1__HostImageConfigGetProfileResponse *vw1__HostImageConfigGetProfileResponse)
{	struct soap *soap = this;
	struct __vw1__HostImageConfigGetProfile soap_tmp___vw1__HostImageConfigGetProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__HostImageConfigGetProfile.vw1__HostImageConfigGetProfile = vw1__HostImageConfigGetProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__HostImageConfigGetProfile(soap, &soap_tmp___vw1__HostImageConfigGetProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__HostImageConfigGetProfile(soap, &soap_tmp___vw1__HostImageConfigGetProfile, "-vw1:HostImageConfigGetProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__HostImageConfigGetProfile(soap, &soap_tmp___vw1__HostImageConfigGetProfile, "-vw1:HostImageConfigGetProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__HostImageConfigGetProfileResponse)
		return soap_closesock(soap);
	vw1__HostImageConfigGetProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__HostImageConfigGetProfileResponse->soap_get(soap, "vw1:HostImageConfigGetProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateHostImageAcceptanceLevel(const char *endpoint, const char *soap_action, vw1__UpdateHostImageAcceptanceLevelRequestType *vw1__UpdateHostImageAcceptanceLevel, _vw1__UpdateHostImageAcceptanceLevelResponse *vw1__UpdateHostImageAcceptanceLevelResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateHostImageAcceptanceLevel soap_tmp___vw1__UpdateHostImageAcceptanceLevel;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateHostImageAcceptanceLevel.vw1__UpdateHostImageAcceptanceLevel = vw1__UpdateHostImageAcceptanceLevel;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___vw1__UpdateHostImageAcceptanceLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___vw1__UpdateHostImageAcceptanceLevel, "-vw1:UpdateHostImageAcceptanceLevel", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateHostImageAcceptanceLevel(soap, &soap_tmp___vw1__UpdateHostImageAcceptanceLevel, "-vw1:UpdateHostImageAcceptanceLevel", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateHostImageAcceptanceLevelResponse)
		return soap_closesock(soap);
	vw1__UpdateHostImageAcceptanceLevelResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateHostImageAcceptanceLevelResponse->soap_get(soap, "vw1:UpdateHostImageAcceptanceLevelResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVnicStatus(const char *endpoint, const char *soap_action, vw1__QueryVnicStatusRequestType *vw1__QueryVnicStatus, _vw1__QueryVnicStatusResponse *vw1__QueryVnicStatusResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVnicStatus soap_tmp___vw1__QueryVnicStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVnicStatus.vw1__QueryVnicStatus = vw1__QueryVnicStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVnicStatus(soap, &soap_tmp___vw1__QueryVnicStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVnicStatus(soap, &soap_tmp___vw1__QueryVnicStatus, "-vw1:QueryVnicStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVnicStatus(soap, &soap_tmp___vw1__QueryVnicStatus, "-vw1:QueryVnicStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVnicStatusResponse)
		return soap_closesock(soap);
	vw1__QueryVnicStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVnicStatusResponse->soap_get(soap, "vw1:QueryVnicStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPnicStatus(const char *endpoint, const char *soap_action, vw1__QueryPnicStatusRequestType *vw1__QueryPnicStatus, _vw1__QueryPnicStatusResponse *vw1__QueryPnicStatusResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPnicStatus soap_tmp___vw1__QueryPnicStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPnicStatus.vw1__QueryPnicStatus = vw1__QueryPnicStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPnicStatus(soap, &soap_tmp___vw1__QueryPnicStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPnicStatus(soap, &soap_tmp___vw1__QueryPnicStatus, "-vw1:QueryPnicStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPnicStatus(soap, &soap_tmp___vw1__QueryPnicStatus, "-vw1:QueryPnicStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPnicStatusResponse)
		return soap_closesock(soap);
	vw1__QueryPnicStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPnicStatusResponse->soap_get(soap, "vw1:QueryPnicStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryBoundVnics(const char *endpoint, const char *soap_action, vw1__QueryBoundVnicsRequestType *vw1__QueryBoundVnics, _vw1__QueryBoundVnicsResponse *vw1__QueryBoundVnicsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryBoundVnics soap_tmp___vw1__QueryBoundVnics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryBoundVnics.vw1__QueryBoundVnics = vw1__QueryBoundVnics;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryBoundVnics(soap, &soap_tmp___vw1__QueryBoundVnics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryBoundVnics(soap, &soap_tmp___vw1__QueryBoundVnics, "-vw1:QueryBoundVnics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryBoundVnics(soap, &soap_tmp___vw1__QueryBoundVnics, "-vw1:QueryBoundVnics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryBoundVnicsResponse)
		return soap_closesock(soap);
	vw1__QueryBoundVnicsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryBoundVnicsResponse->soap_get(soap, "vw1:QueryBoundVnicsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryCandidateNics(const char *endpoint, const char *soap_action, vw1__QueryCandidateNicsRequestType *vw1__QueryCandidateNics, _vw1__QueryCandidateNicsResponse *vw1__QueryCandidateNicsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryCandidateNics soap_tmp___vw1__QueryCandidateNics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryCandidateNics.vw1__QueryCandidateNics = vw1__QueryCandidateNics;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryCandidateNics(soap, &soap_tmp___vw1__QueryCandidateNics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryCandidateNics(soap, &soap_tmp___vw1__QueryCandidateNics, "-vw1:QueryCandidateNics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryCandidateNics(soap, &soap_tmp___vw1__QueryCandidateNics, "-vw1:QueryCandidateNics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryCandidateNicsResponse)
		return soap_closesock(soap);
	vw1__QueryCandidateNicsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryCandidateNicsResponse->soap_get(soap, "vw1:QueryCandidateNicsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::BindVnic(const char *endpoint, const char *soap_action, vw1__BindVnicRequestType *vw1__BindVnic, _vw1__BindVnicResponse *vw1__BindVnicResponse)
{	struct soap *soap = this;
	struct __vw1__BindVnic soap_tmp___vw1__BindVnic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__BindVnic.vw1__BindVnic = vw1__BindVnic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__BindVnic(soap, &soap_tmp___vw1__BindVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__BindVnic(soap, &soap_tmp___vw1__BindVnic, "-vw1:BindVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__BindVnic(soap, &soap_tmp___vw1__BindVnic, "-vw1:BindVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__BindVnicResponse)
		return soap_closesock(soap);
	vw1__BindVnicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__BindVnicResponse->soap_get(soap, "vw1:BindVnicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnbindVnic(const char *endpoint, const char *soap_action, vw1__UnbindVnicRequestType *vw1__UnbindVnic, _vw1__UnbindVnicResponse *vw1__UnbindVnicResponse)
{	struct soap *soap = this;
	struct __vw1__UnbindVnic soap_tmp___vw1__UnbindVnic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UnbindVnic.vw1__UnbindVnic = vw1__UnbindVnic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UnbindVnic(soap, &soap_tmp___vw1__UnbindVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UnbindVnic(soap, &soap_tmp___vw1__UnbindVnic, "-vw1:UnbindVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UnbindVnic(soap, &soap_tmp___vw1__UnbindVnic, "-vw1:UnbindVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UnbindVnicResponse)
		return soap_closesock(soap);
	vw1__UnbindVnicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UnbindVnicResponse->soap_get(soap, "vw1:UnbindVnicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryMigrationDependencies(const char *endpoint, const char *soap_action, vw1__QueryMigrationDependenciesRequestType *vw1__QueryMigrationDependencies, _vw1__QueryMigrationDependenciesResponse *vw1__QueryMigrationDependenciesResponse)
{	struct soap *soap = this;
	struct __vw1__QueryMigrationDependencies soap_tmp___vw1__QueryMigrationDependencies;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryMigrationDependencies.vw1__QueryMigrationDependencies = vw1__QueryMigrationDependencies;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryMigrationDependencies(soap, &soap_tmp___vw1__QueryMigrationDependencies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryMigrationDependencies(soap, &soap_tmp___vw1__QueryMigrationDependencies, "-vw1:QueryMigrationDependencies", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryMigrationDependencies(soap, &soap_tmp___vw1__QueryMigrationDependencies, "-vw1:QueryMigrationDependencies", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryMigrationDependenciesResponse)
		return soap_closesock(soap);
	vw1__QueryMigrationDependenciesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryMigrationDependenciesResponse->soap_get(soap, "vw1:QueryMigrationDependenciesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryModules(const char *endpoint, const char *soap_action, vw1__QueryModulesRequestType *vw1__QueryModules, _vw1__QueryModulesResponse *vw1__QueryModulesResponse)
{	struct soap *soap = this;
	struct __vw1__QueryModules soap_tmp___vw1__QueryModules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryModules.vw1__QueryModules = vw1__QueryModules;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryModules(soap, &soap_tmp___vw1__QueryModules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryModules(soap, &soap_tmp___vw1__QueryModules, "-vw1:QueryModules", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryModules(soap, &soap_tmp___vw1__QueryModules, "-vw1:QueryModules", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryModulesResponse)
		return soap_closesock(soap);
	vw1__QueryModulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryModulesResponse->soap_get(soap, "vw1:QueryModulesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateModuleOptionString(const char *endpoint, const char *soap_action, vw1__UpdateModuleOptionStringRequestType *vw1__UpdateModuleOptionString, _vw1__UpdateModuleOptionStringResponse *vw1__UpdateModuleOptionStringResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateModuleOptionString soap_tmp___vw1__UpdateModuleOptionString;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateModuleOptionString.vw1__UpdateModuleOptionString = vw1__UpdateModuleOptionString;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateModuleOptionString(soap, &soap_tmp___vw1__UpdateModuleOptionString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateModuleOptionString(soap, &soap_tmp___vw1__UpdateModuleOptionString, "-vw1:UpdateModuleOptionString", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateModuleOptionString(soap, &soap_tmp___vw1__UpdateModuleOptionString, "-vw1:UpdateModuleOptionString", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateModuleOptionStringResponse)
		return soap_closesock(soap);
	vw1__UpdateModuleOptionStringResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateModuleOptionStringResponse->soap_get(soap, "vw1:UpdateModuleOptionStringResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryConfiguredModuleOptionString(const char *endpoint, const char *soap_action, vw1__QueryConfiguredModuleOptionStringRequestType *vw1__QueryConfiguredModuleOptionString, _vw1__QueryConfiguredModuleOptionStringResponse *vw1__QueryConfiguredModuleOptionStringResponse)
{	struct soap *soap = this;
	struct __vw1__QueryConfiguredModuleOptionString soap_tmp___vw1__QueryConfiguredModuleOptionString;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryConfiguredModuleOptionString.vw1__QueryConfiguredModuleOptionString = vw1__QueryConfiguredModuleOptionString;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryConfiguredModuleOptionString(soap, &soap_tmp___vw1__QueryConfiguredModuleOptionString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryConfiguredModuleOptionString(soap, &soap_tmp___vw1__QueryConfiguredModuleOptionString, "-vw1:QueryConfiguredModuleOptionString", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryConfiguredModuleOptionString(soap, &soap_tmp___vw1__QueryConfiguredModuleOptionString, "-vw1:QueryConfiguredModuleOptionString", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryConfiguredModuleOptionStringResponse)
		return soap_closesock(soap);
	vw1__QueryConfiguredModuleOptionStringResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryConfiguredModuleOptionStringResponse->soap_get(soap, "vw1:QueryConfiguredModuleOptionStringResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateUser(const char *endpoint, const char *soap_action, vw1__CreateUserRequestType *vw1__CreateUser, _vw1__CreateUserResponse *vw1__CreateUserResponse)
{	struct soap *soap = this;
	struct __vw1__CreateUser soap_tmp___vw1__CreateUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateUser.vw1__CreateUser = vw1__CreateUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateUser(soap, &soap_tmp___vw1__CreateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateUser(soap, &soap_tmp___vw1__CreateUser, "-vw1:CreateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateUser(soap, &soap_tmp___vw1__CreateUser, "-vw1:CreateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateUserResponse)
		return soap_closesock(soap);
	vw1__CreateUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateUserResponse->soap_get(soap, "vw1:CreateUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateUser(const char *endpoint, const char *soap_action, vw1__UpdateUserRequestType *vw1__UpdateUser, _vw1__UpdateUserResponse *vw1__UpdateUserResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateUser soap_tmp___vw1__UpdateUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateUser.vw1__UpdateUser = vw1__UpdateUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateUser(soap, &soap_tmp___vw1__UpdateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateUser(soap, &soap_tmp___vw1__UpdateUser, "-vw1:UpdateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateUser(soap, &soap_tmp___vw1__UpdateUser, "-vw1:UpdateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateUserResponse)
		return soap_closesock(soap);
	vw1__UpdateUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateUserResponse->soap_get(soap, "vw1:UpdateUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateGroup(const char *endpoint, const char *soap_action, vw1__CreateGroupRequestType *vw1__CreateGroup, _vw1__CreateGroupResponse *vw1__CreateGroupResponse)
{	struct soap *soap = this;
	struct __vw1__CreateGroup soap_tmp___vw1__CreateGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateGroup.vw1__CreateGroup = vw1__CreateGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateGroup(soap, &soap_tmp___vw1__CreateGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateGroup(soap, &soap_tmp___vw1__CreateGroup, "-vw1:CreateGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateGroup(soap, &soap_tmp___vw1__CreateGroup, "-vw1:CreateGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateGroupResponse)
		return soap_closesock(soap);
	vw1__CreateGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateGroupResponse->soap_get(soap, "vw1:CreateGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveUser(const char *endpoint, const char *soap_action, vw1__RemoveUserRequestType *vw1__RemoveUser, _vw1__RemoveUserResponse *vw1__RemoveUserResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveUser soap_tmp___vw1__RemoveUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveUser.vw1__RemoveUser = vw1__RemoveUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveUser(soap, &soap_tmp___vw1__RemoveUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveUser(soap, &soap_tmp___vw1__RemoveUser, "-vw1:RemoveUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveUser(soap, &soap_tmp___vw1__RemoveUser, "-vw1:RemoveUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveUserResponse)
		return soap_closesock(soap);
	vw1__RemoveUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveUserResponse->soap_get(soap, "vw1:RemoveUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveGroup(const char *endpoint, const char *soap_action, vw1__RemoveGroupRequestType *vw1__RemoveGroup, _vw1__RemoveGroupResponse *vw1__RemoveGroupResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveGroup soap_tmp___vw1__RemoveGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveGroup.vw1__RemoveGroup = vw1__RemoveGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveGroup(soap, &soap_tmp___vw1__RemoveGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveGroup(soap, &soap_tmp___vw1__RemoveGroup, "-vw1:RemoveGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveGroup(soap, &soap_tmp___vw1__RemoveGroup, "-vw1:RemoveGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveGroupResponse)
		return soap_closesock(soap);
	vw1__RemoveGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveGroupResponse->soap_get(soap, "vw1:RemoveGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AssignUserToGroup(const char *endpoint, const char *soap_action, vw1__AssignUserToGroupRequestType *vw1__AssignUserToGroup, _vw1__AssignUserToGroupResponse *vw1__AssignUserToGroupResponse)
{	struct soap *soap = this;
	struct __vw1__AssignUserToGroup soap_tmp___vw1__AssignUserToGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AssignUserToGroup.vw1__AssignUserToGroup = vw1__AssignUserToGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AssignUserToGroup(soap, &soap_tmp___vw1__AssignUserToGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AssignUserToGroup(soap, &soap_tmp___vw1__AssignUserToGroup, "-vw1:AssignUserToGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AssignUserToGroup(soap, &soap_tmp___vw1__AssignUserToGroup, "-vw1:AssignUserToGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AssignUserToGroupResponse)
		return soap_closesock(soap);
	vw1__AssignUserToGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AssignUserToGroupResponse->soap_get(soap, "vw1:AssignUserToGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnassignUserFromGroup(const char *endpoint, const char *soap_action, vw1__UnassignUserFromGroupRequestType *vw1__UnassignUserFromGroup, _vw1__UnassignUserFromGroupResponse *vw1__UnassignUserFromGroupResponse)
{	struct soap *soap = this;
	struct __vw1__UnassignUserFromGroup soap_tmp___vw1__UnassignUserFromGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UnassignUserFromGroup.vw1__UnassignUserFromGroup = vw1__UnassignUserFromGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UnassignUserFromGroup(soap, &soap_tmp___vw1__UnassignUserFromGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UnassignUserFromGroup(soap, &soap_tmp___vw1__UnassignUserFromGroup, "-vw1:UnassignUserFromGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UnassignUserFromGroup(soap, &soap_tmp___vw1__UnassignUserFromGroup, "-vw1:UnassignUserFromGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UnassignUserFromGroupResponse)
		return soap_closesock(soap);
	vw1__UnassignUserFromGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UnassignUserFromGroupResponse->soap_get(soap, "vw1:UnassignUserFromGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureServiceConsoleReservation(const char *endpoint, const char *soap_action, vw1__ReconfigureServiceConsoleReservationRequestType *vw1__ReconfigureServiceConsoleReservation, _vw1__ReconfigureServiceConsoleReservationResponse *vw1__ReconfigureServiceConsoleReservationResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureServiceConsoleReservation soap_tmp___vw1__ReconfigureServiceConsoleReservation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureServiceConsoleReservation.vw1__ReconfigureServiceConsoleReservation = vw1__ReconfigureServiceConsoleReservation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureServiceConsoleReservation(soap, &soap_tmp___vw1__ReconfigureServiceConsoleReservation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureServiceConsoleReservation(soap, &soap_tmp___vw1__ReconfigureServiceConsoleReservation, "-vw1:ReconfigureServiceConsoleReservation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureServiceConsoleReservation(soap, &soap_tmp___vw1__ReconfigureServiceConsoleReservation, "-vw1:ReconfigureServiceConsoleReservation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureServiceConsoleReservationResponse)
		return soap_closesock(soap);
	vw1__ReconfigureServiceConsoleReservationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureServiceConsoleReservationResponse->soap_get(soap, "vw1:ReconfigureServiceConsoleReservationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureVirtualMachineReservation(const char *endpoint, const char *soap_action, vw1__ReconfigureVirtualMachineReservationRequestType *vw1__ReconfigureVirtualMachineReservation, _vw1__ReconfigureVirtualMachineReservationResponse *vw1__ReconfigureVirtualMachineReservationResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureVirtualMachineReservation soap_tmp___vw1__ReconfigureVirtualMachineReservation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureVirtualMachineReservation.vw1__ReconfigureVirtualMachineReservation = vw1__ReconfigureVirtualMachineReservation;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureVirtualMachineReservation(soap, &soap_tmp___vw1__ReconfigureVirtualMachineReservation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureVirtualMachineReservation(soap, &soap_tmp___vw1__ReconfigureVirtualMachineReservation, "-vw1:ReconfigureVirtualMachineReservation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureVirtualMachineReservation(soap, &soap_tmp___vw1__ReconfigureVirtualMachineReservation, "-vw1:ReconfigureVirtualMachineReservation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureVirtualMachineReservationResponse)
		return soap_closesock(soap);
	vw1__ReconfigureVirtualMachineReservationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureVirtualMachineReservationResponse->soap_get(soap, "vw1:ReconfigureVirtualMachineReservationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateNetworkConfig(const char *endpoint, const char *soap_action, vw1__UpdateNetworkConfigRequestType *vw1__UpdateNetworkConfig, _vw1__UpdateNetworkConfigResponse *vw1__UpdateNetworkConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateNetworkConfig soap_tmp___vw1__UpdateNetworkConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateNetworkConfig.vw1__UpdateNetworkConfig = vw1__UpdateNetworkConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateNetworkConfig(soap, &soap_tmp___vw1__UpdateNetworkConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateNetworkConfig(soap, &soap_tmp___vw1__UpdateNetworkConfig, "-vw1:UpdateNetworkConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateNetworkConfig(soap, &soap_tmp___vw1__UpdateNetworkConfig, "-vw1:UpdateNetworkConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateNetworkConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateNetworkConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateNetworkConfigResponse->soap_get(soap, "vw1:UpdateNetworkConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDnsConfig(const char *endpoint, const char *soap_action, vw1__UpdateDnsConfigRequestType *vw1__UpdateDnsConfig, _vw1__UpdateDnsConfigResponse *vw1__UpdateDnsConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateDnsConfig soap_tmp___vw1__UpdateDnsConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateDnsConfig.vw1__UpdateDnsConfig = vw1__UpdateDnsConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateDnsConfig(soap, &soap_tmp___vw1__UpdateDnsConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateDnsConfig(soap, &soap_tmp___vw1__UpdateDnsConfig, "-vw1:UpdateDnsConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateDnsConfig(soap, &soap_tmp___vw1__UpdateDnsConfig, "-vw1:UpdateDnsConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateDnsConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateDnsConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateDnsConfigResponse->soap_get(soap, "vw1:UpdateDnsConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpRouteConfig(const char *endpoint, const char *soap_action, vw1__UpdateIpRouteConfigRequestType *vw1__UpdateIpRouteConfig, _vw1__UpdateIpRouteConfigResponse *vw1__UpdateIpRouteConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateIpRouteConfig soap_tmp___vw1__UpdateIpRouteConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateIpRouteConfig.vw1__UpdateIpRouteConfig = vw1__UpdateIpRouteConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateIpRouteConfig(soap, &soap_tmp___vw1__UpdateIpRouteConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateIpRouteConfig(soap, &soap_tmp___vw1__UpdateIpRouteConfig, "-vw1:UpdateIpRouteConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateIpRouteConfig(soap, &soap_tmp___vw1__UpdateIpRouteConfig, "-vw1:UpdateIpRouteConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateIpRouteConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateIpRouteConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateIpRouteConfigResponse->soap_get(soap, "vw1:UpdateIpRouteConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateConsoleIpRouteConfig(const char *endpoint, const char *soap_action, vw1__UpdateConsoleIpRouteConfigRequestType *vw1__UpdateConsoleIpRouteConfig, _vw1__UpdateConsoleIpRouteConfigResponse *vw1__UpdateConsoleIpRouteConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateConsoleIpRouteConfig soap_tmp___vw1__UpdateConsoleIpRouteConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateConsoleIpRouteConfig.vw1__UpdateConsoleIpRouteConfig = vw1__UpdateConsoleIpRouteConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateConsoleIpRouteConfig(soap, &soap_tmp___vw1__UpdateConsoleIpRouteConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateConsoleIpRouteConfig(soap, &soap_tmp___vw1__UpdateConsoleIpRouteConfig, "-vw1:UpdateConsoleIpRouteConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateConsoleIpRouteConfig(soap, &soap_tmp___vw1__UpdateConsoleIpRouteConfig, "-vw1:UpdateConsoleIpRouteConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateConsoleIpRouteConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateConsoleIpRouteConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateConsoleIpRouteConfigResponse->soap_get(soap, "vw1:UpdateConsoleIpRouteConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpRouteTableConfig(const char *endpoint, const char *soap_action, vw1__UpdateIpRouteTableConfigRequestType *vw1__UpdateIpRouteTableConfig, _vw1__UpdateIpRouteTableConfigResponse *vw1__UpdateIpRouteTableConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateIpRouteTableConfig soap_tmp___vw1__UpdateIpRouteTableConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateIpRouteTableConfig.vw1__UpdateIpRouteTableConfig = vw1__UpdateIpRouteTableConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateIpRouteTableConfig(soap, &soap_tmp___vw1__UpdateIpRouteTableConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateIpRouteTableConfig(soap, &soap_tmp___vw1__UpdateIpRouteTableConfig, "-vw1:UpdateIpRouteTableConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateIpRouteTableConfig(soap, &soap_tmp___vw1__UpdateIpRouteTableConfig, "-vw1:UpdateIpRouteTableConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateIpRouteTableConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateIpRouteTableConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateIpRouteTableConfigResponse->soap_get(soap, "vw1:UpdateIpRouteTableConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddVirtualSwitch(const char *endpoint, const char *soap_action, vw1__AddVirtualSwitchRequestType *vw1__AddVirtualSwitch, _vw1__AddVirtualSwitchResponse *vw1__AddVirtualSwitchResponse)
{	struct soap *soap = this;
	struct __vw1__AddVirtualSwitch soap_tmp___vw1__AddVirtualSwitch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddVirtualSwitch.vw1__AddVirtualSwitch = vw1__AddVirtualSwitch;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddVirtualSwitch(soap, &soap_tmp___vw1__AddVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddVirtualSwitch(soap, &soap_tmp___vw1__AddVirtualSwitch, "-vw1:AddVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddVirtualSwitch(soap, &soap_tmp___vw1__AddVirtualSwitch, "-vw1:AddVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddVirtualSwitchResponse)
		return soap_closesock(soap);
	vw1__AddVirtualSwitchResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddVirtualSwitchResponse->soap_get(soap, "vw1:AddVirtualSwitchResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveVirtualSwitch(const char *endpoint, const char *soap_action, vw1__RemoveVirtualSwitchRequestType *vw1__RemoveVirtualSwitch, _vw1__RemoveVirtualSwitchResponse *vw1__RemoveVirtualSwitchResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveVirtualSwitch soap_tmp___vw1__RemoveVirtualSwitch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveVirtualSwitch.vw1__RemoveVirtualSwitch = vw1__RemoveVirtualSwitch;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveVirtualSwitch(soap, &soap_tmp___vw1__RemoveVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveVirtualSwitch(soap, &soap_tmp___vw1__RemoveVirtualSwitch, "-vw1:RemoveVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveVirtualSwitch(soap, &soap_tmp___vw1__RemoveVirtualSwitch, "-vw1:RemoveVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveVirtualSwitchResponse)
		return soap_closesock(soap);
	vw1__RemoveVirtualSwitchResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveVirtualSwitchResponse->soap_get(soap, "vw1:RemoveVirtualSwitchResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVirtualSwitch(const char *endpoint, const char *soap_action, vw1__UpdateVirtualSwitchRequestType *vw1__UpdateVirtualSwitch, _vw1__UpdateVirtualSwitchResponse *vw1__UpdateVirtualSwitchResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateVirtualSwitch soap_tmp___vw1__UpdateVirtualSwitch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateVirtualSwitch.vw1__UpdateVirtualSwitch = vw1__UpdateVirtualSwitch;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateVirtualSwitch(soap, &soap_tmp___vw1__UpdateVirtualSwitch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateVirtualSwitch(soap, &soap_tmp___vw1__UpdateVirtualSwitch, "-vw1:UpdateVirtualSwitch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateVirtualSwitch(soap, &soap_tmp___vw1__UpdateVirtualSwitch, "-vw1:UpdateVirtualSwitch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateVirtualSwitchResponse)
		return soap_closesock(soap);
	vw1__UpdateVirtualSwitchResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateVirtualSwitchResponse->soap_get(soap, "vw1:UpdateVirtualSwitchResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddPortGroup(const char *endpoint, const char *soap_action, vw1__AddPortGroupRequestType *vw1__AddPortGroup, _vw1__AddPortGroupResponse *vw1__AddPortGroupResponse)
{	struct soap *soap = this;
	struct __vw1__AddPortGroup soap_tmp___vw1__AddPortGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddPortGroup.vw1__AddPortGroup = vw1__AddPortGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddPortGroup(soap, &soap_tmp___vw1__AddPortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddPortGroup(soap, &soap_tmp___vw1__AddPortGroup, "-vw1:AddPortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddPortGroup(soap, &soap_tmp___vw1__AddPortGroup, "-vw1:AddPortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddPortGroupResponse)
		return soap_closesock(soap);
	vw1__AddPortGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddPortGroupResponse->soap_get(soap, "vw1:AddPortGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemovePortGroup(const char *endpoint, const char *soap_action, vw1__RemovePortGroupRequestType *vw1__RemovePortGroup, _vw1__RemovePortGroupResponse *vw1__RemovePortGroupResponse)
{	struct soap *soap = this;
	struct __vw1__RemovePortGroup soap_tmp___vw1__RemovePortGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemovePortGroup.vw1__RemovePortGroup = vw1__RemovePortGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemovePortGroup(soap, &soap_tmp___vw1__RemovePortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemovePortGroup(soap, &soap_tmp___vw1__RemovePortGroup, "-vw1:RemovePortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemovePortGroup(soap, &soap_tmp___vw1__RemovePortGroup, "-vw1:RemovePortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemovePortGroupResponse)
		return soap_closesock(soap);
	vw1__RemovePortGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemovePortGroupResponse->soap_get(soap, "vw1:RemovePortGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdatePortGroup(const char *endpoint, const char *soap_action, vw1__UpdatePortGroupRequestType *vw1__UpdatePortGroup, _vw1__UpdatePortGroupResponse *vw1__UpdatePortGroupResponse)
{	struct soap *soap = this;
	struct __vw1__UpdatePortGroup soap_tmp___vw1__UpdatePortGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdatePortGroup.vw1__UpdatePortGroup = vw1__UpdatePortGroup;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdatePortGroup(soap, &soap_tmp___vw1__UpdatePortGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdatePortGroup(soap, &soap_tmp___vw1__UpdatePortGroup, "-vw1:UpdatePortGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdatePortGroup(soap, &soap_tmp___vw1__UpdatePortGroup, "-vw1:UpdatePortGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdatePortGroupResponse)
		return soap_closesock(soap);
	vw1__UpdatePortGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdatePortGroupResponse->soap_get(soap, "vw1:UpdatePortGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdatePhysicalNicLinkSpeed(const char *endpoint, const char *soap_action, vw1__UpdatePhysicalNicLinkSpeedRequestType *vw1__UpdatePhysicalNicLinkSpeed, _vw1__UpdatePhysicalNicLinkSpeedResponse *vw1__UpdatePhysicalNicLinkSpeedResponse)
{	struct soap *soap = this;
	struct __vw1__UpdatePhysicalNicLinkSpeed soap_tmp___vw1__UpdatePhysicalNicLinkSpeed;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdatePhysicalNicLinkSpeed.vw1__UpdatePhysicalNicLinkSpeed = vw1__UpdatePhysicalNicLinkSpeed;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___vw1__UpdatePhysicalNicLinkSpeed);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___vw1__UpdatePhysicalNicLinkSpeed, "-vw1:UpdatePhysicalNicLinkSpeed", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdatePhysicalNicLinkSpeed(soap, &soap_tmp___vw1__UpdatePhysicalNicLinkSpeed, "-vw1:UpdatePhysicalNicLinkSpeed", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdatePhysicalNicLinkSpeedResponse)
		return soap_closesock(soap);
	vw1__UpdatePhysicalNicLinkSpeedResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdatePhysicalNicLinkSpeedResponse->soap_get(soap, "vw1:UpdatePhysicalNicLinkSpeedResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryNetworkHint(const char *endpoint, const char *soap_action, vw1__QueryNetworkHintRequestType *vw1__QueryNetworkHint, _vw1__QueryNetworkHintResponse *vw1__QueryNetworkHintResponse)
{	struct soap *soap = this;
	struct __vw1__QueryNetworkHint soap_tmp___vw1__QueryNetworkHint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryNetworkHint.vw1__QueryNetworkHint = vw1__QueryNetworkHint;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryNetworkHint(soap, &soap_tmp___vw1__QueryNetworkHint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryNetworkHint(soap, &soap_tmp___vw1__QueryNetworkHint, "-vw1:QueryNetworkHint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryNetworkHint(soap, &soap_tmp___vw1__QueryNetworkHint, "-vw1:QueryNetworkHint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryNetworkHintResponse)
		return soap_closesock(soap);
	vw1__QueryNetworkHintResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryNetworkHintResponse->soap_get(soap, "vw1:QueryNetworkHintResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddVirtualNic(const char *endpoint, const char *soap_action, vw1__AddVirtualNicRequestType *vw1__AddVirtualNic, _vw1__AddVirtualNicResponse *vw1__AddVirtualNicResponse)
{	struct soap *soap = this;
	struct __vw1__AddVirtualNic soap_tmp___vw1__AddVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddVirtualNic.vw1__AddVirtualNic = vw1__AddVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddVirtualNic(soap, &soap_tmp___vw1__AddVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddVirtualNic(soap, &soap_tmp___vw1__AddVirtualNic, "-vw1:AddVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddVirtualNic(soap, &soap_tmp___vw1__AddVirtualNic, "-vw1:AddVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddVirtualNicResponse)
		return soap_closesock(soap);
	vw1__AddVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddVirtualNicResponse->soap_get(soap, "vw1:AddVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveVirtualNic(const char *endpoint, const char *soap_action, vw1__RemoveVirtualNicRequestType *vw1__RemoveVirtualNic, _vw1__RemoveVirtualNicResponse *vw1__RemoveVirtualNicResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveVirtualNic soap_tmp___vw1__RemoveVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveVirtualNic.vw1__RemoveVirtualNic = vw1__RemoveVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveVirtualNic(soap, &soap_tmp___vw1__RemoveVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveVirtualNic(soap, &soap_tmp___vw1__RemoveVirtualNic, "-vw1:RemoveVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveVirtualNic(soap, &soap_tmp___vw1__RemoveVirtualNic, "-vw1:RemoveVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveVirtualNicResponse)
		return soap_closesock(soap);
	vw1__RemoveVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveVirtualNicResponse->soap_get(soap, "vw1:RemoveVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateVirtualNic(const char *endpoint, const char *soap_action, vw1__UpdateVirtualNicRequestType *vw1__UpdateVirtualNic, _vw1__UpdateVirtualNicResponse *vw1__UpdateVirtualNicResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateVirtualNic soap_tmp___vw1__UpdateVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateVirtualNic.vw1__UpdateVirtualNic = vw1__UpdateVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateVirtualNic(soap, &soap_tmp___vw1__UpdateVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateVirtualNic(soap, &soap_tmp___vw1__UpdateVirtualNic, "-vw1:UpdateVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateVirtualNic(soap, &soap_tmp___vw1__UpdateVirtualNic, "-vw1:UpdateVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateVirtualNicResponse)
		return soap_closesock(soap);
	vw1__UpdateVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateVirtualNicResponse->soap_get(soap, "vw1:UpdateVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddServiceConsoleVirtualNic(const char *endpoint, const char *soap_action, vw1__AddServiceConsoleVirtualNicRequestType *vw1__AddServiceConsoleVirtualNic, _vw1__AddServiceConsoleVirtualNicResponse *vw1__AddServiceConsoleVirtualNicResponse)
{	struct soap *soap = this;
	struct __vw1__AddServiceConsoleVirtualNic soap_tmp___vw1__AddServiceConsoleVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddServiceConsoleVirtualNic.vw1__AddServiceConsoleVirtualNic = vw1__AddServiceConsoleVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddServiceConsoleVirtualNic(soap, &soap_tmp___vw1__AddServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddServiceConsoleVirtualNic(soap, &soap_tmp___vw1__AddServiceConsoleVirtualNic, "-vw1:AddServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddServiceConsoleVirtualNic(soap, &soap_tmp___vw1__AddServiceConsoleVirtualNic, "-vw1:AddServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	vw1__AddServiceConsoleVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddServiceConsoleVirtualNicResponse->soap_get(soap, "vw1:AddServiceConsoleVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveServiceConsoleVirtualNic(const char *endpoint, const char *soap_action, vw1__RemoveServiceConsoleVirtualNicRequestType *vw1__RemoveServiceConsoleVirtualNic, _vw1__RemoveServiceConsoleVirtualNicResponse *vw1__RemoveServiceConsoleVirtualNicResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveServiceConsoleVirtualNic soap_tmp___vw1__RemoveServiceConsoleVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveServiceConsoleVirtualNic.vw1__RemoveServiceConsoleVirtualNic = vw1__RemoveServiceConsoleVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___vw1__RemoveServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___vw1__RemoveServiceConsoleVirtualNic, "-vw1:RemoveServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveServiceConsoleVirtualNic(soap, &soap_tmp___vw1__RemoveServiceConsoleVirtualNic, "-vw1:RemoveServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	vw1__RemoveServiceConsoleVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveServiceConsoleVirtualNicResponse->soap_get(soap, "vw1:RemoveServiceConsoleVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateServiceConsoleVirtualNic(const char *endpoint, const char *soap_action, vw1__UpdateServiceConsoleVirtualNicRequestType *vw1__UpdateServiceConsoleVirtualNic, _vw1__UpdateServiceConsoleVirtualNicResponse *vw1__UpdateServiceConsoleVirtualNicResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateServiceConsoleVirtualNic soap_tmp___vw1__UpdateServiceConsoleVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateServiceConsoleVirtualNic.vw1__UpdateServiceConsoleVirtualNic = vw1__UpdateServiceConsoleVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___vw1__UpdateServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___vw1__UpdateServiceConsoleVirtualNic, "-vw1:UpdateServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateServiceConsoleVirtualNic(soap, &soap_tmp___vw1__UpdateServiceConsoleVirtualNic, "-vw1:UpdateServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	vw1__UpdateServiceConsoleVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateServiceConsoleVirtualNicResponse->soap_get(soap, "vw1:UpdateServiceConsoleVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RestartServiceConsoleVirtualNic(const char *endpoint, const char *soap_action, vw1__RestartServiceConsoleVirtualNicRequestType *vw1__RestartServiceConsoleVirtualNic, _vw1__RestartServiceConsoleVirtualNicResponse *vw1__RestartServiceConsoleVirtualNicResponse)
{	struct soap *soap = this;
	struct __vw1__RestartServiceConsoleVirtualNic soap_tmp___vw1__RestartServiceConsoleVirtualNic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RestartServiceConsoleVirtualNic.vw1__RestartServiceConsoleVirtualNic = vw1__RestartServiceConsoleVirtualNic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RestartServiceConsoleVirtualNic(soap, &soap_tmp___vw1__RestartServiceConsoleVirtualNic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RestartServiceConsoleVirtualNic(soap, &soap_tmp___vw1__RestartServiceConsoleVirtualNic, "-vw1:RestartServiceConsoleVirtualNic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RestartServiceConsoleVirtualNic(soap, &soap_tmp___vw1__RestartServiceConsoleVirtualNic, "-vw1:RestartServiceConsoleVirtualNic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RestartServiceConsoleVirtualNicResponse)
		return soap_closesock(soap);
	vw1__RestartServiceConsoleVirtualNicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RestartServiceConsoleVirtualNicResponse->soap_get(soap, "vw1:RestartServiceConsoleVirtualNicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshNetworkSystem(const char *endpoint, const char *soap_action, vw1__RefreshNetworkSystemRequestType *vw1__RefreshNetworkSystem, _vw1__RefreshNetworkSystemResponse *vw1__RefreshNetworkSystemResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshNetworkSystem soap_tmp___vw1__RefreshNetworkSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshNetworkSystem.vw1__RefreshNetworkSystem = vw1__RefreshNetworkSystem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshNetworkSystem(soap, &soap_tmp___vw1__RefreshNetworkSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshNetworkSystem(soap, &soap_tmp___vw1__RefreshNetworkSystem, "-vw1:RefreshNetworkSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshNetworkSystem(soap, &soap_tmp___vw1__RefreshNetworkSystem, "-vw1:RefreshNetworkSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshNetworkSystemResponse)
		return soap_closesock(soap);
	vw1__RefreshNetworkSystemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshNetworkSystemResponse->soap_get(soap, "vw1:RefreshNetworkSystemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckHostPatch_USCORETask(const char *endpoint, const char *soap_action, vw1__CheckHostPatchRequestType *vw1__CheckHostPatch_USCORETask, _vw1__CheckHostPatch_USCORETaskResponse *vw1__CheckHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CheckHostPatch_USCORETask soap_tmp___vw1__CheckHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckHostPatch_USCORETask.vw1__CheckHostPatch_USCORETask = vw1__CheckHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckHostPatch_USCORETask(soap, &soap_tmp___vw1__CheckHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckHostPatch_USCORETask(soap, &soap_tmp___vw1__CheckHostPatch_USCORETask, "-vw1:CheckHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckHostPatch_USCORETask(soap, &soap_tmp___vw1__CheckHostPatch_USCORETask, "-vw1:CheckHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CheckHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckHostPatch_USCORETaskResponse->soap_get(soap, "vw1:CheckHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ScanHostPatch_USCORETask(const char *endpoint, const char *soap_action, vw1__ScanHostPatchRequestType *vw1__ScanHostPatch_USCORETask, _vw1__ScanHostPatch_USCORETaskResponse *vw1__ScanHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ScanHostPatch_USCORETask soap_tmp___vw1__ScanHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ScanHostPatch_USCORETask.vw1__ScanHostPatch_USCORETask = vw1__ScanHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ScanHostPatch_USCORETask(soap, &soap_tmp___vw1__ScanHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ScanHostPatch_USCORETask(soap, &soap_tmp___vw1__ScanHostPatch_USCORETask, "-vw1:ScanHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ScanHostPatch_USCORETask(soap, &soap_tmp___vw1__ScanHostPatch_USCORETask, "-vw1:ScanHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ScanHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ScanHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ScanHostPatch_USCORETaskResponse->soap_get(soap, "vw1:ScanHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ScanHostPatchV2_USCORETask(const char *endpoint, const char *soap_action, vw1__ScanHostPatchV2RequestType *vw1__ScanHostPatchV2_USCORETask, _vw1__ScanHostPatchV2_USCORETaskResponse *vw1__ScanHostPatchV2_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ScanHostPatchV2_USCORETask soap_tmp___vw1__ScanHostPatchV2_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ScanHostPatchV2_USCORETask.vw1__ScanHostPatchV2_USCORETask = vw1__ScanHostPatchV2_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ScanHostPatchV2_USCORETask(soap, &soap_tmp___vw1__ScanHostPatchV2_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ScanHostPatchV2_USCORETask(soap, &soap_tmp___vw1__ScanHostPatchV2_USCORETask, "-vw1:ScanHostPatchV2_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ScanHostPatchV2_USCORETask(soap, &soap_tmp___vw1__ScanHostPatchV2_USCORETask, "-vw1:ScanHostPatchV2_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ScanHostPatchV2_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ScanHostPatchV2_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ScanHostPatchV2_USCORETaskResponse->soap_get(soap, "vw1:ScanHostPatchV2_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StageHostPatch_USCORETask(const char *endpoint, const char *soap_action, vw1__StageHostPatchRequestType *vw1__StageHostPatch_USCORETask, _vw1__StageHostPatch_USCORETaskResponse *vw1__StageHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__StageHostPatch_USCORETask soap_tmp___vw1__StageHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StageHostPatch_USCORETask.vw1__StageHostPatch_USCORETask = vw1__StageHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StageHostPatch_USCORETask(soap, &soap_tmp___vw1__StageHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StageHostPatch_USCORETask(soap, &soap_tmp___vw1__StageHostPatch_USCORETask, "-vw1:StageHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StageHostPatch_USCORETask(soap, &soap_tmp___vw1__StageHostPatch_USCORETask, "-vw1:StageHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StageHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__StageHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StageHostPatch_USCORETaskResponse->soap_get(soap, "vw1:StageHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InstallHostPatch_USCORETask(const char *endpoint, const char *soap_action, vw1__InstallHostPatchRequestType *vw1__InstallHostPatch_USCORETask, _vw1__InstallHostPatch_USCORETaskResponse *vw1__InstallHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__InstallHostPatch_USCORETask soap_tmp___vw1__InstallHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__InstallHostPatch_USCORETask.vw1__InstallHostPatch_USCORETask = vw1__InstallHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__InstallHostPatch_USCORETask(soap, &soap_tmp___vw1__InstallHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__InstallHostPatch_USCORETask(soap, &soap_tmp___vw1__InstallHostPatch_USCORETask, "-vw1:InstallHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__InstallHostPatch_USCORETask(soap, &soap_tmp___vw1__InstallHostPatch_USCORETask, "-vw1:InstallHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__InstallHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__InstallHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__InstallHostPatch_USCORETaskResponse->soap_get(soap, "vw1:InstallHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InstallHostPatchV2_USCORETask(const char *endpoint, const char *soap_action, vw1__InstallHostPatchV2RequestType *vw1__InstallHostPatchV2_USCORETask, _vw1__InstallHostPatchV2_USCORETaskResponse *vw1__InstallHostPatchV2_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__InstallHostPatchV2_USCORETask soap_tmp___vw1__InstallHostPatchV2_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__InstallHostPatchV2_USCORETask.vw1__InstallHostPatchV2_USCORETask = vw1__InstallHostPatchV2_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__InstallHostPatchV2_USCORETask(soap, &soap_tmp___vw1__InstallHostPatchV2_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__InstallHostPatchV2_USCORETask(soap, &soap_tmp___vw1__InstallHostPatchV2_USCORETask, "-vw1:InstallHostPatchV2_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__InstallHostPatchV2_USCORETask(soap, &soap_tmp___vw1__InstallHostPatchV2_USCORETask, "-vw1:InstallHostPatchV2_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__InstallHostPatchV2_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__InstallHostPatchV2_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__InstallHostPatchV2_USCORETaskResponse->soap_get(soap, "vw1:InstallHostPatchV2_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UninstallHostPatch_USCORETask(const char *endpoint, const char *soap_action, vw1__UninstallHostPatchRequestType *vw1__UninstallHostPatch_USCORETask, _vw1__UninstallHostPatch_USCORETaskResponse *vw1__UninstallHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__UninstallHostPatch_USCORETask soap_tmp___vw1__UninstallHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UninstallHostPatch_USCORETask.vw1__UninstallHostPatch_USCORETask = vw1__UninstallHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UninstallHostPatch_USCORETask(soap, &soap_tmp___vw1__UninstallHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UninstallHostPatch_USCORETask(soap, &soap_tmp___vw1__UninstallHostPatch_USCORETask, "-vw1:UninstallHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UninstallHostPatch_USCORETask(soap, &soap_tmp___vw1__UninstallHostPatch_USCORETask, "-vw1:UninstallHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UninstallHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__UninstallHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UninstallHostPatch_USCORETaskResponse->soap_get(soap, "vw1:UninstallHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryHostPatch_USCORETask(const char *endpoint, const char *soap_action, vw1__QueryHostPatchRequestType *vw1__QueryHostPatch_USCORETask, _vw1__QueryHostPatch_USCORETaskResponse *vw1__QueryHostPatch_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__QueryHostPatch_USCORETask soap_tmp___vw1__QueryHostPatch_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryHostPatch_USCORETask.vw1__QueryHostPatch_USCORETask = vw1__QueryHostPatch_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryHostPatch_USCORETask(soap, &soap_tmp___vw1__QueryHostPatch_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryHostPatch_USCORETask(soap, &soap_tmp___vw1__QueryHostPatch_USCORETask, "-vw1:QueryHostPatch_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryHostPatch_USCORETask(soap, &soap_tmp___vw1__QueryHostPatch_USCORETask, "-vw1:QueryHostPatch_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryHostPatch_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__QueryHostPatch_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryHostPatch_USCORETaskResponse->soap_get(soap, "vw1:QueryHostPatch_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::Refresh(const char *endpoint, const char *soap_action, vw1__RefreshRequestType *vw1__Refresh, _vw1__RefreshResponse *vw1__RefreshResponse)
{	struct soap *soap = this;
	struct __vw1__Refresh soap_tmp___vw1__Refresh;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__Refresh.vw1__Refresh = vw1__Refresh;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__Refresh(soap, &soap_tmp___vw1__Refresh);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__Refresh(soap, &soap_tmp___vw1__Refresh, "-vw1:Refresh", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__Refresh(soap, &soap_tmp___vw1__Refresh, "-vw1:Refresh", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshResponse)
		return soap_closesock(soap);
	vw1__RefreshResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshResponse->soap_get(soap, "vw1:RefreshResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdatePassthruConfig(const char *endpoint, const char *soap_action, vw1__UpdatePassthruConfigRequestType *vw1__UpdatePassthruConfig, _vw1__UpdatePassthruConfigResponse *vw1__UpdatePassthruConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdatePassthruConfig soap_tmp___vw1__UpdatePassthruConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdatePassthruConfig.vw1__UpdatePassthruConfig = vw1__UpdatePassthruConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdatePassthruConfig(soap, &soap_tmp___vw1__UpdatePassthruConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdatePassthruConfig(soap, &soap_tmp___vw1__UpdatePassthruConfig, "-vw1:UpdatePassthruConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdatePassthruConfig(soap, &soap_tmp___vw1__UpdatePassthruConfig, "-vw1:UpdatePassthruConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdatePassthruConfigResponse)
		return soap_closesock(soap);
	vw1__UpdatePassthruConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdatePassthruConfigResponse->soap_get(soap, "vw1:UpdatePassthruConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ConfigurePowerPolicy(const char *endpoint, const char *soap_action, vw1__ConfigurePowerPolicyRequestType *vw1__ConfigurePowerPolicy, _vw1__ConfigurePowerPolicyResponse *vw1__ConfigurePowerPolicyResponse)
{	struct soap *soap = this;
	struct __vw1__ConfigurePowerPolicy soap_tmp___vw1__ConfigurePowerPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ConfigurePowerPolicy.vw1__ConfigurePowerPolicy = vw1__ConfigurePowerPolicy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ConfigurePowerPolicy(soap, &soap_tmp___vw1__ConfigurePowerPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ConfigurePowerPolicy(soap, &soap_tmp___vw1__ConfigurePowerPolicy, "-vw1:ConfigurePowerPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ConfigurePowerPolicy(soap, &soap_tmp___vw1__ConfigurePowerPolicy, "-vw1:ConfigurePowerPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ConfigurePowerPolicyResponse)
		return soap_closesock(soap);
	vw1__ConfigurePowerPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ConfigurePowerPolicyResponse->soap_get(soap, "vw1:ConfigurePowerPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateServicePolicy(const char *endpoint, const char *soap_action, vw1__UpdateServicePolicyRequestType *vw1__UpdateServicePolicy, _vw1__UpdateServicePolicyResponse *vw1__UpdateServicePolicyResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateServicePolicy soap_tmp___vw1__UpdateServicePolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateServicePolicy.vw1__UpdateServicePolicy = vw1__UpdateServicePolicy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateServicePolicy(soap, &soap_tmp___vw1__UpdateServicePolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateServicePolicy(soap, &soap_tmp___vw1__UpdateServicePolicy, "-vw1:UpdateServicePolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateServicePolicy(soap, &soap_tmp___vw1__UpdateServicePolicy, "-vw1:UpdateServicePolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateServicePolicyResponse)
		return soap_closesock(soap);
	vw1__UpdateServicePolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateServicePolicyResponse->soap_get(soap, "vw1:UpdateServicePolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StartService(const char *endpoint, const char *soap_action, vw1__StartServiceRequestType *vw1__StartService, _vw1__StartServiceResponse *vw1__StartServiceResponse)
{	struct soap *soap = this;
	struct __vw1__StartService soap_tmp___vw1__StartService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StartService.vw1__StartService = vw1__StartService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StartService(soap, &soap_tmp___vw1__StartService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StartService(soap, &soap_tmp___vw1__StartService, "-vw1:StartService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StartService(soap, &soap_tmp___vw1__StartService, "-vw1:StartService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StartServiceResponse)
		return soap_closesock(soap);
	vw1__StartServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StartServiceResponse->soap_get(soap, "vw1:StartServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StopService(const char *endpoint, const char *soap_action, vw1__StopServiceRequestType *vw1__StopService, _vw1__StopServiceResponse *vw1__StopServiceResponse)
{	struct soap *soap = this;
	struct __vw1__StopService soap_tmp___vw1__StopService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StopService.vw1__StopService = vw1__StopService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StopService(soap, &soap_tmp___vw1__StopService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StopService(soap, &soap_tmp___vw1__StopService, "-vw1:StopService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StopService(soap, &soap_tmp___vw1__StopService, "-vw1:StopService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StopServiceResponse)
		return soap_closesock(soap);
	vw1__StopServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StopServiceResponse->soap_get(soap, "vw1:StopServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RestartService(const char *endpoint, const char *soap_action, vw1__RestartServiceRequestType *vw1__RestartService, _vw1__RestartServiceResponse *vw1__RestartServiceResponse)
{	struct soap *soap = this;
	struct __vw1__RestartService soap_tmp___vw1__RestartService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RestartService.vw1__RestartService = vw1__RestartService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RestartService(soap, &soap_tmp___vw1__RestartService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RestartService(soap, &soap_tmp___vw1__RestartService, "-vw1:RestartService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RestartService(soap, &soap_tmp___vw1__RestartService, "-vw1:RestartService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RestartServiceResponse)
		return soap_closesock(soap);
	vw1__RestartServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RestartServiceResponse->soap_get(soap, "vw1:RestartServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UninstallService(const char *endpoint, const char *soap_action, vw1__UninstallServiceRequestType *vw1__UninstallService, _vw1__UninstallServiceResponse *vw1__UninstallServiceResponse)
{	struct soap *soap = this;
	struct __vw1__UninstallService soap_tmp___vw1__UninstallService;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UninstallService.vw1__UninstallService = vw1__UninstallService;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UninstallService(soap, &soap_tmp___vw1__UninstallService);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UninstallService(soap, &soap_tmp___vw1__UninstallService, "-vw1:UninstallService", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UninstallService(soap, &soap_tmp___vw1__UninstallService, "-vw1:UninstallService", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UninstallServiceResponse)
		return soap_closesock(soap);
	vw1__UninstallServiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UninstallServiceResponse->soap_get(soap, "vw1:UninstallServiceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshServices(const char *endpoint, const char *soap_action, vw1__RefreshServicesRequestType *vw1__RefreshServices, _vw1__RefreshServicesResponse *vw1__RefreshServicesResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshServices soap_tmp___vw1__RefreshServices;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshServices.vw1__RefreshServices = vw1__RefreshServices;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshServices(soap, &soap_tmp___vw1__RefreshServices);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshServices(soap, &soap_tmp___vw1__RefreshServices, "-vw1:RefreshServices", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshServices(soap, &soap_tmp___vw1__RefreshServices, "-vw1:RefreshServices", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshServicesResponse)
		return soap_closesock(soap);
	vw1__RefreshServicesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshServicesResponse->soap_get(soap, "vw1:RefreshServicesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureSnmpAgent(const char *endpoint, const char *soap_action, vw1__ReconfigureSnmpAgentRequestType *vw1__ReconfigureSnmpAgent, _vw1__ReconfigureSnmpAgentResponse *vw1__ReconfigureSnmpAgentResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureSnmpAgent soap_tmp___vw1__ReconfigureSnmpAgent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureSnmpAgent.vw1__ReconfigureSnmpAgent = vw1__ReconfigureSnmpAgent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureSnmpAgent(soap, &soap_tmp___vw1__ReconfigureSnmpAgent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureSnmpAgent(soap, &soap_tmp___vw1__ReconfigureSnmpAgent, "-vw1:ReconfigureSnmpAgent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureSnmpAgent(soap, &soap_tmp___vw1__ReconfigureSnmpAgent, "-vw1:ReconfigureSnmpAgent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureSnmpAgentResponse)
		return soap_closesock(soap);
	vw1__ReconfigureSnmpAgentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureSnmpAgentResponse->soap_get(soap, "vw1:ReconfigureSnmpAgentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SendTestNotification(const char *endpoint, const char *soap_action, vw1__SendTestNotificationRequestType *vw1__SendTestNotification, _vw1__SendTestNotificationResponse *vw1__SendTestNotificationResponse)
{	struct soap *soap = this;
	struct __vw1__SendTestNotification soap_tmp___vw1__SendTestNotification;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SendTestNotification.vw1__SendTestNotification = vw1__SendTestNotification;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SendTestNotification(soap, &soap_tmp___vw1__SendTestNotification);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SendTestNotification(soap, &soap_tmp___vw1__SendTestNotification, "-vw1:SendTestNotification", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SendTestNotification(soap, &soap_tmp___vw1__SendTestNotification, "-vw1:SendTestNotification", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SendTestNotificationResponse)
		return soap_closesock(soap);
	vw1__SendTestNotificationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SendTestNotificationResponse->soap_get(soap, "vw1:SendTestNotificationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveDiskPartitionInfo(const char *endpoint, const char *soap_action, vw1__RetrieveDiskPartitionInfoRequestType *vw1__RetrieveDiskPartitionInfo, _vw1__RetrieveDiskPartitionInfoResponse *vw1__RetrieveDiskPartitionInfoResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveDiskPartitionInfo soap_tmp___vw1__RetrieveDiskPartitionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveDiskPartitionInfo.vw1__RetrieveDiskPartitionInfo = vw1__RetrieveDiskPartitionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveDiskPartitionInfo(soap, &soap_tmp___vw1__RetrieveDiskPartitionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveDiskPartitionInfo(soap, &soap_tmp___vw1__RetrieveDiskPartitionInfo, "-vw1:RetrieveDiskPartitionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveDiskPartitionInfo(soap, &soap_tmp___vw1__RetrieveDiskPartitionInfo, "-vw1:RetrieveDiskPartitionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveDiskPartitionInfoResponse)
		return soap_closesock(soap);
	vw1__RetrieveDiskPartitionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveDiskPartitionInfoResponse->soap_get(soap, "vw1:RetrieveDiskPartitionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ComputeDiskPartitionInfo(const char *endpoint, const char *soap_action, vw1__ComputeDiskPartitionInfoRequestType *vw1__ComputeDiskPartitionInfo, _vw1__ComputeDiskPartitionInfoResponse *vw1__ComputeDiskPartitionInfoResponse)
{	struct soap *soap = this;
	struct __vw1__ComputeDiskPartitionInfo soap_tmp___vw1__ComputeDiskPartitionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ComputeDiskPartitionInfo.vw1__ComputeDiskPartitionInfo = vw1__ComputeDiskPartitionInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ComputeDiskPartitionInfo(soap, &soap_tmp___vw1__ComputeDiskPartitionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ComputeDiskPartitionInfo(soap, &soap_tmp___vw1__ComputeDiskPartitionInfo, "-vw1:ComputeDiskPartitionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ComputeDiskPartitionInfo(soap, &soap_tmp___vw1__ComputeDiskPartitionInfo, "-vw1:ComputeDiskPartitionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ComputeDiskPartitionInfoResponse)
		return soap_closesock(soap);
	vw1__ComputeDiskPartitionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ComputeDiskPartitionInfoResponse->soap_get(soap, "vw1:ComputeDiskPartitionInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ComputeDiskPartitionInfoForResize(const char *endpoint, const char *soap_action, vw1__ComputeDiskPartitionInfoForResizeRequestType *vw1__ComputeDiskPartitionInfoForResize, _vw1__ComputeDiskPartitionInfoForResizeResponse *vw1__ComputeDiskPartitionInfoForResizeResponse)
{	struct soap *soap = this;
	struct __vw1__ComputeDiskPartitionInfoForResize soap_tmp___vw1__ComputeDiskPartitionInfoForResize;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ComputeDiskPartitionInfoForResize.vw1__ComputeDiskPartitionInfoForResize = vw1__ComputeDiskPartitionInfoForResize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___vw1__ComputeDiskPartitionInfoForResize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___vw1__ComputeDiskPartitionInfoForResize, "-vw1:ComputeDiskPartitionInfoForResize", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ComputeDiskPartitionInfoForResize(soap, &soap_tmp___vw1__ComputeDiskPartitionInfoForResize, "-vw1:ComputeDiskPartitionInfoForResize", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ComputeDiskPartitionInfoForResizeResponse)
		return soap_closesock(soap);
	vw1__ComputeDiskPartitionInfoForResizeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ComputeDiskPartitionInfoForResizeResponse->soap_get(soap, "vw1:ComputeDiskPartitionInfoForResizeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateDiskPartitions(const char *endpoint, const char *soap_action, vw1__UpdateDiskPartitionsRequestType *vw1__UpdateDiskPartitions, _vw1__UpdateDiskPartitionsResponse *vw1__UpdateDiskPartitionsResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateDiskPartitions soap_tmp___vw1__UpdateDiskPartitions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateDiskPartitions.vw1__UpdateDiskPartitions = vw1__UpdateDiskPartitions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateDiskPartitions(soap, &soap_tmp___vw1__UpdateDiskPartitions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateDiskPartitions(soap, &soap_tmp___vw1__UpdateDiskPartitions, "-vw1:UpdateDiskPartitions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateDiskPartitions(soap, &soap_tmp___vw1__UpdateDiskPartitions, "-vw1:UpdateDiskPartitions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateDiskPartitionsResponse)
		return soap_closesock(soap);
	vw1__UpdateDiskPartitionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateDiskPartitionsResponse->soap_get(soap, "vw1:UpdateDiskPartitionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FormatVmfs(const char *endpoint, const char *soap_action, vw1__FormatVmfsRequestType *vw1__FormatVmfs, _vw1__FormatVmfsResponse *vw1__FormatVmfsResponse)
{	struct soap *soap = this;
	struct __vw1__FormatVmfs soap_tmp___vw1__FormatVmfs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FormatVmfs.vw1__FormatVmfs = vw1__FormatVmfs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FormatVmfs(soap, &soap_tmp___vw1__FormatVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FormatVmfs(soap, &soap_tmp___vw1__FormatVmfs, "-vw1:FormatVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FormatVmfs(soap, &soap_tmp___vw1__FormatVmfs, "-vw1:FormatVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FormatVmfsResponse)
		return soap_closesock(soap);
	vw1__FormatVmfsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FormatVmfsResponse->soap_get(soap, "vw1:FormatVmfsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MountVmfsVolume(const char *endpoint, const char *soap_action, vw1__MountVmfsVolumeRequestType *vw1__MountVmfsVolume, _vw1__MountVmfsVolumeResponse *vw1__MountVmfsVolumeResponse)
{	struct soap *soap = this;
	struct __vw1__MountVmfsVolume soap_tmp___vw1__MountVmfsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MountVmfsVolume.vw1__MountVmfsVolume = vw1__MountVmfsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MountVmfsVolume(soap, &soap_tmp___vw1__MountVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MountVmfsVolume(soap, &soap_tmp___vw1__MountVmfsVolume, "-vw1:MountVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MountVmfsVolume(soap, &soap_tmp___vw1__MountVmfsVolume, "-vw1:MountVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MountVmfsVolumeResponse)
		return soap_closesock(soap);
	vw1__MountVmfsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MountVmfsVolumeResponse->soap_get(soap, "vw1:MountVmfsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountVmfsVolume(const char *endpoint, const char *soap_action, vw1__UnmountVmfsVolumeRequestType *vw1__UnmountVmfsVolume, _vw1__UnmountVmfsVolumeResponse *vw1__UnmountVmfsVolumeResponse)
{	struct soap *soap = this;
	struct __vw1__UnmountVmfsVolume soap_tmp___vw1__UnmountVmfsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UnmountVmfsVolume.vw1__UnmountVmfsVolume = vw1__UnmountVmfsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UnmountVmfsVolume(soap, &soap_tmp___vw1__UnmountVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UnmountVmfsVolume(soap, &soap_tmp___vw1__UnmountVmfsVolume, "-vw1:UnmountVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UnmountVmfsVolume(soap, &soap_tmp___vw1__UnmountVmfsVolume, "-vw1:UnmountVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UnmountVmfsVolumeResponse)
		return soap_closesock(soap);
	vw1__UnmountVmfsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UnmountVmfsVolumeResponse->soap_get(soap, "vw1:UnmountVmfsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RescanVmfs(const char *endpoint, const char *soap_action, vw1__RescanVmfsRequestType *vw1__RescanVmfs, _vw1__RescanVmfsResponse *vw1__RescanVmfsResponse)
{	struct soap *soap = this;
	struct __vw1__RescanVmfs soap_tmp___vw1__RescanVmfs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RescanVmfs.vw1__RescanVmfs = vw1__RescanVmfs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RescanVmfs(soap, &soap_tmp___vw1__RescanVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RescanVmfs(soap, &soap_tmp___vw1__RescanVmfs, "-vw1:RescanVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RescanVmfs(soap, &soap_tmp___vw1__RescanVmfs, "-vw1:RescanVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RescanVmfsResponse)
		return soap_closesock(soap);
	vw1__RescanVmfsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RescanVmfsResponse->soap_get(soap, "vw1:RescanVmfsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AttachVmfsExtent(const char *endpoint, const char *soap_action, vw1__AttachVmfsExtentRequestType *vw1__AttachVmfsExtent, _vw1__AttachVmfsExtentResponse *vw1__AttachVmfsExtentResponse)
{	struct soap *soap = this;
	struct __vw1__AttachVmfsExtent soap_tmp___vw1__AttachVmfsExtent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AttachVmfsExtent.vw1__AttachVmfsExtent = vw1__AttachVmfsExtent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AttachVmfsExtent(soap, &soap_tmp___vw1__AttachVmfsExtent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AttachVmfsExtent(soap, &soap_tmp___vw1__AttachVmfsExtent, "-vw1:AttachVmfsExtent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AttachVmfsExtent(soap, &soap_tmp___vw1__AttachVmfsExtent, "-vw1:AttachVmfsExtent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AttachVmfsExtentResponse)
		return soap_closesock(soap);
	vw1__AttachVmfsExtentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AttachVmfsExtentResponse->soap_get(soap, "vw1:AttachVmfsExtentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExpandVmfsExtent(const char *endpoint, const char *soap_action, vw1__ExpandVmfsExtentRequestType *vw1__ExpandVmfsExtent, _vw1__ExpandVmfsExtentResponse *vw1__ExpandVmfsExtentResponse)
{	struct soap *soap = this;
	struct __vw1__ExpandVmfsExtent soap_tmp___vw1__ExpandVmfsExtent;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExpandVmfsExtent.vw1__ExpandVmfsExtent = vw1__ExpandVmfsExtent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExpandVmfsExtent(soap, &soap_tmp___vw1__ExpandVmfsExtent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExpandVmfsExtent(soap, &soap_tmp___vw1__ExpandVmfsExtent, "-vw1:ExpandVmfsExtent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExpandVmfsExtent(soap, &soap_tmp___vw1__ExpandVmfsExtent, "-vw1:ExpandVmfsExtent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExpandVmfsExtentResponse)
		return soap_closesock(soap);
	vw1__ExpandVmfsExtentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExpandVmfsExtentResponse->soap_get(soap, "vw1:ExpandVmfsExtentResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeVmfs(const char *endpoint, const char *soap_action, vw1__UpgradeVmfsRequestType *vw1__UpgradeVmfs, _vw1__UpgradeVmfsResponse *vw1__UpgradeVmfsResponse)
{	struct soap *soap = this;
	struct __vw1__UpgradeVmfs soap_tmp___vw1__UpgradeVmfs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpgradeVmfs.vw1__UpgradeVmfs = vw1__UpgradeVmfs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpgradeVmfs(soap, &soap_tmp___vw1__UpgradeVmfs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpgradeVmfs(soap, &soap_tmp___vw1__UpgradeVmfs, "-vw1:UpgradeVmfs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpgradeVmfs(soap, &soap_tmp___vw1__UpgradeVmfs, "-vw1:UpgradeVmfs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpgradeVmfsResponse)
		return soap_closesock(soap);
	vw1__UpgradeVmfsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpgradeVmfsResponse->soap_get(soap, "vw1:UpgradeVmfsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpgradeVmLayout(const char *endpoint, const char *soap_action, vw1__UpgradeVmLayoutRequestType *vw1__UpgradeVmLayout, _vw1__UpgradeVmLayoutResponse *vw1__UpgradeVmLayoutResponse)
{	struct soap *soap = this;
	struct __vw1__UpgradeVmLayout soap_tmp___vw1__UpgradeVmLayout;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpgradeVmLayout.vw1__UpgradeVmLayout = vw1__UpgradeVmLayout;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpgradeVmLayout(soap, &soap_tmp___vw1__UpgradeVmLayout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpgradeVmLayout(soap, &soap_tmp___vw1__UpgradeVmLayout, "-vw1:UpgradeVmLayout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpgradeVmLayout(soap, &soap_tmp___vw1__UpgradeVmLayout, "-vw1:UpgradeVmLayout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpgradeVmLayoutResponse)
		return soap_closesock(soap);
	vw1__UpgradeVmLayoutResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpgradeVmLayoutResponse->soap_get(soap, "vw1:UpgradeVmLayoutResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryUnresolvedVmfsVolume(const char *endpoint, const char *soap_action, vw1__QueryUnresolvedVmfsVolumeRequestType *vw1__QueryUnresolvedVmfsVolume, _vw1__QueryUnresolvedVmfsVolumeResponse *vw1__QueryUnresolvedVmfsVolumeResponse)
{	struct soap *soap = this;
	struct __vw1__QueryUnresolvedVmfsVolume soap_tmp___vw1__QueryUnresolvedVmfsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryUnresolvedVmfsVolume.vw1__QueryUnresolvedVmfsVolume = vw1__QueryUnresolvedVmfsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryUnresolvedVmfsVolume(soap, &soap_tmp___vw1__QueryUnresolvedVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryUnresolvedVmfsVolume(soap, &soap_tmp___vw1__QueryUnresolvedVmfsVolume, "-vw1:QueryUnresolvedVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryUnresolvedVmfsVolume(soap, &soap_tmp___vw1__QueryUnresolvedVmfsVolume, "-vw1:QueryUnresolvedVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryUnresolvedVmfsVolumeResponse)
		return soap_closesock(soap);
	vw1__QueryUnresolvedVmfsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryUnresolvedVmfsVolumeResponse->soap_get(soap, "vw1:QueryUnresolvedVmfsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResolveMultipleUnresolvedVmfsVolumes(const char *endpoint, const char *soap_action, vw1__ResolveMultipleUnresolvedVmfsVolumesRequestType *vw1__ResolveMultipleUnresolvedVmfsVolumes, _vw1__ResolveMultipleUnresolvedVmfsVolumesResponse *vw1__ResolveMultipleUnresolvedVmfsVolumesResponse)
{	struct soap *soap = this;
	struct __vw1__ResolveMultipleUnresolvedVmfsVolumes soap_tmp___vw1__ResolveMultipleUnresolvedVmfsVolumes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResolveMultipleUnresolvedVmfsVolumes.vw1__ResolveMultipleUnresolvedVmfsVolumes = vw1__ResolveMultipleUnresolvedVmfsVolumes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___vw1__ResolveMultipleUnresolvedVmfsVolumes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___vw1__ResolveMultipleUnresolvedVmfsVolumes, "-vw1:ResolveMultipleUnresolvedVmfsVolumes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResolveMultipleUnresolvedVmfsVolumes(soap, &soap_tmp___vw1__ResolveMultipleUnresolvedVmfsVolumes, "-vw1:ResolveMultipleUnresolvedVmfsVolumes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResolveMultipleUnresolvedVmfsVolumesResponse)
		return soap_closesock(soap);
	vw1__ResolveMultipleUnresolvedVmfsVolumesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResolveMultipleUnresolvedVmfsVolumesResponse->soap_get(soap, "vw1:ResolveMultipleUnresolvedVmfsVolumesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UnmountForceMountedVmfsVolume(const char *endpoint, const char *soap_action, vw1__UnmountForceMountedVmfsVolumeRequestType *vw1__UnmountForceMountedVmfsVolume, _vw1__UnmountForceMountedVmfsVolumeResponse *vw1__UnmountForceMountedVmfsVolumeResponse)
{	struct soap *soap = this;
	struct __vw1__UnmountForceMountedVmfsVolume soap_tmp___vw1__UnmountForceMountedVmfsVolume;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UnmountForceMountedVmfsVolume.vw1__UnmountForceMountedVmfsVolume = vw1__UnmountForceMountedVmfsVolume;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UnmountForceMountedVmfsVolume(soap, &soap_tmp___vw1__UnmountForceMountedVmfsVolume);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UnmountForceMountedVmfsVolume(soap, &soap_tmp___vw1__UnmountForceMountedVmfsVolume, "-vw1:UnmountForceMountedVmfsVolume", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UnmountForceMountedVmfsVolume(soap, &soap_tmp___vw1__UnmountForceMountedVmfsVolume, "-vw1:UnmountForceMountedVmfsVolume", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UnmountForceMountedVmfsVolumeResponse)
		return soap_closesock(soap);
	vw1__UnmountForceMountedVmfsVolumeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UnmountForceMountedVmfsVolumeResponse->soap_get(soap, "vw1:UnmountForceMountedVmfsVolumeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RescanHba(const char *endpoint, const char *soap_action, vw1__RescanHbaRequestType *vw1__RescanHba, _vw1__RescanHbaResponse *vw1__RescanHbaResponse)
{	struct soap *soap = this;
	struct __vw1__RescanHba soap_tmp___vw1__RescanHba;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RescanHba.vw1__RescanHba = vw1__RescanHba;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RescanHba(soap, &soap_tmp___vw1__RescanHba);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RescanHba(soap, &soap_tmp___vw1__RescanHba, "-vw1:RescanHba", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RescanHba(soap, &soap_tmp___vw1__RescanHba, "-vw1:RescanHba", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RescanHbaResponse)
		return soap_closesock(soap);
	vw1__RescanHbaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RescanHbaResponse->soap_get(soap, "vw1:RescanHbaResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RescanAllHba(const char *endpoint, const char *soap_action, vw1__RescanAllHbaRequestType *vw1__RescanAllHba, _vw1__RescanAllHbaResponse *vw1__RescanAllHbaResponse)
{	struct soap *soap = this;
	struct __vw1__RescanAllHba soap_tmp___vw1__RescanAllHba;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RescanAllHba.vw1__RescanAllHba = vw1__RescanAllHba;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RescanAllHba(soap, &soap_tmp___vw1__RescanAllHba);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RescanAllHba(soap, &soap_tmp___vw1__RescanAllHba, "-vw1:RescanAllHba", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RescanAllHba(soap, &soap_tmp___vw1__RescanAllHba, "-vw1:RescanAllHba", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RescanAllHbaResponse)
		return soap_closesock(soap);
	vw1__RescanAllHbaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RescanAllHbaResponse->soap_get(soap, "vw1:RescanAllHbaResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateSoftwareInternetScsiEnabled(const char *endpoint, const char *soap_action, vw1__UpdateSoftwareInternetScsiEnabledRequestType *vw1__UpdateSoftwareInternetScsiEnabled, _vw1__UpdateSoftwareInternetScsiEnabledResponse *vw1__UpdateSoftwareInternetScsiEnabledResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateSoftwareInternetScsiEnabled soap_tmp___vw1__UpdateSoftwareInternetScsiEnabled;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateSoftwareInternetScsiEnabled.vw1__UpdateSoftwareInternetScsiEnabled = vw1__UpdateSoftwareInternetScsiEnabled;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___vw1__UpdateSoftwareInternetScsiEnabled);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___vw1__UpdateSoftwareInternetScsiEnabled, "-vw1:UpdateSoftwareInternetScsiEnabled", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateSoftwareInternetScsiEnabled(soap, &soap_tmp___vw1__UpdateSoftwareInternetScsiEnabled, "-vw1:UpdateSoftwareInternetScsiEnabled", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateSoftwareInternetScsiEnabledResponse)
		return soap_closesock(soap);
	vw1__UpdateSoftwareInternetScsiEnabledResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateSoftwareInternetScsiEnabledResponse->soap_get(soap, "vw1:UpdateSoftwareInternetScsiEnabledResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiDiscoveryProperties(const char *endpoint, const char *soap_action, vw1__UpdateInternetScsiDiscoveryPropertiesRequestType *vw1__UpdateInternetScsiDiscoveryProperties, _vw1__UpdateInternetScsiDiscoveryPropertiesResponse *vw1__UpdateInternetScsiDiscoveryPropertiesResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateInternetScsiDiscoveryProperties soap_tmp___vw1__UpdateInternetScsiDiscoveryProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateInternetScsiDiscoveryProperties.vw1__UpdateInternetScsiDiscoveryProperties = vw1__UpdateInternetScsiDiscoveryProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___vw1__UpdateInternetScsiDiscoveryProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___vw1__UpdateInternetScsiDiscoveryProperties, "-vw1:UpdateInternetScsiDiscoveryProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateInternetScsiDiscoveryProperties(soap, &soap_tmp___vw1__UpdateInternetScsiDiscoveryProperties, "-vw1:UpdateInternetScsiDiscoveryProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateInternetScsiDiscoveryPropertiesResponse)
		return soap_closesock(soap);
	vw1__UpdateInternetScsiDiscoveryPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateInternetScsiDiscoveryPropertiesResponse->soap_get(soap, "vw1:UpdateInternetScsiDiscoveryPropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiAuthenticationProperties(const char *endpoint, const char *soap_action, vw1__UpdateInternetScsiAuthenticationPropertiesRequestType *vw1__UpdateInternetScsiAuthenticationProperties, _vw1__UpdateInternetScsiAuthenticationPropertiesResponse *vw1__UpdateInternetScsiAuthenticationPropertiesResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateInternetScsiAuthenticationProperties soap_tmp___vw1__UpdateInternetScsiAuthenticationProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateInternetScsiAuthenticationProperties.vw1__UpdateInternetScsiAuthenticationProperties = vw1__UpdateInternetScsiAuthenticationProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___vw1__UpdateInternetScsiAuthenticationProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___vw1__UpdateInternetScsiAuthenticationProperties, "-vw1:UpdateInternetScsiAuthenticationProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateInternetScsiAuthenticationProperties(soap, &soap_tmp___vw1__UpdateInternetScsiAuthenticationProperties, "-vw1:UpdateInternetScsiAuthenticationProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateInternetScsiAuthenticationPropertiesResponse)
		return soap_closesock(soap);
	vw1__UpdateInternetScsiAuthenticationPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateInternetScsiAuthenticationPropertiesResponse->soap_get(soap, "vw1:UpdateInternetScsiAuthenticationPropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiDigestProperties(const char *endpoint, const char *soap_action, vw1__UpdateInternetScsiDigestPropertiesRequestType *vw1__UpdateInternetScsiDigestProperties, _vw1__UpdateInternetScsiDigestPropertiesResponse *vw1__UpdateInternetScsiDigestPropertiesResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateInternetScsiDigestProperties soap_tmp___vw1__UpdateInternetScsiDigestProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateInternetScsiDigestProperties.vw1__UpdateInternetScsiDigestProperties = vw1__UpdateInternetScsiDigestProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateInternetScsiDigestProperties(soap, &soap_tmp___vw1__UpdateInternetScsiDigestProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateInternetScsiDigestProperties(soap, &soap_tmp___vw1__UpdateInternetScsiDigestProperties, "-vw1:UpdateInternetScsiDigestProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateInternetScsiDigestProperties(soap, &soap_tmp___vw1__UpdateInternetScsiDigestProperties, "-vw1:UpdateInternetScsiDigestProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateInternetScsiDigestPropertiesResponse)
		return soap_closesock(soap);
	vw1__UpdateInternetScsiDigestPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateInternetScsiDigestPropertiesResponse->soap_get(soap, "vw1:UpdateInternetScsiDigestPropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiAdvancedOptions(const char *endpoint, const char *soap_action, vw1__UpdateInternetScsiAdvancedOptionsRequestType *vw1__UpdateInternetScsiAdvancedOptions, _vw1__UpdateInternetScsiAdvancedOptionsResponse *vw1__UpdateInternetScsiAdvancedOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateInternetScsiAdvancedOptions soap_tmp___vw1__UpdateInternetScsiAdvancedOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateInternetScsiAdvancedOptions.vw1__UpdateInternetScsiAdvancedOptions = vw1__UpdateInternetScsiAdvancedOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___vw1__UpdateInternetScsiAdvancedOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___vw1__UpdateInternetScsiAdvancedOptions, "-vw1:UpdateInternetScsiAdvancedOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateInternetScsiAdvancedOptions(soap, &soap_tmp___vw1__UpdateInternetScsiAdvancedOptions, "-vw1:UpdateInternetScsiAdvancedOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateInternetScsiAdvancedOptionsResponse)
		return soap_closesock(soap);
	vw1__UpdateInternetScsiAdvancedOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateInternetScsiAdvancedOptionsResponse->soap_get(soap, "vw1:UpdateInternetScsiAdvancedOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiIPProperties(const char *endpoint, const char *soap_action, vw1__UpdateInternetScsiIPPropertiesRequestType *vw1__UpdateInternetScsiIPProperties, _vw1__UpdateInternetScsiIPPropertiesResponse *vw1__UpdateInternetScsiIPPropertiesResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateInternetScsiIPProperties soap_tmp___vw1__UpdateInternetScsiIPProperties;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateInternetScsiIPProperties.vw1__UpdateInternetScsiIPProperties = vw1__UpdateInternetScsiIPProperties;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateInternetScsiIPProperties(soap, &soap_tmp___vw1__UpdateInternetScsiIPProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateInternetScsiIPProperties(soap, &soap_tmp___vw1__UpdateInternetScsiIPProperties, "-vw1:UpdateInternetScsiIPProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateInternetScsiIPProperties(soap, &soap_tmp___vw1__UpdateInternetScsiIPProperties, "-vw1:UpdateInternetScsiIPProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateInternetScsiIPPropertiesResponse)
		return soap_closesock(soap);
	vw1__UpdateInternetScsiIPPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateInternetScsiIPPropertiesResponse->soap_get(soap, "vw1:UpdateInternetScsiIPPropertiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiName(const char *endpoint, const char *soap_action, vw1__UpdateInternetScsiNameRequestType *vw1__UpdateInternetScsiName, _vw1__UpdateInternetScsiNameResponse *vw1__UpdateInternetScsiNameResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateInternetScsiName soap_tmp___vw1__UpdateInternetScsiName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateInternetScsiName.vw1__UpdateInternetScsiName = vw1__UpdateInternetScsiName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateInternetScsiName(soap, &soap_tmp___vw1__UpdateInternetScsiName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateInternetScsiName(soap, &soap_tmp___vw1__UpdateInternetScsiName, "-vw1:UpdateInternetScsiName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateInternetScsiName(soap, &soap_tmp___vw1__UpdateInternetScsiName, "-vw1:UpdateInternetScsiName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateInternetScsiNameResponse)
		return soap_closesock(soap);
	vw1__UpdateInternetScsiNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateInternetScsiNameResponse->soap_get(soap, "vw1:UpdateInternetScsiNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateInternetScsiAlias(const char *endpoint, const char *soap_action, vw1__UpdateInternetScsiAliasRequestType *vw1__UpdateInternetScsiAlias, _vw1__UpdateInternetScsiAliasResponse *vw1__UpdateInternetScsiAliasResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateInternetScsiAlias soap_tmp___vw1__UpdateInternetScsiAlias;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateInternetScsiAlias.vw1__UpdateInternetScsiAlias = vw1__UpdateInternetScsiAlias;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateInternetScsiAlias(soap, &soap_tmp___vw1__UpdateInternetScsiAlias);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateInternetScsiAlias(soap, &soap_tmp___vw1__UpdateInternetScsiAlias, "-vw1:UpdateInternetScsiAlias", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateInternetScsiAlias(soap, &soap_tmp___vw1__UpdateInternetScsiAlias, "-vw1:UpdateInternetScsiAlias", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateInternetScsiAliasResponse)
		return soap_closesock(soap);
	vw1__UpdateInternetScsiAliasResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateInternetScsiAliasResponse->soap_get(soap, "vw1:UpdateInternetScsiAliasResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddInternetScsiSendTargets(const char *endpoint, const char *soap_action, vw1__AddInternetScsiSendTargetsRequestType *vw1__AddInternetScsiSendTargets, _vw1__AddInternetScsiSendTargetsResponse *vw1__AddInternetScsiSendTargetsResponse)
{	struct soap *soap = this;
	struct __vw1__AddInternetScsiSendTargets soap_tmp___vw1__AddInternetScsiSendTargets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddInternetScsiSendTargets.vw1__AddInternetScsiSendTargets = vw1__AddInternetScsiSendTargets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddInternetScsiSendTargets(soap, &soap_tmp___vw1__AddInternetScsiSendTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddInternetScsiSendTargets(soap, &soap_tmp___vw1__AddInternetScsiSendTargets, "-vw1:AddInternetScsiSendTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddInternetScsiSendTargets(soap, &soap_tmp___vw1__AddInternetScsiSendTargets, "-vw1:AddInternetScsiSendTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddInternetScsiSendTargetsResponse)
		return soap_closesock(soap);
	vw1__AddInternetScsiSendTargetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddInternetScsiSendTargetsResponse->soap_get(soap, "vw1:AddInternetScsiSendTargetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveInternetScsiSendTargets(const char *endpoint, const char *soap_action, vw1__RemoveInternetScsiSendTargetsRequestType *vw1__RemoveInternetScsiSendTargets, _vw1__RemoveInternetScsiSendTargetsResponse *vw1__RemoveInternetScsiSendTargetsResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveInternetScsiSendTargets soap_tmp___vw1__RemoveInternetScsiSendTargets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveInternetScsiSendTargets.vw1__RemoveInternetScsiSendTargets = vw1__RemoveInternetScsiSendTargets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveInternetScsiSendTargets(soap, &soap_tmp___vw1__RemoveInternetScsiSendTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveInternetScsiSendTargets(soap, &soap_tmp___vw1__RemoveInternetScsiSendTargets, "-vw1:RemoveInternetScsiSendTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveInternetScsiSendTargets(soap, &soap_tmp___vw1__RemoveInternetScsiSendTargets, "-vw1:RemoveInternetScsiSendTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveInternetScsiSendTargetsResponse)
		return soap_closesock(soap);
	vw1__RemoveInternetScsiSendTargetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveInternetScsiSendTargetsResponse->soap_get(soap, "vw1:RemoveInternetScsiSendTargetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AddInternetScsiStaticTargets(const char *endpoint, const char *soap_action, vw1__AddInternetScsiStaticTargetsRequestType *vw1__AddInternetScsiStaticTargets, _vw1__AddInternetScsiStaticTargetsResponse *vw1__AddInternetScsiStaticTargetsResponse)
{	struct soap *soap = this;
	struct __vw1__AddInternetScsiStaticTargets soap_tmp___vw1__AddInternetScsiStaticTargets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AddInternetScsiStaticTargets.vw1__AddInternetScsiStaticTargets = vw1__AddInternetScsiStaticTargets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AddInternetScsiStaticTargets(soap, &soap_tmp___vw1__AddInternetScsiStaticTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AddInternetScsiStaticTargets(soap, &soap_tmp___vw1__AddInternetScsiStaticTargets, "-vw1:AddInternetScsiStaticTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AddInternetScsiStaticTargets(soap, &soap_tmp___vw1__AddInternetScsiStaticTargets, "-vw1:AddInternetScsiStaticTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AddInternetScsiStaticTargetsResponse)
		return soap_closesock(soap);
	vw1__AddInternetScsiStaticTargetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AddInternetScsiStaticTargetsResponse->soap_get(soap, "vw1:AddInternetScsiStaticTargetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveInternetScsiStaticTargets(const char *endpoint, const char *soap_action, vw1__RemoveInternetScsiStaticTargetsRequestType *vw1__RemoveInternetScsiStaticTargets, _vw1__RemoveInternetScsiStaticTargetsResponse *vw1__RemoveInternetScsiStaticTargetsResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveInternetScsiStaticTargets soap_tmp___vw1__RemoveInternetScsiStaticTargets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveInternetScsiStaticTargets.vw1__RemoveInternetScsiStaticTargets = vw1__RemoveInternetScsiStaticTargets;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveInternetScsiStaticTargets(soap, &soap_tmp___vw1__RemoveInternetScsiStaticTargets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveInternetScsiStaticTargets(soap, &soap_tmp___vw1__RemoveInternetScsiStaticTargets, "-vw1:RemoveInternetScsiStaticTargets", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveInternetScsiStaticTargets(soap, &soap_tmp___vw1__RemoveInternetScsiStaticTargets, "-vw1:RemoveInternetScsiStaticTargets", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveInternetScsiStaticTargetsResponse)
		return soap_closesock(soap);
	vw1__RemoveInternetScsiStaticTargetsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveInternetScsiStaticTargetsResponse->soap_get(soap, "vw1:RemoveInternetScsiStaticTargetsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::EnableMultipathPath(const char *endpoint, const char *soap_action, vw1__EnableMultipathPathRequestType *vw1__EnableMultipathPath, _vw1__EnableMultipathPathResponse *vw1__EnableMultipathPathResponse)
{	struct soap *soap = this;
	struct __vw1__EnableMultipathPath soap_tmp___vw1__EnableMultipathPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__EnableMultipathPath.vw1__EnableMultipathPath = vw1__EnableMultipathPath;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__EnableMultipathPath(soap, &soap_tmp___vw1__EnableMultipathPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__EnableMultipathPath(soap, &soap_tmp___vw1__EnableMultipathPath, "-vw1:EnableMultipathPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__EnableMultipathPath(soap, &soap_tmp___vw1__EnableMultipathPath, "-vw1:EnableMultipathPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__EnableMultipathPathResponse)
		return soap_closesock(soap);
	vw1__EnableMultipathPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__EnableMultipathPathResponse->soap_get(soap, "vw1:EnableMultipathPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DisableMultipathPath(const char *endpoint, const char *soap_action, vw1__DisableMultipathPathRequestType *vw1__DisableMultipathPath, _vw1__DisableMultipathPathResponse *vw1__DisableMultipathPathResponse)
{	struct soap *soap = this;
	struct __vw1__DisableMultipathPath soap_tmp___vw1__DisableMultipathPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DisableMultipathPath.vw1__DisableMultipathPath = vw1__DisableMultipathPath;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DisableMultipathPath(soap, &soap_tmp___vw1__DisableMultipathPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DisableMultipathPath(soap, &soap_tmp___vw1__DisableMultipathPath, "-vw1:DisableMultipathPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DisableMultipathPath(soap, &soap_tmp___vw1__DisableMultipathPath, "-vw1:DisableMultipathPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DisableMultipathPathResponse)
		return soap_closesock(soap);
	vw1__DisableMultipathPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DisableMultipathPathResponse->soap_get(soap, "vw1:DisableMultipathPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SetMultipathLunPolicy(const char *endpoint, const char *soap_action, vw1__SetMultipathLunPolicyRequestType *vw1__SetMultipathLunPolicy, _vw1__SetMultipathLunPolicyResponse *vw1__SetMultipathLunPolicyResponse)
{	struct soap *soap = this;
	struct __vw1__SetMultipathLunPolicy soap_tmp___vw1__SetMultipathLunPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SetMultipathLunPolicy.vw1__SetMultipathLunPolicy = vw1__SetMultipathLunPolicy;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SetMultipathLunPolicy(soap, &soap_tmp___vw1__SetMultipathLunPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SetMultipathLunPolicy(soap, &soap_tmp___vw1__SetMultipathLunPolicy, "-vw1:SetMultipathLunPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SetMultipathLunPolicy(soap, &soap_tmp___vw1__SetMultipathLunPolicy, "-vw1:SetMultipathLunPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SetMultipathLunPolicyResponse)
		return soap_closesock(soap);
	vw1__SetMultipathLunPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SetMultipathLunPolicyResponse->soap_get(soap, "vw1:SetMultipathLunPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPathSelectionPolicyOptions(const char *endpoint, const char *soap_action, vw1__QueryPathSelectionPolicyOptionsRequestType *vw1__QueryPathSelectionPolicyOptions, _vw1__QueryPathSelectionPolicyOptionsResponse *vw1__QueryPathSelectionPolicyOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPathSelectionPolicyOptions soap_tmp___vw1__QueryPathSelectionPolicyOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPathSelectionPolicyOptions.vw1__QueryPathSelectionPolicyOptions = vw1__QueryPathSelectionPolicyOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPathSelectionPolicyOptions(soap, &soap_tmp___vw1__QueryPathSelectionPolicyOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPathSelectionPolicyOptions(soap, &soap_tmp___vw1__QueryPathSelectionPolicyOptions, "-vw1:QueryPathSelectionPolicyOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPathSelectionPolicyOptions(soap, &soap_tmp___vw1__QueryPathSelectionPolicyOptions, "-vw1:QueryPathSelectionPolicyOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPathSelectionPolicyOptionsResponse)
		return soap_closesock(soap);
	vw1__QueryPathSelectionPolicyOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPathSelectionPolicyOptionsResponse->soap_get(soap, "vw1:QueryPathSelectionPolicyOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryStorageArrayTypePolicyOptions(const char *endpoint, const char *soap_action, vw1__QueryStorageArrayTypePolicyOptionsRequestType *vw1__QueryStorageArrayTypePolicyOptions, _vw1__QueryStorageArrayTypePolicyOptionsResponse *vw1__QueryStorageArrayTypePolicyOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryStorageArrayTypePolicyOptions soap_tmp___vw1__QueryStorageArrayTypePolicyOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryStorageArrayTypePolicyOptions.vw1__QueryStorageArrayTypePolicyOptions = vw1__QueryStorageArrayTypePolicyOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___vw1__QueryStorageArrayTypePolicyOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___vw1__QueryStorageArrayTypePolicyOptions, "-vw1:QueryStorageArrayTypePolicyOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryStorageArrayTypePolicyOptions(soap, &soap_tmp___vw1__QueryStorageArrayTypePolicyOptions, "-vw1:QueryStorageArrayTypePolicyOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryStorageArrayTypePolicyOptionsResponse)
		return soap_closesock(soap);
	vw1__QueryStorageArrayTypePolicyOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryStorageArrayTypePolicyOptionsResponse->soap_get(soap, "vw1:QueryStorageArrayTypePolicyOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateScsiLunDisplayName(const char *endpoint, const char *soap_action, vw1__UpdateScsiLunDisplayNameRequestType *vw1__UpdateScsiLunDisplayName, _vw1__UpdateScsiLunDisplayNameResponse *vw1__UpdateScsiLunDisplayNameResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateScsiLunDisplayName soap_tmp___vw1__UpdateScsiLunDisplayName;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateScsiLunDisplayName.vw1__UpdateScsiLunDisplayName = vw1__UpdateScsiLunDisplayName;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateScsiLunDisplayName(soap, &soap_tmp___vw1__UpdateScsiLunDisplayName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateScsiLunDisplayName(soap, &soap_tmp___vw1__UpdateScsiLunDisplayName, "-vw1:UpdateScsiLunDisplayName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateScsiLunDisplayName(soap, &soap_tmp___vw1__UpdateScsiLunDisplayName, "-vw1:UpdateScsiLunDisplayName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateScsiLunDisplayNameResponse)
		return soap_closesock(soap);
	vw1__UpdateScsiLunDisplayNameResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateScsiLunDisplayNameResponse->soap_get(soap, "vw1:UpdateScsiLunDisplayNameResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DetachScsiLun(const char *endpoint, const char *soap_action, vw1__DetachScsiLunRequestType *vw1__DetachScsiLun, _vw1__DetachScsiLunResponse *vw1__DetachScsiLunResponse)
{	struct soap *soap = this;
	struct __vw1__DetachScsiLun soap_tmp___vw1__DetachScsiLun;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DetachScsiLun.vw1__DetachScsiLun = vw1__DetachScsiLun;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DetachScsiLun(soap, &soap_tmp___vw1__DetachScsiLun);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DetachScsiLun(soap, &soap_tmp___vw1__DetachScsiLun, "-vw1:DetachScsiLun", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DetachScsiLun(soap, &soap_tmp___vw1__DetachScsiLun, "-vw1:DetachScsiLun", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DetachScsiLunResponse)
		return soap_closesock(soap);
	vw1__DetachScsiLunResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DetachScsiLunResponse->soap_get(soap, "vw1:DetachScsiLunResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AttachScsiLun(const char *endpoint, const char *soap_action, vw1__AttachScsiLunRequestType *vw1__AttachScsiLun, _vw1__AttachScsiLunResponse *vw1__AttachScsiLunResponse)
{	struct soap *soap = this;
	struct __vw1__AttachScsiLun soap_tmp___vw1__AttachScsiLun;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AttachScsiLun.vw1__AttachScsiLun = vw1__AttachScsiLun;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AttachScsiLun(soap, &soap_tmp___vw1__AttachScsiLun);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AttachScsiLun(soap, &soap_tmp___vw1__AttachScsiLun, "-vw1:AttachScsiLun", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AttachScsiLun(soap, &soap_tmp___vw1__AttachScsiLun, "-vw1:AttachScsiLun", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AttachScsiLunResponse)
		return soap_closesock(soap);
	vw1__AttachScsiLunResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AttachScsiLunResponse->soap_get(soap, "vw1:AttachScsiLunResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RefreshStorageSystem(const char *endpoint, const char *soap_action, vw1__RefreshStorageSystemRequestType *vw1__RefreshStorageSystem, _vw1__RefreshStorageSystemResponse *vw1__RefreshStorageSystemResponse)
{	struct soap *soap = this;
	struct __vw1__RefreshStorageSystem soap_tmp___vw1__RefreshStorageSystem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RefreshStorageSystem.vw1__RefreshStorageSystem = vw1__RefreshStorageSystem;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RefreshStorageSystem(soap, &soap_tmp___vw1__RefreshStorageSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RefreshStorageSystem(soap, &soap_tmp___vw1__RefreshStorageSystem, "-vw1:RefreshStorageSystem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RefreshStorageSystem(soap, &soap_tmp___vw1__RefreshStorageSystem, "-vw1:RefreshStorageSystem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RefreshStorageSystemResponse)
		return soap_closesock(soap);
	vw1__RefreshStorageSystemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RefreshStorageSystemResponse->soap_get(soap, "vw1:RefreshStorageSystemResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DiscoverFcoeHbas(const char *endpoint, const char *soap_action, vw1__DiscoverFcoeHbasRequestType *vw1__DiscoverFcoeHbas, _vw1__DiscoverFcoeHbasResponse *vw1__DiscoverFcoeHbasResponse)
{	struct soap *soap = this;
	struct __vw1__DiscoverFcoeHbas soap_tmp___vw1__DiscoverFcoeHbas;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DiscoverFcoeHbas.vw1__DiscoverFcoeHbas = vw1__DiscoverFcoeHbas;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DiscoverFcoeHbas(soap, &soap_tmp___vw1__DiscoverFcoeHbas);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DiscoverFcoeHbas(soap, &soap_tmp___vw1__DiscoverFcoeHbas, "-vw1:DiscoverFcoeHbas", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DiscoverFcoeHbas(soap, &soap_tmp___vw1__DiscoverFcoeHbas, "-vw1:DiscoverFcoeHbas", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DiscoverFcoeHbasResponse)
		return soap_closesock(soap);
	vw1__DiscoverFcoeHbasResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DiscoverFcoeHbasResponse->soap_get(soap, "vw1:DiscoverFcoeHbasResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MarkForRemoval(const char *endpoint, const char *soap_action, vw1__MarkForRemovalRequestType *vw1__MarkForRemoval, _vw1__MarkForRemovalResponse *vw1__MarkForRemovalResponse)
{	struct soap *soap = this;
	struct __vw1__MarkForRemoval soap_tmp___vw1__MarkForRemoval;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MarkForRemoval.vw1__MarkForRemoval = vw1__MarkForRemoval;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MarkForRemoval(soap, &soap_tmp___vw1__MarkForRemoval);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MarkForRemoval(soap, &soap_tmp___vw1__MarkForRemoval, "-vw1:MarkForRemoval", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MarkForRemoval(soap, &soap_tmp___vw1__MarkForRemoval, "-vw1:MarkForRemoval", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MarkForRemovalResponse)
		return soap_closesock(soap);
	vw1__MarkForRemovalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MarkForRemovalResponse->soap_get(soap, "vw1:MarkForRemovalResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateIpConfig(const char *endpoint, const char *soap_action, vw1__UpdateIpConfigRequestType *vw1__UpdateIpConfig, _vw1__UpdateIpConfigResponse *vw1__UpdateIpConfigResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateIpConfig soap_tmp___vw1__UpdateIpConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateIpConfig.vw1__UpdateIpConfig = vw1__UpdateIpConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateIpConfig(soap, &soap_tmp___vw1__UpdateIpConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateIpConfig(soap, &soap_tmp___vw1__UpdateIpConfig, "-vw1:UpdateIpConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateIpConfig(soap, &soap_tmp___vw1__UpdateIpConfig, "-vw1:UpdateIpConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateIpConfigResponse)
		return soap_closesock(soap);
	vw1__UpdateIpConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateIpConfigResponse->soap_get(soap, "vw1:UpdateIpConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SelectVnic(const char *endpoint, const char *soap_action, vw1__SelectVnicRequestType *vw1__SelectVnic, _vw1__SelectVnicResponse *vw1__SelectVnicResponse)
{	struct soap *soap = this;
	struct __vw1__SelectVnic soap_tmp___vw1__SelectVnic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SelectVnic.vw1__SelectVnic = vw1__SelectVnic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SelectVnic(soap, &soap_tmp___vw1__SelectVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SelectVnic(soap, &soap_tmp___vw1__SelectVnic, "-vw1:SelectVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SelectVnic(soap, &soap_tmp___vw1__SelectVnic, "-vw1:SelectVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SelectVnicResponse)
		return soap_closesock(soap);
	vw1__SelectVnicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SelectVnicResponse->soap_get(soap, "vw1:SelectVnicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeselectVnic(const char *endpoint, const char *soap_action, vw1__DeselectVnicRequestType *vw1__DeselectVnic, _vw1__DeselectVnicResponse *vw1__DeselectVnicResponse)
{	struct soap *soap = this;
	struct __vw1__DeselectVnic soap_tmp___vw1__DeselectVnic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DeselectVnic.vw1__DeselectVnic = vw1__DeselectVnic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DeselectVnic(soap, &soap_tmp___vw1__DeselectVnic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DeselectVnic(soap, &soap_tmp___vw1__DeselectVnic, "-vw1:DeselectVnic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DeselectVnic(soap, &soap_tmp___vw1__DeselectVnic, "-vw1:DeselectVnic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DeselectVnicResponse)
		return soap_closesock(soap);
	vw1__DeselectVnicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DeselectVnicResponse->soap_get(soap, "vw1:DeselectVnicResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryNetConfig(const char *endpoint, const char *soap_action, vw1__QueryNetConfigRequestType *vw1__QueryNetConfig, _vw1__QueryNetConfigResponse *vw1__QueryNetConfigResponse)
{	struct soap *soap = this;
	struct __vw1__QueryNetConfig soap_tmp___vw1__QueryNetConfig;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryNetConfig.vw1__QueryNetConfig = vw1__QueryNetConfig;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryNetConfig(soap, &soap_tmp___vw1__QueryNetConfig);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryNetConfig(soap, &soap_tmp___vw1__QueryNetConfig, "-vw1:QueryNetConfig", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryNetConfig(soap, &soap_tmp___vw1__QueryNetConfig, "-vw1:QueryNetConfig", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryNetConfigResponse)
		return soap_closesock(soap);
	vw1__QueryNetConfigResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryNetConfigResponse->soap_get(soap, "vw1:QueryNetConfigResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::SelectVnicForNicType(const char *endpoint, const char *soap_action, vw1__SelectVnicForNicTypeRequestType *vw1__SelectVnicForNicType, _vw1__SelectVnicForNicTypeResponse *vw1__SelectVnicForNicTypeResponse)
{	struct soap *soap = this;
	struct __vw1__SelectVnicForNicType soap_tmp___vw1__SelectVnicForNicType;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__SelectVnicForNicType.vw1__SelectVnicForNicType = vw1__SelectVnicForNicType;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__SelectVnicForNicType(soap, &soap_tmp___vw1__SelectVnicForNicType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__SelectVnicForNicType(soap, &soap_tmp___vw1__SelectVnicForNicType, "-vw1:SelectVnicForNicType", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__SelectVnicForNicType(soap, &soap_tmp___vw1__SelectVnicForNicType, "-vw1:SelectVnicForNicType", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__SelectVnicForNicTypeResponse)
		return soap_closesock(soap);
	vw1__SelectVnicForNicTypeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__SelectVnicForNicTypeResponse->soap_get(soap, "vw1:SelectVnicForNicTypeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeselectVnicForNicType(const char *endpoint, const char *soap_action, vw1__DeselectVnicForNicTypeRequestType *vw1__DeselectVnicForNicType, _vw1__DeselectVnicForNicTypeResponse *vw1__DeselectVnicForNicTypeResponse)
{	struct soap *soap = this;
	struct __vw1__DeselectVnicForNicType soap_tmp___vw1__DeselectVnicForNicType;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DeselectVnicForNicType.vw1__DeselectVnicForNicType = vw1__DeselectVnicForNicType;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DeselectVnicForNicType(soap, &soap_tmp___vw1__DeselectVnicForNicType);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DeselectVnicForNicType(soap, &soap_tmp___vw1__DeselectVnicForNicType, "-vw1:DeselectVnicForNicType", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DeselectVnicForNicType(soap, &soap_tmp___vw1__DeselectVnicForNicType, "-vw1:DeselectVnicForNicType", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DeselectVnicForNicTypeResponse)
		return soap_closesock(soap);
	vw1__DeselectVnicForNicTypeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DeselectVnicForNicTypeResponse->soap_get(soap, "vw1:DeselectVnicForNicTypeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryOptions(const char *endpoint, const char *soap_action, vw1__QueryOptionsRequestType *vw1__QueryOptions, _vw1__QueryOptionsResponse *vw1__QueryOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__QueryOptions soap_tmp___vw1__QueryOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryOptions.vw1__QueryOptions = vw1__QueryOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryOptions(soap, &soap_tmp___vw1__QueryOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryOptions(soap, &soap_tmp___vw1__QueryOptions, "-vw1:QueryOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryOptions(soap, &soap_tmp___vw1__QueryOptions, "-vw1:QueryOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryOptionsResponse)
		return soap_closesock(soap);
	vw1__QueryOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryOptionsResponse->soap_get(soap, "vw1:QueryOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateOptions(const char *endpoint, const char *soap_action, vw1__UpdateOptionsRequestType *vw1__UpdateOptions, _vw1__UpdateOptionsResponse *vw1__UpdateOptionsResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateOptions soap_tmp___vw1__UpdateOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateOptions.vw1__UpdateOptions = vw1__UpdateOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateOptions(soap, &soap_tmp___vw1__UpdateOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateOptions(soap, &soap_tmp___vw1__UpdateOptions, "-vw1:UpdateOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateOptions(soap, &soap_tmp___vw1__UpdateOptions, "-vw1:UpdateOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateOptionsResponse)
		return soap_closesock(soap);
	vw1__UpdateOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateOptionsResponse->soap_get(soap, "vw1:UpdateOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckCompliance_USCORETask(const char *endpoint, const char *soap_action, vw1__CheckComplianceRequestType *vw1__CheckCompliance_USCORETask, _vw1__CheckCompliance_USCORETaskResponse *vw1__CheckCompliance_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CheckCompliance_USCORETask soap_tmp___vw1__CheckCompliance_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckCompliance_USCORETask.vw1__CheckCompliance_USCORETask = vw1__CheckCompliance_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckCompliance_USCORETask(soap, &soap_tmp___vw1__CheckCompliance_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckCompliance_USCORETask(soap, &soap_tmp___vw1__CheckCompliance_USCORETask, "-vw1:CheckCompliance_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckCompliance_USCORETask(soap, &soap_tmp___vw1__CheckCompliance_USCORETask, "-vw1:CheckCompliance_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckCompliance_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CheckCompliance_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckCompliance_USCORETaskResponse->soap_get(soap, "vw1:CheckCompliance_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryComplianceStatus(const char *endpoint, const char *soap_action, vw1__QueryComplianceStatusRequestType *vw1__QueryComplianceStatus, _vw1__QueryComplianceStatusResponse *vw1__QueryComplianceStatusResponse)
{	struct soap *soap = this;
	struct __vw1__QueryComplianceStatus soap_tmp___vw1__QueryComplianceStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryComplianceStatus.vw1__QueryComplianceStatus = vw1__QueryComplianceStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryComplianceStatus(soap, &soap_tmp___vw1__QueryComplianceStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryComplianceStatus(soap, &soap_tmp___vw1__QueryComplianceStatus, "-vw1:QueryComplianceStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryComplianceStatus(soap, &soap_tmp___vw1__QueryComplianceStatus, "-vw1:QueryComplianceStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryComplianceStatusResponse)
		return soap_closesock(soap);
	vw1__QueryComplianceStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryComplianceStatusResponse->soap_get(soap, "vw1:QueryComplianceStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ClearComplianceStatus(const char *endpoint, const char *soap_action, vw1__ClearComplianceStatusRequestType *vw1__ClearComplianceStatus, _vw1__ClearComplianceStatusResponse *vw1__ClearComplianceStatusResponse)
{	struct soap *soap = this;
	struct __vw1__ClearComplianceStatus soap_tmp___vw1__ClearComplianceStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ClearComplianceStatus.vw1__ClearComplianceStatus = vw1__ClearComplianceStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ClearComplianceStatus(soap, &soap_tmp___vw1__ClearComplianceStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ClearComplianceStatus(soap, &soap_tmp___vw1__ClearComplianceStatus, "-vw1:ClearComplianceStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ClearComplianceStatus(soap, &soap_tmp___vw1__ClearComplianceStatus, "-vw1:ClearComplianceStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ClearComplianceStatusResponse)
		return soap_closesock(soap);
	vw1__ClearComplianceStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ClearComplianceStatusResponse->soap_get(soap, "vw1:ClearComplianceStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryExpressionMetadata(const char *endpoint, const char *soap_action, vw1__QueryExpressionMetadataRequestType *vw1__QueryExpressionMetadata, _vw1__QueryExpressionMetadataResponse *vw1__QueryExpressionMetadataResponse)
{	struct soap *soap = this;
	struct __vw1__QueryExpressionMetadata soap_tmp___vw1__QueryExpressionMetadata;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryExpressionMetadata.vw1__QueryExpressionMetadata = vw1__QueryExpressionMetadata;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryExpressionMetadata(soap, &soap_tmp___vw1__QueryExpressionMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryExpressionMetadata(soap, &soap_tmp___vw1__QueryExpressionMetadata, "-vw1:QueryExpressionMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryExpressionMetadata(soap, &soap_tmp___vw1__QueryExpressionMetadata, "-vw1:QueryExpressionMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryExpressionMetadataResponse)
		return soap_closesock(soap);
	vw1__QueryExpressionMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryExpressionMetadataResponse->soap_get(soap, "vw1:QueryExpressionMetadataResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveDescription(const char *endpoint, const char *soap_action, vw1__RetrieveDescriptionRequestType *vw1__RetrieveDescription, _vw1__RetrieveDescriptionResponse *vw1__RetrieveDescriptionResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveDescription soap_tmp___vw1__RetrieveDescription;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveDescription.vw1__RetrieveDescription = vw1__RetrieveDescription;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveDescription(soap, &soap_tmp___vw1__RetrieveDescription);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveDescription(soap, &soap_tmp___vw1__RetrieveDescription, "-vw1:RetrieveDescription", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveDescription(soap, &soap_tmp___vw1__RetrieveDescription, "-vw1:RetrieveDescription", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveDescriptionResponse)
		return soap_closesock(soap);
	vw1__RetrieveDescriptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveDescriptionResponse->soap_get(soap, "vw1:RetrieveDescriptionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyProfile(const char *endpoint, const char *soap_action, vw1__DestroyProfileRequestType *vw1__DestroyProfile, _vw1__DestroyProfileResponse *vw1__DestroyProfileResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyProfile soap_tmp___vw1__DestroyProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyProfile.vw1__DestroyProfile = vw1__DestroyProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyProfile(soap, &soap_tmp___vw1__DestroyProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyProfile(soap, &soap_tmp___vw1__DestroyProfile, "-vw1:DestroyProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyProfile(soap, &soap_tmp___vw1__DestroyProfile, "-vw1:DestroyProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyProfileResponse)
		return soap_closesock(soap);
	vw1__DestroyProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyProfileResponse->soap_get(soap, "vw1:DestroyProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AssociateProfile(const char *endpoint, const char *soap_action, vw1__AssociateProfileRequestType *vw1__AssociateProfile, _vw1__AssociateProfileResponse *vw1__AssociateProfileResponse)
{	struct soap *soap = this;
	struct __vw1__AssociateProfile soap_tmp___vw1__AssociateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AssociateProfile.vw1__AssociateProfile = vw1__AssociateProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AssociateProfile(soap, &soap_tmp___vw1__AssociateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AssociateProfile(soap, &soap_tmp___vw1__AssociateProfile, "-vw1:AssociateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AssociateProfile(soap, &soap_tmp___vw1__AssociateProfile, "-vw1:AssociateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AssociateProfileResponse)
		return soap_closesock(soap);
	vw1__AssociateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AssociateProfileResponse->soap_get(soap, "vw1:AssociateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DissociateProfile(const char *endpoint, const char *soap_action, vw1__DissociateProfileRequestType *vw1__DissociateProfile, _vw1__DissociateProfileResponse *vw1__DissociateProfileResponse)
{	struct soap *soap = this;
	struct __vw1__DissociateProfile soap_tmp___vw1__DissociateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DissociateProfile.vw1__DissociateProfile = vw1__DissociateProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DissociateProfile(soap, &soap_tmp___vw1__DissociateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DissociateProfile(soap, &soap_tmp___vw1__DissociateProfile, "-vw1:DissociateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DissociateProfile(soap, &soap_tmp___vw1__DissociateProfile, "-vw1:DissociateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DissociateProfileResponse)
		return soap_closesock(soap);
	vw1__DissociateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DissociateProfileResponse->soap_get(soap, "vw1:DissociateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckProfileCompliance_USCORETask(const char *endpoint, const char *soap_action, vw1__CheckProfileComplianceRequestType *vw1__CheckProfileCompliance_USCORETask, _vw1__CheckProfileCompliance_USCORETaskResponse *vw1__CheckProfileCompliance_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CheckProfileCompliance_USCORETask soap_tmp___vw1__CheckProfileCompliance_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckProfileCompliance_USCORETask.vw1__CheckProfileCompliance_USCORETask = vw1__CheckProfileCompliance_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckProfileCompliance_USCORETask(soap, &soap_tmp___vw1__CheckProfileCompliance_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckProfileCompliance_USCORETask(soap, &soap_tmp___vw1__CheckProfileCompliance_USCORETask, "-vw1:CheckProfileCompliance_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckProfileCompliance_USCORETask(soap, &soap_tmp___vw1__CheckProfileCompliance_USCORETask, "-vw1:CheckProfileCompliance_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckProfileCompliance_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CheckProfileCompliance_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckProfileCompliance_USCORETaskResponse->soap_get(soap, "vw1:CheckProfileCompliance_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportProfile(const char *endpoint, const char *soap_action, vw1__ExportProfileRequestType *vw1__ExportProfile, _vw1__ExportProfileResponse *vw1__ExportProfileResponse)
{	struct soap *soap = this;
	struct __vw1__ExportProfile soap_tmp___vw1__ExportProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExportProfile.vw1__ExportProfile = vw1__ExportProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExportProfile(soap, &soap_tmp___vw1__ExportProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExportProfile(soap, &soap_tmp___vw1__ExportProfile, "-vw1:ExportProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExportProfile(soap, &soap_tmp___vw1__ExportProfile, "-vw1:ExportProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExportProfileResponse)
		return soap_closesock(soap);
	vw1__ExportProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExportProfileResponse->soap_get(soap, "vw1:ExportProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateProfile(const char *endpoint, const char *soap_action, vw1__CreateProfileRequestType *vw1__CreateProfile, _vw1__CreateProfileResponse *vw1__CreateProfileResponse)
{	struct soap *soap = this;
	struct __vw1__CreateProfile soap_tmp___vw1__CreateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateProfile.vw1__CreateProfile = vw1__CreateProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateProfile(soap, &soap_tmp___vw1__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateProfile(soap, &soap_tmp___vw1__CreateProfile, "-vw1:CreateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateProfile(soap, &soap_tmp___vw1__CreateProfile, "-vw1:CreateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateProfileResponse)
		return soap_closesock(soap);
	vw1__CreateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateProfileResponse->soap_get(soap, "vw1:CreateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryPolicyMetadata(const char *endpoint, const char *soap_action, vw1__QueryPolicyMetadataRequestType *vw1__QueryPolicyMetadata, _vw1__QueryPolicyMetadataResponse *vw1__QueryPolicyMetadataResponse)
{	struct soap *soap = this;
	struct __vw1__QueryPolicyMetadata soap_tmp___vw1__QueryPolicyMetadata;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryPolicyMetadata.vw1__QueryPolicyMetadata = vw1__QueryPolicyMetadata;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryPolicyMetadata(soap, &soap_tmp___vw1__QueryPolicyMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryPolicyMetadata(soap, &soap_tmp___vw1__QueryPolicyMetadata, "-vw1:QueryPolicyMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryPolicyMetadata(soap, &soap_tmp___vw1__QueryPolicyMetadata, "-vw1:QueryPolicyMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryPolicyMetadataResponse)
		return soap_closesock(soap);
	vw1__QueryPolicyMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryPolicyMetadataResponse->soap_get(soap, "vw1:QueryPolicyMetadataResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::FindAssociatedProfile(const char *endpoint, const char *soap_action, vw1__FindAssociatedProfileRequestType *vw1__FindAssociatedProfile, _vw1__FindAssociatedProfileResponse *vw1__FindAssociatedProfileResponse)
{	struct soap *soap = this;
	struct __vw1__FindAssociatedProfile soap_tmp___vw1__FindAssociatedProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__FindAssociatedProfile.vw1__FindAssociatedProfile = vw1__FindAssociatedProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__FindAssociatedProfile(soap, &soap_tmp___vw1__FindAssociatedProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__FindAssociatedProfile(soap, &soap_tmp___vw1__FindAssociatedProfile, "-vw1:FindAssociatedProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__FindAssociatedProfile(soap, &soap_tmp___vw1__FindAssociatedProfile, "-vw1:FindAssociatedProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__FindAssociatedProfileResponse)
		return soap_closesock(soap);
	vw1__FindAssociatedProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__FindAssociatedProfileResponse->soap_get(soap, "vw1:FindAssociatedProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateClusterProfile(const char *endpoint, const char *soap_action, vw1__UpdateClusterProfileRequestType *vw1__UpdateClusterProfile, _vw1__UpdateClusterProfileResponse *vw1__UpdateClusterProfileResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateClusterProfile soap_tmp___vw1__UpdateClusterProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateClusterProfile.vw1__UpdateClusterProfile = vw1__UpdateClusterProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateClusterProfile(soap, &soap_tmp___vw1__UpdateClusterProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateClusterProfile(soap, &soap_tmp___vw1__UpdateClusterProfile, "-vw1:UpdateClusterProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateClusterProfile(soap, &soap_tmp___vw1__UpdateClusterProfile, "-vw1:UpdateClusterProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateClusterProfileResponse)
		return soap_closesock(soap);
	vw1__UpdateClusterProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateClusterProfileResponse->soap_get(soap, "vw1:UpdateClusterProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateReferenceHost(const char *endpoint, const char *soap_action, vw1__UpdateReferenceHostRequestType *vw1__UpdateReferenceHost, _vw1__UpdateReferenceHostResponse *vw1__UpdateReferenceHostResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateReferenceHost soap_tmp___vw1__UpdateReferenceHost;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateReferenceHost.vw1__UpdateReferenceHost = vw1__UpdateReferenceHost;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateReferenceHost(soap, &soap_tmp___vw1__UpdateReferenceHost);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateReferenceHost(soap, &soap_tmp___vw1__UpdateReferenceHost, "-vw1:UpdateReferenceHost", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateReferenceHost(soap, &soap_tmp___vw1__UpdateReferenceHost, "-vw1:UpdateReferenceHost", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateReferenceHostResponse)
		return soap_closesock(soap);
	vw1__UpdateReferenceHostResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateReferenceHostResponse->soap_get(soap, "vw1:UpdateReferenceHostResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateHostProfile(const char *endpoint, const char *soap_action, vw1__UpdateHostProfileRequestType *vw1__UpdateHostProfile, _vw1__UpdateHostProfileResponse *vw1__UpdateHostProfileResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateHostProfile soap_tmp___vw1__UpdateHostProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateHostProfile.vw1__UpdateHostProfile = vw1__UpdateHostProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateHostProfile(soap, &soap_tmp___vw1__UpdateHostProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateHostProfile(soap, &soap_tmp___vw1__UpdateHostProfile, "-vw1:UpdateHostProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateHostProfile(soap, &soap_tmp___vw1__UpdateHostProfile, "-vw1:UpdateHostProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateHostProfileResponse)
		return soap_closesock(soap);
	vw1__UpdateHostProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateHostProfileResponse->soap_get(soap, "vw1:UpdateHostProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExecuteHostProfile(const char *endpoint, const char *soap_action, vw1__ExecuteHostProfileRequestType *vw1__ExecuteHostProfile, _vw1__ExecuteHostProfileResponse *vw1__ExecuteHostProfileResponse)
{	struct soap *soap = this;
	struct __vw1__ExecuteHostProfile soap_tmp___vw1__ExecuteHostProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExecuteHostProfile.vw1__ExecuteHostProfile = vw1__ExecuteHostProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExecuteHostProfile(soap, &soap_tmp___vw1__ExecuteHostProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExecuteHostProfile(soap, &soap_tmp___vw1__ExecuteHostProfile, "-vw1:ExecuteHostProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExecuteHostProfile(soap, &soap_tmp___vw1__ExecuteHostProfile, "-vw1:ExecuteHostProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExecuteHostProfileResponse)
		return soap_closesock(soap);
	vw1__ExecuteHostProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExecuteHostProfileResponse->soap_get(soap, "vw1:ExecuteHostProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ApplyHostConfig_USCORETask(const char *endpoint, const char *soap_action, vw1__ApplyHostConfigRequestType *vw1__ApplyHostConfig_USCORETask, _vw1__ApplyHostConfig_USCORETaskResponse *vw1__ApplyHostConfig_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ApplyHostConfig_USCORETask soap_tmp___vw1__ApplyHostConfig_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ApplyHostConfig_USCORETask.vw1__ApplyHostConfig_USCORETask = vw1__ApplyHostConfig_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ApplyHostConfig_USCORETask(soap, &soap_tmp___vw1__ApplyHostConfig_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ApplyHostConfig_USCORETask(soap, &soap_tmp___vw1__ApplyHostConfig_USCORETask, "-vw1:ApplyHostConfig_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ApplyHostConfig_USCORETask(soap, &soap_tmp___vw1__ApplyHostConfig_USCORETask, "-vw1:ApplyHostConfig_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ApplyHostConfig_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ApplyHostConfig_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ApplyHostConfig_USCORETaskResponse->soap_get(soap, "vw1:ApplyHostConfig_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::GenerateConfigTaskList(const char *endpoint, const char *soap_action, vw1__GenerateConfigTaskListRequestType *vw1__GenerateConfigTaskList, _vw1__GenerateConfigTaskListResponse *vw1__GenerateConfigTaskListResponse)
{	struct soap *soap = this;
	struct __vw1__GenerateConfigTaskList soap_tmp___vw1__GenerateConfigTaskList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__GenerateConfigTaskList.vw1__GenerateConfigTaskList = vw1__GenerateConfigTaskList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__GenerateConfigTaskList(soap, &soap_tmp___vw1__GenerateConfigTaskList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__GenerateConfigTaskList(soap, &soap_tmp___vw1__GenerateConfigTaskList, "-vw1:GenerateConfigTaskList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__GenerateConfigTaskList(soap, &soap_tmp___vw1__GenerateConfigTaskList, "-vw1:GenerateConfigTaskList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__GenerateConfigTaskListResponse)
		return soap_closesock(soap);
	vw1__GenerateConfigTaskListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__GenerateConfigTaskListResponse->soap_get(soap, "vw1:GenerateConfigTaskListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryHostProfileMetadata(const char *endpoint, const char *soap_action, vw1__QueryHostProfileMetadataRequestType *vw1__QueryHostProfileMetadata, _vw1__QueryHostProfileMetadataResponse *vw1__QueryHostProfileMetadataResponse)
{	struct soap *soap = this;
	struct __vw1__QueryHostProfileMetadata soap_tmp___vw1__QueryHostProfileMetadata;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryHostProfileMetadata.vw1__QueryHostProfileMetadata = vw1__QueryHostProfileMetadata;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryHostProfileMetadata(soap, &soap_tmp___vw1__QueryHostProfileMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryHostProfileMetadata(soap, &soap_tmp___vw1__QueryHostProfileMetadata, "-vw1:QueryHostProfileMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryHostProfileMetadata(soap, &soap_tmp___vw1__QueryHostProfileMetadata, "-vw1:QueryHostProfileMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryHostProfileMetadataResponse)
		return soap_closesock(soap);
	vw1__QueryHostProfileMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryHostProfileMetadataResponse->soap_get(soap, "vw1:QueryHostProfileMetadataResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryProfileStructure(const char *endpoint, const char *soap_action, vw1__QueryProfileStructureRequestType *vw1__QueryProfileStructure, _vw1__QueryProfileStructureResponse *vw1__QueryProfileStructureResponse)
{	struct soap *soap = this;
	struct __vw1__QueryProfileStructure soap_tmp___vw1__QueryProfileStructure;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryProfileStructure.vw1__QueryProfileStructure = vw1__QueryProfileStructure;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryProfileStructure(soap, &soap_tmp___vw1__QueryProfileStructure);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryProfileStructure(soap, &soap_tmp___vw1__QueryProfileStructure, "-vw1:QueryProfileStructure", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryProfileStructure(soap, &soap_tmp___vw1__QueryProfileStructure, "-vw1:QueryProfileStructure", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryProfileStructureResponse)
		return soap_closesock(soap);
	vw1__QueryProfileStructureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryProfileStructureResponse->soap_get(soap, "vw1:QueryProfileStructureResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateDefaultProfile(const char *endpoint, const char *soap_action, vw1__CreateDefaultProfileRequestType *vw1__CreateDefaultProfile, _vw1__CreateDefaultProfileResponse *vw1__CreateDefaultProfileResponse)
{	struct soap *soap = this;
	struct __vw1__CreateDefaultProfile soap_tmp___vw1__CreateDefaultProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateDefaultProfile.vw1__CreateDefaultProfile = vw1__CreateDefaultProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateDefaultProfile(soap, &soap_tmp___vw1__CreateDefaultProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateDefaultProfile(soap, &soap_tmp___vw1__CreateDefaultProfile, "-vw1:CreateDefaultProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateDefaultProfile(soap, &soap_tmp___vw1__CreateDefaultProfile, "-vw1:CreateDefaultProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateDefaultProfileResponse)
		return soap_closesock(soap);
	vw1__CreateDefaultProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateDefaultProfileResponse->soap_get(soap, "vw1:CreateDefaultProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::UpdateAnswerFile_USCORETask(const char *endpoint, const char *soap_action, vw1__UpdateAnswerFileRequestType *vw1__UpdateAnswerFile_USCORETask, _vw1__UpdateAnswerFile_USCORETaskResponse *vw1__UpdateAnswerFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__UpdateAnswerFile_USCORETask soap_tmp___vw1__UpdateAnswerFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__UpdateAnswerFile_USCORETask.vw1__UpdateAnswerFile_USCORETask = vw1__UpdateAnswerFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__UpdateAnswerFile_USCORETask(soap, &soap_tmp___vw1__UpdateAnswerFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__UpdateAnswerFile_USCORETask(soap, &soap_tmp___vw1__UpdateAnswerFile_USCORETask, "-vw1:UpdateAnswerFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__UpdateAnswerFile_USCORETask(soap, &soap_tmp___vw1__UpdateAnswerFile_USCORETask, "-vw1:UpdateAnswerFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__UpdateAnswerFile_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__UpdateAnswerFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__UpdateAnswerFile_USCORETaskResponse->soap_get(soap, "vw1:UpdateAnswerFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveAnswerFile(const char *endpoint, const char *soap_action, vw1__RetrieveAnswerFileRequestType *vw1__RetrieveAnswerFile, _vw1__RetrieveAnswerFileResponse *vw1__RetrieveAnswerFileResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveAnswerFile soap_tmp___vw1__RetrieveAnswerFile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveAnswerFile.vw1__RetrieveAnswerFile = vw1__RetrieveAnswerFile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveAnswerFile(soap, &soap_tmp___vw1__RetrieveAnswerFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveAnswerFile(soap, &soap_tmp___vw1__RetrieveAnswerFile, "-vw1:RetrieveAnswerFile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveAnswerFile(soap, &soap_tmp___vw1__RetrieveAnswerFile, "-vw1:RetrieveAnswerFile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveAnswerFileResponse)
		return soap_closesock(soap);
	vw1__RetrieveAnswerFileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveAnswerFileResponse->soap_get(soap, "vw1:RetrieveAnswerFileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ExportAnswerFile_USCORETask(const char *endpoint, const char *soap_action, vw1__ExportAnswerFileRequestType *vw1__ExportAnswerFile_USCORETask, _vw1__ExportAnswerFile_USCORETaskResponse *vw1__ExportAnswerFile_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__ExportAnswerFile_USCORETask soap_tmp___vw1__ExportAnswerFile_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ExportAnswerFile_USCORETask.vw1__ExportAnswerFile_USCORETask = vw1__ExportAnswerFile_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ExportAnswerFile_USCORETask(soap, &soap_tmp___vw1__ExportAnswerFile_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ExportAnswerFile_USCORETask(soap, &soap_tmp___vw1__ExportAnswerFile_USCORETask, "-vw1:ExportAnswerFile_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ExportAnswerFile_USCORETask(soap, &soap_tmp___vw1__ExportAnswerFile_USCORETask, "-vw1:ExportAnswerFile_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ExportAnswerFile_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__ExportAnswerFile_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ExportAnswerFile_USCORETaskResponse->soap_get(soap, "vw1:ExportAnswerFile_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckAnswerFileStatus_USCORETask(const char *endpoint, const char *soap_action, vw1__CheckAnswerFileStatusRequestType *vw1__CheckAnswerFileStatus_USCORETask, _vw1__CheckAnswerFileStatus_USCORETaskResponse *vw1__CheckAnswerFileStatus_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CheckAnswerFileStatus_USCORETask soap_tmp___vw1__CheckAnswerFileStatus_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckAnswerFileStatus_USCORETask.vw1__CheckAnswerFileStatus_USCORETask = vw1__CheckAnswerFileStatus_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___vw1__CheckAnswerFileStatus_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___vw1__CheckAnswerFileStatus_USCORETask, "-vw1:CheckAnswerFileStatus_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckAnswerFileStatus_USCORETask(soap, &soap_tmp___vw1__CheckAnswerFileStatus_USCORETask, "-vw1:CheckAnswerFileStatus_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckAnswerFileStatus_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CheckAnswerFileStatus_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckAnswerFileStatus_USCORETaskResponse->soap_get(soap, "vw1:CheckAnswerFileStatus_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryAnswerFileStatus(const char *endpoint, const char *soap_action, vw1__QueryAnswerFileStatusRequestType *vw1__QueryAnswerFileStatus, _vw1__QueryAnswerFileStatusResponse *vw1__QueryAnswerFileStatusResponse)
{	struct soap *soap = this;
	struct __vw1__QueryAnswerFileStatus soap_tmp___vw1__QueryAnswerFileStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryAnswerFileStatus.vw1__QueryAnswerFileStatus = vw1__QueryAnswerFileStatus;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryAnswerFileStatus(soap, &soap_tmp___vw1__QueryAnswerFileStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryAnswerFileStatus(soap, &soap_tmp___vw1__QueryAnswerFileStatus, "-vw1:QueryAnswerFileStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryAnswerFileStatus(soap, &soap_tmp___vw1__QueryAnswerFileStatus, "-vw1:QueryAnswerFileStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryAnswerFileStatusResponse)
		return soap_closesock(soap);
	vw1__QueryAnswerFileStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryAnswerFileStatusResponse->soap_get(soap, "vw1:QueryAnswerFileStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveScheduledTask(const char *endpoint, const char *soap_action, vw1__RemoveScheduledTaskRequestType *vw1__RemoveScheduledTask, _vw1__RemoveScheduledTaskResponse *vw1__RemoveScheduledTaskResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveScheduledTask soap_tmp___vw1__RemoveScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveScheduledTask.vw1__RemoveScheduledTask = vw1__RemoveScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveScheduledTask(soap, &soap_tmp___vw1__RemoveScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveScheduledTask(soap, &soap_tmp___vw1__RemoveScheduledTask, "-vw1:RemoveScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveScheduledTask(soap, &soap_tmp___vw1__RemoveScheduledTask, "-vw1:RemoveScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveScheduledTaskResponse)
		return soap_closesock(soap);
	vw1__RemoveScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveScheduledTaskResponse->soap_get(soap, "vw1:RemoveScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReconfigureScheduledTask(const char *endpoint, const char *soap_action, vw1__ReconfigureScheduledTaskRequestType *vw1__ReconfigureScheduledTask, _vw1__ReconfigureScheduledTaskResponse *vw1__ReconfigureScheduledTaskResponse)
{	struct soap *soap = this;
	struct __vw1__ReconfigureScheduledTask soap_tmp___vw1__ReconfigureScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReconfigureScheduledTask.vw1__ReconfigureScheduledTask = vw1__ReconfigureScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReconfigureScheduledTask(soap, &soap_tmp___vw1__ReconfigureScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReconfigureScheduledTask(soap, &soap_tmp___vw1__ReconfigureScheduledTask, "-vw1:ReconfigureScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReconfigureScheduledTask(soap, &soap_tmp___vw1__ReconfigureScheduledTask, "-vw1:ReconfigureScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReconfigureScheduledTaskResponse)
		return soap_closesock(soap);
	vw1__ReconfigureScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReconfigureScheduledTaskResponse->soap_get(soap, "vw1:ReconfigureScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RunScheduledTask(const char *endpoint, const char *soap_action, vw1__RunScheduledTaskRequestType *vw1__RunScheduledTask, _vw1__RunScheduledTaskResponse *vw1__RunScheduledTaskResponse)
{	struct soap *soap = this;
	struct __vw1__RunScheduledTask soap_tmp___vw1__RunScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RunScheduledTask.vw1__RunScheduledTask = vw1__RunScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RunScheduledTask(soap, &soap_tmp___vw1__RunScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RunScheduledTask(soap, &soap_tmp___vw1__RunScheduledTask, "-vw1:RunScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RunScheduledTask(soap, &soap_tmp___vw1__RunScheduledTask, "-vw1:RunScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RunScheduledTaskResponse)
		return soap_closesock(soap);
	vw1__RunScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RunScheduledTaskResponse->soap_get(soap, "vw1:RunScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateScheduledTask(const char *endpoint, const char *soap_action, vw1__CreateScheduledTaskRequestType *vw1__CreateScheduledTask, _vw1__CreateScheduledTaskResponse *vw1__CreateScheduledTaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateScheduledTask soap_tmp___vw1__CreateScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateScheduledTask.vw1__CreateScheduledTask = vw1__CreateScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateScheduledTask(soap, &soap_tmp___vw1__CreateScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateScheduledTask(soap, &soap_tmp___vw1__CreateScheduledTask, "-vw1:CreateScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateScheduledTask(soap, &soap_tmp___vw1__CreateScheduledTask, "-vw1:CreateScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateScheduledTaskResponse)
		return soap_closesock(soap);
	vw1__CreateScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateScheduledTaskResponse->soap_get(soap, "vw1:CreateScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveEntityScheduledTask(const char *endpoint, const char *soap_action, vw1__RetrieveEntityScheduledTaskRequestType *vw1__RetrieveEntityScheduledTask, _vw1__RetrieveEntityScheduledTaskResponse *vw1__RetrieveEntityScheduledTaskResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveEntityScheduledTask soap_tmp___vw1__RetrieveEntityScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveEntityScheduledTask.vw1__RetrieveEntityScheduledTask = vw1__RetrieveEntityScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveEntityScheduledTask(soap, &soap_tmp___vw1__RetrieveEntityScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveEntityScheduledTask(soap, &soap_tmp___vw1__RetrieveEntityScheduledTask, "-vw1:RetrieveEntityScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveEntityScheduledTask(soap, &soap_tmp___vw1__RetrieveEntityScheduledTask, "-vw1:RetrieveEntityScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveEntityScheduledTaskResponse)
		return soap_closesock(soap);
	vw1__RetrieveEntityScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveEntityScheduledTaskResponse->soap_get(soap, "vw1:RetrieveEntityScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateObjectScheduledTask(const char *endpoint, const char *soap_action, vw1__CreateObjectScheduledTaskRequestType *vw1__CreateObjectScheduledTask, _vw1__CreateObjectScheduledTaskResponse *vw1__CreateObjectScheduledTaskResponse)
{	struct soap *soap = this;
	struct __vw1__CreateObjectScheduledTask soap_tmp___vw1__CreateObjectScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateObjectScheduledTask.vw1__CreateObjectScheduledTask = vw1__CreateObjectScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateObjectScheduledTask(soap, &soap_tmp___vw1__CreateObjectScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateObjectScheduledTask(soap, &soap_tmp___vw1__CreateObjectScheduledTask, "-vw1:CreateObjectScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateObjectScheduledTask(soap, &soap_tmp___vw1__CreateObjectScheduledTask, "-vw1:CreateObjectScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateObjectScheduledTaskResponse)
		return soap_closesock(soap);
	vw1__CreateObjectScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateObjectScheduledTaskResponse->soap_get(soap, "vw1:CreateObjectScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RetrieveObjectScheduledTask(const char *endpoint, const char *soap_action, vw1__RetrieveObjectScheduledTaskRequestType *vw1__RetrieveObjectScheduledTask, _vw1__RetrieveObjectScheduledTaskResponse *vw1__RetrieveObjectScheduledTaskResponse)
{	struct soap *soap = this;
	struct __vw1__RetrieveObjectScheduledTask soap_tmp___vw1__RetrieveObjectScheduledTask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RetrieveObjectScheduledTask.vw1__RetrieveObjectScheduledTask = vw1__RetrieveObjectScheduledTask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RetrieveObjectScheduledTask(soap, &soap_tmp___vw1__RetrieveObjectScheduledTask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RetrieveObjectScheduledTask(soap, &soap_tmp___vw1__RetrieveObjectScheduledTask, "-vw1:RetrieveObjectScheduledTask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RetrieveObjectScheduledTask(soap, &soap_tmp___vw1__RetrieveObjectScheduledTask, "-vw1:RetrieveObjectScheduledTask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RetrieveObjectScheduledTaskResponse)
		return soap_closesock(soap);
	vw1__RetrieveObjectScheduledTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RetrieveObjectScheduledTaskResponse->soap_get(soap, "vw1:RetrieveObjectScheduledTaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::OpenInventoryViewFolder(const char *endpoint, const char *soap_action, vw1__OpenInventoryViewFolderRequestType *vw1__OpenInventoryViewFolder, _vw1__OpenInventoryViewFolderResponse *vw1__OpenInventoryViewFolderResponse)
{	struct soap *soap = this;
	struct __vw1__OpenInventoryViewFolder soap_tmp___vw1__OpenInventoryViewFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__OpenInventoryViewFolder.vw1__OpenInventoryViewFolder = vw1__OpenInventoryViewFolder;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__OpenInventoryViewFolder(soap, &soap_tmp___vw1__OpenInventoryViewFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__OpenInventoryViewFolder(soap, &soap_tmp___vw1__OpenInventoryViewFolder, "-vw1:OpenInventoryViewFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__OpenInventoryViewFolder(soap, &soap_tmp___vw1__OpenInventoryViewFolder, "-vw1:OpenInventoryViewFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__OpenInventoryViewFolderResponse)
		return soap_closesock(soap);
	vw1__OpenInventoryViewFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__OpenInventoryViewFolderResponse->soap_get(soap, "vw1:OpenInventoryViewFolderResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CloseInventoryViewFolder(const char *endpoint, const char *soap_action, vw1__CloseInventoryViewFolderRequestType *vw1__CloseInventoryViewFolder, _vw1__CloseInventoryViewFolderResponse *vw1__CloseInventoryViewFolderResponse)
{	struct soap *soap = this;
	struct __vw1__CloseInventoryViewFolder soap_tmp___vw1__CloseInventoryViewFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CloseInventoryViewFolder.vw1__CloseInventoryViewFolder = vw1__CloseInventoryViewFolder;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CloseInventoryViewFolder(soap, &soap_tmp___vw1__CloseInventoryViewFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CloseInventoryViewFolder(soap, &soap_tmp___vw1__CloseInventoryViewFolder, "-vw1:CloseInventoryViewFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CloseInventoryViewFolder(soap, &soap_tmp___vw1__CloseInventoryViewFolder, "-vw1:CloseInventoryViewFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CloseInventoryViewFolderResponse)
		return soap_closesock(soap);
	vw1__CloseInventoryViewFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CloseInventoryViewFolderResponse->soap_get(soap, "vw1:CloseInventoryViewFolderResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ModifyListView(const char *endpoint, const char *soap_action, vw1__ModifyListViewRequestType *vw1__ModifyListView, _vw1__ModifyListViewResponse *vw1__ModifyListViewResponse)
{	struct soap *soap = this;
	struct __vw1__ModifyListView soap_tmp___vw1__ModifyListView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ModifyListView.vw1__ModifyListView = vw1__ModifyListView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ModifyListView(soap, &soap_tmp___vw1__ModifyListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ModifyListView(soap, &soap_tmp___vw1__ModifyListView, "-vw1:ModifyListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ModifyListView(soap, &soap_tmp___vw1__ModifyListView, "-vw1:ModifyListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ModifyListViewResponse)
		return soap_closesock(soap);
	vw1__ModifyListViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ModifyListViewResponse->soap_get(soap, "vw1:ModifyListViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetListView(const char *endpoint, const char *soap_action, vw1__ResetListViewRequestType *vw1__ResetListView, _vw1__ResetListViewResponse *vw1__ResetListViewResponse)
{	struct soap *soap = this;
	struct __vw1__ResetListView soap_tmp___vw1__ResetListView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetListView.vw1__ResetListView = vw1__ResetListView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetListView(soap, &soap_tmp___vw1__ResetListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetListView(soap, &soap_tmp___vw1__ResetListView, "-vw1:ResetListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetListView(soap, &soap_tmp___vw1__ResetListView, "-vw1:ResetListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetListViewResponse)
		return soap_closesock(soap);
	vw1__ResetListViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetListViewResponse->soap_get(soap, "vw1:ResetListViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ResetListViewFromView(const char *endpoint, const char *soap_action, vw1__ResetListViewFromViewRequestType *vw1__ResetListViewFromView, _vw1__ResetListViewFromViewResponse *vw1__ResetListViewFromViewResponse)
{	struct soap *soap = this;
	struct __vw1__ResetListViewFromView soap_tmp___vw1__ResetListViewFromView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ResetListViewFromView.vw1__ResetListViewFromView = vw1__ResetListViewFromView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ResetListViewFromView(soap, &soap_tmp___vw1__ResetListViewFromView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ResetListViewFromView(soap, &soap_tmp___vw1__ResetListViewFromView, "-vw1:ResetListViewFromView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ResetListViewFromView(soap, &soap_tmp___vw1__ResetListViewFromView, "-vw1:ResetListViewFromView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ResetListViewFromViewResponse)
		return soap_closesock(soap);
	vw1__ResetListViewFromViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ResetListViewFromViewResponse->soap_get(soap, "vw1:ResetListViewFromViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DestroyView(const char *endpoint, const char *soap_action, vw1__DestroyViewRequestType *vw1__DestroyView, _vw1__DestroyViewResponse *vw1__DestroyViewResponse)
{	struct soap *soap = this;
	struct __vw1__DestroyView soap_tmp___vw1__DestroyView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DestroyView.vw1__DestroyView = vw1__DestroyView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DestroyView(soap, &soap_tmp___vw1__DestroyView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DestroyView(soap, &soap_tmp___vw1__DestroyView, "-vw1:DestroyView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DestroyView(soap, &soap_tmp___vw1__DestroyView, "-vw1:DestroyView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DestroyViewResponse)
		return soap_closesock(soap);
	vw1__DestroyViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DestroyViewResponse->soap_get(soap, "vw1:DestroyViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateInventoryView(const char *endpoint, const char *soap_action, vw1__CreateInventoryViewRequestType *vw1__CreateInventoryView, _vw1__CreateInventoryViewResponse *vw1__CreateInventoryViewResponse)
{	struct soap *soap = this;
	struct __vw1__CreateInventoryView soap_tmp___vw1__CreateInventoryView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateInventoryView.vw1__CreateInventoryView = vw1__CreateInventoryView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateInventoryView(soap, &soap_tmp___vw1__CreateInventoryView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateInventoryView(soap, &soap_tmp___vw1__CreateInventoryView, "-vw1:CreateInventoryView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateInventoryView(soap, &soap_tmp___vw1__CreateInventoryView, "-vw1:CreateInventoryView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateInventoryViewResponse)
		return soap_closesock(soap);
	vw1__CreateInventoryViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateInventoryViewResponse->soap_get(soap, "vw1:CreateInventoryViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateContainerView(const char *endpoint, const char *soap_action, vw1__CreateContainerViewRequestType *vw1__CreateContainerView, _vw1__CreateContainerViewResponse *vw1__CreateContainerViewResponse)
{	struct soap *soap = this;
	struct __vw1__CreateContainerView soap_tmp___vw1__CreateContainerView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateContainerView.vw1__CreateContainerView = vw1__CreateContainerView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateContainerView(soap, &soap_tmp___vw1__CreateContainerView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateContainerView(soap, &soap_tmp___vw1__CreateContainerView, "-vw1:CreateContainerView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateContainerView(soap, &soap_tmp___vw1__CreateContainerView, "-vw1:CreateContainerView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateContainerViewResponse)
		return soap_closesock(soap);
	vw1__CreateContainerViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateContainerViewResponse->soap_get(soap, "vw1:CreateContainerViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateListView(const char *endpoint, const char *soap_action, vw1__CreateListViewRequestType *vw1__CreateListView, _vw1__CreateListViewResponse *vw1__CreateListViewResponse)
{	struct soap *soap = this;
	struct __vw1__CreateListView soap_tmp___vw1__CreateListView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateListView.vw1__CreateListView = vw1__CreateListView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateListView(soap, &soap_tmp___vw1__CreateListView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateListView(soap, &soap_tmp___vw1__CreateListView, "-vw1:CreateListView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateListView(soap, &soap_tmp___vw1__CreateListView, "-vw1:CreateListView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateListViewResponse)
		return soap_closesock(soap);
	vw1__CreateListViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateListViewResponse->soap_get(soap, "vw1:CreateListViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateListViewFromView(const char *endpoint, const char *soap_action, vw1__CreateListViewFromViewRequestType *vw1__CreateListViewFromView, _vw1__CreateListViewFromViewResponse *vw1__CreateListViewFromViewResponse)
{	struct soap *soap = this;
	struct __vw1__CreateListViewFromView soap_tmp___vw1__CreateListViewFromView;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateListViewFromView.vw1__CreateListViewFromView = vw1__CreateListViewFromView;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateListViewFromView(soap, &soap_tmp___vw1__CreateListViewFromView);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateListViewFromView(soap, &soap_tmp___vw1__CreateListViewFromView, "-vw1:CreateListViewFromView", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateListViewFromView(soap, &soap_tmp___vw1__CreateListViewFromView, "-vw1:CreateListViewFromView", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateListViewFromViewResponse)
		return soap_closesock(soap);
	vw1__CreateListViewFromViewResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateListViewFromViewResponse->soap_get(soap, "vw1:CreateListViewFromViewResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RevertToSnapshot_USCORETask(const char *endpoint, const char *soap_action, vw1__RevertToSnapshotRequestType *vw1__RevertToSnapshot_USCORETask, _vw1__RevertToSnapshot_USCORETaskResponse *vw1__RevertToSnapshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RevertToSnapshot_USCORETask soap_tmp___vw1__RevertToSnapshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RevertToSnapshot_USCORETask.vw1__RevertToSnapshot_USCORETask = vw1__RevertToSnapshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RevertToSnapshot_USCORETask(soap, &soap_tmp___vw1__RevertToSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RevertToSnapshot_USCORETask(soap, &soap_tmp___vw1__RevertToSnapshot_USCORETask, "-vw1:RevertToSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RevertToSnapshot_USCORETask(soap, &soap_tmp___vw1__RevertToSnapshot_USCORETask, "-vw1:RevertToSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RevertToSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RevertToSnapshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RevertToSnapshot_USCORETaskResponse->soap_get(soap, "vw1:RevertToSnapshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RemoveSnapshot_USCORETask(const char *endpoint, const char *soap_action, vw1__RemoveSnapshotRequestType *vw1__RemoveSnapshot_USCORETask, _vw1__RemoveSnapshot_USCORETaskResponse *vw1__RemoveSnapshot_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__RemoveSnapshot_USCORETask soap_tmp___vw1__RemoveSnapshot_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RemoveSnapshot_USCORETask.vw1__RemoveSnapshot_USCORETask = vw1__RemoveSnapshot_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RemoveSnapshot_USCORETask(soap, &soap_tmp___vw1__RemoveSnapshot_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RemoveSnapshot_USCORETask(soap, &soap_tmp___vw1__RemoveSnapshot_USCORETask, "-vw1:RemoveSnapshot_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RemoveSnapshot_USCORETask(soap, &soap_tmp___vw1__RemoveSnapshot_USCORETask, "-vw1:RemoveSnapshot_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RemoveSnapshot_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__RemoveSnapshot_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RemoveSnapshot_USCORETaskResponse->soap_get(soap, "vw1:RemoveSnapshot_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::RenameSnapshot(const char *endpoint, const char *soap_action, vw1__RenameSnapshotRequestType *vw1__RenameSnapshot, _vw1__RenameSnapshotResponse *vw1__RenameSnapshotResponse)
{	struct soap *soap = this;
	struct __vw1__RenameSnapshot soap_tmp___vw1__RenameSnapshot;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__RenameSnapshot.vw1__RenameSnapshot = vw1__RenameSnapshot;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__RenameSnapshot(soap, &soap_tmp___vw1__RenameSnapshot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__RenameSnapshot(soap, &soap_tmp___vw1__RenameSnapshot, "-vw1:RenameSnapshot", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__RenameSnapshot(soap, &soap_tmp___vw1__RenameSnapshot, "-vw1:RenameSnapshot", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__RenameSnapshotResponse)
		return soap_closesock(soap);
	vw1__RenameSnapshotResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__RenameSnapshotResponse->soap_get(soap, "vw1:RenameSnapshotResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckCompatibility_USCORETask(const char *endpoint, const char *soap_action, vw1__CheckCompatibilityRequestType *vw1__CheckCompatibility_USCORETask, _vw1__CheckCompatibility_USCORETaskResponse *vw1__CheckCompatibility_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CheckCompatibility_USCORETask soap_tmp___vw1__CheckCompatibility_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckCompatibility_USCORETask.vw1__CheckCompatibility_USCORETask = vw1__CheckCompatibility_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckCompatibility_USCORETask(soap, &soap_tmp___vw1__CheckCompatibility_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckCompatibility_USCORETask(soap, &soap_tmp___vw1__CheckCompatibility_USCORETask, "-vw1:CheckCompatibility_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckCompatibility_USCORETask(soap, &soap_tmp___vw1__CheckCompatibility_USCORETask, "-vw1:CheckCompatibility_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckCompatibility_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CheckCompatibility_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckCompatibility_USCORETaskResponse->soap_get(soap, "vw1:CheckCompatibility_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::QueryVMotionCompatibilityEx_USCORETask(const char *endpoint, const char *soap_action, vw1__QueryVMotionCompatibilityExRequestType *vw1__QueryVMotionCompatibilityEx_USCORETask, _vw1__QueryVMotionCompatibilityEx_USCORETaskResponse *vw1__QueryVMotionCompatibilityEx_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__QueryVMotionCompatibilityEx_USCORETask soap_tmp___vw1__QueryVMotionCompatibilityEx_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__QueryVMotionCompatibilityEx_USCORETask.vw1__QueryVMotionCompatibilityEx_USCORETask = vw1__QueryVMotionCompatibilityEx_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___vw1__QueryVMotionCompatibilityEx_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___vw1__QueryVMotionCompatibilityEx_USCORETask, "-vw1:QueryVMotionCompatibilityEx_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__QueryVMotionCompatibilityEx_USCORETask(soap, &soap_tmp___vw1__QueryVMotionCompatibilityEx_USCORETask, "-vw1:QueryVMotionCompatibilityEx_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__QueryVMotionCompatibilityEx_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__QueryVMotionCompatibilityEx_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__QueryVMotionCompatibilityEx_USCORETaskResponse->soap_get(soap, "vw1:QueryVMotionCompatibilityEx_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckMigrate_USCORETask(const char *endpoint, const char *soap_action, vw1__CheckMigrateRequestType *vw1__CheckMigrate_USCORETask, _vw1__CheckMigrate_USCORETaskResponse *vw1__CheckMigrate_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CheckMigrate_USCORETask soap_tmp___vw1__CheckMigrate_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckMigrate_USCORETask.vw1__CheckMigrate_USCORETask = vw1__CheckMigrate_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckMigrate_USCORETask(soap, &soap_tmp___vw1__CheckMigrate_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckMigrate_USCORETask(soap, &soap_tmp___vw1__CheckMigrate_USCORETask, "-vw1:CheckMigrate_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckMigrate_USCORETask(soap, &soap_tmp___vw1__CheckMigrate_USCORETask, "-vw1:CheckMigrate_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckMigrate_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CheckMigrate_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckMigrate_USCORETaskResponse->soap_get(soap, "vw1:CheckMigrate_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CheckRelocate_USCORETask(const char *endpoint, const char *soap_action, vw1__CheckRelocateRequestType *vw1__CheckRelocate_USCORETask, _vw1__CheckRelocate_USCORETaskResponse *vw1__CheckRelocate_USCORETaskResponse)
{	struct soap *soap = this;
	struct __vw1__CheckRelocate_USCORETask soap_tmp___vw1__CheckRelocate_USCORETask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CheckRelocate_USCORETask.vw1__CheckRelocate_USCORETask = vw1__CheckRelocate_USCORETask;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CheckRelocate_USCORETask(soap, &soap_tmp___vw1__CheckRelocate_USCORETask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CheckRelocate_USCORETask(soap, &soap_tmp___vw1__CheckRelocate_USCORETask, "-vw1:CheckRelocate_Task", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CheckRelocate_USCORETask(soap, &soap_tmp___vw1__CheckRelocate_USCORETask, "-vw1:CheckRelocate_Task", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CheckRelocate_USCORETaskResponse)
		return soap_closesock(soap);
	vw1__CheckRelocate_USCORETaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CheckRelocate_USCORETaskResponse->soap_get(soap, "vw1:CheckRelocate_TaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ValidateCredentialsInGuest(const char *endpoint, const char *soap_action, vw1__ValidateCredentialsInGuestRequestType *vw1__ValidateCredentialsInGuest, _vw1__ValidateCredentialsInGuestResponse *vw1__ValidateCredentialsInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__ValidateCredentialsInGuest soap_tmp___vw1__ValidateCredentialsInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ValidateCredentialsInGuest.vw1__ValidateCredentialsInGuest = vw1__ValidateCredentialsInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ValidateCredentialsInGuest(soap, &soap_tmp___vw1__ValidateCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ValidateCredentialsInGuest(soap, &soap_tmp___vw1__ValidateCredentialsInGuest, "-vw1:ValidateCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ValidateCredentialsInGuest(soap, &soap_tmp___vw1__ValidateCredentialsInGuest, "-vw1:ValidateCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ValidateCredentialsInGuestResponse)
		return soap_closesock(soap);
	vw1__ValidateCredentialsInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ValidateCredentialsInGuestResponse->soap_get(soap, "vw1:ValidateCredentialsInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::AcquireCredentialsInGuest(const char *endpoint, const char *soap_action, vw1__AcquireCredentialsInGuestRequestType *vw1__AcquireCredentialsInGuest, _vw1__AcquireCredentialsInGuestResponse *vw1__AcquireCredentialsInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__AcquireCredentialsInGuest soap_tmp___vw1__AcquireCredentialsInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__AcquireCredentialsInGuest.vw1__AcquireCredentialsInGuest = vw1__AcquireCredentialsInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__AcquireCredentialsInGuest(soap, &soap_tmp___vw1__AcquireCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__AcquireCredentialsInGuest(soap, &soap_tmp___vw1__AcquireCredentialsInGuest, "-vw1:AcquireCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__AcquireCredentialsInGuest(soap, &soap_tmp___vw1__AcquireCredentialsInGuest, "-vw1:AcquireCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__AcquireCredentialsInGuestResponse)
		return soap_closesock(soap);
	vw1__AcquireCredentialsInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__AcquireCredentialsInGuestResponse->soap_get(soap, "vw1:AcquireCredentialsInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReleaseCredentialsInGuest(const char *endpoint, const char *soap_action, vw1__ReleaseCredentialsInGuestRequestType *vw1__ReleaseCredentialsInGuest, _vw1__ReleaseCredentialsInGuestResponse *vw1__ReleaseCredentialsInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__ReleaseCredentialsInGuest soap_tmp___vw1__ReleaseCredentialsInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReleaseCredentialsInGuest.vw1__ReleaseCredentialsInGuest = vw1__ReleaseCredentialsInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReleaseCredentialsInGuest(soap, &soap_tmp___vw1__ReleaseCredentialsInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReleaseCredentialsInGuest(soap, &soap_tmp___vw1__ReleaseCredentialsInGuest, "-vw1:ReleaseCredentialsInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReleaseCredentialsInGuest(soap, &soap_tmp___vw1__ReleaseCredentialsInGuest, "-vw1:ReleaseCredentialsInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReleaseCredentialsInGuestResponse)
		return soap_closesock(soap);
	vw1__ReleaseCredentialsInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReleaseCredentialsInGuestResponse->soap_get(soap, "vw1:ReleaseCredentialsInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MakeDirectoryInGuest(const char *endpoint, const char *soap_action, vw1__MakeDirectoryInGuestRequestType *vw1__MakeDirectoryInGuest, _vw1__MakeDirectoryInGuestResponse *vw1__MakeDirectoryInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__MakeDirectoryInGuest soap_tmp___vw1__MakeDirectoryInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MakeDirectoryInGuest.vw1__MakeDirectoryInGuest = vw1__MakeDirectoryInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MakeDirectoryInGuest(soap, &soap_tmp___vw1__MakeDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MakeDirectoryInGuest(soap, &soap_tmp___vw1__MakeDirectoryInGuest, "-vw1:MakeDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MakeDirectoryInGuest(soap, &soap_tmp___vw1__MakeDirectoryInGuest, "-vw1:MakeDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MakeDirectoryInGuestResponse)
		return soap_closesock(soap);
	vw1__MakeDirectoryInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MakeDirectoryInGuestResponse->soap_get(soap, "vw1:MakeDirectoryInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteFileInGuest(const char *endpoint, const char *soap_action, vw1__DeleteFileInGuestRequestType *vw1__DeleteFileInGuest, _vw1__DeleteFileInGuestResponse *vw1__DeleteFileInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__DeleteFileInGuest soap_tmp___vw1__DeleteFileInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DeleteFileInGuest.vw1__DeleteFileInGuest = vw1__DeleteFileInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DeleteFileInGuest(soap, &soap_tmp___vw1__DeleteFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DeleteFileInGuest(soap, &soap_tmp___vw1__DeleteFileInGuest, "-vw1:DeleteFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DeleteFileInGuest(soap, &soap_tmp___vw1__DeleteFileInGuest, "-vw1:DeleteFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DeleteFileInGuestResponse)
		return soap_closesock(soap);
	vw1__DeleteFileInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DeleteFileInGuestResponse->soap_get(soap, "vw1:DeleteFileInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::DeleteDirectoryInGuest(const char *endpoint, const char *soap_action, vw1__DeleteDirectoryInGuestRequestType *vw1__DeleteDirectoryInGuest, _vw1__DeleteDirectoryInGuestResponse *vw1__DeleteDirectoryInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__DeleteDirectoryInGuest soap_tmp___vw1__DeleteDirectoryInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__DeleteDirectoryInGuest.vw1__DeleteDirectoryInGuest = vw1__DeleteDirectoryInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__DeleteDirectoryInGuest(soap, &soap_tmp___vw1__DeleteDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__DeleteDirectoryInGuest(soap, &soap_tmp___vw1__DeleteDirectoryInGuest, "-vw1:DeleteDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__DeleteDirectoryInGuest(soap, &soap_tmp___vw1__DeleteDirectoryInGuest, "-vw1:DeleteDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__DeleteDirectoryInGuestResponse)
		return soap_closesock(soap);
	vw1__DeleteDirectoryInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__DeleteDirectoryInGuestResponse->soap_get(soap, "vw1:DeleteDirectoryInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveDirectoryInGuest(const char *endpoint, const char *soap_action, vw1__MoveDirectoryInGuestRequestType *vw1__MoveDirectoryInGuest, _vw1__MoveDirectoryInGuestResponse *vw1__MoveDirectoryInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__MoveDirectoryInGuest soap_tmp___vw1__MoveDirectoryInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveDirectoryInGuest.vw1__MoveDirectoryInGuest = vw1__MoveDirectoryInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveDirectoryInGuest(soap, &soap_tmp___vw1__MoveDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveDirectoryInGuest(soap, &soap_tmp___vw1__MoveDirectoryInGuest, "-vw1:MoveDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveDirectoryInGuest(soap, &soap_tmp___vw1__MoveDirectoryInGuest, "-vw1:MoveDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveDirectoryInGuestResponse)
		return soap_closesock(soap);
	vw1__MoveDirectoryInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveDirectoryInGuestResponse->soap_get(soap, "vw1:MoveDirectoryInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::MoveFileInGuest(const char *endpoint, const char *soap_action, vw1__MoveFileInGuestRequestType *vw1__MoveFileInGuest, _vw1__MoveFileInGuestResponse *vw1__MoveFileInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__MoveFileInGuest soap_tmp___vw1__MoveFileInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__MoveFileInGuest.vw1__MoveFileInGuest = vw1__MoveFileInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__MoveFileInGuest(soap, &soap_tmp___vw1__MoveFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__MoveFileInGuest(soap, &soap_tmp___vw1__MoveFileInGuest, "-vw1:MoveFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__MoveFileInGuest(soap, &soap_tmp___vw1__MoveFileInGuest, "-vw1:MoveFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__MoveFileInGuestResponse)
		return soap_closesock(soap);
	vw1__MoveFileInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__MoveFileInGuestResponse->soap_get(soap, "vw1:MoveFileInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateTemporaryFileInGuest(const char *endpoint, const char *soap_action, vw1__CreateTemporaryFileInGuestRequestType *vw1__CreateTemporaryFileInGuest, _vw1__CreateTemporaryFileInGuestResponse *vw1__CreateTemporaryFileInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__CreateTemporaryFileInGuest soap_tmp___vw1__CreateTemporaryFileInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateTemporaryFileInGuest.vw1__CreateTemporaryFileInGuest = vw1__CreateTemporaryFileInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateTemporaryFileInGuest(soap, &soap_tmp___vw1__CreateTemporaryFileInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateTemporaryFileInGuest(soap, &soap_tmp___vw1__CreateTemporaryFileInGuest, "-vw1:CreateTemporaryFileInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateTemporaryFileInGuest(soap, &soap_tmp___vw1__CreateTemporaryFileInGuest, "-vw1:CreateTemporaryFileInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateTemporaryFileInGuestResponse)
		return soap_closesock(soap);
	vw1__CreateTemporaryFileInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateTemporaryFileInGuestResponse->soap_get(soap, "vw1:CreateTemporaryFileInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::CreateTemporaryDirectoryInGuest(const char *endpoint, const char *soap_action, vw1__CreateTemporaryDirectoryInGuestRequestType *vw1__CreateTemporaryDirectoryInGuest, _vw1__CreateTemporaryDirectoryInGuestResponse *vw1__CreateTemporaryDirectoryInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__CreateTemporaryDirectoryInGuest soap_tmp___vw1__CreateTemporaryDirectoryInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__CreateTemporaryDirectoryInGuest.vw1__CreateTemporaryDirectoryInGuest = vw1__CreateTemporaryDirectoryInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___vw1__CreateTemporaryDirectoryInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___vw1__CreateTemporaryDirectoryInGuest, "-vw1:CreateTemporaryDirectoryInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__CreateTemporaryDirectoryInGuest(soap, &soap_tmp___vw1__CreateTemporaryDirectoryInGuest, "-vw1:CreateTemporaryDirectoryInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__CreateTemporaryDirectoryInGuestResponse)
		return soap_closesock(soap);
	vw1__CreateTemporaryDirectoryInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__CreateTemporaryDirectoryInGuestResponse->soap_get(soap, "vw1:CreateTemporaryDirectoryInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListFilesInGuest(const char *endpoint, const char *soap_action, vw1__ListFilesInGuestRequestType *vw1__ListFilesInGuest, _vw1__ListFilesInGuestResponse *vw1__ListFilesInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__ListFilesInGuest soap_tmp___vw1__ListFilesInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ListFilesInGuest.vw1__ListFilesInGuest = vw1__ListFilesInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ListFilesInGuest(soap, &soap_tmp___vw1__ListFilesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ListFilesInGuest(soap, &soap_tmp___vw1__ListFilesInGuest, "-vw1:ListFilesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ListFilesInGuest(soap, &soap_tmp___vw1__ListFilesInGuest, "-vw1:ListFilesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ListFilesInGuestResponse)
		return soap_closesock(soap);
	vw1__ListFilesInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ListFilesInGuestResponse->soap_get(soap, "vw1:ListFilesInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ChangeFileAttributesInGuest(const char *endpoint, const char *soap_action, vw1__ChangeFileAttributesInGuestRequestType *vw1__ChangeFileAttributesInGuest, _vw1__ChangeFileAttributesInGuestResponse *vw1__ChangeFileAttributesInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__ChangeFileAttributesInGuest soap_tmp___vw1__ChangeFileAttributesInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ChangeFileAttributesInGuest.vw1__ChangeFileAttributesInGuest = vw1__ChangeFileAttributesInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ChangeFileAttributesInGuest(soap, &soap_tmp___vw1__ChangeFileAttributesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ChangeFileAttributesInGuest(soap, &soap_tmp___vw1__ChangeFileAttributesInGuest, "-vw1:ChangeFileAttributesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ChangeFileAttributesInGuest(soap, &soap_tmp___vw1__ChangeFileAttributesInGuest, "-vw1:ChangeFileAttributesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ChangeFileAttributesInGuestResponse)
		return soap_closesock(soap);
	vw1__ChangeFileAttributesInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ChangeFileAttributesInGuestResponse->soap_get(soap, "vw1:ChangeFileAttributesInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InitiateFileTransferFromGuest(const char *endpoint, const char *soap_action, vw1__InitiateFileTransferFromGuestRequestType *vw1__InitiateFileTransferFromGuest, _vw1__InitiateFileTransferFromGuestResponse *vw1__InitiateFileTransferFromGuestResponse)
{	struct soap *soap = this;
	struct __vw1__InitiateFileTransferFromGuest soap_tmp___vw1__InitiateFileTransferFromGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__InitiateFileTransferFromGuest.vw1__InitiateFileTransferFromGuest = vw1__InitiateFileTransferFromGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__InitiateFileTransferFromGuest(soap, &soap_tmp___vw1__InitiateFileTransferFromGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__InitiateFileTransferFromGuest(soap, &soap_tmp___vw1__InitiateFileTransferFromGuest, "-vw1:InitiateFileTransferFromGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__InitiateFileTransferFromGuest(soap, &soap_tmp___vw1__InitiateFileTransferFromGuest, "-vw1:InitiateFileTransferFromGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__InitiateFileTransferFromGuestResponse)
		return soap_closesock(soap);
	vw1__InitiateFileTransferFromGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__InitiateFileTransferFromGuestResponse->soap_get(soap, "vw1:InitiateFileTransferFromGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::InitiateFileTransferToGuest(const char *endpoint, const char *soap_action, vw1__InitiateFileTransferToGuestRequestType *vw1__InitiateFileTransferToGuest, _vw1__InitiateFileTransferToGuestResponse *vw1__InitiateFileTransferToGuestResponse)
{	struct soap *soap = this;
	struct __vw1__InitiateFileTransferToGuest soap_tmp___vw1__InitiateFileTransferToGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__InitiateFileTransferToGuest.vw1__InitiateFileTransferToGuest = vw1__InitiateFileTransferToGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__InitiateFileTransferToGuest(soap, &soap_tmp___vw1__InitiateFileTransferToGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__InitiateFileTransferToGuest(soap, &soap_tmp___vw1__InitiateFileTransferToGuest, "-vw1:InitiateFileTransferToGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__InitiateFileTransferToGuest(soap, &soap_tmp___vw1__InitiateFileTransferToGuest, "-vw1:InitiateFileTransferToGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__InitiateFileTransferToGuestResponse)
		return soap_closesock(soap);
	vw1__InitiateFileTransferToGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__InitiateFileTransferToGuestResponse->soap_get(soap, "vw1:InitiateFileTransferToGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::StartProgramInGuest(const char *endpoint, const char *soap_action, vw1__StartProgramInGuestRequestType *vw1__StartProgramInGuest, _vw1__StartProgramInGuestResponse *vw1__StartProgramInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__StartProgramInGuest soap_tmp___vw1__StartProgramInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__StartProgramInGuest.vw1__StartProgramInGuest = vw1__StartProgramInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__StartProgramInGuest(soap, &soap_tmp___vw1__StartProgramInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__StartProgramInGuest(soap, &soap_tmp___vw1__StartProgramInGuest, "-vw1:StartProgramInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__StartProgramInGuest(soap, &soap_tmp___vw1__StartProgramInGuest, "-vw1:StartProgramInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__StartProgramInGuestResponse)
		return soap_closesock(soap);
	vw1__StartProgramInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__StartProgramInGuestResponse->soap_get(soap, "vw1:StartProgramInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ListProcessesInGuest(const char *endpoint, const char *soap_action, vw1__ListProcessesInGuestRequestType *vw1__ListProcessesInGuest, _vw1__ListProcessesInGuestResponse *vw1__ListProcessesInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__ListProcessesInGuest soap_tmp___vw1__ListProcessesInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ListProcessesInGuest.vw1__ListProcessesInGuest = vw1__ListProcessesInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ListProcessesInGuest(soap, &soap_tmp___vw1__ListProcessesInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ListProcessesInGuest(soap, &soap_tmp___vw1__ListProcessesInGuest, "-vw1:ListProcessesInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ListProcessesInGuest(soap, &soap_tmp___vw1__ListProcessesInGuest, "-vw1:ListProcessesInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ListProcessesInGuestResponse)
		return soap_closesock(soap);
	vw1__ListProcessesInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ListProcessesInGuestResponse->soap_get(soap, "vw1:ListProcessesInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::TerminateProcessInGuest(const char *endpoint, const char *soap_action, vw1__TerminateProcessInGuestRequestType *vw1__TerminateProcessInGuest, _vw1__TerminateProcessInGuestResponse *vw1__TerminateProcessInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__TerminateProcessInGuest soap_tmp___vw1__TerminateProcessInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__TerminateProcessInGuest.vw1__TerminateProcessInGuest = vw1__TerminateProcessInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__TerminateProcessInGuest(soap, &soap_tmp___vw1__TerminateProcessInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__TerminateProcessInGuest(soap, &soap_tmp___vw1__TerminateProcessInGuest, "-vw1:TerminateProcessInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__TerminateProcessInGuest(soap, &soap_tmp___vw1__TerminateProcessInGuest, "-vw1:TerminateProcessInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__TerminateProcessInGuestResponse)
		return soap_closesock(soap);
	vw1__TerminateProcessInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__TerminateProcessInGuestResponse->soap_get(soap, "vw1:TerminateProcessInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int VimBindingProxy::ReadEnvironmentVariableInGuest(const char *endpoint, const char *soap_action, vw1__ReadEnvironmentVariableInGuestRequestType *vw1__ReadEnvironmentVariableInGuest, _vw1__ReadEnvironmentVariableInGuestResponse *vw1__ReadEnvironmentVariableInGuestResponse)
{	struct soap *soap = this;
	struct __vw1__ReadEnvironmentVariableInGuest soap_tmp___vw1__ReadEnvironmentVariableInGuest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "urn:vim25/5.0";
	soap->encodingStyle = NULL;
	soap_tmp___vw1__ReadEnvironmentVariableInGuest.vw1__ReadEnvironmentVariableInGuest = vw1__ReadEnvironmentVariableInGuest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___vw1__ReadEnvironmentVariableInGuest(soap, &soap_tmp___vw1__ReadEnvironmentVariableInGuest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___vw1__ReadEnvironmentVariableInGuest(soap, &soap_tmp___vw1__ReadEnvironmentVariableInGuest, "-vw1:ReadEnvironmentVariableInGuest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___vw1__ReadEnvironmentVariableInGuest(soap, &soap_tmp___vw1__ReadEnvironmentVariableInGuest, "-vw1:ReadEnvironmentVariableInGuest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!vw1__ReadEnvironmentVariableInGuestResponse)
		return soap_closesock(soap);
	vw1__ReadEnvironmentVariableInGuestResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	vw1__ReadEnvironmentVariableInGuestResponse->soap_get(soap, "vw1:ReadEnvironmentVariableInGuestResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
